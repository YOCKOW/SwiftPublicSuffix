//# DO NOT MODIFY.
//# This is autogenerated by `ySwiftCodeUpdater`(https://github.com/YOCKOW/ySwiftCodeUpdater).
//# Please see documents in this project to learn how to regenerate.
//# The material(s) to generate this file was/were obtained from below:
//
// URL: https://publicsuffix.org/list/public_suffix_list.dat
// Last-Modified: 2022-09-23T03:50:47Z
// ETag: W/"0758f9dd8a9084d2419c0ff89ab90864"

// NOTICE: Original source code is licensed under Mozilla Public License Version 2.0 (MPL2.0)
//         and, this file contains the source converted to Swift language.
//         Subjecting to MPL 2.0, this FILE is also licensed under the same license.
//         Please read comments of the original source file, and the license.)

/*
  Mozilla Public License Version 2.0
  ==================================
  
  1. Definitions
  --------------
  
  1.1. "Contributor"
      means each individual or legal entity that creates, contributes to
      the creation of, or owns Covered Software.
  
  1.2. "Contributor Version"
      means the combination of the Contributions of others (if any) used
      by a Contributor and that particular Contributor's Contribution.
  
  1.3. "Contribution"
      means Covered Software of a particular Contributor.
  
  1.4. "Covered Software"
      means Source Code Form to which the initial Contributor has attached
      the notice in Exhibit A, the Executable Form of such Source Code
      Form, and Modifications of such Source Code Form, in each case
      including portions thereof.
  
  1.5. "Incompatible With Secondary Licenses"
      means
  
      (a) that the initial Contributor has attached the notice described
          in Exhibit B to the Covered Software; or
  
      (b) that the Covered Software was made available under the terms of
          version 1.1 or earlier of the License, but not also under the
          terms of a Secondary License.
  
  1.6. "Executable Form"
      means any form of the work other than Source Code Form.
  
  1.7. "Larger Work"
      means a work that combines Covered Software with other material, in 
      a separate file or files, that is not Covered Software.
  
  1.8. "License"
      means this document.
  
  1.9. "Licensable"
      means having the right to grant, to the maximum extent possible,
      whether at the time of the initial grant or subsequently, any and
      all of the rights conveyed by this License.
  
  1.10. "Modifications"
      means any of the following:
  
      (a) any file in Source Code Form that results from an addition to,
          deletion from, or modification of the contents of Covered
          Software; or
  
      (b) any new file in Source Code Form that contains any Covered
          Software.
  
  1.11. "Patent Claims" of a Contributor
      means any patent claim(s), including without limitation, method,
      process, and apparatus claims, in any patent Licensable by such
      Contributor that would be infringed, but for the grant of the
      License, by the making, using, selling, offering for sale, having
      made, import, or transfer of either its Contributions or its
      Contributor Version.
  
  1.12. "Secondary License"
      means either the GNU General Public License, Version 2.0, the GNU
      Lesser General Public License, Version 2.1, the GNU Affero General
      Public License, Version 3.0, or any later versions of those
      licenses.
  
  1.13. "Source Code Form"
      means the form of the work preferred for making modifications.
  
  1.14. "You" (or "Your")
      means an individual or a legal entity exercising rights under this
      License. For legal entities, "You" includes any entity that
      controls, is controlled by, or is under common control with You. For
      purposes of this definition, "control" means (a) the power, direct
      or indirect, to cause the direction or management of such entity,
      whether by contract or otherwise, or (b) ownership of more than
      fifty percent (50%) of the outstanding shares or beneficial
      ownership of such entity.
  
  2. License Grants and Conditions
  --------------------------------
  
  2.1. Grants
  
  Each Contributor hereby grants You a world-wide, royalty-free,
  non-exclusive license:
  
  (a) under intellectual property rights (other than patent or trademark)
      Licensable by such Contributor to use, reproduce, make available,
      modify, display, perform, distribute, and otherwise exploit its
      Contributions, either on an unmodified basis, with Modifications, or
      as part of a Larger Work; and
  
  (b) under Patent Claims of such Contributor to make, use, sell, offer
      for sale, have made, import, and otherwise transfer either its
      Contributions or its Contributor Version.
  
  2.2. Effective Date
  
  The licenses granted in Section 2.1 with respect to any Contribution
  become effective for each Contribution on the date the Contributor first
  distributes such Contribution.
  
  2.3. Limitations on Grant Scope
  
  The licenses granted in this Section 2 are the only rights granted under
  this License. No additional rights or licenses will be implied from the
  distribution or licensing of Covered Software under this License.
  Notwithstanding Section 2.1(b) above, no patent license is granted by a
  Contributor:
  
  (a) for any code that a Contributor has removed from Covered Software;
      or
  
  (b) for infringements caused by: (i) Your and any other third party's
      modifications of Covered Software, or (ii) the combination of its
      Contributions with other software (except as part of its Contributor
      Version); or
  
  (c) under Patent Claims infringed by Covered Software in the absence of
      its Contributions.
  
  This License does not grant any rights in the trademarks, service marks,
  or logos of any Contributor (except as may be necessary to comply with
  the notice requirements in Section 3.4).
  
  2.4. Subsequent Licenses
  
  No Contributor makes additional grants as a result of Your choice to
  distribute the Covered Software under a subsequent version of this
  License (see Section 10.2) or under the terms of a Secondary License (if
  permitted under the terms of Section 3.3).
  
  2.5. Representation
  
  Each Contributor represents that the Contributor believes its
  Contributions are its original creation(s) or it has sufficient rights
  to grant the rights to its Contributions conveyed by this License.
  
  2.6. Fair Use
  
  This License is not intended to limit any rights You have under
  applicable copyright doctrines of fair use, fair dealing, or other
  equivalents.
  
  2.7. Conditions
  
  Sections 3.1, 3.2, 3.3, and 3.4 are conditions of the licenses granted
  in Section 2.1.
  
  3. Responsibilities
  -------------------
  
  3.1. Distribution of Source Form
  
  All distribution of Covered Software in Source Code Form, including any
  Modifications that You create or to which You contribute, must be under
  the terms of this License. You must inform recipients that the Source
  Code Form of the Covered Software is governed by the terms of this
  License, and how they can obtain a copy of this License. You may not
  attempt to alter or restrict the recipients' rights in the Source Code
  Form.
  
  3.2. Distribution of Executable Form
  
  If You distribute Covered Software in Executable Form then:
  
  (a) such Covered Software must also be made available in Source Code
      Form, as described in Section 3.1, and You must inform recipients of
      the Executable Form how they can obtain a copy of such Source Code
      Form by reasonable means in a timely manner, at a charge no more
      than the cost of distribution to the recipient; and
  
  (b) You may distribute such Executable Form under the terms of this
      License, or sublicense it under different terms, provided that the
      license for the Executable Form does not attempt to limit or alter
      the recipients' rights in the Source Code Form under this License.
  
  3.3. Distribution of a Larger Work
  
  You may create and distribute a Larger Work under terms of Your choice,
  provided that You also comply with the requirements of this License for
  the Covered Software. If the Larger Work is a combination of Covered
  Software with a work governed by one or more Secondary Licenses, and the
  Covered Software is not Incompatible With Secondary Licenses, this
  License permits You to additionally distribute such Covered Software
  under the terms of such Secondary License(s), so that the recipient of
  the Larger Work may, at their option, further distribute the Covered
  Software under the terms of either this License or such Secondary
  License(s).
  
  3.4. Notices
  
  You may not remove or alter the substance of any license notices
  (including copyright notices, patent notices, disclaimers of warranty,
  or limitations of liability) contained within the Source Code Form of
  the Covered Software, except that You may alter any license notices to
  the extent required to remedy known factual inaccuracies.
  
  3.5. Application of Additional Terms
  
  You may choose to offer, and to charge a fee for, warranty, support,
  indemnity or liability obligations to one or more recipients of Covered
  Software. However, You may do so only on Your own behalf, and not on
  behalf of any Contributor. You must make it absolutely clear that any
  such warranty, support, indemnity, or liability obligation is offered by
  You alone, and You hereby agree to indemnify every Contributor for any
  liability incurred by such Contributor as a result of warranty, support,
  indemnity or liability terms You offer. You may include additional
  disclaimers of warranty and limitations of liability specific to any
  jurisdiction.
  
  4. Inability to Comply Due to Statute or Regulation
  ---------------------------------------------------
  
  If it is impossible for You to comply with any of the terms of this
  License with respect to some or all of the Covered Software due to
  statute, judicial order, or regulation then You must: (a) comply with
  the terms of this License to the maximum extent possible; and (b)
  describe the limitations and the code they affect. Such description must
  be placed in a text file included with all distributions of the Covered
  Software under this License. Except to the extent prohibited by statute
  or regulation, such description must be sufficiently detailed for a
  recipient of ordinary skill to be able to understand it.
  
  5. Termination
  --------------
  
  5.1. The rights granted under this License will terminate automatically
  if You fail to comply with any of its terms. However, if You become
  compliant, then the rights granted under this License from a particular
  Contributor are reinstated (a) provisionally, unless and until such
  Contributor explicitly and finally terminates Your grants, and (b) on an
  ongoing basis, if such Contributor fails to notify You of the
  non-compliance by some reasonable means prior to 60 days after You have
  come back into compliance. Moreover, Your grants from a particular
  Contributor are reinstated on an ongoing basis if such Contributor
  notifies You of the non-compliance by some reasonable means, this is the
  first time You have received notice of non-compliance with this License
  from such Contributor, and You become compliant prior to 30 days after
  Your receipt of the notice.
  
  5.2. If You initiate litigation against any entity by asserting a patent
  infringement claim (excluding declaratory judgment actions,
  counter-claims, and cross-claims) alleging that a Contributor Version
  directly or indirectly infringes any patent, then the rights granted to
  You by any and all Contributors for the Covered Software under Section
  2.1 of this License shall terminate.
  
  5.3. In the event of termination under Sections 5.1 or 5.2 above, all
  end user license agreements (excluding distributors and resellers) which
  have been validly granted by You or Your distributors under this License
  prior to termination shall survive termination.
  
  ************************************************************************
  *                                                                      *
  *  6. Disclaimer of Warranty                                           *
  *  -------------------------                                           *
  *                                                                      *
  *  Covered Software is provided under this License on an "as is"       *
  *  basis, without warranty of any kind, either expressed, implied, or  *
  *  statutory, including, without limitation, warranties that the       *
  *  Covered Software is free of defects, merchantable, fit for a        *
  *  particular purpose or non-infringing. The entire risk as to the     *
  *  quality and performance of the Covered Software is with You.        *
  *  Should any Covered Software prove defective in any respect, You     *
  *  (not any Contributor) assume the cost of any necessary servicing,   *
  *  repair, or correction. This disclaimer of warranty constitutes an   *
  *  essential part of this License. No use of any Covered Software is   *
  *  authorized under this License except under this disclaimer.         *
  *                                                                      *
  ************************************************************************
  
  ************************************************************************
  *                                                                      *
  *  7. Limitation of Liability                                          *
  *  --------------------------                                          *
  *                                                                      *
  *  Under no circumstances and under no legal theory, whether tort      *
  *  (including negligence), contract, or otherwise, shall any           *
  *  Contributor, or anyone who distributes Covered Software as          *
  *  permitted above, be liable to You for any direct, indirect,         *
  *  special, incidental, or consequential damages of any character      *
  *  including, without limitation, damages for lost profits, loss of    *
  *  goodwill, work stoppage, computer failure or malfunction, or any    *
  *  and all other commercial damages or losses, even if such party      *
  *  shall have been informed of the possibility of such damages. This   *
  *  limitation of liability shall not apply to liability for death or   *
  *  personal injury resulting from such party's negligence to the       *
  *  extent applicable law prohibits such limitation. Some               *
  *  jurisdictions do not allow the exclusion or limitation of           *
  *  incidental or consequential damages, so this exclusion and          *
  *  limitation may not apply to You.                                    *
  *                                                                      *
  ************************************************************************
  
  8. Litigation
  -------------
  
  Any litigation relating to this License may be brought only in the
  courts of a jurisdiction where the defendant maintains its principal
  place of business and such litigation shall be governed by laws of that
  jurisdiction, without reference to its conflict-of-law provisions.
  Nothing in this Section shall prevent a party's ability to bring
  cross-claims or counter-claims.
  
  9. Miscellaneous
  ----------------
  
  This License represents the complete agreement concerning the subject
  matter hereof. If any provision of this License is held to be
  unenforceable, such provision shall be reformed only to the extent
  necessary to make it enforceable. Any law or regulation which provides
  that the language of a contract shall be construed against the drafter
  shall not be used to construe this License against a Contributor.
  
  10. Versions of the License
  ---------------------------
  
  10.1. New Versions
  
  Mozilla Foundation is the license steward. Except as provided in Section
  10.3, no one other than the license steward has the right to modify or
  publish new versions of this License. Each version will be given a
  distinguishing version number.
  
  10.2. Effect of New Versions
  
  You may distribute the Covered Software under the terms of the version
  of the License under which You originally received the Covered Software,
  or under the terms of any subsequent version published by the license
  steward.
  
  10.3. Modified Versions
  
  If you create software not governed by this License, and you want to
  create a new license for such software, you may create and use a
  modified version of this License if you rename the license and remove
  any references to the name of the license steward (except to note that
  such modified license differs from this License).
  
  10.4. Distributing Source Code Form that is Incompatible With Secondary
  Licenses
  
  If You choose to distribute Source Code Form that is Incompatible With
  Secondary Licenses under the terms of this version of the License, the
  notice described in Exhibit B of this License must be attached.
  
  Exhibit A - Source Code Form License Notice
  -------------------------------------------
  
    This Source Code Form is subject to the terms of the Mozilla Public
    License, v. 2.0. If a copy of the MPL was not distributed with this
    file, You can obtain one at https://mozilla.org/MPL/2.0/.
  
  If it is not possible or desirable to put the notice in a particular
  file, then You may include the notice in a location (such as a LICENSE
  file in a relevant directory) where a recipient would be likely to look
  for such a notice.
  
  You may add additional accurate notices of copyright ownership.
  
  Exhibit B - "Incompatible With Secondary Licenses" Notice
  ---------------------------------------------------------
  
    This Source Code Form is "Incompatible With Secondary Licenses", as
    defined by the Mozilla Public License, v. 2.0.
*/

extension PublicSuffix {
  private static let _positive_ck_www: PublicSuffix.Node = .label("www", next: [.termination])
  private static let _positive_ck: PublicSuffix.Node = .label("ck", next: [_positive_ck_www])
  private static let _positive_jp_kawasaki_city: PublicSuffix.Node = .label("city", next: [.termination])
  private static let _positive_jp_kawasaki: PublicSuffix.Node = .label("kawasaki", next: [_positive_jp_kawasaki_city])
  private static let _positive_jp_kitakyushu_city: PublicSuffix.Node = .label("city", next: [.termination])
  private static let _positive_jp_kitakyushu: PublicSuffix.Node = .label("kitakyushu", next: [_positive_jp_kitakyushu_city])
  private static let _positive_jp_kobe_city: PublicSuffix.Node = .label("city", next: [.termination])
  private static let _positive_jp_kobe: PublicSuffix.Node = .label("kobe", next: [_positive_jp_kobe_city])
  private static let _positive_jp_nagoya_city: PublicSuffix.Node = .label("city", next: [.termination])
  private static let _positive_jp_nagoya: PublicSuffix.Node = .label("nagoya", next: [_positive_jp_nagoya_city])
  private static let _positive_jp_sapporo_city: PublicSuffix.Node = .label("city", next: [.termination])
  private static let _positive_jp_sapporo: PublicSuffix.Node = .label("sapporo", next: [_positive_jp_sapporo_city])
  private static let _positive_jp_sendai_city: PublicSuffix.Node = .label("city", next: [.termination])
  private static let _positive_jp_sendai: PublicSuffix.Node = .label("sendai", next: [_positive_jp_sendai_city])
  private static let _positive_jp_yokohama_city: PublicSuffix.Node = .label("city", next: [.termination])
  private static let _positive_jp_yokohama: PublicSuffix.Node = .label("yokohama", next: [_positive_jp_yokohama_city])
  private static let _positive_jp: PublicSuffix.Node = .label("jp", next: [_positive_jp_kawasaki, _positive_jp_kitakyushu, _positive_jp_kobe, _positive_jp_nagoya, _positive_jp_sapporo, _positive_jp_sendai, _positive_jp_yokohama])
  public static let positiveList: PublicSuffix.Node.Set = [
    _positive_ck,
    _positive_jp,
  ]
}

extension PublicSuffix {
  private static let _negative_aaa: PublicSuffix.Node = .label("aaa", next: [.termination])
  private static let _negative_aarp: PublicSuffix.Node = .label("aarp", next: [.termination])
  private static let _negative_abarth: PublicSuffix.Node = .label("abarth", next: [.termination])
  private static let _negative_abb: PublicSuffix.Node = .label("abb", next: [.termination])
  private static let _negative_abbott: PublicSuffix.Node = .label("abbott", next: [.termination])
  private static let _negative_abbvie: PublicSuffix.Node = .label("abbvie", next: [.termination])
  private static let _negative_abc: PublicSuffix.Node = .label("abc", next: [.termination])
  private static let _negative_able: PublicSuffix.Node = .label("able", next: [.termination])
  private static let _negative_abogado: PublicSuffix.Node = .label("abogado", next: [.termination])
  private static let _negative_abudhabi: PublicSuffix.Node = .label("abudhabi", next: [.termination])
  private static let _negative_ac_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_ac_drr: PublicSuffix.Node = .label("drr", next: [.termination])
  private static let _negative_ac_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_ac_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_ac_mil: PublicSuffix.Node = .label("mil", next: [.termination])
  private static let _negative_ac_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_ac_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_ac: PublicSuffix.Node = .label("ac", next: [.termination, _negative_ac_com, _negative_ac_drr, _negative_ac_edu, _negative_ac_gov, _negative_ac_mil, _negative_ac_net, _negative_ac_org])
  private static let _negative_academy_official: PublicSuffix.Node = .label("official", next: [.termination])
  private static let _negative_academy: PublicSuffix.Node = .label("academy", next: [.termination, _negative_academy_official])
  private static let _negative_accenture: PublicSuffix.Node = .label("accenture", next: [.termination])
  private static let _negative_accountant: PublicSuffix.Node = .label("accountant", next: [.termination])
  private static let _negative_accountants: PublicSuffix.Node = .label("accountants", next: [.termination])
  private static let _negative_aco: PublicSuffix.Node = .label("aco", next: [.termination])
  private static let _negative_actor: PublicSuffix.Node = .label("actor", next: [.termination])
  private static let _negative_ad_nom: PublicSuffix.Node = .label("nom", next: [.termination])
  private static let _negative_ad: PublicSuffix.Node = .label("ad", next: [.termination, _negative_ad_nom])
  private static let _negative_adac: PublicSuffix.Node = .label("adac", next: [.termination])
  private static let _negative_ads: PublicSuffix.Node = .label("ads", next: [.termination])
  private static let _negative_adult: PublicSuffix.Node = .label("adult", next: [.termination])
  private static let _negative_ae_ac: PublicSuffix.Node = .label("ac", next: [.termination])
  private static let _negative_ae_blogspot: PublicSuffix.Node = .label("blogspot", next: [.termination])
  private static let _negative_ae_co: PublicSuffix.Node = .label("co", next: [.termination])
  private static let _negative_ae_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_ae_mil: PublicSuffix.Node = .label("mil", next: [.termination])
  private static let _negative_ae_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_ae_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_ae_sch: PublicSuffix.Node = .label("sch", next: [.termination])
  private static let _negative_ae: PublicSuffix.Node = .label("ae", next: [.termination, _negative_ae_ac, _negative_ae_blogspot, _negative_ae_co, _negative_ae_gov, _negative_ae_mil, _negative_ae_net, _negative_ae_org, _negative_ae_sch])
  private static let _negative_aeg: PublicSuffix.Node = .label("aeg", next: [.termination])
  private static let _negative_aero_accidentHinvestigation: PublicSuffix.Node = .label("accident-investigation", next: [.termination])
  private static let _negative_aero_accidentHprevention: PublicSuffix.Node = .label("accident-prevention", next: [.termination])
  private static let _negative_aero_aerobatic: PublicSuffix.Node = .label("aerobatic", next: [.termination])
  private static let _negative_aero_aeroclub: PublicSuffix.Node = .label("aeroclub", next: [.termination])
  private static let _negative_aero_aerodrome: PublicSuffix.Node = .label("aerodrome", next: [.termination])
  private static let _negative_aero_agents: PublicSuffix.Node = .label("agents", next: [.termination])
  private static let _negative_aero_airHsurveillance: PublicSuffix.Node = .label("air-surveillance", next: [.termination])
  private static let _negative_aero_airHtrafficHcontrol: PublicSuffix.Node = .label("air-traffic-control", next: [.termination])
  private static let _negative_aero_aircraft: PublicSuffix.Node = .label("aircraft", next: [.termination])
  private static let _negative_aero_airline: PublicSuffix.Node = .label("airline", next: [.termination])
  private static let _negative_aero_airport: PublicSuffix.Node = .label("airport", next: [.termination])
  private static let _negative_aero_airtraffic: PublicSuffix.Node = .label("airtraffic", next: [.termination])
  private static let _negative_aero_ambulance: PublicSuffix.Node = .label("ambulance", next: [.termination])
  private static let _negative_aero_amusement: PublicSuffix.Node = .label("amusement", next: [.termination])
  private static let _negative_aero_association: PublicSuffix.Node = .label("association", next: [.termination])
  private static let _negative_aero_author: PublicSuffix.Node = .label("author", next: [.termination])
  private static let _negative_aero_ballooning: PublicSuffix.Node = .label("ballooning", next: [.termination])
  private static let _negative_aero_broker: PublicSuffix.Node = .label("broker", next: [.termination])
  private static let _negative_aero_caa: PublicSuffix.Node = .label("caa", next: [.termination])
  private static let _negative_aero_cargo: PublicSuffix.Node = .label("cargo", next: [.termination])
  private static let _negative_aero_catering: PublicSuffix.Node = .label("catering", next: [.termination])
  private static let _negative_aero_certification: PublicSuffix.Node = .label("certification", next: [.termination])
  private static let _negative_aero_championship: PublicSuffix.Node = .label("championship", next: [.termination])
  private static let _negative_aero_charter: PublicSuffix.Node = .label("charter", next: [.termination])
  private static let _negative_aero_civilaviation: PublicSuffix.Node = .label("civilaviation", next: [.termination])
  private static let _negative_aero_club: PublicSuffix.Node = .label("club", next: [.termination])
  private static let _negative_aero_conference: PublicSuffix.Node = .label("conference", next: [.termination])
  private static let _negative_aero_consultant: PublicSuffix.Node = .label("consultant", next: [.termination])
  private static let _negative_aero_consulting: PublicSuffix.Node = .label("consulting", next: [.termination])
  private static let _negative_aero_control: PublicSuffix.Node = .label("control", next: [.termination])
  private static let _negative_aero_council: PublicSuffix.Node = .label("council", next: [.termination])
  private static let _negative_aero_crew: PublicSuffix.Node = .label("crew", next: [.termination])
  private static let _negative_aero_design: PublicSuffix.Node = .label("design", next: [.termination])
  private static let _negative_aero_dgca: PublicSuffix.Node = .label("dgca", next: [.termination])
  private static let _negative_aero_educator: PublicSuffix.Node = .label("educator", next: [.termination])
  private static let _negative_aero_emergency: PublicSuffix.Node = .label("emergency", next: [.termination])
  private static let _negative_aero_engine: PublicSuffix.Node = .label("engine", next: [.termination])
  private static let _negative_aero_engineer: PublicSuffix.Node = .label("engineer", next: [.termination])
  private static let _negative_aero_entertainment: PublicSuffix.Node = .label("entertainment", next: [.termination])
  private static let _negative_aero_equipment: PublicSuffix.Node = .label("equipment", next: [.termination])
  private static let _negative_aero_exchange: PublicSuffix.Node = .label("exchange", next: [.termination])
  private static let _negative_aero_express: PublicSuffix.Node = .label("express", next: [.termination])
  private static let _negative_aero_federation: PublicSuffix.Node = .label("federation", next: [.termination])
  private static let _negative_aero_flight: PublicSuffix.Node = .label("flight", next: [.termination])
  private static let _negative_aero_fuel: PublicSuffix.Node = .label("fuel", next: [.termination])
  private static let _negative_aero_gliding: PublicSuffix.Node = .label("gliding", next: [.termination])
  private static let _negative_aero_government: PublicSuffix.Node = .label("government", next: [.termination])
  private static let _negative_aero_groundhandling: PublicSuffix.Node = .label("groundhandling", next: [.termination])
  private static let _negative_aero_group: PublicSuffix.Node = .label("group", next: [.termination])
  private static let _negative_aero_hanggliding: PublicSuffix.Node = .label("hanggliding", next: [.termination])
  private static let _negative_aero_homebuilt: PublicSuffix.Node = .label("homebuilt", next: [.termination])
  private static let _negative_aero_insurance: PublicSuffix.Node = .label("insurance", next: [.termination])
  private static let _negative_aero_journal: PublicSuffix.Node = .label("journal", next: [.termination])
  private static let _negative_aero_journalist: PublicSuffix.Node = .label("journalist", next: [.termination])
  private static let _negative_aero_leasing: PublicSuffix.Node = .label("leasing", next: [.termination])
  private static let _negative_aero_logistics: PublicSuffix.Node = .label("logistics", next: [.termination])
  private static let _negative_aero_magazine: PublicSuffix.Node = .label("magazine", next: [.termination])
  private static let _negative_aero_maintenance: PublicSuffix.Node = .label("maintenance", next: [.termination])
  private static let _negative_aero_media: PublicSuffix.Node = .label("media", next: [.termination])
  private static let _negative_aero_microlight: PublicSuffix.Node = .label("microlight", next: [.termination])
  private static let _negative_aero_modelling: PublicSuffix.Node = .label("modelling", next: [.termination])
  private static let _negative_aero_navigation: PublicSuffix.Node = .label("navigation", next: [.termination])
  private static let _negative_aero_parachuting: PublicSuffix.Node = .label("parachuting", next: [.termination])
  private static let _negative_aero_paragliding: PublicSuffix.Node = .label("paragliding", next: [.termination])
  private static let _negative_aero_passengerHassociation: PublicSuffix.Node = .label("passenger-association", next: [.termination])
  private static let _negative_aero_pilot: PublicSuffix.Node = .label("pilot", next: [.termination])
  private static let _negative_aero_press: PublicSuffix.Node = .label("press", next: [.termination])
  private static let _negative_aero_production: PublicSuffix.Node = .label("production", next: [.termination])
  private static let _negative_aero_recreation: PublicSuffix.Node = .label("recreation", next: [.termination])
  private static let _negative_aero_repbody: PublicSuffix.Node = .label("repbody", next: [.termination])
  private static let _negative_aero_res: PublicSuffix.Node = .label("res", next: [.termination])
  private static let _negative_aero_research: PublicSuffix.Node = .label("research", next: [.termination])
  private static let _negative_aero_rotorcraft: PublicSuffix.Node = .label("rotorcraft", next: [.termination])
  private static let _negative_aero_safety: PublicSuffix.Node = .label("safety", next: [.termination])
  private static let _negative_aero_scientist: PublicSuffix.Node = .label("scientist", next: [.termination])
  private static let _negative_aero_services: PublicSuffix.Node = .label("services", next: [.termination])
  private static let _negative_aero_show: PublicSuffix.Node = .label("show", next: [.termination])
  private static let _negative_aero_skydiving: PublicSuffix.Node = .label("skydiving", next: [.termination])
  private static let _negative_aero_software: PublicSuffix.Node = .label("software", next: [.termination])
  private static let _negative_aero_student: PublicSuffix.Node = .label("student", next: [.termination])
  private static let _negative_aero_trader: PublicSuffix.Node = .label("trader", next: [.termination])
  private static let _negative_aero_trading: PublicSuffix.Node = .label("trading", next: [.termination])
  private static let _negative_aero_trainer: PublicSuffix.Node = .label("trainer", next: [.termination])
  private static let _negative_aero_union: PublicSuffix.Node = .label("union", next: [.termination])
  private static let _negative_aero_workinggroup: PublicSuffix.Node = .label("workinggroup", next: [.termination])
  private static let _negative_aero_works: PublicSuffix.Node = .label("works", next: [.termination])
  private static let _negative_aero: PublicSuffix.Node = .label("aero", next: [.termination, _negative_aero_accidentHinvestigation, _negative_aero_accidentHprevention, _negative_aero_aerobatic, _negative_aero_aeroclub, _negative_aero_aerodrome, _negative_aero_agents, _negative_aero_airHsurveillance, _negative_aero_airHtrafficHcontrol, _negative_aero_aircraft, _negative_aero_airline, _negative_aero_airport, _negative_aero_airtraffic, _negative_aero_ambulance, _negative_aero_amusement, _negative_aero_association, _negative_aero_author, _negative_aero_ballooning, _negative_aero_broker, _negative_aero_caa, _negative_aero_cargo, _negative_aero_catering, _negative_aero_certification, _negative_aero_championship, _negative_aero_charter, _negative_aero_civilaviation, _negative_aero_club, _negative_aero_conference, _negative_aero_consultant, _negative_aero_consulting, _negative_aero_control, _negative_aero_council, _negative_aero_crew, _negative_aero_design, _negative_aero_dgca, _negative_aero_educator, _negative_aero_emergency, _negative_aero_engine, _negative_aero_engineer, _negative_aero_entertainment, _negative_aero_equipment, _negative_aero_exchange, _negative_aero_express, _negative_aero_federation, _negative_aero_flight, _negative_aero_fuel, _negative_aero_gliding, _negative_aero_government, _negative_aero_groundhandling, _negative_aero_group, _negative_aero_hanggliding, _negative_aero_homebuilt, _negative_aero_insurance, _negative_aero_journal, _negative_aero_journalist, _negative_aero_leasing, _negative_aero_logistics, _negative_aero_magazine, _negative_aero_maintenance, _negative_aero_media, _negative_aero_microlight, _negative_aero_modelling, _negative_aero_navigation, _negative_aero_parachuting, _negative_aero_paragliding, _negative_aero_passengerHassociation, _negative_aero_pilot, _negative_aero_press, _negative_aero_production, _negative_aero_recreation, _negative_aero_repbody, _negative_aero_res, _negative_aero_research, _negative_aero_rotorcraft, _negative_aero_safety, _negative_aero_scientist, _negative_aero_services, _negative_aero_show, _negative_aero_skydiving, _negative_aero_software, _negative_aero_student, _negative_aero_trader, _negative_aero_trading, _negative_aero_trainer, _negative_aero_union, _negative_aero_workinggroup, _negative_aero_works])
  private static let _negative_aetna: PublicSuffix.Node = .label("aetna", next: [.termination])
  private static let _negative_af_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_af_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_af_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_af_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_af_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_af: PublicSuffix.Node = .label("af", next: [.termination, _negative_af_com, _negative_af_edu, _negative_af_gov, _negative_af_net, _negative_af_org])
  private static let _negative_afl: PublicSuffix.Node = .label("afl", next: [.termination])
  private static let _negative_africa: PublicSuffix.Node = .label("africa", next: [.termination])
  private static let _negative_ag_co: PublicSuffix.Node = .label("co", next: [.termination])
  private static let _negative_ag_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_ag_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_ag_nom: PublicSuffix.Node = .label("nom", next: [.termination])
  private static let _negative_ag_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_ag: PublicSuffix.Node = .label("ag", next: [.termination, _negative_ag_co, _negative_ag_com, _negative_ag_net, _negative_ag_nom, _negative_ag_org])
  private static let _negative_agakhan: PublicSuffix.Node = .label("agakhan", next: [.termination])
  private static let _negative_agency: PublicSuffix.Node = .label("agency", next: [.termination])
  private static let _negative_ai_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_ai_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_ai_off: PublicSuffix.Node = .label("off", next: [.termination])
  private static let _negative_ai_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_ai_uwu: PublicSuffix.Node = .label("uwu", next: [.termination])
  private static let _negative_ai: PublicSuffix.Node = .label("ai", next: [.termination, _negative_ai_com, _negative_ai_net, _negative_ai_off, _negative_ai_org, _negative_ai_uwu])
  private static let _negative_aig: PublicSuffix.Node = .label("aig", next: [.termination])
  private static let _negative_airbus: PublicSuffix.Node = .label("airbus", next: [.termination])
  private static let _negative_airforce: PublicSuffix.Node = .label("airforce", next: [.termination])
  private static let _negative_airtel: PublicSuffix.Node = .label("airtel", next: [.termination])
  private static let _negative_akdn: PublicSuffix.Node = .label("akdn", next: [.termination])
  private static let _negative_al_blogspot: PublicSuffix.Node = .label("blogspot", next: [.termination])
  private static let _negative_al_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_al_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_al_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_al_mil: PublicSuffix.Node = .label("mil", next: [.termination])
  private static let _negative_al_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_al_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_al: PublicSuffix.Node = .label("al", next: [.termination, _negative_al_blogspot, _negative_al_com, _negative_al_edu, _negative_al_gov, _negative_al_mil, _negative_al_net, _negative_al_org])
  private static let _negative_alfaromeo: PublicSuffix.Node = .label("alfaromeo", next: [.termination])
  private static let _negative_alibaba: PublicSuffix.Node = .label("alibaba", next: [.termination])
  private static let _negative_alipay: PublicSuffix.Node = .label("alipay", next: [.termination])
  private static let _negative_allfinanz: PublicSuffix.Node = .label("allfinanz", next: [.termination])
  private static let _negative_allstate: PublicSuffix.Node = .label("allstate", next: [.termination])
  private static let _negative_ally: PublicSuffix.Node = .label("ally", next: [.termination])
  private static let _negative_alsace: PublicSuffix.Node = .label("alsace", next: [.termination])
  private static let _negative_alstom: PublicSuffix.Node = .label("alstom", next: [.termination])
  private static let _negative_am_blogspot: PublicSuffix.Node = .label("blogspot", next: [.termination])
  private static let _negative_am_co: PublicSuffix.Node = .label("co", next: [.termination])
  private static let _negative_am_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_am_commune: PublicSuffix.Node = .label("commune", next: [.termination])
  private static let _negative_am_neko: PublicSuffix.Node = .label("neko", next: [.termination])
  private static let _negative_am_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_am_nyaa: PublicSuffix.Node = .label("nyaa", next: [.termination])
  private static let _negative_am_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_am_radio: PublicSuffix.Node = .label("radio", next: [.termination])
  private static let _negative_am: PublicSuffix.Node = .label("am", next: [.termination, _negative_am_blogspot, _negative_am_co, _negative_am_com, _negative_am_commune, _negative_am_neko, _negative_am_net, _negative_am_nyaa, _negative_am_org, _negative_am_radio])
  private static let _negative_amazon: PublicSuffix.Node = .label("amazon", next: [.termination])
  private static let _negative_americanexpress: PublicSuffix.Node = .label("americanexpress", next: [.termination])
  private static let _negative_americanfamily: PublicSuffix.Node = .label("americanfamily", next: [.termination])
  private static let _negative_amex: PublicSuffix.Node = .label("amex", next: [.termination])
  private static let _negative_amfam: PublicSuffix.Node = .label("amfam", next: [.termination])
  private static let _negative_amica: PublicSuffix.Node = .label("amica", next: [.termination])
  private static let _negative_amsterdam: PublicSuffix.Node = .label("amsterdam", next: [.termination])
  private static let _negative_analytics: PublicSuffix.Node = .label("analytics", next: [.termination])
  private static let _negative_android: PublicSuffix.Node = .label("android", next: [.termination])
  private static let _negative_anquan: PublicSuffix.Node = .label("anquan", next: [.termination])
  private static let _negative_anz: PublicSuffix.Node = .label("anz", next: [.termination])
  private static let _negative_ao_co: PublicSuffix.Node = .label("co", next: [.termination])
  private static let _negative_ao_ed: PublicSuffix.Node = .label("ed", next: [.termination])
  private static let _negative_ao_gv: PublicSuffix.Node = .label("gv", next: [.termination])
  private static let _negative_ao_it: PublicSuffix.Node = .label("it", next: [.termination])
  private static let _negative_ao_og: PublicSuffix.Node = .label("og", next: [.termination])
  private static let _negative_ao_pb: PublicSuffix.Node = .label("pb", next: [.termination])
  private static let _negative_ao: PublicSuffix.Node = .label("ao", next: [.termination, _negative_ao_co, _negative_ao_ed, _negative_ao_gv, _negative_ao_it, _negative_ao_og, _negative_ao_pb])
  private static let _negative_aol: PublicSuffix.Node = .label("aol", next: [.termination])
  private static let _negative_apartments: PublicSuffix.Node = .label("apartments", next: [.termination])
  private static let _negative_app_beget: PublicSuffix.Node = .label("beget", next: [.any])
  private static let _negative_app_bookonline: PublicSuffix.Node = .label("bookonline", next: [.termination])
  private static let _negative_app_clerk: PublicSuffix.Node = .label("clerk", next: [.termination])
  private static let _negative_app_clerkstage: PublicSuffix.Node = .label("clerkstage", next: [.termination])
  private static let _negative_app_deta: PublicSuffix.Node = .label("deta", next: [.termination])
  private static let _negative_app_developer: PublicSuffix.Node = .label("developer", next: [.any])
  private static let _negative_app_easypanel: PublicSuffix.Node = .label("easypanel", next: [.termination])
  private static let _negative_app_edgecompute: PublicSuffix.Node = .label("edgecompute", next: [.termination])
  private static let _negative_app_encr: PublicSuffix.Node = .label("encr", next: [.termination])
  private static let _negative_app_fireweb: PublicSuffix.Node = .label("fireweb", next: [.termination])
  private static let _negative_app_framer: PublicSuffix.Node = .label("framer", next: [.termination])
  private static let _negative_app_hasura: PublicSuffix.Node = .label("hasura", next: [.termination])
  private static let _negative_app_loginline: PublicSuffix.Node = .label("loginline", next: [.termination])
  private static let _negative_app_messerli: PublicSuffix.Node = .label("messerli", next: [.termination])
  private static let _negative_app_netlify: PublicSuffix.Node = .label("netlify", next: [.termination])
  private static let _negative_app_noop: PublicSuffix.Node = .label("noop", next: [.termination])
  private static let _negative_app_northflank: PublicSuffix.Node = .label("northflank", next: [.any])
  private static let _negative_app_ondigitalocean: PublicSuffix.Node = .label("ondigitalocean", next: [.termination])
  private static let _negative_app_onflashdrive: PublicSuffix.Node = .label("onflashdrive", next: [.termination])
  private static let _negative_app_platform0: PublicSuffix.Node = .label("platform0", next: [.termination])
  private static let _negative_app_run_a: PublicSuffix.Node = .label("a", next: [.termination])
  private static let _negative_app_run: PublicSuffix.Node = .label("run", next: [.termination, _negative_app_run_a])
  private static let _negative_app_telebit: PublicSuffix.Node = .label("telebit", next: [.termination])
  private static let _negative_app_typedream: PublicSuffix.Node = .label("typedream", next: [.termination])
  private static let _negative_app_vercel: PublicSuffix.Node = .label("vercel", next: [.termination])
  private static let _negative_app_web: PublicSuffix.Node = .label("web", next: [.termination])
  private static let _negative_app_wnext: PublicSuffix.Node = .label("wnext", next: [.termination])
  private static let _negative_app: PublicSuffix.Node = .label("app", next: [.termination, _negative_app_beget, _negative_app_bookonline, _negative_app_clerk, _negative_app_clerkstage, _negative_app_deta, _negative_app_developer, _negative_app_easypanel, _negative_app_edgecompute, _negative_app_encr, _negative_app_fireweb, _negative_app_framer, _negative_app_hasura, _negative_app_loginline, _negative_app_messerli, _negative_app_netlify, _negative_app_noop, _negative_app_northflank, _negative_app_ondigitalocean, _negative_app_onflashdrive, _negative_app_platform0, _negative_app_run, _negative_app_telebit, _negative_app_typedream, _negative_app_vercel, _negative_app_web, _negative_app_wnext])
  private static let _negative_apple: PublicSuffix.Node = .label("apple", next: [.termination])
  private static let _negative_aq: PublicSuffix.Node = .label("aq", next: [.termination])
  private static let _negative_aquarelle: PublicSuffix.Node = .label("aquarelle", next: [.termination])
  private static let _negative_ar_bet: PublicSuffix.Node = .label("bet", next: [.termination])
  private static let _negative_ar_com_blogspot: PublicSuffix.Node = .label("blogspot", next: [.termination])
  private static let _negative_ar_com: PublicSuffix.Node = .label("com", next: [.termination, _negative_ar_com_blogspot])
  private static let _negative_ar_coop: PublicSuffix.Node = .label("coop", next: [.termination])
  private static let _negative_ar_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_ar_gob: PublicSuffix.Node = .label("gob", next: [.termination])
  private static let _negative_ar_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_ar_int: PublicSuffix.Node = .label("int", next: [.termination])
  private static let _negative_ar_mil: PublicSuffix.Node = .label("mil", next: [.termination])
  private static let _negative_ar_musica: PublicSuffix.Node = .label("musica", next: [.termination])
  private static let _negative_ar_mutual: PublicSuffix.Node = .label("mutual", next: [.termination])
  private static let _negative_ar_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_ar_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_ar_senasa: PublicSuffix.Node = .label("senasa", next: [.termination])
  private static let _negative_ar_tur: PublicSuffix.Node = .label("tur", next: [.termination])
  private static let _negative_ar: PublicSuffix.Node = .label("ar", next: [.termination, _negative_ar_bet, _negative_ar_com, _negative_ar_coop, _negative_ar_edu, _negative_ar_gob, _negative_ar_gov, _negative_ar_int, _negative_ar_mil, _negative_ar_musica, _negative_ar_mutual, _negative_ar_net, _negative_ar_org, _negative_ar_senasa, _negative_ar_tur])
  private static let _negative_arab: PublicSuffix.Node = .label("arab", next: [.termination])
  private static let _negative_aramco: PublicSuffix.Node = .label("aramco", next: [.termination])
  private static let _negative_archi: PublicSuffix.Node = .label("archi", next: [.termination])
  private static let _negative_army: PublicSuffix.Node = .label("army", next: [.termination])
  private static let _negative_arpa_e164: PublicSuffix.Node = .label("e164", next: [.termination])
  private static let _negative_arpa_inHaddr: PublicSuffix.Node = .label("in-addr", next: [.termination])
  private static let _negative_arpa_ip6: PublicSuffix.Node = .label("ip6", next: [.termination])
  private static let _negative_arpa_iris: PublicSuffix.Node = .label("iris", next: [.termination])
  private static let _negative_arpa_uri: PublicSuffix.Node = .label("uri", next: [.termination])
  private static let _negative_arpa_urn: PublicSuffix.Node = .label("urn", next: [.termination])
  private static let _negative_arpa: PublicSuffix.Node = .label("arpa", next: [.termination, _negative_arpa_e164, _negative_arpa_inHaddr, _negative_arpa_ip6, _negative_arpa_iris, _negative_arpa_uri, _negative_arpa_urn])
  private static let _negative_art: PublicSuffix.Node = .label("art", next: [.termination])
  private static let _negative_arte: PublicSuffix.Node = .label("arte", next: [.termination])
  private static let _negative_as_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_as: PublicSuffix.Node = .label("as", next: [.termination, _negative_as_gov])
  private static let _negative_asda: PublicSuffix.Node = .label("asda", next: [.termination])
  private static let _negative_asia_cloudns: PublicSuffix.Node = .label("cloudns", next: [.termination])
  private static let _negative_asia: PublicSuffix.Node = .label("asia", next: [.termination, _negative_asia_cloudns])
  private static let _negative_associates: PublicSuffix.Node = .label("associates", next: [.termination])
  private static let _negative_at_12hp: PublicSuffix.Node = .label("12hp", next: [.termination])
  private static let _negative_at_2ix: PublicSuffix.Node = .label("2ix", next: [.termination])
  private static let _negative_at_4lima: PublicSuffix.Node = .label("4lima", next: [.termination])
  private static let _negative_at_ac_sth: PublicSuffix.Node = .label("sth", next: [.termination])
  private static let _negative_at_ac: PublicSuffix.Node = .label("ac", next: [.termination, _negative_at_ac_sth])
  private static let _negative_at_biz: PublicSuffix.Node = .label("biz", next: [.termination])
  private static let _negative_at_co_blogspot: PublicSuffix.Node = .label("blogspot", next: [.termination])
  private static let _negative_at_co: PublicSuffix.Node = .label("co", next: [.termination, _negative_at_co_blogspot])
  private static let _negative_at_funkfeuer_wien: PublicSuffix.Node = .label("wien", next: [.termination])
  private static let _negative_at_funkfeuer: PublicSuffix.Node = .label("funkfeuer", next: [_negative_at_funkfeuer_wien])
  private static let _negative_at_futurecms_ex: PublicSuffix.Node = .label("ex", next: [.any])
  private static let _negative_at_futurecms_in: PublicSuffix.Node = .label("in", next: [.any])
  private static let _negative_at_futurecms: PublicSuffix.Node = .label("futurecms", next: [.any, _negative_at_futurecms_ex, _negative_at_futurecms_in])
  private static let _negative_at_futurehosting: PublicSuffix.Node = .label("futurehosting", next: [.termination])
  private static let _negative_at_futuremailing: PublicSuffix.Node = .label("futuremailing", next: [.termination])
  private static let _negative_at_gv: PublicSuffix.Node = .label("gv", next: [.termination])
  private static let _negative_at_info: PublicSuffix.Node = .label("info", next: [.termination])
  private static let _negative_at_limaHcity: PublicSuffix.Node = .label("lima-city", next: [.termination])
  private static let _negative_at_myspreadshop: PublicSuffix.Node = .label("myspreadshop", next: [.termination])
  private static let _negative_at_or: PublicSuffix.Node = .label("or", next: [.termination])
  private static let _negative_at_ortsinfo_ex: PublicSuffix.Node = .label("ex", next: [.any])
  private static let _negative_at_ortsinfo_kunden: PublicSuffix.Node = .label("kunden", next: [.any])
  private static let _negative_at_ortsinfo: PublicSuffix.Node = .label("ortsinfo", next: [_negative_at_ortsinfo_ex, _negative_at_ortsinfo_kunden])
  private static let _negative_at_priv: PublicSuffix.Node = .label("priv", next: [.termination])
  private static let _negative_at: PublicSuffix.Node = .label("at", next: [.termination, _negative_at_12hp, _negative_at_2ix, _negative_at_4lima, _negative_at_ac, _negative_at_biz, _negative_at_co, _negative_at_funkfeuer, _negative_at_futurecms, _negative_at_futurehosting, _negative_at_futuremailing, _negative_at_gv, _negative_at_info, _negative_at_limaHcity, _negative_at_myspreadshop, _negative_at_or, _negative_at_ortsinfo, _negative_at_priv])
  private static let _negative_athleta: PublicSuffix.Node = .label("athleta", next: [.termination])
  private static let _negative_attorney: PublicSuffix.Node = .label("attorney", next: [.termination])
  private static let _negative_au_act: PublicSuffix.Node = .label("act", next: [.termination])
  private static let _negative_au_asn: PublicSuffix.Node = .label("asn", next: [.termination])
  private static let _negative_au_com_blogspot: PublicSuffix.Node = .label("blogspot", next: [.termination])
  private static let _negative_au_com_cloudlets_mel: PublicSuffix.Node = .label("mel", next: [.termination])
  private static let _negative_au_com_cloudlets: PublicSuffix.Node = .label("cloudlets", next: [_negative_au_com_cloudlets_mel])
  private static let _negative_au_com_myspreadshop: PublicSuffix.Node = .label("myspreadshop", next: [.termination])
  private static let _negative_au_com: PublicSuffix.Node = .label("com", next: [.termination, _negative_au_com_blogspot, _negative_au_com_cloudlets, _negative_au_com_myspreadshop])
  private static let _negative_au_conf: PublicSuffix.Node = .label("conf", next: [.termination])
  private static let _negative_au_edu_act: PublicSuffix.Node = .label("act", next: [.termination])
  private static let _negative_au_edu_catholic: PublicSuffix.Node = .label("catholic", next: [.termination])
  private static let _negative_au_edu_nsw_schools: PublicSuffix.Node = .label("schools", next: [.termination])
  private static let _negative_au_edu_nsw: PublicSuffix.Node = .label("nsw", next: [.termination, _negative_au_edu_nsw_schools])
  private static let _negative_au_edu_nt: PublicSuffix.Node = .label("nt", next: [.termination])
  private static let _negative_au_edu_qld: PublicSuffix.Node = .label("qld", next: [.termination])
  private static let _negative_au_edu_sa: PublicSuffix.Node = .label("sa", next: [.termination])
  private static let _negative_au_edu_tas: PublicSuffix.Node = .label("tas", next: [.termination])
  private static let _negative_au_edu_vic: PublicSuffix.Node = .label("vic", next: [.termination])
  private static let _negative_au_edu_wa: PublicSuffix.Node = .label("wa", next: [.termination])
  private static let _negative_au_edu: PublicSuffix.Node = .label("edu", next: [.termination, _negative_au_edu_act, _negative_au_edu_catholic, _negative_au_edu_nsw, _negative_au_edu_nt, _negative_au_edu_qld, _negative_au_edu_sa, _negative_au_edu_tas, _negative_au_edu_vic, _negative_au_edu_wa])
  private static let _negative_au_gov_qld: PublicSuffix.Node = .label("qld", next: [.termination])
  private static let _negative_au_gov_sa: PublicSuffix.Node = .label("sa", next: [.termination])
  private static let _negative_au_gov_tas: PublicSuffix.Node = .label("tas", next: [.termination])
  private static let _negative_au_gov_vic: PublicSuffix.Node = .label("vic", next: [.termination])
  private static let _negative_au_gov_wa: PublicSuffix.Node = .label("wa", next: [.termination])
  private static let _negative_au_gov: PublicSuffix.Node = .label("gov", next: [.termination, _negative_au_gov_qld, _negative_au_gov_sa, _negative_au_gov_tas, _negative_au_gov_vic, _negative_au_gov_wa])
  private static let _negative_au_id: PublicSuffix.Node = .label("id", next: [.termination])
  private static let _negative_au_info: PublicSuffix.Node = .label("info", next: [.termination])
  private static let _negative_au_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_au_nsw: PublicSuffix.Node = .label("nsw", next: [.termination])
  private static let _negative_au_nt: PublicSuffix.Node = .label("nt", next: [.termination])
  private static let _negative_au_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_au_oz: PublicSuffix.Node = .label("oz", next: [.termination])
  private static let _negative_au_qld: PublicSuffix.Node = .label("qld", next: [.termination])
  private static let _negative_au_sa: PublicSuffix.Node = .label("sa", next: [.termination])
  private static let _negative_au_tas: PublicSuffix.Node = .label("tas", next: [.termination])
  private static let _negative_au_vic: PublicSuffix.Node = .label("vic", next: [.termination])
  private static let _negative_au_wa: PublicSuffix.Node = .label("wa", next: [.termination])
  private static let _negative_au: PublicSuffix.Node = .label("au", next: [.termination, _negative_au_act, _negative_au_asn, _negative_au_com, _negative_au_conf, _negative_au_edu, _negative_au_gov, _negative_au_id, _negative_au_info, _negative_au_net, _negative_au_nsw, _negative_au_nt, _negative_au_org, _negative_au_oz, _negative_au_qld, _negative_au_sa, _negative_au_tas, _negative_au_vic, _negative_au_wa])
  private static let _negative_auction: PublicSuffix.Node = .label("auction", next: [.termination])
  private static let _negative_audi: PublicSuffix.Node = .label("audi", next: [.termination])
  private static let _negative_audible: PublicSuffix.Node = .label("audible", next: [.termination])
  private static let _negative_audio: PublicSuffix.Node = .label("audio", next: [.termination])
  private static let _negative_auspost: PublicSuffix.Node = .label("auspost", next: [.termination])
  private static let _negative_author: PublicSuffix.Node = .label("author", next: [.termination])
  private static let _negative_auto: PublicSuffix.Node = .label("auto", next: [.termination])
  private static let _negative_autos: PublicSuffix.Node = .label("autos", next: [.termination])
  private static let _negative_avianca: PublicSuffix.Node = .label("avianca", next: [.termination])
  private static let _negative_aw_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_aw: PublicSuffix.Node = .label("aw", next: [.termination, _negative_aw_com])
  private static let _negative_aws: PublicSuffix.Node = .label("aws", next: [.termination])
  private static let _negative_ax_be: PublicSuffix.Node = .label("be", next: [.termination])
  private static let _negative_ax_cat: PublicSuffix.Node = .label("cat", next: [.termination])
  private static let _negative_ax_es: PublicSuffix.Node = .label("es", next: [.termination])
  private static let _negative_ax_eu: PublicSuffix.Node = .label("eu", next: [.termination])
  private static let _negative_ax_gg: PublicSuffix.Node = .label("gg", next: [.termination])
  private static let _negative_ax_mc: PublicSuffix.Node = .label("mc", next: [.termination])
  private static let _negative_ax_us: PublicSuffix.Node = .label("us", next: [.termination])
  private static let _negative_ax_xy: PublicSuffix.Node = .label("xy", next: [.termination])
  private static let _negative_ax: PublicSuffix.Node = .label("ax", next: [.termination, _negative_ax_be, _negative_ax_cat, _negative_ax_es, _negative_ax_eu, _negative_ax_gg, _negative_ax_mc, _negative_ax_us, _negative_ax_xy])
  private static let _negative_axa: PublicSuffix.Node = .label("axa", next: [.termination])
  private static let _negative_az_biz: PublicSuffix.Node = .label("biz", next: [.termination])
  private static let _negative_az_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_az_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_az_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_az_info: PublicSuffix.Node = .label("info", next: [.termination])
  private static let _negative_az_int: PublicSuffix.Node = .label("int", next: [.termination])
  private static let _negative_az_mil: PublicSuffix.Node = .label("mil", next: [.termination])
  private static let _negative_az_name: PublicSuffix.Node = .label("name", next: [.termination])
  private static let _negative_az_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_az_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_az_pp: PublicSuffix.Node = .label("pp", next: [.termination])
  private static let _negative_az_pro: PublicSuffix.Node = .label("pro", next: [.termination])
  private static let _negative_az: PublicSuffix.Node = .label("az", next: [.termination, _negative_az_biz, _negative_az_com, _negative_az_edu, _negative_az_gov, _negative_az_info, _negative_az_int, _negative_az_mil, _negative_az_name, _negative_az_net, _negative_az_org, _negative_az_pp, _negative_az_pro])
  private static let _negative_azure: PublicSuffix.Node = .label("azure", next: [.termination])
  private static let _negative_ba_blogspot: PublicSuffix.Node = .label("blogspot", next: [.termination])
  private static let _negative_ba_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_ba_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_ba_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_ba_mil: PublicSuffix.Node = .label("mil", next: [.termination])
  private static let _negative_ba_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_ba_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_ba_rs: PublicSuffix.Node = .label("rs", next: [.termination])
  private static let _negative_ba: PublicSuffix.Node = .label("ba", next: [.termination, _negative_ba_blogspot, _negative_ba_com, _negative_ba_edu, _negative_ba_gov, _negative_ba_mil, _negative_ba_net, _negative_ba_org, _negative_ba_rs])
  private static let _negative_baby: PublicSuffix.Node = .label("baby", next: [.termination])
  private static let _negative_baidu: PublicSuffix.Node = .label("baidu", next: [.termination])
  private static let _negative_banamex: PublicSuffix.Node = .label("banamex", next: [.termination])
  private static let _negative_bananarepublic: PublicSuffix.Node = .label("bananarepublic", next: [.termination])
  private static let _negative_band: PublicSuffix.Node = .label("band", next: [.termination])
  private static let _negative_bank: PublicSuffix.Node = .label("bank", next: [.termination])
  private static let _negative_bar: PublicSuffix.Node = .label("bar", next: [.termination])
  private static let _negative_barcelona: PublicSuffix.Node = .label("barcelona", next: [.termination])
  private static let _negative_barclaycard: PublicSuffix.Node = .label("barclaycard", next: [.termination])
  private static let _negative_barclays: PublicSuffix.Node = .label("barclays", next: [.termination])
  private static let _negative_barefoot: PublicSuffix.Node = .label("barefoot", next: [.termination])
  private static let _negative_bargains: PublicSuffix.Node = .label("bargains", next: [.termination])
  private static let _negative_baseball: PublicSuffix.Node = .label("baseball", next: [.termination])
  private static let _negative_basketball_aus: PublicSuffix.Node = .label("aus", next: [.termination])
  private static let _negative_basketball_nz: PublicSuffix.Node = .label("nz", next: [.termination])
  private static let _negative_basketball: PublicSuffix.Node = .label("basketball", next: [.termination, _negative_basketball_aus, _negative_basketball_nz])
  private static let _negative_bauhaus: PublicSuffix.Node = .label("bauhaus", next: [.termination])
  private static let _negative_bayern: PublicSuffix.Node = .label("bayern", next: [.termination])
  private static let _negative_bb_biz: PublicSuffix.Node = .label("biz", next: [.termination])
  private static let _negative_bb_co: PublicSuffix.Node = .label("co", next: [.termination])
  private static let _negative_bb_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_bb_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_bb_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_bb_info: PublicSuffix.Node = .label("info", next: [.termination])
  private static let _negative_bb_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_bb_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_bb_store: PublicSuffix.Node = .label("store", next: [.termination])
  private static let _negative_bb_tv: PublicSuffix.Node = .label("tv", next: [.termination])
  private static let _negative_bb: PublicSuffix.Node = .label("bb", next: [.termination, _negative_bb_biz, _negative_bb_co, _negative_bb_com, _negative_bb_edu, _negative_bb_gov, _negative_bb_info, _negative_bb_net, _negative_bb_org, _negative_bb_store, _negative_bb_tv])
  private static let _negative_bbc: PublicSuffix.Node = .label("bbc", next: [.termination])
  private static let _negative_bbt: PublicSuffix.Node = .label("bbt", next: [.termination])
  private static let _negative_bbva: PublicSuffix.Node = .label("bbva", next: [.termination])
  private static let _negative_bcg: PublicSuffix.Node = .label("bcg", next: [.termination])
  private static let _negative_bcn: PublicSuffix.Node = .label("bcn", next: [.termination])
  private static let _negative_bd: PublicSuffix.Node = .label("bd", next: [.any])
  private static let _negative_be_ac: PublicSuffix.Node = .label("ac", next: [.termination])
  private static let _negative_be_blogspot: PublicSuffix.Node = .label("blogspot", next: [.termination])
  private static let _negative_be_interhostsolutions_cloud: PublicSuffix.Node = .label("cloud", next: [.termination])
  private static let _negative_be_interhostsolutions: PublicSuffix.Node = .label("interhostsolutions", next: [_negative_be_interhostsolutions_cloud])
  private static let _negative_be_kuleuven_ezproxy: PublicSuffix.Node = .label("ezproxy", next: [.termination])
  private static let _negative_be_kuleuven: PublicSuffix.Node = .label("kuleuven", next: [_negative_be_kuleuven_ezproxy])
  private static let _negative_be_myspreadshop: PublicSuffix.Node = .label("myspreadshop", next: [.termination])
  private static let _negative_be_transurl: PublicSuffix.Node = .label("transurl", next: [.any])
  private static let _negative_be_webhosting: PublicSuffix.Node = .label("webhosting", next: [.termination])
  private static let _negative_be: PublicSuffix.Node = .label("be", next: [.termination, _negative_be_ac, _negative_be_blogspot, _negative_be_interhostsolutions, _negative_be_kuleuven, _negative_be_myspreadshop, _negative_be_transurl, _negative_be_webhosting])
  private static let _negative_beats: PublicSuffix.Node = .label("beats", next: [.termination])
  private static let _negative_beauty: PublicSuffix.Node = .label("beauty", next: [.termination])
  private static let _negative_beer: PublicSuffix.Node = .label("beer", next: [.termination])
  private static let _negative_bentley: PublicSuffix.Node = .label("bentley", next: [.termination])
  private static let _negative_berlin: PublicSuffix.Node = .label("berlin", next: [.termination])
  private static let _negative_best: PublicSuffix.Node = .label("best", next: [.termination])
  private static let _negative_bestbuy: PublicSuffix.Node = .label("bestbuy", next: [.termination])
  private static let _negative_bet: PublicSuffix.Node = .label("bet", next: [.termination])
  private static let _negative_bf_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_bf: PublicSuffix.Node = .label("bf", next: [.termination, _negative_bf_gov])
  private static let _negative_bg_0: PublicSuffix.Node = .label("0", next: [.termination])
  private static let _negative_bg_1: PublicSuffix.Node = .label("1", next: [.termination])
  private static let _negative_bg_2: PublicSuffix.Node = .label("2", next: [.termination])
  private static let _negative_bg_3: PublicSuffix.Node = .label("3", next: [.termination])
  private static let _negative_bg_4: PublicSuffix.Node = .label("4", next: [.termination])
  private static let _negative_bg_5: PublicSuffix.Node = .label("5", next: [.termination])
  private static let _negative_bg_6: PublicSuffix.Node = .label("6", next: [.termination])
  private static let _negative_bg_7: PublicSuffix.Node = .label("7", next: [.termination])
  private static let _negative_bg_8: PublicSuffix.Node = .label("8", next: [.termination])
  private static let _negative_bg_9: PublicSuffix.Node = .label("9", next: [.termination])
  private static let _negative_bg_a: PublicSuffix.Node = .label("a", next: [.termination])
  private static let _negative_bg_b: PublicSuffix.Node = .label("b", next: [.termination])
  private static let _negative_bg_barsy: PublicSuffix.Node = .label("barsy", next: [.termination])
  private static let _negative_bg_blogspot: PublicSuffix.Node = .label("blogspot", next: [.termination])
  private static let _negative_bg_c: PublicSuffix.Node = .label("c", next: [.termination])
  private static let _negative_bg_d: PublicSuffix.Node = .label("d", next: [.termination])
  private static let _negative_bg_e: PublicSuffix.Node = .label("e", next: [.termination])
  private static let _negative_bg_f: PublicSuffix.Node = .label("f", next: [.termination])
  private static let _negative_bg_g: PublicSuffix.Node = .label("g", next: [.termination])
  private static let _negative_bg_h: PublicSuffix.Node = .label("h", next: [.termination])
  private static let _negative_bg_i: PublicSuffix.Node = .label("i", next: [.termination])
  private static let _negative_bg_j: PublicSuffix.Node = .label("j", next: [.termination])
  private static let _negative_bg_k: PublicSuffix.Node = .label("k", next: [.termination])
  private static let _negative_bg_l: PublicSuffix.Node = .label("l", next: [.termination])
  private static let _negative_bg_m: PublicSuffix.Node = .label("m", next: [.termination])
  private static let _negative_bg_n: PublicSuffix.Node = .label("n", next: [.termination])
  private static let _negative_bg_o: PublicSuffix.Node = .label("o", next: [.termination])
  private static let _negative_bg_p: PublicSuffix.Node = .label("p", next: [.termination])
  private static let _negative_bg_q: PublicSuffix.Node = .label("q", next: [.termination])
  private static let _negative_bg_r: PublicSuffix.Node = .label("r", next: [.termination])
  private static let _negative_bg_s: PublicSuffix.Node = .label("s", next: [.termination])
  private static let _negative_bg_t: PublicSuffix.Node = .label("t", next: [.termination])
  private static let _negative_bg_u: PublicSuffix.Node = .label("u", next: [.termination])
  private static let _negative_bg_v: PublicSuffix.Node = .label("v", next: [.termination])
  private static let _negative_bg_w: PublicSuffix.Node = .label("w", next: [.termination])
  private static let _negative_bg_x: PublicSuffix.Node = .label("x", next: [.termination])
  private static let _negative_bg_y: PublicSuffix.Node = .label("y", next: [.termination])
  private static let _negative_bg_z: PublicSuffix.Node = .label("z", next: [.termination])
  private static let _negative_bg: PublicSuffix.Node = .label("bg", next: [.termination, _negative_bg_0, _negative_bg_1, _negative_bg_2, _negative_bg_3, _negative_bg_4, _negative_bg_5, _negative_bg_6, _negative_bg_7, _negative_bg_8, _negative_bg_9, _negative_bg_a, _negative_bg_b, _negative_bg_barsy, _negative_bg_blogspot, _negative_bg_c, _negative_bg_d, _negative_bg_e, _negative_bg_f, _negative_bg_g, _negative_bg_h, _negative_bg_i, _negative_bg_j, _negative_bg_k, _negative_bg_l, _negative_bg_m, _negative_bg_n, _negative_bg_o, _negative_bg_p, _negative_bg_q, _negative_bg_r, _negative_bg_s, _negative_bg_t, _negative_bg_u, _negative_bg_v, _negative_bg_w, _negative_bg_x, _negative_bg_y, _negative_bg_z])
  private static let _negative_bh_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_bh_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_bh_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_bh_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_bh_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_bh: PublicSuffix.Node = .label("bh", next: [.termination, _negative_bh_com, _negative_bh_edu, _negative_bh_gov, _negative_bh_net, _negative_bh_org])
  private static let _negative_bharti: PublicSuffix.Node = .label("bharti", next: [.termination])
  private static let _negative_bi_co: PublicSuffix.Node = .label("co", next: [.termination])
  private static let _negative_bi_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_bi_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_bi_or: PublicSuffix.Node = .label("or", next: [.termination])
  private static let _negative_bi_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_bi: PublicSuffix.Node = .label("bi", next: [.termination, _negative_bi_co, _negative_bi_com, _negative_bi_edu, _negative_bi_or, _negative_bi_org])
  private static let _negative_bible: PublicSuffix.Node = .label("bible", next: [.termination])
  private static let _negative_bid: PublicSuffix.Node = .label("bid", next: [.termination])
  private static let _negative_bike: PublicSuffix.Node = .label("bike", next: [.termination])
  private static let _negative_bing: PublicSuffix.Node = .label("bing", next: [.termination])
  private static let _negative_bingo: PublicSuffix.Node = .label("bingo", next: [.termination])
  private static let _negative_bio: PublicSuffix.Node = .label("bio", next: [.termination])
  private static let _negative_biz_cloudns: PublicSuffix.Node = .label("cloudns", next: [.termination])
  private static let _negative_biz_dscloud: PublicSuffix.Node = .label("dscloud", next: [.termination])
  private static let _negative_biz_dyndns: PublicSuffix.Node = .label("dyndns", next: [.termination])
  private static let _negative_biz_forHbetter: PublicSuffix.Node = .label("for-better", next: [.termination])
  private static let _negative_biz_forHmore: PublicSuffix.Node = .label("for-more", next: [.termination])
  private static let _negative_biz_forHsome: PublicSuffix.Node = .label("for-some", next: [.termination])
  private static let _negative_biz_forHthe: PublicSuffix.Node = .label("for-the", next: [.termination])
  private static let _negative_biz_jozi: PublicSuffix.Node = .label("jozi", next: [.termination])
  private static let _negative_biz_mmafan: PublicSuffix.Node = .label("mmafan", next: [.termination])
  private static let _negative_biz_myftp: PublicSuffix.Node = .label("myftp", next: [.termination])
  private static let _negative_biz_noHip: PublicSuffix.Node = .label("no-ip", next: [.termination])
  private static let _negative_biz_orx: PublicSuffix.Node = .label("orx", next: [.termination])
  private static let _negative_biz_selfip: PublicSuffix.Node = .label("selfip", next: [.termination])
  private static let _negative_biz_webhop: PublicSuffix.Node = .label("webhop", next: [.termination])
  private static let _negative_biz: PublicSuffix.Node = .label("biz", next: [.termination, _negative_biz_cloudns, _negative_biz_dscloud, _negative_biz_dyndns, _negative_biz_forHbetter, _negative_biz_forHmore, _negative_biz_forHsome, _negative_biz_forHthe, _negative_biz_jozi, _negative_biz_mmafan, _negative_biz_myftp, _negative_biz_noHip, _negative_biz_orx, _negative_biz_selfip, _negative_biz_webhop])
  private static let _negative_bj_asso: PublicSuffix.Node = .label("asso", next: [.termination])
  private static let _negative_bj_barreau: PublicSuffix.Node = .label("barreau", next: [.termination])
  private static let _negative_bj_blogspot: PublicSuffix.Node = .label("blogspot", next: [.termination])
  private static let _negative_bj_gouv: PublicSuffix.Node = .label("gouv", next: [.termination])
  private static let _negative_bj: PublicSuffix.Node = .label("bj", next: [.termination, _negative_bj_asso, _negative_bj_barreau, _negative_bj_blogspot, _negative_bj_gouv])
  private static let _negative_black: PublicSuffix.Node = .label("black", next: [.termination])
  private static let _negative_blackfriday: PublicSuffix.Node = .label("blackfriday", next: [.termination])
  private static let _negative_blockbuster: PublicSuffix.Node = .label("blockbuster", next: [.termination])
  private static let _negative_blog: PublicSuffix.Node = .label("blog", next: [.termination])
  private static let _negative_bloomberg: PublicSuffix.Node = .label("bloomberg", next: [.termination])
  private static let _negative_blue: PublicSuffix.Node = .label("blue", next: [.termination])
  private static let _negative_bm_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_bm_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_bm_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_bm_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_bm_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_bm: PublicSuffix.Node = .label("bm", next: [.termination, _negative_bm_com, _negative_bm_edu, _negative_bm_gov, _negative_bm_net, _negative_bm_org])
  private static let _negative_bms: PublicSuffix.Node = .label("bms", next: [.termination])
  private static let _negative_bmw: PublicSuffix.Node = .label("bmw", next: [.termination])
  private static let _negative_bn_co: PublicSuffix.Node = .label("co", next: [.termination])
  private static let _negative_bn_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_bn_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_bn_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_bn_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_bn_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_bn: PublicSuffix.Node = .label("bn", next: [.termination, _negative_bn_co, _negative_bn_com, _negative_bn_edu, _negative_bn_gov, _negative_bn_net, _negative_bn_org])
  private static let _negative_bnpparibas: PublicSuffix.Node = .label("bnpparibas", next: [.termination])
  private static let _negative_bo_academia: PublicSuffix.Node = .label("academia", next: [.termination])
  private static let _negative_bo_agro: PublicSuffix.Node = .label("agro", next: [.termination])
  private static let _negative_bo_arte: PublicSuffix.Node = .label("arte", next: [.termination])
  private static let _negative_bo_blog: PublicSuffix.Node = .label("blog", next: [.termination])
  private static let _negative_bo_bolivia: PublicSuffix.Node = .label("bolivia", next: [.termination])
  private static let _negative_bo_ciencia: PublicSuffix.Node = .label("ciencia", next: [.termination])
  private static let _negative_bo_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_bo_cooperativa: PublicSuffix.Node = .label("cooperativa", next: [.termination])
  private static let _negative_bo_democracia: PublicSuffix.Node = .label("democracia", next: [.termination])
  private static let _negative_bo_deporte: PublicSuffix.Node = .label("deporte", next: [.termination])
  private static let _negative_bo_ecologia: PublicSuffix.Node = .label("ecologia", next: [.termination])
  private static let _negative_bo_economia: PublicSuffix.Node = .label("economia", next: [.termination])
  private static let _negative_bo_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_bo_empresa: PublicSuffix.Node = .label("empresa", next: [.termination])
  private static let _negative_bo_gob: PublicSuffix.Node = .label("gob", next: [.termination])
  private static let _negative_bo_indigena: PublicSuffix.Node = .label("indigena", next: [.termination])
  private static let _negative_bo_industria: PublicSuffix.Node = .label("industria", next: [.termination])
  private static let _negative_bo_info: PublicSuffix.Node = .label("info", next: [.termination])
  private static let _negative_bo_int: PublicSuffix.Node = .label("int", next: [.termination])
  private static let _negative_bo_medicina: PublicSuffix.Node = .label("medicina", next: [.termination])
  private static let _negative_bo_mil: PublicSuffix.Node = .label("mil", next: [.termination])
  private static let _negative_bo_movimiento: PublicSuffix.Node = .label("movimiento", next: [.termination])
  private static let _negative_bo_musica: PublicSuffix.Node = .label("musica", next: [.termination])
  private static let _negative_bo_natural: PublicSuffix.Node = .label("natural", next: [.termination])
  private static let _negative_bo_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_bo_nombre: PublicSuffix.Node = .label("nombre", next: [.termination])
  private static let _negative_bo_noticias: PublicSuffix.Node = .label("noticias", next: [.termination])
  private static let _negative_bo_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_bo_patria: PublicSuffix.Node = .label("patria", next: [.termination])
  private static let _negative_bo_plurinacional: PublicSuffix.Node = .label("plurinacional", next: [.termination])
  private static let _negative_bo_politica: PublicSuffix.Node = .label("politica", next: [.termination])
  private static let _negative_bo_profesional: PublicSuffix.Node = .label("profesional", next: [.termination])
  private static let _negative_bo_pueblo: PublicSuffix.Node = .label("pueblo", next: [.termination])
  private static let _negative_bo_revista: PublicSuffix.Node = .label("revista", next: [.termination])
  private static let _negative_bo_salud: PublicSuffix.Node = .label("salud", next: [.termination])
  private static let _negative_bo_tecnologia: PublicSuffix.Node = .label("tecnologia", next: [.termination])
  private static let _negative_bo_tksat: PublicSuffix.Node = .label("tksat", next: [.termination])
  private static let _negative_bo_transporte: PublicSuffix.Node = .label("transporte", next: [.termination])
  private static let _negative_bo_tv: PublicSuffix.Node = .label("tv", next: [.termination])
  private static let _negative_bo_web: PublicSuffix.Node = .label("web", next: [.termination])
  private static let _negative_bo_wiki: PublicSuffix.Node = .label("wiki", next: [.termination])
  private static let _negative_bo: PublicSuffix.Node = .label("bo", next: [.termination, _negative_bo_academia, _negative_bo_agro, _negative_bo_arte, _negative_bo_blog, _negative_bo_bolivia, _negative_bo_ciencia, _negative_bo_com, _negative_bo_cooperativa, _negative_bo_democracia, _negative_bo_deporte, _negative_bo_ecologia, _negative_bo_economia, _negative_bo_edu, _negative_bo_empresa, _negative_bo_gob, _negative_bo_indigena, _negative_bo_industria, _negative_bo_info, _negative_bo_int, _negative_bo_medicina, _negative_bo_mil, _negative_bo_movimiento, _negative_bo_musica, _negative_bo_natural, _negative_bo_net, _negative_bo_nombre, _negative_bo_noticias, _negative_bo_org, _negative_bo_patria, _negative_bo_plurinacional, _negative_bo_politica, _negative_bo_profesional, _negative_bo_pueblo, _negative_bo_revista, _negative_bo_salud, _negative_bo_tecnologia, _negative_bo_tksat, _negative_bo_transporte, _negative_bo_tv, _negative_bo_web, _negative_bo_wiki])
  private static let _negative_boats: PublicSuffix.Node = .label("boats", next: [.termination])
  private static let _negative_boehringer: PublicSuffix.Node = .label("boehringer", next: [.termination])
  private static let _negative_bofa: PublicSuffix.Node = .label("bofa", next: [.termination])
  private static let _negative_bom: PublicSuffix.Node = .label("bom", next: [.termination])
  private static let _negative_bond: PublicSuffix.Node = .label("bond", next: [.termination])
  private static let _negative_boo: PublicSuffix.Node = .label("boo", next: [.termination])
  private static let _negative_book: PublicSuffix.Node = .label("book", next: [.termination])
  private static let _negative_booking: PublicSuffix.Node = .label("booking", next: [.termination])
  private static let _negative_bosch: PublicSuffix.Node = .label("bosch", next: [.termination])
  private static let _negative_bostik: PublicSuffix.Node = .label("bostik", next: [.termination])
  private static let _negative_boston: PublicSuffix.Node = .label("boston", next: [.termination])
  private static let _negative_bot: PublicSuffix.Node = .label("bot", next: [.termination])
  private static let _negative_boutique: PublicSuffix.Node = .label("boutique", next: [.termination])
  private static let _negative_box: PublicSuffix.Node = .label("box", next: [.termination])
  private static let _negative_br_9guacu: PublicSuffix.Node = .label("9guacu", next: [.termination])
  private static let _negative_br_abc: PublicSuffix.Node = .label("abc", next: [.termination])
  private static let _negative_br_adm: PublicSuffix.Node = .label("adm", next: [.termination])
  private static let _negative_br_adv: PublicSuffix.Node = .label("adv", next: [.termination])
  private static let _negative_br_agr: PublicSuffix.Node = .label("agr", next: [.termination])
  private static let _negative_br_aju: PublicSuffix.Node = .label("aju", next: [.termination])
  private static let _negative_br_am: PublicSuffix.Node = .label("am", next: [.termination])
  private static let _negative_br_anani: PublicSuffix.Node = .label("anani", next: [.termination])
  private static let _negative_br_aparecida: PublicSuffix.Node = .label("aparecida", next: [.termination])
  private static let _negative_br_app: PublicSuffix.Node = .label("app", next: [.termination])
  private static let _negative_br_arq: PublicSuffix.Node = .label("arq", next: [.termination])
  private static let _negative_br_art: PublicSuffix.Node = .label("art", next: [.termination])
  private static let _negative_br_ato: PublicSuffix.Node = .label("ato", next: [.termination])
  private static let _negative_br_b: PublicSuffix.Node = .label("b", next: [.termination])
  private static let _negative_br_barueri: PublicSuffix.Node = .label("barueri", next: [.termination])
  private static let _negative_br_belem: PublicSuffix.Node = .label("belem", next: [.termination])
  private static let _negative_br_bhz: PublicSuffix.Node = .label("bhz", next: [.termination])
  private static let _negative_br_bib: PublicSuffix.Node = .label("bib", next: [.termination])
  private static let _negative_br_bio: PublicSuffix.Node = .label("bio", next: [.termination])
  private static let _negative_br_blog: PublicSuffix.Node = .label("blog", next: [.termination])
  private static let _negative_br_bmd: PublicSuffix.Node = .label("bmd", next: [.termination])
  private static let _negative_br_boavista: PublicSuffix.Node = .label("boavista", next: [.termination])
  private static let _negative_br_bsb: PublicSuffix.Node = .label("bsb", next: [.termination])
  private static let _negative_br_campinagrande: PublicSuffix.Node = .label("campinagrande", next: [.termination])
  private static let _negative_br_campinas: PublicSuffix.Node = .label("campinas", next: [.termination])
  private static let _negative_br_caxias: PublicSuffix.Node = .label("caxias", next: [.termination])
  private static let _negative_br_cim: PublicSuffix.Node = .label("cim", next: [.termination])
  private static let _negative_br_cng: PublicSuffix.Node = .label("cng", next: [.termination])
  private static let _negative_br_cnt: PublicSuffix.Node = .label("cnt", next: [.termination])
  private static let _negative_br_com_blogspot: PublicSuffix.Node = .label("blogspot", next: [.termination])
  private static let _negative_br_com_virtualcloud_scale_users: PublicSuffix.Node = .label("users", next: [.termination])
  private static let _negative_br_com_virtualcloud_scale: PublicSuffix.Node = .label("scale", next: [_negative_br_com_virtualcloud_scale_users])
  private static let _negative_br_com_virtualcloud: PublicSuffix.Node = .label("virtualcloud", next: [_negative_br_com_virtualcloud_scale])
  private static let _negative_br_com: PublicSuffix.Node = .label("com", next: [.termination, _negative_br_com_blogspot, _negative_br_com_virtualcloud])
  private static let _negative_br_contagem: PublicSuffix.Node = .label("contagem", next: [.termination])
  private static let _negative_br_coop: PublicSuffix.Node = .label("coop", next: [.termination])
  private static let _negative_br_coz: PublicSuffix.Node = .label("coz", next: [.termination])
  private static let _negative_br_cri: PublicSuffix.Node = .label("cri", next: [.termination])
  private static let _negative_br_cuiaba: PublicSuffix.Node = .label("cuiaba", next: [.termination])
  private static let _negative_br_curitiba: PublicSuffix.Node = .label("curitiba", next: [.termination])
  private static let _negative_br_def: PublicSuffix.Node = .label("def", next: [.termination])
  private static let _negative_br_des: PublicSuffix.Node = .label("des", next: [.termination])
  private static let _negative_br_det: PublicSuffix.Node = .label("det", next: [.termination])
  private static let _negative_br_dev: PublicSuffix.Node = .label("dev", next: [.termination])
  private static let _negative_br_ecn: PublicSuffix.Node = .label("ecn", next: [.termination])
  private static let _negative_br_eco: PublicSuffix.Node = .label("eco", next: [.termination])
  private static let _negative_br_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_br_emp: PublicSuffix.Node = .label("emp", next: [.termination])
  private static let _negative_br_enf: PublicSuffix.Node = .label("enf", next: [.termination])
  private static let _negative_br_eng: PublicSuffix.Node = .label("eng", next: [.termination])
  private static let _negative_br_esp: PublicSuffix.Node = .label("esp", next: [.termination])
  private static let _negative_br_etc: PublicSuffix.Node = .label("etc", next: [.termination])
  private static let _negative_br_eti: PublicSuffix.Node = .label("eti", next: [.termination])
  private static let _negative_br_far: PublicSuffix.Node = .label("far", next: [.termination])
  private static let _negative_br_feira: PublicSuffix.Node = .label("feira", next: [.termination])
  private static let _negative_br_flog: PublicSuffix.Node = .label("flog", next: [.termination])
  private static let _negative_br_floripa: PublicSuffix.Node = .label("floripa", next: [.termination])
  private static let _negative_br_fm: PublicSuffix.Node = .label("fm", next: [.termination])
  private static let _negative_br_fnd: PublicSuffix.Node = .label("fnd", next: [.termination])
  private static let _negative_br_fortal: PublicSuffix.Node = .label("fortal", next: [.termination])
  private static let _negative_br_fot: PublicSuffix.Node = .label("fot", next: [.termination])
  private static let _negative_br_foz: PublicSuffix.Node = .label("foz", next: [.termination])
  private static let _negative_br_fst: PublicSuffix.Node = .label("fst", next: [.termination])
  private static let _negative_br_g12: PublicSuffix.Node = .label("g12", next: [.termination])
  private static let _negative_br_geo: PublicSuffix.Node = .label("geo", next: [.termination])
  private static let _negative_br_ggf: PublicSuffix.Node = .label("ggf", next: [.termination])
  private static let _negative_br_goiania: PublicSuffix.Node = .label("goiania", next: [.termination])
  private static let _negative_br_gov_ac: PublicSuffix.Node = .label("ac", next: [.termination])
  private static let _negative_br_gov_al: PublicSuffix.Node = .label("al", next: [.termination])
  private static let _negative_br_gov_am: PublicSuffix.Node = .label("am", next: [.termination])
  private static let _negative_br_gov_ap: PublicSuffix.Node = .label("ap", next: [.termination])
  private static let _negative_br_gov_ba: PublicSuffix.Node = .label("ba", next: [.termination])
  private static let _negative_br_gov_ce: PublicSuffix.Node = .label("ce", next: [.termination])
  private static let _negative_br_gov_df: PublicSuffix.Node = .label("df", next: [.termination])
  private static let _negative_br_gov_es: PublicSuffix.Node = .label("es", next: [.termination])
  private static let _negative_br_gov_go: PublicSuffix.Node = .label("go", next: [.termination])
  private static let _negative_br_gov_ma: PublicSuffix.Node = .label("ma", next: [.termination])
  private static let _negative_br_gov_mg: PublicSuffix.Node = .label("mg", next: [.termination])
  private static let _negative_br_gov_ms: PublicSuffix.Node = .label("ms", next: [.termination])
  private static let _negative_br_gov_mt: PublicSuffix.Node = .label("mt", next: [.termination])
  private static let _negative_br_gov_pa: PublicSuffix.Node = .label("pa", next: [.termination])
  private static let _negative_br_gov_pb: PublicSuffix.Node = .label("pb", next: [.termination])
  private static let _negative_br_gov_pe: PublicSuffix.Node = .label("pe", next: [.termination])
  private static let _negative_br_gov_pi: PublicSuffix.Node = .label("pi", next: [.termination])
  private static let _negative_br_gov_pr: PublicSuffix.Node = .label("pr", next: [.termination])
  private static let _negative_br_gov_rj: PublicSuffix.Node = .label("rj", next: [.termination])
  private static let _negative_br_gov_rn: PublicSuffix.Node = .label("rn", next: [.termination])
  private static let _negative_br_gov_ro: PublicSuffix.Node = .label("ro", next: [.termination])
  private static let _negative_br_gov_rr: PublicSuffix.Node = .label("rr", next: [.termination])
  private static let _negative_br_gov_rs: PublicSuffix.Node = .label("rs", next: [.termination])
  private static let _negative_br_gov_sc: PublicSuffix.Node = .label("sc", next: [.termination])
  private static let _negative_br_gov_se: PublicSuffix.Node = .label("se", next: [.termination])
  private static let _negative_br_gov_sp: PublicSuffix.Node = .label("sp", next: [.termination])
  private static let _negative_br_gov_to: PublicSuffix.Node = .label("to", next: [.termination])
  private static let _negative_br_gov: PublicSuffix.Node = .label("gov", next: [.termination, _negative_br_gov_ac, _negative_br_gov_al, _negative_br_gov_am, _negative_br_gov_ap, _negative_br_gov_ba, _negative_br_gov_ce, _negative_br_gov_df, _negative_br_gov_es, _negative_br_gov_go, _negative_br_gov_ma, _negative_br_gov_mg, _negative_br_gov_ms, _negative_br_gov_mt, _negative_br_gov_pa, _negative_br_gov_pb, _negative_br_gov_pe, _negative_br_gov_pi, _negative_br_gov_pr, _negative_br_gov_rj, _negative_br_gov_rn, _negative_br_gov_ro, _negative_br_gov_rr, _negative_br_gov_rs, _negative_br_gov_sc, _negative_br_gov_se, _negative_br_gov_sp, _negative_br_gov_to])
  private static let _negative_br_gru: PublicSuffix.Node = .label("gru", next: [.termination])
  private static let _negative_br_imb: PublicSuffix.Node = .label("imb", next: [.termination])
  private static let _negative_br_ind: PublicSuffix.Node = .label("ind", next: [.termination])
  private static let _negative_br_inf: PublicSuffix.Node = .label("inf", next: [.termination])
  private static let _negative_br_jab: PublicSuffix.Node = .label("jab", next: [.termination])
  private static let _negative_br_jampa: PublicSuffix.Node = .label("jampa", next: [.termination])
  private static let _negative_br_jdf: PublicSuffix.Node = .label("jdf", next: [.termination])
  private static let _negative_br_joinville: PublicSuffix.Node = .label("joinville", next: [.termination])
  private static let _negative_br_jor: PublicSuffix.Node = .label("jor", next: [.termination])
  private static let _negative_br_jus: PublicSuffix.Node = .label("jus", next: [.termination])
  private static let _negative_br_leg_ac: PublicSuffix.Node = .label("ac", next: [.termination])
  private static let _negative_br_leg_al: PublicSuffix.Node = .label("al", next: [.termination])
  private static let _negative_br_leg_am: PublicSuffix.Node = .label("am", next: [.termination])
  private static let _negative_br_leg_ap: PublicSuffix.Node = .label("ap", next: [.termination])
  private static let _negative_br_leg_ba: PublicSuffix.Node = .label("ba", next: [.termination])
  private static let _negative_br_leg_ce: PublicSuffix.Node = .label("ce", next: [.termination])
  private static let _negative_br_leg_df: PublicSuffix.Node = .label("df", next: [.termination])
  private static let _negative_br_leg_es: PublicSuffix.Node = .label("es", next: [.termination])
  private static let _negative_br_leg_go: PublicSuffix.Node = .label("go", next: [.termination])
  private static let _negative_br_leg_ma: PublicSuffix.Node = .label("ma", next: [.termination])
  private static let _negative_br_leg_mg: PublicSuffix.Node = .label("mg", next: [.termination])
  private static let _negative_br_leg_ms: PublicSuffix.Node = .label("ms", next: [.termination])
  private static let _negative_br_leg_mt: PublicSuffix.Node = .label("mt", next: [.termination])
  private static let _negative_br_leg_pa: PublicSuffix.Node = .label("pa", next: [.termination])
  private static let _negative_br_leg_pb: PublicSuffix.Node = .label("pb", next: [.termination])
  private static let _negative_br_leg_pe: PublicSuffix.Node = .label("pe", next: [.termination])
  private static let _negative_br_leg_pi: PublicSuffix.Node = .label("pi", next: [.termination])
  private static let _negative_br_leg_pr: PublicSuffix.Node = .label("pr", next: [.termination])
  private static let _negative_br_leg_rj: PublicSuffix.Node = .label("rj", next: [.termination])
  private static let _negative_br_leg_rn: PublicSuffix.Node = .label("rn", next: [.termination])
  private static let _negative_br_leg_ro: PublicSuffix.Node = .label("ro", next: [.termination])
  private static let _negative_br_leg_rr: PublicSuffix.Node = .label("rr", next: [.termination])
  private static let _negative_br_leg_rs: PublicSuffix.Node = .label("rs", next: [.termination])
  private static let _negative_br_leg_sc: PublicSuffix.Node = .label("sc", next: [.termination])
  private static let _negative_br_leg_se: PublicSuffix.Node = .label("se", next: [.termination])
  private static let _negative_br_leg_sp: PublicSuffix.Node = .label("sp", next: [.termination])
  private static let _negative_br_leg_to: PublicSuffix.Node = .label("to", next: [.termination])
  private static let _negative_br_leg: PublicSuffix.Node = .label("leg", next: [.termination, _negative_br_leg_ac, _negative_br_leg_al, _negative_br_leg_am, _negative_br_leg_ap, _negative_br_leg_ba, _negative_br_leg_ce, _negative_br_leg_df, _negative_br_leg_es, _negative_br_leg_go, _negative_br_leg_ma, _negative_br_leg_mg, _negative_br_leg_ms, _negative_br_leg_mt, _negative_br_leg_pa, _negative_br_leg_pb, _negative_br_leg_pe, _negative_br_leg_pi, _negative_br_leg_pr, _negative_br_leg_rj, _negative_br_leg_rn, _negative_br_leg_ro, _negative_br_leg_rr, _negative_br_leg_rs, _negative_br_leg_sc, _negative_br_leg_se, _negative_br_leg_sp, _negative_br_leg_to])
  private static let _negative_br_lel: PublicSuffix.Node = .label("lel", next: [.termination])
  private static let _negative_br_log: PublicSuffix.Node = .label("log", next: [.termination])
  private static let _negative_br_londrina: PublicSuffix.Node = .label("londrina", next: [.termination])
  private static let _negative_br_macapa: PublicSuffix.Node = .label("macapa", next: [.termination])
  private static let _negative_br_maceio: PublicSuffix.Node = .label("maceio", next: [.termination])
  private static let _negative_br_manaus: PublicSuffix.Node = .label("manaus", next: [.termination])
  private static let _negative_br_maringa: PublicSuffix.Node = .label("maringa", next: [.termination])
  private static let _negative_br_mat: PublicSuffix.Node = .label("mat", next: [.termination])
  private static let _negative_br_med: PublicSuffix.Node = .label("med", next: [.termination])
  private static let _negative_br_mil: PublicSuffix.Node = .label("mil", next: [.termination])
  private static let _negative_br_morena: PublicSuffix.Node = .label("morena", next: [.termination])
  private static let _negative_br_mp: PublicSuffix.Node = .label("mp", next: [.termination])
  private static let _negative_br_mus: PublicSuffix.Node = .label("mus", next: [.termination])
  private static let _negative_br_natal: PublicSuffix.Node = .label("natal", next: [.termination])
  private static let _negative_br_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_br_niteroi: PublicSuffix.Node = .label("niteroi", next: [.termination])
  private static let _negative_br_nom: PublicSuffix.Node = .label("nom", next: [.any])
  private static let _negative_br_not: PublicSuffix.Node = .label("not", next: [.termination])
  private static let _negative_br_ntr: PublicSuffix.Node = .label("ntr", next: [.termination])
  private static let _negative_br_odo: PublicSuffix.Node = .label("odo", next: [.termination])
  private static let _negative_br_ong: PublicSuffix.Node = .label("ong", next: [.termination])
  private static let _negative_br_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_br_osasco: PublicSuffix.Node = .label("osasco", next: [.termination])
  private static let _negative_br_palmas: PublicSuffix.Node = .label("palmas", next: [.termination])
  private static let _negative_br_poa: PublicSuffix.Node = .label("poa", next: [.termination])
  private static let _negative_br_ppg: PublicSuffix.Node = .label("ppg", next: [.termination])
  private static let _negative_br_pro: PublicSuffix.Node = .label("pro", next: [.termination])
  private static let _negative_br_psc: PublicSuffix.Node = .label("psc", next: [.termination])
  private static let _negative_br_psi: PublicSuffix.Node = .label("psi", next: [.termination])
  private static let _negative_br_pvh: PublicSuffix.Node = .label("pvh", next: [.termination])
  private static let _negative_br_qsl: PublicSuffix.Node = .label("qsl", next: [.termination])
  private static let _negative_br_radio: PublicSuffix.Node = .label("radio", next: [.termination])
  private static let _negative_br_rec: PublicSuffix.Node = .label("rec", next: [.termination])
  private static let _negative_br_recife: PublicSuffix.Node = .label("recife", next: [.termination])
  private static let _negative_br_rep: PublicSuffix.Node = .label("rep", next: [.termination])
  private static let _negative_br_ribeirao: PublicSuffix.Node = .label("ribeirao", next: [.termination])
  private static let _negative_br_rio: PublicSuffix.Node = .label("rio", next: [.termination])
  private static let _negative_br_riobranco: PublicSuffix.Node = .label("riobranco", next: [.termination])
  private static let _negative_br_riopreto: PublicSuffix.Node = .label("riopreto", next: [.termination])
  private static let _negative_br_salvador: PublicSuffix.Node = .label("salvador", next: [.termination])
  private static let _negative_br_sampa: PublicSuffix.Node = .label("sampa", next: [.termination])
  private static let _negative_br_santamaria: PublicSuffix.Node = .label("santamaria", next: [.termination])
  private static let _negative_br_santoandre: PublicSuffix.Node = .label("santoandre", next: [.termination])
  private static let _negative_br_saobernardo: PublicSuffix.Node = .label("saobernardo", next: [.termination])
  private static let _negative_br_saogonca: PublicSuffix.Node = .label("saogonca", next: [.termination])
  private static let _negative_br_seg: PublicSuffix.Node = .label("seg", next: [.termination])
  private static let _negative_br_sjc: PublicSuffix.Node = .label("sjc", next: [.termination])
  private static let _negative_br_slg: PublicSuffix.Node = .label("slg", next: [.termination])
  private static let _negative_br_slz: PublicSuffix.Node = .label("slz", next: [.termination])
  private static let _negative_br_sorocaba: PublicSuffix.Node = .label("sorocaba", next: [.termination])
  private static let _negative_br_srv: PublicSuffix.Node = .label("srv", next: [.termination])
  private static let _negative_br_taxi: PublicSuffix.Node = .label("taxi", next: [.termination])
  private static let _negative_br_tc: PublicSuffix.Node = .label("tc", next: [.termination])
  private static let _negative_br_tec: PublicSuffix.Node = .label("tec", next: [.termination])
  private static let _negative_br_teo: PublicSuffix.Node = .label("teo", next: [.termination])
  private static let _negative_br_the: PublicSuffix.Node = .label("the", next: [.termination])
  private static let _negative_br_tmp: PublicSuffix.Node = .label("tmp", next: [.termination])
  private static let _negative_br_trd: PublicSuffix.Node = .label("trd", next: [.termination])
  private static let _negative_br_tur: PublicSuffix.Node = .label("tur", next: [.termination])
  private static let _negative_br_tv: PublicSuffix.Node = .label("tv", next: [.termination])
  private static let _negative_br_udi: PublicSuffix.Node = .label("udi", next: [.termination])
  private static let _negative_br_vet: PublicSuffix.Node = .label("vet", next: [.termination])
  private static let _negative_br_vix: PublicSuffix.Node = .label("vix", next: [.termination])
  private static let _negative_br_vlog: PublicSuffix.Node = .label("vlog", next: [.termination])
  private static let _negative_br_wiki: PublicSuffix.Node = .label("wiki", next: [.termination])
  private static let _negative_br_zlg: PublicSuffix.Node = .label("zlg", next: [.termination])
  private static let _negative_br: PublicSuffix.Node = .label("br", next: [.termination, _negative_br_9guacu, _negative_br_abc, _negative_br_adm, _negative_br_adv, _negative_br_agr, _negative_br_aju, _negative_br_am, _negative_br_anani, _negative_br_aparecida, _negative_br_app, _negative_br_arq, _negative_br_art, _negative_br_ato, _negative_br_b, _negative_br_barueri, _negative_br_belem, _negative_br_bhz, _negative_br_bib, _negative_br_bio, _negative_br_blog, _negative_br_bmd, _negative_br_boavista, _negative_br_bsb, _negative_br_campinagrande, _negative_br_campinas, _negative_br_caxias, _negative_br_cim, _negative_br_cng, _negative_br_cnt, _negative_br_com, _negative_br_contagem, _negative_br_coop, _negative_br_coz, _negative_br_cri, _negative_br_cuiaba, _negative_br_curitiba, _negative_br_def, _negative_br_des, _negative_br_det, _negative_br_dev, _negative_br_ecn, _negative_br_eco, _negative_br_edu, _negative_br_emp, _negative_br_enf, _negative_br_eng, _negative_br_esp, _negative_br_etc, _negative_br_eti, _negative_br_far, _negative_br_feira, _negative_br_flog, _negative_br_floripa, _negative_br_fm, _negative_br_fnd, _negative_br_fortal, _negative_br_fot, _negative_br_foz, _negative_br_fst, _negative_br_g12, _negative_br_geo, _negative_br_ggf, _negative_br_goiania, _negative_br_gov, _negative_br_gru, _negative_br_imb, _negative_br_ind, _negative_br_inf, _negative_br_jab, _negative_br_jampa, _negative_br_jdf, _negative_br_joinville, _negative_br_jor, _negative_br_jus, _negative_br_leg, _negative_br_lel, _negative_br_log, _negative_br_londrina, _negative_br_macapa, _negative_br_maceio, _negative_br_manaus, _negative_br_maringa, _negative_br_mat, _negative_br_med, _negative_br_mil, _negative_br_morena, _negative_br_mp, _negative_br_mus, _negative_br_natal, _negative_br_net, _negative_br_niteroi, _negative_br_nom, _negative_br_not, _negative_br_ntr, _negative_br_odo, _negative_br_ong, _negative_br_org, _negative_br_osasco, _negative_br_palmas, _negative_br_poa, _negative_br_ppg, _negative_br_pro, _negative_br_psc, _negative_br_psi, _negative_br_pvh, _negative_br_qsl, _negative_br_radio, _negative_br_rec, _negative_br_recife, _negative_br_rep, _negative_br_ribeirao, _negative_br_rio, _negative_br_riobranco, _negative_br_riopreto, _negative_br_salvador, _negative_br_sampa, _negative_br_santamaria, _negative_br_santoandre, _negative_br_saobernardo, _negative_br_saogonca, _negative_br_seg, _negative_br_sjc, _negative_br_slg, _negative_br_slz, _negative_br_sorocaba, _negative_br_srv, _negative_br_taxi, _negative_br_tc, _negative_br_tec, _negative_br_teo, _negative_br_the, _negative_br_tmp, _negative_br_trd, _negative_br_tur, _negative_br_tv, _negative_br_udi, _negative_br_vet, _negative_br_vix, _negative_br_vlog, _negative_br_wiki, _negative_br_zlg])
  private static let _negative_bradesco: PublicSuffix.Node = .label("bradesco", next: [.termination])
  private static let _negative_bridgestone: PublicSuffix.Node = .label("bridgestone", next: [.termination])
  private static let _negative_broadway: PublicSuffix.Node = .label("broadway", next: [.termination])
  private static let _negative_broker: PublicSuffix.Node = .label("broker", next: [.termination])
  private static let _negative_brother: PublicSuffix.Node = .label("brother", next: [.termination])
  private static let _negative_brussels: PublicSuffix.Node = .label("brussels", next: [.termination])
  private static let _negative_bs_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_bs_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_bs_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_bs_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_bs_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_bs_we: PublicSuffix.Node = .label("we", next: [.termination])
  private static let _negative_bs: PublicSuffix.Node = .label("bs", next: [.termination, _negative_bs_com, _negative_bs_edu, _negative_bs_gov, _negative_bs_net, _negative_bs_org, _negative_bs_we])
  private static let _negative_bt_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_bt_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_bt_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_bt_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_bt_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_bt: PublicSuffix.Node = .label("bt", next: [.termination, _negative_bt_com, _negative_bt_edu, _negative_bt_gov, _negative_bt_net, _negative_bt_org])
  private static let _negative_bugatti: PublicSuffix.Node = .label("bugatti", next: [.termination])
  private static let _negative_build: PublicSuffix.Node = .label("build", next: [.termination])
  private static let _negative_builders_cloudsite: PublicSuffix.Node = .label("cloudsite", next: [.termination])
  private static let _negative_builders: PublicSuffix.Node = .label("builders", next: [.termination, _negative_builders_cloudsite])
  private static let _negative_business_co: PublicSuffix.Node = .label("co", next: [.termination])
  private static let _negative_business: PublicSuffix.Node = .label("business", next: [.termination, _negative_business_co])
  private static let _negative_buy: PublicSuffix.Node = .label("buy", next: [.termination])
  private static let _negative_buzz: PublicSuffix.Node = .label("buzz", next: [.termination])
  private static let _negative_bv: PublicSuffix.Node = .label("bv", next: [.termination])
  private static let _negative_bw_co: PublicSuffix.Node = .label("co", next: [.termination])
  private static let _negative_bw_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_bw: PublicSuffix.Node = .label("bw", next: [.termination, _negative_bw_co, _negative_bw_org])
  private static let _negative_by_com_blogspot: PublicSuffix.Node = .label("blogspot", next: [.termination])
  private static let _negative_by_com: PublicSuffix.Node = .label("com", next: [.termination, _negative_by_com_blogspot])
  private static let _negative_by_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_by_mediatech: PublicSuffix.Node = .label("mediatech", next: [.termination])
  private static let _negative_by_mil: PublicSuffix.Node = .label("mil", next: [.termination])
  private static let _negative_by_mycloud: PublicSuffix.Node = .label("mycloud", next: [.termination])
  private static let _negative_by_of: PublicSuffix.Node = .label("of", next: [.termination])
  private static let _negative_by: PublicSuffix.Node = .label("by", next: [.termination, _negative_by_com, _negative_by_gov, _negative_by_mediatech, _negative_by_mil, _negative_by_mycloud, _negative_by_of])
  private static let _negative_bz_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_bz_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_bz_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_bz_gsj: PublicSuffix.Node = .label("gsj", next: [.termination])
  private static let _negative_bz_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_bz_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_bz_za: PublicSuffix.Node = .label("za", next: [.termination])
  private static let _negative_bz: PublicSuffix.Node = .label("bz", next: [.termination, _negative_bz_com, _negative_bz_edu, _negative_bz_gov, _negative_bz_gsj, _negative_bz_net, _negative_bz_org, _negative_bz_za])
  private static let _negative_bzh: PublicSuffix.Node = .label("bzh", next: [.termination])
  private static let _negative_ca_ab: PublicSuffix.Node = .label("ab", next: [.termination])
  private static let _negative_ca_awdev: PublicSuffix.Node = .label("awdev", next: [.any])
  private static let _negative_ca_barsy: PublicSuffix.Node = .label("barsy", next: [.termination])
  private static let _negative_ca_bc: PublicSuffix.Node = .label("bc", next: [.termination])
  private static let _negative_ca_blogspot: PublicSuffix.Node = .label("blogspot", next: [.termination])
  private static let _negative_ca_co: PublicSuffix.Node = .label("co", next: [.termination])
  private static let _negative_ca_gc: PublicSuffix.Node = .label("gc", next: [.termination])
  private static let _negative_ca_mb: PublicSuffix.Node = .label("mb", next: [.termination])
  private static let _negative_ca_myspreadshop: PublicSuffix.Node = .label("myspreadshop", next: [.termination])
  private static let _negative_ca_nb: PublicSuffix.Node = .label("nb", next: [.termination])
  private static let _negative_ca_nf: PublicSuffix.Node = .label("nf", next: [.termination])
  private static let _negative_ca_nl: PublicSuffix.Node = .label("nl", next: [.termination])
  private static let _negative_ca_noHip: PublicSuffix.Node = .label("no-ip", next: [.termination])
  private static let _negative_ca_ns: PublicSuffix.Node = .label("ns", next: [.termination])
  private static let _negative_ca_nt: PublicSuffix.Node = .label("nt", next: [.termination])
  private static let _negative_ca_nu: PublicSuffix.Node = .label("nu", next: [.termination])
  private static let _negative_ca_on: PublicSuffix.Node = .label("on", next: [.termination])
  private static let _negative_ca_pe: PublicSuffix.Node = .label("pe", next: [.termination])
  private static let _negative_ca_qc: PublicSuffix.Node = .label("qc", next: [.termination])
  private static let _negative_ca_sk: PublicSuffix.Node = .label("sk", next: [.termination])
  private static let _negative_ca_yk: PublicSuffix.Node = .label("yk", next: [.termination])
  private static let _negative_ca: PublicSuffix.Node = .label("ca", next: [.termination, _negative_ca_ab, _negative_ca_awdev, _negative_ca_barsy, _negative_ca_bc, _negative_ca_blogspot, _negative_ca_co, _negative_ca_gc, _negative_ca_mb, _negative_ca_myspreadshop, _negative_ca_nb, _negative_ca_nf, _negative_ca_nl, _negative_ca_noHip, _negative_ca_ns, _negative_ca_nt, _negative_ca_nu, _negative_ca_on, _negative_ca_pe, _negative_ca_qc, _negative_ca_sk, _negative_ca_yk])
  private static let _negative_cab: PublicSuffix.Node = .label("cab", next: [.termination])
  private static let _negative_cafe: PublicSuffix.Node = .label("cafe", next: [.termination])
  private static let _negative_cal: PublicSuffix.Node = .label("cal", next: [.termination])
  private static let _negative_call: PublicSuffix.Node = .label("call", next: [.termination])
  private static let _negative_calvinklein: PublicSuffix.Node = .label("calvinklein", next: [.termination])
  private static let _negative_cam: PublicSuffix.Node = .label("cam", next: [.termination])
  private static let _negative_camera: PublicSuffix.Node = .label("camera", next: [.termination])
  private static let _negative_camp: PublicSuffix.Node = .label("camp", next: [.termination])
  private static let _negative_cancerresearch: PublicSuffix.Node = .label("cancerresearch", next: [.termination])
  private static let _negative_canon: PublicSuffix.Node = .label("canon", next: [.termination])
  private static let _negative_capetown: PublicSuffix.Node = .label("capetown", next: [.termination])
  private static let _negative_capital: PublicSuffix.Node = .label("capital", next: [.termination])
  private static let _negative_capitalone: PublicSuffix.Node = .label("capitalone", next: [.termination])
  private static let _negative_car: PublicSuffix.Node = .label("car", next: [.termination])
  private static let _negative_caravan: PublicSuffix.Node = .label("caravan", next: [.termination])
  private static let _negative_cards: PublicSuffix.Node = .label("cards", next: [.termination])
  private static let _negative_care: PublicSuffix.Node = .label("care", next: [.termination])
  private static let _negative_career: PublicSuffix.Node = .label("career", next: [.termination])
  private static let _negative_careers: PublicSuffix.Node = .label("careers", next: [.termination])
  private static let _negative_cars: PublicSuffix.Node = .label("cars", next: [.termination])
  private static let _negative_casa_nabu_ui: PublicSuffix.Node = .label("ui", next: [.termination])
  private static let _negative_casa_nabu: PublicSuffix.Node = .label("nabu", next: [_negative_casa_nabu_ui])
  private static let _negative_casa: PublicSuffix.Node = .label("casa", next: [.termination, _negative_casa_nabu])
  private static let _negative_case: PublicSuffix.Node = .label("case", next: [.termination])
  private static let _negative_cash: PublicSuffix.Node = .label("cash", next: [.termination])
  private static let _negative_casino: PublicSuffix.Node = .label("casino", next: [.termination])
  private static let _negative_cat: PublicSuffix.Node = .label("cat", next: [.termination])
  private static let _negative_catering: PublicSuffix.Node = .label("catering", next: [.termination])
  private static let _negative_catholic: PublicSuffix.Node = .label("catholic", next: [.termination])
  private static let _negative_cba: PublicSuffix.Node = .label("cba", next: [.termination])
  private static let _negative_cbn: PublicSuffix.Node = .label("cbn", next: [.termination])
  private static let _negative_cbre: PublicSuffix.Node = .label("cbre", next: [.termination])
  private static let _negative_cbs: PublicSuffix.Node = .label("cbs", next: [.termination])
  private static let _negative_cc_cloudns: PublicSuffix.Node = .label("cloudns", next: [.termination])
  private static let _negative_cc_csx: PublicSuffix.Node = .label("csx", next: [.termination])
  private static let _negative_cc_fantasyleague: PublicSuffix.Node = .label("fantasyleague", next: [.termination])
  private static let _negative_cc_ftpaccess: PublicSuffix.Node = .label("ftpaccess", next: [.termination])
  private static let _negative_cc_gameHserver: PublicSuffix.Node = .label("game-server", next: [.termination])
  private static let _negative_cc_myphotos: PublicSuffix.Node = .label("myphotos", next: [.termination])
  private static let _negative_cc_scrapping: PublicSuffix.Node = .label("scrapping", next: [.termination])
  private static let _negative_cc_spawn_instances: PublicSuffix.Node = .label("instances", next: [.termination])
  private static let _negative_cc_spawn: PublicSuffix.Node = .label("spawn", next: [_negative_cc_spawn_instances])
  private static let _negative_cc_twmail: PublicSuffix.Node = .label("twmail", next: [.termination])
  private static let _negative_cc: PublicSuffix.Node = .label("cc", next: [.termination, _negative_cc_cloudns, _negative_cc_csx, _negative_cc_fantasyleague, _negative_cc_ftpaccess, _negative_cc_gameHserver, _negative_cc_myphotos, _negative_cc_scrapping, _negative_cc_spawn, _negative_cc_twmail])
  private static let _negative_cd_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_cd: PublicSuffix.Node = .label("cd", next: [.termination, _negative_cd_gov])
  private static let _negative_center: PublicSuffix.Node = .label("center", next: [.termination])
  private static let _negative_ceo: PublicSuffix.Node = .label("ceo", next: [.termination])
  private static let _negative_cern: PublicSuffix.Node = .label("cern", next: [.termination])
  private static let _negative_cf_blogspot: PublicSuffix.Node = .label("blogspot", next: [.termination])
  private static let _negative_cf: PublicSuffix.Node = .label("cf", next: [.termination, _negative_cf_blogspot])
  private static let _negative_cfa: PublicSuffix.Node = .label("cfa", next: [.termination])
  private static let _negative_cfd: PublicSuffix.Node = .label("cfd", next: [.termination])
  private static let _negative_cg: PublicSuffix.Node = .label("cg", next: [.termination])
  private static let _negative_ch_12hp: PublicSuffix.Node = .label("12hp", next: [.termination])
  private static let _negative_ch_2ix: PublicSuffix.Node = .label("2ix", next: [.termination])
  private static let _negative_ch_4lima: PublicSuffix.Node = .label("4lima", next: [.termination])
  private static let _negative_ch_blogspot: PublicSuffix.Node = .label("blogspot", next: [.termination])
  private static let _negative_ch_dnsking: PublicSuffix.Node = .label("dnsking", next: [.termination])
  private static let _negative_ch_firenet_svc: PublicSuffix.Node = .label("svc", next: [.any])
  private static let _negative_ch_firenet: PublicSuffix.Node = .label("firenet", next: [.any, _negative_ch_firenet_svc])
  private static let _negative_ch_flow_ae_alp1: PublicSuffix.Node = .label("alp1", next: [.termination])
  private static let _negative_ch_flow_ae: PublicSuffix.Node = .label("ae", next: [_negative_ch_flow_ae_alp1])
  private static let _negative_ch_flow_appengine: PublicSuffix.Node = .label("appengine", next: [.termination])
  private static let _negative_ch_flow: PublicSuffix.Node = .label("flow", next: [_negative_ch_flow_ae, _negative_ch_flow_appengine])
  private static let _negative_ch_gotdns: PublicSuffix.Node = .label("gotdns", next: [.termination])
  private static let _negative_ch_limaHcity: PublicSuffix.Node = .label("lima-city", next: [.termination])
  private static let _negative_ch_linkyardHcloud: PublicSuffix.Node = .label("linkyard-cloud", next: [.termination])
  private static let _negative_ch_myspreadshop: PublicSuffix.Node = .label("myspreadshop", next: [.termination])
  private static let _negative_ch_square7: PublicSuffix.Node = .label("square7", next: [.termination])
  private static let _negative_ch: PublicSuffix.Node = .label("ch", next: [.termination, _negative_ch_12hp, _negative_ch_2ix, _negative_ch_4lima, _negative_ch_blogspot, _negative_ch_dnsking, _negative_ch_firenet, _negative_ch_flow, _negative_ch_gotdns, _negative_ch_limaHcity, _negative_ch_linkyardHcloud, _negative_ch_myspreadshop, _negative_ch_square7])
  private static let _negative_chanel: PublicSuffix.Node = .label("chanel", next: [.termination])
  private static let _negative_channel: PublicSuffix.Node = .label("channel", next: [.termination])
  private static let _negative_charity: PublicSuffix.Node = .label("charity", next: [.termination])
  private static let _negative_chase: PublicSuffix.Node = .label("chase", next: [.termination])
  private static let _negative_chat: PublicSuffix.Node = .label("chat", next: [.termination])
  private static let _negative_cheap: PublicSuffix.Node = .label("cheap", next: [.termination])
  private static let _negative_chintai: PublicSuffix.Node = .label("chintai", next: [.termination])
  private static let _negative_christmas: PublicSuffix.Node = .label("christmas", next: [.termination])
  private static let _negative_chrome: PublicSuffix.Node = .label("chrome", next: [.termination])
  private static let _negative_church: PublicSuffix.Node = .label("church", next: [.termination])
  private static let _negative_ci_ac: PublicSuffix.Node = .label("ac", next: [.termination])
  private static let _negative_ci_asso: PublicSuffix.Node = .label("asso", next: [.termination])
  private static let _negative_ci_aéroport: PublicSuffix.Node = .label("aéroport", next: [.termination])
  private static let _negative_ci_co: PublicSuffix.Node = .label("co", next: [.termination])
  private static let _negative_ci_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_ci_ed: PublicSuffix.Node = .label("ed", next: [.termination])
  private static let _negative_ci_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_ci_fin: PublicSuffix.Node = .label("fin", next: [.termination])
  private static let _negative_ci_go: PublicSuffix.Node = .label("go", next: [.termination])
  private static let _negative_ci_gouv: PublicSuffix.Node = .label("gouv", next: [.termination])
  private static let _negative_ci_int: PublicSuffix.Node = .label("int", next: [.termination])
  private static let _negative_ci_md: PublicSuffix.Node = .label("md", next: [.termination])
  private static let _negative_ci_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_ci_nl: PublicSuffix.Node = .label("nl", next: [.termination])
  private static let _negative_ci_or: PublicSuffix.Node = .label("or", next: [.termination])
  private static let _negative_ci_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_ci_presse: PublicSuffix.Node = .label("presse", next: [.termination])
  private static let _negative_ci: PublicSuffix.Node = .label("ci", next: [.termination, _negative_ci_ac, _negative_ci_asso, _negative_ci_aéroport, _negative_ci_co, _negative_ci_com, _negative_ci_ed, _negative_ci_edu, _negative_ci_fin, _negative_ci_go, _negative_ci_gouv, _negative_ci_int, _negative_ci_md, _negative_ci_net, _negative_ci_nl, _negative_ci_or, _negative_ci_org, _negative_ci_presse])
  private static let _negative_cipriani: PublicSuffix.Node = .label("cipriani", next: [.termination])
  private static let _negative_circle: PublicSuffix.Node = .label("circle", next: [.termination])
  private static let _negative_cisco: PublicSuffix.Node = .label("cisco", next: [.termination])
  private static let _negative_citadel: PublicSuffix.Node = .label("citadel", next: [.termination])
  private static let _negative_citi: PublicSuffix.Node = .label("citi", next: [.termination])
  private static let _negative_citic: PublicSuffix.Node = .label("citic", next: [.termination])
  private static let _negative_city: PublicSuffix.Node = .label("city", next: [.termination])
  private static let _negative_cityeats: PublicSuffix.Node = .label("cityeats", next: [.termination])
  private static let _negative_ck: PublicSuffix.Node = .label("ck", next: [.any])
  private static let _negative_cl_blogspot: PublicSuffix.Node = .label("blogspot", next: [.termination])
  private static let _negative_cl_co: PublicSuffix.Node = .label("co", next: [.termination])
  private static let _negative_cl_gob: PublicSuffix.Node = .label("gob", next: [.termination])
  private static let _negative_cl_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_cl_mil: PublicSuffix.Node = .label("mil", next: [.termination])
  private static let _negative_cl: PublicSuffix.Node = .label("cl", next: [.termination, _negative_cl_blogspot, _negative_cl_co, _negative_cl_gob, _negative_cl_gov, _negative_cl_mil])
  private static let _negative_claims: PublicSuffix.Node = .label("claims", next: [.termination])
  private static let _negative_cleaning: PublicSuffix.Node = .label("cleaning", next: [.termination])
  private static let _negative_click: PublicSuffix.Node = .label("click", next: [.termination])
  private static let _negative_clinic: PublicSuffix.Node = .label("clinic", next: [.termination])
  private static let _negative_clinique: PublicSuffix.Node = .label("clinique", next: [.termination])
  private static let _negative_clothing: PublicSuffix.Node = .label("clothing", next: [.termination])
  private static let _negative_cloud_axarnet_esH1: PublicSuffix.Node = .label("es-1", next: [.termination])
  private static let _negative_cloud_axarnet: PublicSuffix.Node = .label("axarnet", next: [_negative_cloud_axarnet_esH1])
  private static let _negative_cloud_banzai: PublicSuffix.Node = .label("banzai", next: [.any])
  private static let _negative_cloud_diadem: PublicSuffix.Node = .label("diadem", next: [.termination])
  private static let _negative_cloud_elementor: PublicSuffix.Node = .label("elementor", next: [.termination])
  private static let _negative_cloud_encoway_eu: PublicSuffix.Node = .label("eu", next: [.termination])
  private static let _negative_cloud_encoway: PublicSuffix.Node = .label("encoway", next: [_negative_cloud_encoway_eu])
  private static let _negative_cloud_jelastic_vip: PublicSuffix.Node = .label("vip", next: [.termination])
  private static let _negative_cloud_jelastic: PublicSuffix.Node = .label("jelastic", next: [_negative_cloud_jelastic_vip])
  private static let _negative_cloud_jele: PublicSuffix.Node = .label("jele", next: [.termination])
  private static let _negative_cloud_jenvHaruba_aruba_eur_it1: PublicSuffix.Node = .label("it1", next: [.termination])
  private static let _negative_cloud_jenvHaruba_aruba_eur: PublicSuffix.Node = .label("eur", next: [_negative_cloud_jenvHaruba_aruba_eur_it1])
  private static let _negative_cloud_jenvHaruba_aruba: PublicSuffix.Node = .label("aruba", next: [_negative_cloud_jenvHaruba_aruba_eur])
  private static let _negative_cloud_jenvHaruba_it1: PublicSuffix.Node = .label("it1", next: [.termination])
  private static let _negative_cloud_jenvHaruba: PublicSuffix.Node = .label("jenv-aruba", next: [_negative_cloud_jenvHaruba_aruba, _negative_cloud_jenvHaruba_it1])
  private static let _negative_cloud_jotelulu: PublicSuffix.Node = .label("jotelulu", next: [.termination])
  private static let _negative_cloud_keliweb_cs: PublicSuffix.Node = .label("cs", next: [.termination])
  private static let _negative_cloud_keliweb: PublicSuffix.Node = .label("keliweb", next: [.termination, _negative_cloud_keliweb_cs])
  private static let _negative_cloud_kuleuven: PublicSuffix.Node = .label("kuleuven", next: [.termination])
  private static let _negative_cloud_linkyard: PublicSuffix.Node = .label("linkyard", next: [.termination])
  private static let _negative_cloud_magentosite: PublicSuffix.Node = .label("magentosite", next: [.any])
  private static let _negative_cloud_onHrancher: PublicSuffix.Node = .label("on-rancher", next: [.any])
  private static let _negative_cloud_oxa_tn: PublicSuffix.Node = .label("tn", next: [.termination])
  private static let _negative_cloud_oxa_uk: PublicSuffix.Node = .label("uk", next: [.termination])
  private static let _negative_cloud_oxa: PublicSuffix.Node = .label("oxa", next: [.termination, _negative_cloud_oxa_tn, _negative_cloud_oxa_uk])
  private static let _negative_cloud_perspecta: PublicSuffix.Node = .label("perspecta", next: [.termination])
  private static let _negative_cloud_primetel_uk: PublicSuffix.Node = .label("uk", next: [.termination])
  private static let _negative_cloud_primetel: PublicSuffix.Node = .label("primetel", next: [.termination, _negative_cloud_primetel_uk])
  private static let _negative_cloud_ravendb: PublicSuffix.Node = .label("ravendb", next: [.termination])
  private static let _negative_cloud_reclaim_ca: PublicSuffix.Node = .label("ca", next: [.termination])
  private static let _negative_cloud_reclaim_uk: PublicSuffix.Node = .label("uk", next: [.termination])
  private static let _negative_cloud_reclaim_us: PublicSuffix.Node = .label("us", next: [.termination])
  private static let _negative_cloud_reclaim: PublicSuffix.Node = .label("reclaim", next: [_negative_cloud_reclaim_ca, _negative_cloud_reclaim_uk, _negative_cloud_reclaim_us])
  private static let _negative_cloud_scw_baremetal_frHparH1: PublicSuffix.Node = .label("fr-par-1", next: [.termination])
  private static let _negative_cloud_scw_baremetal_frHparH2: PublicSuffix.Node = .label("fr-par-2", next: [.termination])
  private static let _negative_cloud_scw_baremetal_nlHamsH1: PublicSuffix.Node = .label("nl-ams-1", next: [.termination])
  private static let _negative_cloud_scw_baremetal: PublicSuffix.Node = .label("baremetal", next: [_negative_cloud_scw_baremetal_frHparH1, _negative_cloud_scw_baremetal_frHparH2, _negative_cloud_scw_baremetal_nlHamsH1])
  private static let _negative_cloud_scw_frHpar_fnc_functions: PublicSuffix.Node = .label("functions", next: [.termination])
  private static let _negative_cloud_scw_frHpar_fnc: PublicSuffix.Node = .label("fnc", next: [.termination, _negative_cloud_scw_frHpar_fnc_functions])
  private static let _negative_cloud_scw_frHpar_k8s_nodes: PublicSuffix.Node = .label("nodes", next: [.termination])
  private static let _negative_cloud_scw_frHpar_k8s: PublicSuffix.Node = .label("k8s", next: [.termination, _negative_cloud_scw_frHpar_k8s_nodes])
  private static let _negative_cloud_scw_frHpar_s3: PublicSuffix.Node = .label("s3", next: [.termination])
  private static let _negative_cloud_scw_frHpar_s3Hwebsite: PublicSuffix.Node = .label("s3-website", next: [.termination])
  private static let _negative_cloud_scw_frHpar_whm: PublicSuffix.Node = .label("whm", next: [.termination])
  private static let _negative_cloud_scw_frHpar: PublicSuffix.Node = .label("fr-par", next: [_negative_cloud_scw_frHpar_fnc, _negative_cloud_scw_frHpar_k8s, _negative_cloud_scw_frHpar_s3, _negative_cloud_scw_frHpar_s3Hwebsite, _negative_cloud_scw_frHpar_whm])
  private static let _negative_cloud_scw_instances_priv: PublicSuffix.Node = .label("priv", next: [.termination])
  private static let _negative_cloud_scw_instances_pub: PublicSuffix.Node = .label("pub", next: [.termination])
  private static let _negative_cloud_scw_instances: PublicSuffix.Node = .label("instances", next: [_negative_cloud_scw_instances_priv, _negative_cloud_scw_instances_pub])
  private static let _negative_cloud_scw_k8s: PublicSuffix.Node = .label("k8s", next: [.termination])
  private static let _negative_cloud_scw_nlHams_k8s_nodes: PublicSuffix.Node = .label("nodes", next: [.termination])
  private static let _negative_cloud_scw_nlHams_k8s: PublicSuffix.Node = .label("k8s", next: [.termination, _negative_cloud_scw_nlHams_k8s_nodes])
  private static let _negative_cloud_scw_nlHams_s3: PublicSuffix.Node = .label("s3", next: [.termination])
  private static let _negative_cloud_scw_nlHams_s3Hwebsite: PublicSuffix.Node = .label("s3-website", next: [.termination])
  private static let _negative_cloud_scw_nlHams_whm: PublicSuffix.Node = .label("whm", next: [.termination])
  private static let _negative_cloud_scw_nlHams: PublicSuffix.Node = .label("nl-ams", next: [_negative_cloud_scw_nlHams_k8s, _negative_cloud_scw_nlHams_s3, _negative_cloud_scw_nlHams_s3Hwebsite, _negative_cloud_scw_nlHams_whm])
  private static let _negative_cloud_scw_plHwaw_k8s_nodes: PublicSuffix.Node = .label("nodes", next: [.termination])
  private static let _negative_cloud_scw_plHwaw_k8s: PublicSuffix.Node = .label("k8s", next: [.termination, _negative_cloud_scw_plHwaw_k8s_nodes])
  private static let _negative_cloud_scw_plHwaw_s3: PublicSuffix.Node = .label("s3", next: [.termination])
  private static let _negative_cloud_scw_plHwaw_s3Hwebsite: PublicSuffix.Node = .label("s3-website", next: [.termination])
  private static let _negative_cloud_scw_plHwaw: PublicSuffix.Node = .label("pl-waw", next: [_negative_cloud_scw_plHwaw_k8s, _negative_cloud_scw_plHwaw_s3, _negative_cloud_scw_plHwaw_s3Hwebsite])
  private static let _negative_cloud_scw_scalebook: PublicSuffix.Node = .label("scalebook", next: [.termination])
  private static let _negative_cloud_scw_smartlabeling: PublicSuffix.Node = .label("smartlabeling", next: [.termination])
  private static let _negative_cloud_scw: PublicSuffix.Node = .label("scw", next: [_negative_cloud_scw_baremetal, _negative_cloud_scw_frHpar, _negative_cloud_scw_instances, _negative_cloud_scw_k8s, _negative_cloud_scw_nlHams, _negative_cloud_scw_plHwaw, _negative_cloud_scw_scalebook, _negative_cloud_scw_smartlabeling])
  private static let _negative_cloud_sensiosite: PublicSuffix.Node = .label("sensiosite", next: [.any])
  private static let _negative_cloud_statics: PublicSuffix.Node = .label("statics", next: [.any])
  private static let _negative_cloud_trafficplex: PublicSuffix.Node = .label("trafficplex", next: [.termination])
  private static let _negative_cloud_trendhosting_ch: PublicSuffix.Node = .label("ch", next: [.termination])
  private static let _negative_cloud_trendhosting_de: PublicSuffix.Node = .label("de", next: [.termination])
  private static let _negative_cloud_trendhosting: PublicSuffix.Node = .label("trendhosting", next: [_negative_cloud_trendhosting_ch, _negative_cloud_trendhosting_de])
  private static let _negative_cloud_urown: PublicSuffix.Node = .label("urown", next: [.termination])
  private static let _negative_cloud_vapor: PublicSuffix.Node = .label("vapor", next: [.termination])
  private static let _negative_cloud_voorloper: PublicSuffix.Node = .label("voorloper", next: [.termination])
  private static let _negative_cloud: PublicSuffix.Node = .label("cloud", next: [.termination, _negative_cloud_axarnet, _negative_cloud_banzai, _negative_cloud_diadem, _negative_cloud_elementor, _negative_cloud_encoway, _negative_cloud_jelastic, _negative_cloud_jele, _negative_cloud_jenvHaruba, _negative_cloud_jotelulu, _negative_cloud_keliweb, _negative_cloud_kuleuven, _negative_cloud_linkyard, _negative_cloud_magentosite, _negative_cloud_onHrancher, _negative_cloud_oxa, _negative_cloud_perspecta, _negative_cloud_primetel, _negative_cloud_ravendb, _negative_cloud_reclaim, _negative_cloud_scw, _negative_cloud_sensiosite, _negative_cloud_statics, _negative_cloud_trafficplex, _negative_cloud_trendhosting, _negative_cloud_urown, _negative_cloud_vapor, _negative_cloud_voorloper])
  private static let _negative_club_barsy: PublicSuffix.Node = .label("barsy", next: [.termination])
  private static let _negative_club_cloudns: PublicSuffix.Node = .label("cloudns", next: [.termination])
  private static let _negative_club_jele: PublicSuffix.Node = .label("jele", next: [.termination])
  private static let _negative_club_pony: PublicSuffix.Node = .label("pony", next: [.termination])
  private static let _negative_club: PublicSuffix.Node = .label("club", next: [.termination, _negative_club_barsy, _negative_club_cloudns, _negative_club_jele, _negative_club_pony])
  private static let _negative_clubmed: PublicSuffix.Node = .label("clubmed", next: [.termination])
  private static let _negative_cm_co: PublicSuffix.Node = .label("co", next: [.termination])
  private static let _negative_cm_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_cm_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_cm_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_cm: PublicSuffix.Node = .label("cm", next: [.termination, _negative_cm_co, _negative_cm_com, _negative_cm_gov, _negative_cm_net])
  private static let _negative_cn_ac: PublicSuffix.Node = .label("ac", next: [.termination])
  private static let _negative_cn_ah: PublicSuffix.Node = .label("ah", next: [.termination])
  private static let _negative_cn_bj: PublicSuffix.Node = .label("bj", next: [.termination])
  private static let _negative_cn_com_amazonaws_cnHnorthH1_s3: PublicSuffix.Node = .label("s3", next: [.termination])
  private static let _negative_cn_com_amazonaws_cnHnorthH1: PublicSuffix.Node = .label("cn-north-1", next: [_negative_cn_com_amazonaws_cnHnorthH1_s3])
  private static let _negative_cn_com_amazonaws_compute: PublicSuffix.Node = .label("compute", next: [.any])
  private static let _negative_cn_com_amazonaws_eb_cnHnorthH1: PublicSuffix.Node = .label("cn-north-1", next: [.termination])
  private static let _negative_cn_com_amazonaws_eb_cnHnorthwestH1: PublicSuffix.Node = .label("cn-northwest-1", next: [.termination])
  private static let _negative_cn_com_amazonaws_eb: PublicSuffix.Node = .label("eb", next: [_negative_cn_com_amazonaws_eb_cnHnorthH1, _negative_cn_com_amazonaws_eb_cnHnorthwestH1])
  private static let _negative_cn_com_amazonaws_elb: PublicSuffix.Node = .label("elb", next: [.any])
  private static let _negative_cn_com_amazonaws: PublicSuffix.Node = .label("amazonaws", next: [_negative_cn_com_amazonaws_cnHnorthH1, _negative_cn_com_amazonaws_compute, _negative_cn_com_amazonaws_eb, _negative_cn_com_amazonaws_elb])
  private static let _negative_cn_com: PublicSuffix.Node = .label("com", next: [.termination, _negative_cn_com_amazonaws])
  private static let _negative_cn_cq: PublicSuffix.Node = .label("cq", next: [.termination])
  private static let _negative_cn_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_cn_fj: PublicSuffix.Node = .label("fj", next: [.termination])
  private static let _negative_cn_gd: PublicSuffix.Node = .label("gd", next: [.termination])
  private static let _negative_cn_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_cn_gs: PublicSuffix.Node = .label("gs", next: [.termination])
  private static let _negative_cn_gx: PublicSuffix.Node = .label("gx", next: [.termination])
  private static let _negative_cn_gz: PublicSuffix.Node = .label("gz", next: [.termination])
  private static let _negative_cn_ha: PublicSuffix.Node = .label("ha", next: [.termination])
  private static let _negative_cn_hb: PublicSuffix.Node = .label("hb", next: [.termination])
  private static let _negative_cn_he: PublicSuffix.Node = .label("he", next: [.termination])
  private static let _negative_cn_hi: PublicSuffix.Node = .label("hi", next: [.termination])
  private static let _negative_cn_hk: PublicSuffix.Node = .label("hk", next: [.termination])
  private static let _negative_cn_hl: PublicSuffix.Node = .label("hl", next: [.termination])
  private static let _negative_cn_hn: PublicSuffix.Node = .label("hn", next: [.termination])
  private static let _negative_cn_instantcloud: PublicSuffix.Node = .label("instantcloud", next: [.termination])
  private static let _negative_cn_jl: PublicSuffix.Node = .label("jl", next: [.termination])
  private static let _negative_cn_js: PublicSuffix.Node = .label("js", next: [.termination])
  private static let _negative_cn_jx: PublicSuffix.Node = .label("jx", next: [.termination])
  private static let _negative_cn_ln: PublicSuffix.Node = .label("ln", next: [.termination])
  private static let _negative_cn_mil: PublicSuffix.Node = .label("mil", next: [.termination])
  private static let _negative_cn_mo: PublicSuffix.Node = .label("mo", next: [.termination])
  private static let _negative_cn_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_cn_nm: PublicSuffix.Node = .label("nm", next: [.termination])
  private static let _negative_cn_nx: PublicSuffix.Node = .label("nx", next: [.termination])
  private static let _negative_cn_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_cn_qh: PublicSuffix.Node = .label("qh", next: [.termination])
  private static let _negative_cn_quickconnect_direct: PublicSuffix.Node = .label("direct", next: [.termination])
  private static let _negative_cn_quickconnect: PublicSuffix.Node = .label("quickconnect", next: [_negative_cn_quickconnect_direct])
  private static let _negative_cn_sc: PublicSuffix.Node = .label("sc", next: [.termination])
  private static let _negative_cn_sd: PublicSuffix.Node = .label("sd", next: [.termination])
  private static let _negative_cn_sh: PublicSuffix.Node = .label("sh", next: [.termination])
  private static let _negative_cn_sn: PublicSuffix.Node = .label("sn", next: [.termination])
  private static let _negative_cn_sx: PublicSuffix.Node = .label("sx", next: [.termination])
  private static let _negative_cn_tj: PublicSuffix.Node = .label("tj", next: [.termination])
  private static let _negative_cn_tw: PublicSuffix.Node = .label("tw", next: [.termination])
  private static let _negative_cn_xj: PublicSuffix.Node = .label("xj", next: [.termination])
  private static let _negative_cn_xz: PublicSuffix.Node = .label("xz", next: [.termination])
  private static let _negative_cn_yn: PublicSuffix.Node = .label("yn", next: [.termination])
  private static let _negative_cn_zj: PublicSuffix.Node = .label("zj", next: [.termination])
  private static let _negative_cn_公司: PublicSuffix.Node = .label("公司", next: [.termination])
  private static let _negative_cn_網絡: PublicSuffix.Node = .label("網絡", next: [.termination])
  private static let _negative_cn_网络: PublicSuffix.Node = .label("网络", next: [.termination])
  private static let _negative_cn: PublicSuffix.Node = .label("cn", next: [.termination, _negative_cn_ac, _negative_cn_ah, _negative_cn_bj, _negative_cn_com, _negative_cn_cq, _negative_cn_edu, _negative_cn_fj, _negative_cn_gd, _negative_cn_gov, _negative_cn_gs, _negative_cn_gx, _negative_cn_gz, _negative_cn_ha, _negative_cn_hb, _negative_cn_he, _negative_cn_hi, _negative_cn_hk, _negative_cn_hl, _negative_cn_hn, _negative_cn_instantcloud, _negative_cn_jl, _negative_cn_js, _negative_cn_jx, _negative_cn_ln, _negative_cn_mil, _negative_cn_mo, _negative_cn_net, _negative_cn_nm, _negative_cn_nx, _negative_cn_org, _negative_cn_qh, _negative_cn_quickconnect, _negative_cn_sc, _negative_cn_sd, _negative_cn_sh, _negative_cn_sn, _negative_cn_sx, _negative_cn_tj, _negative_cn_tw, _negative_cn_xj, _negative_cn_xz, _negative_cn_yn, _negative_cn_zj, _negative_cn_公司, _negative_cn_網絡, _negative_cn_网络])
  private static let _negative_co_arts: PublicSuffix.Node = .label("arts", next: [.termination])
  private static let _negative_co_carrd: PublicSuffix.Node = .label("carrd", next: [.termination])
  private static let _negative_co_com_blogspot: PublicSuffix.Node = .label("blogspot", next: [.termination])
  private static let _negative_co_com: PublicSuffix.Node = .label("com", next: [.termination, _negative_co_com_blogspot])
  private static let _negative_co_crd: PublicSuffix.Node = .label("crd", next: [.termination])
  private static let _negative_co_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_co_firm: PublicSuffix.Node = .label("firm", next: [.termination])
  private static let _negative_co_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_co_info: PublicSuffix.Node = .label("info", next: [.termination])
  private static let _negative_co_int: PublicSuffix.Node = .label("int", next: [.termination])
  private static let _negative_co_leadpages: PublicSuffix.Node = .label("leadpages", next: [.termination])
  private static let _negative_co_lpages: PublicSuffix.Node = .label("lpages", next: [.termination])
  private static let _negative_co_mil: PublicSuffix.Node = .label("mil", next: [.termination])
  private static let _negative_co_mypi: PublicSuffix.Node = .label("mypi", next: [.termination])
  private static let _negative_co_n4t: PublicSuffix.Node = .label("n4t", next: [.termination])
  private static let _negative_co_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_co_nom: PublicSuffix.Node = .label("nom", next: [.termination])
  private static let _negative_co_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_co_otap: PublicSuffix.Node = .label("otap", next: [.any])
  private static let _negative_co_rec: PublicSuffix.Node = .label("rec", next: [.termination])
  private static let _negative_co_repl_id: PublicSuffix.Node = .label("id", next: [.termination])
  private static let _negative_co_repl: PublicSuffix.Node = .label("repl", next: [.termination, _negative_co_repl_id])
  private static let _negative_co_supabase: PublicSuffix.Node = .label("supabase", next: [.termination])
  private static let _negative_co_web: PublicSuffix.Node = .label("web", next: [.termination])
  private static let _negative_co: PublicSuffix.Node = .label("co", next: [.termination, _negative_co_arts, _negative_co_carrd, _negative_co_com, _negative_co_crd, _negative_co_edu, _negative_co_firm, _negative_co_gov, _negative_co_info, _negative_co_int, _negative_co_leadpages, _negative_co_lpages, _negative_co_mil, _negative_co_mypi, _negative_co_n4t, _negative_co_net, _negative_co_nom, _negative_co_org, _negative_co_otap, _negative_co_rec, _negative_co_repl, _negative_co_supabase, _negative_co_web])
  private static let _negative_coach: PublicSuffix.Node = .label("coach", next: [.termination])
  private static let _negative_codes_owo: PublicSuffix.Node = .label("owo", next: [.any])
  private static let _negative_codes: PublicSuffix.Node = .label("codes", next: [.termination, _negative_codes_owo])
  private static let _negative_coffee: PublicSuffix.Node = .label("coffee", next: [.termination])
  private static let _negative_college: PublicSuffix.Node = .label("college", next: [.termination])
  private static let _negative_cologne: PublicSuffix.Node = .label("cologne", next: [.termination])
  private static let _negative_com_001www: PublicSuffix.Node = .label("001www", next: [.termination])
  private static let _negative_com_0emm: PublicSuffix.Node = .label("0emm", next: [.any])
  private static let _negative_com_1kapp: PublicSuffix.Node = .label("1kapp", next: [.termination])
  private static let _negative_com_3utilities: PublicSuffix.Node = .label("3utilities", next: [.termination])
  private static let _negative_com_4u: PublicSuffix.Node = .label("4u", next: [.termination])
  private static let _negative_com_adobeaemcloud_dev: PublicSuffix.Node = .label("dev", next: [.any])
  private static let _negative_com_adobeaemcloud: PublicSuffix.Node = .label("adobeaemcloud", next: [.termination, _negative_com_adobeaemcloud_dev])
  private static let _negative_com_africa: PublicSuffix.Node = .label("africa", next: [.termination])
  private static let _negative_com_airkitapps: PublicSuffix.Node = .label("airkitapps", next: [.termination])
  private static let _negative_com_airkitappsHau: PublicSuffix.Node = .label("airkitapps-au", next: [.termination])
  private static let _negative_com_aivencloud: PublicSuffix.Node = .label("aivencloud", next: [.termination])
  private static let _negative_com_alphaHmyqnapcloud: PublicSuffix.Node = .label("alpha-myqnapcloud", next: [.termination])
  private static let _negative_com_amazonaws_afHsouthH1_cloud9_vfs: PublicSuffix.Node = .label("vfs", next: [.termination])
  private static let _negative_com_amazonaws_afHsouthH1_cloud9_webviewHassets: PublicSuffix.Node = .label("webview-assets", next: [.termination])
  private static let _negative_com_amazonaws_afHsouthH1_cloud9: PublicSuffix.Node = .label("cloud9", next: [_negative_com_amazonaws_afHsouthH1_cloud9_vfs, _negative_com_amazonaws_afHsouthH1_cloud9_webviewHassets])
  private static let _negative_com_amazonaws_afHsouthH1: PublicSuffix.Node = .label("af-south-1", next: [_negative_com_amazonaws_afHsouthH1_cloud9])
  private static let _negative_com_amazonaws_apHeastH1_cloud9_vfs: PublicSuffix.Node = .label("vfs", next: [.termination])
  private static let _negative_com_amazonaws_apHeastH1_cloud9_webviewHassets: PublicSuffix.Node = .label("webview-assets", next: [.termination])
  private static let _negative_com_amazonaws_apHeastH1_cloud9: PublicSuffix.Node = .label("cloud9", next: [_negative_com_amazonaws_apHeastH1_cloud9_vfs, _negative_com_amazonaws_apHeastH1_cloud9_webviewHassets])
  private static let _negative_com_amazonaws_apHeastH1: PublicSuffix.Node = .label("ap-east-1", next: [_negative_com_amazonaws_apHeastH1_cloud9])
  private static let _negative_com_amazonaws_apHnortheastH1_cloud9_vfs: PublicSuffix.Node = .label("vfs", next: [.termination])
  private static let _negative_com_amazonaws_apHnortheastH1_cloud9_webviewHassets: PublicSuffix.Node = .label("webview-assets", next: [.termination])
  private static let _negative_com_amazonaws_apHnortheastH1_cloud9: PublicSuffix.Node = .label("cloud9", next: [_negative_com_amazonaws_apHnortheastH1_cloud9_vfs, _negative_com_amazonaws_apHnortheastH1_cloud9_webviewHassets])
  private static let _negative_com_amazonaws_apHnortheastH1_dualstack_s3: PublicSuffix.Node = .label("s3", next: [.termination])
  private static let _negative_com_amazonaws_apHnortheastH1_dualstack: PublicSuffix.Node = .label("dualstack", next: [_negative_com_amazonaws_apHnortheastH1_dualstack_s3])
  private static let _negative_com_amazonaws_apHnortheastH1: PublicSuffix.Node = .label("ap-northeast-1", next: [_negative_com_amazonaws_apHnortheastH1_cloud9, _negative_com_amazonaws_apHnortheastH1_dualstack])
  private static let _negative_com_amazonaws_apHnortheastH2_cloud9_vfs: PublicSuffix.Node = .label("vfs", next: [.termination])
  private static let _negative_com_amazonaws_apHnortheastH2_cloud9_webviewHassets: PublicSuffix.Node = .label("webview-assets", next: [.termination])
  private static let _negative_com_amazonaws_apHnortheastH2_cloud9: PublicSuffix.Node = .label("cloud9", next: [_negative_com_amazonaws_apHnortheastH2_cloud9_vfs, _negative_com_amazonaws_apHnortheastH2_cloud9_webviewHassets])
  private static let _negative_com_amazonaws_apHnortheastH2_dualstack_s3: PublicSuffix.Node = .label("s3", next: [.termination])
  private static let _negative_com_amazonaws_apHnortheastH2_dualstack: PublicSuffix.Node = .label("dualstack", next: [_negative_com_amazonaws_apHnortheastH2_dualstack_s3])
  private static let _negative_com_amazonaws_apHnortheastH2_s3: PublicSuffix.Node = .label("s3", next: [.termination])
  private static let _negative_com_amazonaws_apHnortheastH2_s3Hwebsite: PublicSuffix.Node = .label("s3-website", next: [.termination])
  private static let _negative_com_amazonaws_apHnortheastH2: PublicSuffix.Node = .label("ap-northeast-2", next: [_negative_com_amazonaws_apHnortheastH2_cloud9, _negative_com_amazonaws_apHnortheastH2_dualstack, _negative_com_amazonaws_apHnortheastH2_s3, _negative_com_amazonaws_apHnortheastH2_s3Hwebsite])
  private static let _negative_com_amazonaws_apHnortheastH3_cloud9_vfs: PublicSuffix.Node = .label("vfs", next: [.termination])
  private static let _negative_com_amazonaws_apHnortheastH3_cloud9_webviewHassets: PublicSuffix.Node = .label("webview-assets", next: [.termination])
  private static let _negative_com_amazonaws_apHnortheastH3_cloud9: PublicSuffix.Node = .label("cloud9", next: [_negative_com_amazonaws_apHnortheastH3_cloud9_vfs, _negative_com_amazonaws_apHnortheastH3_cloud9_webviewHassets])
  private static let _negative_com_amazonaws_apHnortheastH3: PublicSuffix.Node = .label("ap-northeast-3", next: [_negative_com_amazonaws_apHnortheastH3_cloud9])
  private static let _negative_com_amazonaws_apHsouthH1_cloud9_vfs: PublicSuffix.Node = .label("vfs", next: [.termination])
  private static let _negative_com_amazonaws_apHsouthH1_cloud9_webviewHassets: PublicSuffix.Node = .label("webview-assets", next: [.termination])
  private static let _negative_com_amazonaws_apHsouthH1_cloud9: PublicSuffix.Node = .label("cloud9", next: [_negative_com_amazonaws_apHsouthH1_cloud9_vfs, _negative_com_amazonaws_apHsouthH1_cloud9_webviewHassets])
  private static let _negative_com_amazonaws_apHsouthH1_dualstack_s3: PublicSuffix.Node = .label("s3", next: [.termination])
  private static let _negative_com_amazonaws_apHsouthH1_dualstack: PublicSuffix.Node = .label("dualstack", next: [_negative_com_amazonaws_apHsouthH1_dualstack_s3])
  private static let _negative_com_amazonaws_apHsouthH1_s3: PublicSuffix.Node = .label("s3", next: [.termination])
  private static let _negative_com_amazonaws_apHsouthH1_s3Hwebsite: PublicSuffix.Node = .label("s3-website", next: [.termination])
  private static let _negative_com_amazonaws_apHsouthH1: PublicSuffix.Node = .label("ap-south-1", next: [_negative_com_amazonaws_apHsouthH1_cloud9, _negative_com_amazonaws_apHsouthH1_dualstack, _negative_com_amazonaws_apHsouthH1_s3, _negative_com_amazonaws_apHsouthH1_s3Hwebsite])
  private static let _negative_com_amazonaws_apHsoutheastH1_cloud9_vfs: PublicSuffix.Node = .label("vfs", next: [.termination])
  private static let _negative_com_amazonaws_apHsoutheastH1_cloud9_webviewHassets: PublicSuffix.Node = .label("webview-assets", next: [.termination])
  private static let _negative_com_amazonaws_apHsoutheastH1_cloud9: PublicSuffix.Node = .label("cloud9", next: [_negative_com_amazonaws_apHsoutheastH1_cloud9_vfs, _negative_com_amazonaws_apHsoutheastH1_cloud9_webviewHassets])
  private static let _negative_com_amazonaws_apHsoutheastH1_dualstack_s3: PublicSuffix.Node = .label("s3", next: [.termination])
  private static let _negative_com_amazonaws_apHsoutheastH1_dualstack: PublicSuffix.Node = .label("dualstack", next: [_negative_com_amazonaws_apHsoutheastH1_dualstack_s3])
  private static let _negative_com_amazonaws_apHsoutheastH1: PublicSuffix.Node = .label("ap-southeast-1", next: [_negative_com_amazonaws_apHsoutheastH1_cloud9, _negative_com_amazonaws_apHsoutheastH1_dualstack])
  private static let _negative_com_amazonaws_apHsoutheastH2_cloud9_vfs: PublicSuffix.Node = .label("vfs", next: [.termination])
  private static let _negative_com_amazonaws_apHsoutheastH2_cloud9_webviewHassets: PublicSuffix.Node = .label("webview-assets", next: [.termination])
  private static let _negative_com_amazonaws_apHsoutheastH2_cloud9: PublicSuffix.Node = .label("cloud9", next: [_negative_com_amazonaws_apHsoutheastH2_cloud9_vfs, _negative_com_amazonaws_apHsoutheastH2_cloud9_webviewHassets])
  private static let _negative_com_amazonaws_apHsoutheastH2_dualstack_s3: PublicSuffix.Node = .label("s3", next: [.termination])
  private static let _negative_com_amazonaws_apHsoutheastH2_dualstack: PublicSuffix.Node = .label("dualstack", next: [_negative_com_amazonaws_apHsoutheastH2_dualstack_s3])
  private static let _negative_com_amazonaws_apHsoutheastH2: PublicSuffix.Node = .label("ap-southeast-2", next: [_negative_com_amazonaws_apHsoutheastH2_cloud9, _negative_com_amazonaws_apHsoutheastH2_dualstack])
  private static let _negative_com_amazonaws_caHcentralH1_cloud9_vfs: PublicSuffix.Node = .label("vfs", next: [.termination])
  private static let _negative_com_amazonaws_caHcentralH1_cloud9_webviewHassets: PublicSuffix.Node = .label("webview-assets", next: [.termination])
  private static let _negative_com_amazonaws_caHcentralH1_cloud9: PublicSuffix.Node = .label("cloud9", next: [_negative_com_amazonaws_caHcentralH1_cloud9_vfs, _negative_com_amazonaws_caHcentralH1_cloud9_webviewHassets])
  private static let _negative_com_amazonaws_caHcentralH1_dualstack_s3: PublicSuffix.Node = .label("s3", next: [.termination])
  private static let _negative_com_amazonaws_caHcentralH1_dualstack: PublicSuffix.Node = .label("dualstack", next: [_negative_com_amazonaws_caHcentralH1_dualstack_s3])
  private static let _negative_com_amazonaws_caHcentralH1_s3: PublicSuffix.Node = .label("s3", next: [.termination])
  private static let _negative_com_amazonaws_caHcentralH1_s3Hwebsite: PublicSuffix.Node = .label("s3-website", next: [.termination])
  private static let _negative_com_amazonaws_caHcentralH1: PublicSuffix.Node = .label("ca-central-1", next: [_negative_com_amazonaws_caHcentralH1_cloud9, _negative_com_amazonaws_caHcentralH1_dualstack, _negative_com_amazonaws_caHcentralH1_s3, _negative_com_amazonaws_caHcentralH1_s3Hwebsite])
  private static let _negative_com_amazonaws_compute: PublicSuffix.Node = .label("compute", next: [.any])
  private static let _negative_com_amazonaws_computeH1: PublicSuffix.Node = .label("compute-1", next: [.any])
  private static let _negative_com_amazonaws_elb: PublicSuffix.Node = .label("elb", next: [.any])
  private static let _negative_com_amazonaws_euHcentralH1_cloud9_vfs: PublicSuffix.Node = .label("vfs", next: [.termination])
  private static let _negative_com_amazonaws_euHcentralH1_cloud9_webviewHassets: PublicSuffix.Node = .label("webview-assets", next: [.termination])
  private static let _negative_com_amazonaws_euHcentralH1_cloud9: PublicSuffix.Node = .label("cloud9", next: [_negative_com_amazonaws_euHcentralH1_cloud9_vfs, _negative_com_amazonaws_euHcentralH1_cloud9_webviewHassets])
  private static let _negative_com_amazonaws_euHcentralH1_dualstack_s3: PublicSuffix.Node = .label("s3", next: [.termination])
  private static let _negative_com_amazonaws_euHcentralH1_dualstack: PublicSuffix.Node = .label("dualstack", next: [_negative_com_amazonaws_euHcentralH1_dualstack_s3])
  private static let _negative_com_amazonaws_euHcentralH1_s3: PublicSuffix.Node = .label("s3", next: [.termination])
  private static let _negative_com_amazonaws_euHcentralH1_s3Hwebsite: PublicSuffix.Node = .label("s3-website", next: [.termination])
  private static let _negative_com_amazonaws_euHcentralH1: PublicSuffix.Node = .label("eu-central-1", next: [_negative_com_amazonaws_euHcentralH1_cloud9, _negative_com_amazonaws_euHcentralH1_dualstack, _negative_com_amazonaws_euHcentralH1_s3, _negative_com_amazonaws_euHcentralH1_s3Hwebsite])
  private static let _negative_com_amazonaws_euHnorthH1_cloud9_vfs: PublicSuffix.Node = .label("vfs", next: [.termination])
  private static let _negative_com_amazonaws_euHnorthH1_cloud9_webviewHassets: PublicSuffix.Node = .label("webview-assets", next: [.termination])
  private static let _negative_com_amazonaws_euHnorthH1_cloud9: PublicSuffix.Node = .label("cloud9", next: [_negative_com_amazonaws_euHnorthH1_cloud9_vfs, _negative_com_amazonaws_euHnorthH1_cloud9_webviewHassets])
  private static let _negative_com_amazonaws_euHnorthH1: PublicSuffix.Node = .label("eu-north-1", next: [_negative_com_amazonaws_euHnorthH1_cloud9])
  private static let _negative_com_amazonaws_euHsouthH1_cloud9_vfs: PublicSuffix.Node = .label("vfs", next: [.termination])
  private static let _negative_com_amazonaws_euHsouthH1_cloud9_webviewHassets: PublicSuffix.Node = .label("webview-assets", next: [.termination])
  private static let _negative_com_amazonaws_euHsouthH1_cloud9: PublicSuffix.Node = .label("cloud9", next: [_negative_com_amazonaws_euHsouthH1_cloud9_vfs, _negative_com_amazonaws_euHsouthH1_cloud9_webviewHassets])
  private static let _negative_com_amazonaws_euHsouthH1: PublicSuffix.Node = .label("eu-south-1", next: [_negative_com_amazonaws_euHsouthH1_cloud9])
  private static let _negative_com_amazonaws_euHwestH1_cloud9_vfs: PublicSuffix.Node = .label("vfs", next: [.termination])
  private static let _negative_com_amazonaws_euHwestH1_cloud9_webviewHassets: PublicSuffix.Node = .label("webview-assets", next: [.termination])
  private static let _negative_com_amazonaws_euHwestH1_cloud9: PublicSuffix.Node = .label("cloud9", next: [_negative_com_amazonaws_euHwestH1_cloud9_vfs, _negative_com_amazonaws_euHwestH1_cloud9_webviewHassets])
  private static let _negative_com_amazonaws_euHwestH1_dualstack_s3: PublicSuffix.Node = .label("s3", next: [.termination])
  private static let _negative_com_amazonaws_euHwestH1_dualstack: PublicSuffix.Node = .label("dualstack", next: [_negative_com_amazonaws_euHwestH1_dualstack_s3])
  private static let _negative_com_amazonaws_euHwestH1: PublicSuffix.Node = .label("eu-west-1", next: [_negative_com_amazonaws_euHwestH1_cloud9, _negative_com_amazonaws_euHwestH1_dualstack])
  private static let _negative_com_amazonaws_euHwestH2_cloud9_vfs: PublicSuffix.Node = .label("vfs", next: [.termination])
  private static let _negative_com_amazonaws_euHwestH2_cloud9_webviewHassets: PublicSuffix.Node = .label("webview-assets", next: [.termination])
  private static let _negative_com_amazonaws_euHwestH2_cloud9: PublicSuffix.Node = .label("cloud9", next: [_negative_com_amazonaws_euHwestH2_cloud9_vfs, _negative_com_amazonaws_euHwestH2_cloud9_webviewHassets])
  private static let _negative_com_amazonaws_euHwestH2_dualstack_s3: PublicSuffix.Node = .label("s3", next: [.termination])
  private static let _negative_com_amazonaws_euHwestH2_dualstack: PublicSuffix.Node = .label("dualstack", next: [_negative_com_amazonaws_euHwestH2_dualstack_s3])
  private static let _negative_com_amazonaws_euHwestH2_s3: PublicSuffix.Node = .label("s3", next: [.termination])
  private static let _negative_com_amazonaws_euHwestH2_s3Hwebsite: PublicSuffix.Node = .label("s3-website", next: [.termination])
  private static let _negative_com_amazonaws_euHwestH2: PublicSuffix.Node = .label("eu-west-2", next: [_negative_com_amazonaws_euHwestH2_cloud9, _negative_com_amazonaws_euHwestH2_dualstack, _negative_com_amazonaws_euHwestH2_s3, _negative_com_amazonaws_euHwestH2_s3Hwebsite])
  private static let _negative_com_amazonaws_euHwestH3_cloud9_vfs: PublicSuffix.Node = .label("vfs", next: [.termination])
  private static let _negative_com_amazonaws_euHwestH3_cloud9_webviewHassets: PublicSuffix.Node = .label("webview-assets", next: [.termination])
  private static let _negative_com_amazonaws_euHwestH3_cloud9: PublicSuffix.Node = .label("cloud9", next: [_negative_com_amazonaws_euHwestH3_cloud9_vfs, _negative_com_amazonaws_euHwestH3_cloud9_webviewHassets])
  private static let _negative_com_amazonaws_euHwestH3_dualstack_s3: PublicSuffix.Node = .label("s3", next: [.termination])
  private static let _negative_com_amazonaws_euHwestH3_dualstack: PublicSuffix.Node = .label("dualstack", next: [_negative_com_amazonaws_euHwestH3_dualstack_s3])
  private static let _negative_com_amazonaws_euHwestH3_s3: PublicSuffix.Node = .label("s3", next: [.termination])
  private static let _negative_com_amazonaws_euHwestH3_s3Hwebsite: PublicSuffix.Node = .label("s3-website", next: [.termination])
  private static let _negative_com_amazonaws_euHwestH3: PublicSuffix.Node = .label("eu-west-3", next: [_negative_com_amazonaws_euHwestH3_cloud9, _negative_com_amazonaws_euHwestH3_dualstack, _negative_com_amazonaws_euHwestH3_s3, _negative_com_amazonaws_euHwestH3_s3Hwebsite])
  private static let _negative_com_amazonaws_meHsouthH1_cloud9_vfs: PublicSuffix.Node = .label("vfs", next: [.termination])
  private static let _negative_com_amazonaws_meHsouthH1_cloud9_webviewHassets: PublicSuffix.Node = .label("webview-assets", next: [.termination])
  private static let _negative_com_amazonaws_meHsouthH1_cloud9: PublicSuffix.Node = .label("cloud9", next: [_negative_com_amazonaws_meHsouthH1_cloud9_vfs, _negative_com_amazonaws_meHsouthH1_cloud9_webviewHassets])
  private static let _negative_com_amazonaws_meHsouthH1: PublicSuffix.Node = .label("me-south-1", next: [_negative_com_amazonaws_meHsouthH1_cloud9])
  private static let _negative_com_amazonaws_s3: PublicSuffix.Node = .label("s3", next: [.termination])
  private static let _negative_com_amazonaws_s3HapHnortheastH1: PublicSuffix.Node = .label("s3-ap-northeast-1", next: [.termination])
  private static let _negative_com_amazonaws_s3HapHnortheastH2: PublicSuffix.Node = .label("s3-ap-northeast-2", next: [.termination])
  private static let _negative_com_amazonaws_s3HapHsouthH1: PublicSuffix.Node = .label("s3-ap-south-1", next: [.termination])
  private static let _negative_com_amazonaws_s3HapHsoutheastH1: PublicSuffix.Node = .label("s3-ap-southeast-1", next: [.termination])
  private static let _negative_com_amazonaws_s3HapHsoutheastH2: PublicSuffix.Node = .label("s3-ap-southeast-2", next: [.termination])
  private static let _negative_com_amazonaws_s3HcaHcentralH1: PublicSuffix.Node = .label("s3-ca-central-1", next: [.termination])
  private static let _negative_com_amazonaws_s3HeuHcentralH1: PublicSuffix.Node = .label("s3-eu-central-1", next: [.termination])
  private static let _negative_com_amazonaws_s3HeuHwestH1: PublicSuffix.Node = .label("s3-eu-west-1", next: [.termination])
  private static let _negative_com_amazonaws_s3HeuHwestH2: PublicSuffix.Node = .label("s3-eu-west-2", next: [.termination])
  private static let _negative_com_amazonaws_s3HeuHwestH3: PublicSuffix.Node = .label("s3-eu-west-3", next: [.termination])
  private static let _negative_com_amazonaws_s3HexternalH1: PublicSuffix.Node = .label("s3-external-1", next: [.termination])
  private static let _negative_com_amazonaws_s3HfipsHusHgovHwestH1: PublicSuffix.Node = .label("s3-fips-us-gov-west-1", next: [.termination])
  private static let _negative_com_amazonaws_s3HsaHeastH1: PublicSuffix.Node = .label("s3-sa-east-1", next: [.termination])
  private static let _negative_com_amazonaws_s3HusHeastH2: PublicSuffix.Node = .label("s3-us-east-2", next: [.termination])
  private static let _negative_com_amazonaws_s3HusHgovHwestH1: PublicSuffix.Node = .label("s3-us-gov-west-1", next: [.termination])
  private static let _negative_com_amazonaws_s3HusHwestH1: PublicSuffix.Node = .label("s3-us-west-1", next: [.termination])
  private static let _negative_com_amazonaws_s3HusHwestH2: PublicSuffix.Node = .label("s3-us-west-2", next: [.termination])
  private static let _negative_com_amazonaws_s3HwebsiteHapHnortheastH1: PublicSuffix.Node = .label("s3-website-ap-northeast-1", next: [.termination])
  private static let _negative_com_amazonaws_s3HwebsiteHapHsoutheastH1: PublicSuffix.Node = .label("s3-website-ap-southeast-1", next: [.termination])
  private static let _negative_com_amazonaws_s3HwebsiteHapHsoutheastH2: PublicSuffix.Node = .label("s3-website-ap-southeast-2", next: [.termination])
  private static let _negative_com_amazonaws_s3HwebsiteHeuHwestH1: PublicSuffix.Node = .label("s3-website-eu-west-1", next: [.termination])
  private static let _negative_com_amazonaws_s3HwebsiteHsaHeastH1: PublicSuffix.Node = .label("s3-website-sa-east-1", next: [.termination])
  private static let _negative_com_amazonaws_s3HwebsiteHusHeastH1: PublicSuffix.Node = .label("s3-website-us-east-1", next: [.termination])
  private static let _negative_com_amazonaws_s3HwebsiteHusHwestH1: PublicSuffix.Node = .label("s3-website-us-west-1", next: [.termination])
  private static let _negative_com_amazonaws_s3HwebsiteHusHwestH2: PublicSuffix.Node = .label("s3-website-us-west-2", next: [.termination])
  private static let _negative_com_amazonaws_saHeastH1_cloud9_vfs: PublicSuffix.Node = .label("vfs", next: [.termination])
  private static let _negative_com_amazonaws_saHeastH1_cloud9_webviewHassets: PublicSuffix.Node = .label("webview-assets", next: [.termination])
  private static let _negative_com_amazonaws_saHeastH1_cloud9: PublicSuffix.Node = .label("cloud9", next: [_negative_com_amazonaws_saHeastH1_cloud9_vfs, _negative_com_amazonaws_saHeastH1_cloud9_webviewHassets])
  private static let _negative_com_amazonaws_saHeastH1_dualstack_s3: PublicSuffix.Node = .label("s3", next: [.termination])
  private static let _negative_com_amazonaws_saHeastH1_dualstack: PublicSuffix.Node = .label("dualstack", next: [_negative_com_amazonaws_saHeastH1_dualstack_s3])
  private static let _negative_com_amazonaws_saHeastH1: PublicSuffix.Node = .label("sa-east-1", next: [_negative_com_amazonaws_saHeastH1_cloud9, _negative_com_amazonaws_saHeastH1_dualstack])
  private static let _negative_com_amazonaws_usHeastH1_cloud9_vfs: PublicSuffix.Node = .label("vfs", next: [.termination])
  private static let _negative_com_amazonaws_usHeastH1_cloud9_webviewHassets: PublicSuffix.Node = .label("webview-assets", next: [.termination])
  private static let _negative_com_amazonaws_usHeastH1_cloud9: PublicSuffix.Node = .label("cloud9", next: [_negative_com_amazonaws_usHeastH1_cloud9_vfs, _negative_com_amazonaws_usHeastH1_cloud9_webviewHassets])
  private static let _negative_com_amazonaws_usHeastH1_dualstack_s3: PublicSuffix.Node = .label("s3", next: [.termination])
  private static let _negative_com_amazonaws_usHeastH1_dualstack: PublicSuffix.Node = .label("dualstack", next: [_negative_com_amazonaws_usHeastH1_dualstack_s3])
  private static let _negative_com_amazonaws_usHeastH1: PublicSuffix.Node = .label("us-east-1", next: [.termination, _negative_com_amazonaws_usHeastH1_cloud9, _negative_com_amazonaws_usHeastH1_dualstack])
  private static let _negative_com_amazonaws_usHeastH2_cloud9_vfs: PublicSuffix.Node = .label("vfs", next: [.termination])
  private static let _negative_com_amazonaws_usHeastH2_cloud9_webviewHassets: PublicSuffix.Node = .label("webview-assets", next: [.termination])
  private static let _negative_com_amazonaws_usHeastH2_cloud9: PublicSuffix.Node = .label("cloud9", next: [_negative_com_amazonaws_usHeastH2_cloud9_vfs, _negative_com_amazonaws_usHeastH2_cloud9_webviewHassets])
  private static let _negative_com_amazonaws_usHeastH2_dualstack_s3: PublicSuffix.Node = .label("s3", next: [.termination])
  private static let _negative_com_amazonaws_usHeastH2_dualstack: PublicSuffix.Node = .label("dualstack", next: [_negative_com_amazonaws_usHeastH2_dualstack_s3])
  private static let _negative_com_amazonaws_usHeastH2_s3: PublicSuffix.Node = .label("s3", next: [.termination])
  private static let _negative_com_amazonaws_usHeastH2_s3Hwebsite: PublicSuffix.Node = .label("s3-website", next: [.termination])
  private static let _negative_com_amazonaws_usHeastH2: PublicSuffix.Node = .label("us-east-2", next: [_negative_com_amazonaws_usHeastH2_cloud9, _negative_com_amazonaws_usHeastH2_dualstack, _negative_com_amazonaws_usHeastH2_s3, _negative_com_amazonaws_usHeastH2_s3Hwebsite])
  private static let _negative_com_amazonaws_usHwestH1_cloud9_vfs: PublicSuffix.Node = .label("vfs", next: [.termination])
  private static let _negative_com_amazonaws_usHwestH1_cloud9_webviewHassets: PublicSuffix.Node = .label("webview-assets", next: [.termination])
  private static let _negative_com_amazonaws_usHwestH1_cloud9: PublicSuffix.Node = .label("cloud9", next: [_negative_com_amazonaws_usHwestH1_cloud9_vfs, _negative_com_amazonaws_usHwestH1_cloud9_webviewHassets])
  private static let _negative_com_amazonaws_usHwestH1: PublicSuffix.Node = .label("us-west-1", next: [_negative_com_amazonaws_usHwestH1_cloud9])
  private static let _negative_com_amazonaws_usHwestH2_cloud9_vfs: PublicSuffix.Node = .label("vfs", next: [.termination])
  private static let _negative_com_amazonaws_usHwestH2_cloud9_webviewHassets: PublicSuffix.Node = .label("webview-assets", next: [.termination])
  private static let _negative_com_amazonaws_usHwestH2_cloud9: PublicSuffix.Node = .label("cloud9", next: [_negative_com_amazonaws_usHwestH2_cloud9_vfs, _negative_com_amazonaws_usHwestH2_cloud9_webviewHassets])
  private static let _negative_com_amazonaws_usHwestH2: PublicSuffix.Node = .label("us-west-2", next: [_negative_com_amazonaws_usHwestH2_cloud9])
  private static let _negative_com_amazonaws: PublicSuffix.Node = .label("amazonaws", next: [_negative_com_amazonaws_afHsouthH1, _negative_com_amazonaws_apHeastH1, _negative_com_amazonaws_apHnortheastH1, _negative_com_amazonaws_apHnortheastH2, _negative_com_amazonaws_apHnortheastH3, _negative_com_amazonaws_apHsouthH1, _negative_com_amazonaws_apHsoutheastH1, _negative_com_amazonaws_apHsoutheastH2, _negative_com_amazonaws_caHcentralH1, _negative_com_amazonaws_compute, _negative_com_amazonaws_computeH1, _negative_com_amazonaws_elb, _negative_com_amazonaws_euHcentralH1, _negative_com_amazonaws_euHnorthH1, _negative_com_amazonaws_euHsouthH1, _negative_com_amazonaws_euHwestH1, _negative_com_amazonaws_euHwestH2, _negative_com_amazonaws_euHwestH3, _negative_com_amazonaws_meHsouthH1, _negative_com_amazonaws_s3, _negative_com_amazonaws_s3HapHnortheastH1, _negative_com_amazonaws_s3HapHnortheastH2, _negative_com_amazonaws_s3HapHsouthH1, _negative_com_amazonaws_s3HapHsoutheastH1, _negative_com_amazonaws_s3HapHsoutheastH2, _negative_com_amazonaws_s3HcaHcentralH1, _negative_com_amazonaws_s3HeuHcentralH1, _negative_com_amazonaws_s3HeuHwestH1, _negative_com_amazonaws_s3HeuHwestH2, _negative_com_amazonaws_s3HeuHwestH3, _negative_com_amazonaws_s3HexternalH1, _negative_com_amazonaws_s3HfipsHusHgovHwestH1, _negative_com_amazonaws_s3HsaHeastH1, _negative_com_amazonaws_s3HusHeastH2, _negative_com_amazonaws_s3HusHgovHwestH1, _negative_com_amazonaws_s3HusHwestH1, _negative_com_amazonaws_s3HusHwestH2, _negative_com_amazonaws_s3HwebsiteHapHnortheastH1, _negative_com_amazonaws_s3HwebsiteHapHsoutheastH1, _negative_com_amazonaws_s3HwebsiteHapHsoutheastH2, _negative_com_amazonaws_s3HwebsiteHeuHwestH1, _negative_com_amazonaws_s3HwebsiteHsaHeastH1, _negative_com_amazonaws_s3HwebsiteHusHeastH1, _negative_com_amazonaws_s3HwebsiteHusHwestH1, _negative_com_amazonaws_s3HwebsiteHusHwestH2, _negative_com_amazonaws_saHeastH1, _negative_com_amazonaws_usHeastH1, _negative_com_amazonaws_usHeastH2, _negative_com_amazonaws_usHwestH1, _negative_com_amazonaws_usHwestH2])
  private static let _negative_com_amscompute: PublicSuffix.Node = .label("amscompute", next: [.termination])
  private static let _negative_com_appchizi: PublicSuffix.Node = .label("appchizi", next: [.termination])
  private static let _negative_com_applinzi: PublicSuffix.Node = .label("applinzi", next: [.termination])
  private static let _negative_com_appspacehosted: PublicSuffix.Node = .label("appspacehosted", next: [.termination])
  private static let _negative_com_appspaceusercontent: PublicSuffix.Node = .label("appspaceusercontent", next: [.termination])
  private static let _negative_com_appspot_r: PublicSuffix.Node = .label("r", next: [.any])
  private static let _negative_com_appspot: PublicSuffix.Node = .label("appspot", next: [.termination, _negative_com_appspot_r])
  private static let _negative_com_ar: PublicSuffix.Node = .label("ar", next: [.termination])
  private static let _negative_com_authgearHstaging: PublicSuffix.Node = .label("authgear-staging", next: [.termination])
  private static let _negative_com_authgearapps: PublicSuffix.Node = .label("authgearapps", next: [.termination])
  private static let _negative_com_awsglobalaccelerator: PublicSuffix.Node = .label("awsglobalaccelerator", next: [.termination])
  private static let _negative_com_awsmppl: PublicSuffix.Node = .label("awsmppl", next: [.termination])
  private static let _negative_com_balenaHdevices: PublicSuffix.Node = .label("balena-devices", next: [.termination])
  private static let _negative_com_barsycenter: PublicSuffix.Node = .label("barsycenter", next: [.termination])
  private static let _negative_com_barsyonline: PublicSuffix.Node = .label("barsyonline", next: [.termination])
  private static let _negative_com_betainabox: PublicSuffix.Node = .label("betainabox", next: [.termination])
  private static let _negative_com_blogdns: PublicSuffix.Node = .label("blogdns", next: [.termination])
  private static let _negative_com_blogspot: PublicSuffix.Node = .label("blogspot", next: [.termination])
  private static let _negative_com_blogsyte: PublicSuffix.Node = .label("blogsyte", next: [.termination])
  private static let _negative_com_bloxcms: PublicSuffix.Node = .label("bloxcms", next: [.termination])
  private static let _negative_com_bountyHfull_alpha: PublicSuffix.Node = .label("alpha", next: [.termination])
  private static let _negative_com_bountyHfull_beta: PublicSuffix.Node = .label("beta", next: [.termination])
  private static let _negative_com_bountyHfull: PublicSuffix.Node = .label("bounty-full", next: [.termination, _negative_com_bountyHfull_alpha, _negative_com_bountyHfull_beta])
  private static let _negative_com_boutir: PublicSuffix.Node = .label("boutir", next: [.termination])
  private static let _negative_com_bplaced: PublicSuffix.Node = .label("bplaced", next: [.termination])
  private static let _negative_com_br: PublicSuffix.Node = .label("br", next: [.termination])
  private static let _negative_com_builtwithdark: PublicSuffix.Node = .label("builtwithdark", next: [.termination])
  private static let _negative_com_cafjs: PublicSuffix.Node = .label("cafjs", next: [.termination])
  private static let _negative_com_cechire: PublicSuffix.Node = .label("cechire", next: [.termination])
  private static let _negative_com_ciscofreak: PublicSuffix.Node = .label("ciscofreak", next: [.termination])
  private static let _negative_com_clicketcloud: PublicSuffix.Node = .label("clicketcloud", next: [.termination])
  private static let _negative_com_cloudcontrolapp: PublicSuffix.Node = .label("cloudcontrolapp", next: [.termination])
  private static let _negative_com_cloudcontrolled: PublicSuffix.Node = .label("cloudcontrolled", next: [.termination])
  private static let _negative_com_cn: PublicSuffix.Node = .label("cn", next: [.termination])
  private static let _negative_com_co: PublicSuffix.Node = .label("co", next: [.termination])
  private static let _negative_com_code_builder: PublicSuffix.Node = .label("builder", next: [.any])
  private static let _negative_com_code_devHbuilder: PublicSuffix.Node = .label("dev-builder", next: [.any])
  private static let _negative_com_code_stgHbuilder: PublicSuffix.Node = .label("stg-builder", next: [.any])
  private static let _negative_com_code: PublicSuffix.Node = .label("code", next: [_negative_com_code_builder, _negative_com_code_devHbuilder, _negative_com_code_stgHbuilder])
  private static let _negative_com_codespot: PublicSuffix.Node = .label("codespot", next: [.termination])
  private static let _negative_com_customerHoci_oci: PublicSuffix.Node = .label("oci", next: [.any])
  private static let _negative_com_customerHoci_ocp: PublicSuffix.Node = .label("ocp", next: [.any])
  private static let _negative_com_customerHoci_ocs: PublicSuffix.Node = .label("ocs", next: [.any])
  private static let _negative_com_customerHoci: PublicSuffix.Node = .label("customer-oci", next: [.any, _negative_com_customerHoci_oci, _negative_com_customerHoci_ocp, _negative_com_customerHoci_ocs])
  private static let _negative_com_damnserver: PublicSuffix.Node = .label("damnserver", next: [.termination])
  private static let _negative_com_datadetect_demo: PublicSuffix.Node = .label("demo", next: [.termination])
  private static let _negative_com_datadetect_instance: PublicSuffix.Node = .label("instance", next: [.termination])
  private static let _negative_com_datadetect: PublicSuffix.Node = .label("datadetect", next: [_negative_com_datadetect_demo, _negative_com_datadetect_instance])
  private static let _negative_com_dattolocal: PublicSuffix.Node = .label("dattolocal", next: [.termination])
  private static let _negative_com_dattorelay: PublicSuffix.Node = .label("dattorelay", next: [.termination])
  private static let _negative_com_dattoweb: PublicSuffix.Node = .label("dattoweb", next: [.termination])
  private static let _negative_com_ddns5: PublicSuffix.Node = .label("ddns5", next: [.termination])
  private static let _negative_com_ddnsfree: PublicSuffix.Node = .label("ddnsfree", next: [.termination])
  private static let _negative_com_ddnsgeek: PublicSuffix.Node = .label("ddnsgeek", next: [.termination])
  private static let _negative_com_ddnsking: PublicSuffix.Node = .label("ddnsking", next: [.termination])
  private static let _negative_com_ddnslive: PublicSuffix.Node = .label("ddnslive", next: [.termination])
  private static let _negative_com_de: PublicSuffix.Node = .label("de", next: [.termination])
  private static let _negative_com_devHmyqnapcloud: PublicSuffix.Node = .label("dev-myqnapcloud", next: [.termination])
  private static let _negative_com_devcdnaccesso: PublicSuffix.Node = .label("devcdnaccesso", next: [.any])
  private static let _negative_com_digitaloceanspaces: PublicSuffix.Node = .label("digitaloceanspaces", next: [.any])
  private static let _negative_com_discordsays: PublicSuffix.Node = .label("discordsays", next: [.termination])
  private static let _negative_com_discordsez: PublicSuffix.Node = .label("discordsez", next: [.termination])
  private static let _negative_com_ditchyourip: PublicSuffix.Node = .label("ditchyourip", next: [.termination])
  private static let _negative_com_dnsalias: PublicSuffix.Node = .label("dnsalias", next: [.termination])
  private static let _negative_com_dnsdojo: PublicSuffix.Node = .label("dnsdojo", next: [.termination])
  private static let _negative_com_dnsiskinky: PublicSuffix.Node = .label("dnsiskinky", next: [.termination])
  private static let _negative_com_doesntexist: PublicSuffix.Node = .label("doesntexist", next: [.termination])
  private static let _negative_com_dontexist: PublicSuffix.Node = .label("dontexist", next: [.termination])
  private static let _negative_com_doomdns: PublicSuffix.Node = .label("doomdns", next: [.termination])
  private static let _negative_com_dopaas: PublicSuffix.Node = .label("dopaas", next: [.termination])
  private static let _negative_com_drayddns: PublicSuffix.Node = .label("drayddns", next: [.termination])
  private static let _negative_com_dreamhosters: PublicSuffix.Node = .label("dreamhosters", next: [.termination])
  private static let _negative_com_dsmynas: PublicSuffix.Node = .label("dsmynas", next: [.termination])
  private static let _negative_com_dynHoHsaur: PublicSuffix.Node = .label("dyn-o-saur", next: [.termination])
  private static let _negative_com_dynalias: PublicSuffix.Node = .label("dynalias", next: [.termination])
  private static let _negative_com_dyndnsHatHhome: PublicSuffix.Node = .label("dyndns-at-home", next: [.termination])
  private static let _negative_com_dyndnsHatHwork: PublicSuffix.Node = .label("dyndns-at-work", next: [.termination])
  private static let _negative_com_dyndnsHblog: PublicSuffix.Node = .label("dyndns-blog", next: [.termination])
  private static let _negative_com_dyndnsHfree: PublicSuffix.Node = .label("dyndns-free", next: [.termination])
  private static let _negative_com_dyndnsHhome: PublicSuffix.Node = .label("dyndns-home", next: [.termination])
  private static let _negative_com_dyndnsHip: PublicSuffix.Node = .label("dyndns-ip", next: [.termination])
  private static let _negative_com_dyndnsHmail: PublicSuffix.Node = .label("dyndns-mail", next: [.termination])
  private static let _negative_com_dyndnsHoffice: PublicSuffix.Node = .label("dyndns-office", next: [.termination])
  private static let _negative_com_dyndnsHpics: PublicSuffix.Node = .label("dyndns-pics", next: [.termination])
  private static let _negative_com_dyndnsHremote: PublicSuffix.Node = .label("dyndns-remote", next: [.termination])
  private static let _negative_com_dyndnsHserver: PublicSuffix.Node = .label("dyndns-server", next: [.termination])
  private static let _negative_com_dyndnsHweb: PublicSuffix.Node = .label("dyndns-web", next: [.termination])
  private static let _negative_com_dyndnsHwiki: PublicSuffix.Node = .label("dyndns-wiki", next: [.termination])
  private static let _negative_com_dyndnsHwork: PublicSuffix.Node = .label("dyndns-work", next: [.termination])
  private static let _negative_com_dynns: PublicSuffix.Node = .label("dynns", next: [.termination])
  private static let _negative_com_elasticbeanstalk_apHnortheastH1: PublicSuffix.Node = .label("ap-northeast-1", next: [.termination])
  private static let _negative_com_elasticbeanstalk_apHnortheastH2: PublicSuffix.Node = .label("ap-northeast-2", next: [.termination])
  private static let _negative_com_elasticbeanstalk_apHnortheastH3: PublicSuffix.Node = .label("ap-northeast-3", next: [.termination])
  private static let _negative_com_elasticbeanstalk_apHsouthH1: PublicSuffix.Node = .label("ap-south-1", next: [.termination])
  private static let _negative_com_elasticbeanstalk_apHsoutheastH1: PublicSuffix.Node = .label("ap-southeast-1", next: [.termination])
  private static let _negative_com_elasticbeanstalk_apHsoutheastH2: PublicSuffix.Node = .label("ap-southeast-2", next: [.termination])
  private static let _negative_com_elasticbeanstalk_caHcentralH1: PublicSuffix.Node = .label("ca-central-1", next: [.termination])
  private static let _negative_com_elasticbeanstalk_euHcentralH1: PublicSuffix.Node = .label("eu-central-1", next: [.termination])
  private static let _negative_com_elasticbeanstalk_euHwestH1: PublicSuffix.Node = .label("eu-west-1", next: [.termination])
  private static let _negative_com_elasticbeanstalk_euHwestH2: PublicSuffix.Node = .label("eu-west-2", next: [.termination])
  private static let _negative_com_elasticbeanstalk_euHwestH3: PublicSuffix.Node = .label("eu-west-3", next: [.termination])
  private static let _negative_com_elasticbeanstalk_saHeastH1: PublicSuffix.Node = .label("sa-east-1", next: [.termination])
  private static let _negative_com_elasticbeanstalk_usHeastH1: PublicSuffix.Node = .label("us-east-1", next: [.termination])
  private static let _negative_com_elasticbeanstalk_usHeastH2: PublicSuffix.Node = .label("us-east-2", next: [.termination])
  private static let _negative_com_elasticbeanstalk_usHgovHwestH1: PublicSuffix.Node = .label("us-gov-west-1", next: [.termination])
  private static let _negative_com_elasticbeanstalk_usHwestH1: PublicSuffix.Node = .label("us-west-1", next: [.termination])
  private static let _negative_com_elasticbeanstalk_usHwestH2: PublicSuffix.Node = .label("us-west-2", next: [.termination])
  private static let _negative_com_elasticbeanstalk: PublicSuffix.Node = .label("elasticbeanstalk", next: [.termination, _negative_com_elasticbeanstalk_apHnortheastH1, _negative_com_elasticbeanstalk_apHnortheastH2, _negative_com_elasticbeanstalk_apHnortheastH3, _negative_com_elasticbeanstalk_apHsouthH1, _negative_com_elasticbeanstalk_apHsoutheastH1, _negative_com_elasticbeanstalk_apHsoutheastH2, _negative_com_elasticbeanstalk_caHcentralH1, _negative_com_elasticbeanstalk_euHcentralH1, _negative_com_elasticbeanstalk_euHwestH1, _negative_com_elasticbeanstalk_euHwestH2, _negative_com_elasticbeanstalk_euHwestH3, _negative_com_elasticbeanstalk_saHeastH1, _negative_com_elasticbeanstalk_usHeastH1, _negative_com_elasticbeanstalk_usHeastH2, _negative_com_elasticbeanstalk_usHgovHwestH1, _negative_com_elasticbeanstalk_usHwestH1, _negative_com_elasticbeanstalk_usHwestH2])
  private static let _negative_com_encoreapi: PublicSuffix.Node = .label("encoreapi", next: [.termination])
  private static let _negative_com_estHaHlaHmaison: PublicSuffix.Node = .label("est-a-la-maison", next: [.termination])
  private static let _negative_com_estHaHlaHmasion: PublicSuffix.Node = .label("est-a-la-masion", next: [.termination])
  private static let _negative_com_estHleHpatron: PublicSuffix.Node = .label("est-le-patron", next: [.termination])
  private static let _negative_com_estHmonHblogueur: PublicSuffix.Node = .label("est-mon-blogueur", next: [.termination])
  private static let _negative_com_eu: PublicSuffix.Node = .label("eu", next: [.termination])
  private static let _negative_com_evennode_euH1: PublicSuffix.Node = .label("eu-1", next: [.termination])
  private static let _negative_com_evennode_euH2: PublicSuffix.Node = .label("eu-2", next: [.termination])
  private static let _negative_com_evennode_euH3: PublicSuffix.Node = .label("eu-3", next: [.termination])
  private static let _negative_com_evennode_euH4: PublicSuffix.Node = .label("eu-4", next: [.termination])
  private static let _negative_com_evennode_usH1: PublicSuffix.Node = .label("us-1", next: [.termination])
  private static let _negative_com_evennode_usH2: PublicSuffix.Node = .label("us-2", next: [.termination])
  private static let _negative_com_evennode_usH3: PublicSuffix.Node = .label("us-3", next: [.termination])
  private static let _negative_com_evennode_usH4: PublicSuffix.Node = .label("us-4", next: [.termination])
  private static let _negative_com_evennode: PublicSuffix.Node = .label("evennode", next: [_negative_com_evennode_euH1, _negative_com_evennode_euH2, _negative_com_evennode_euH3, _negative_com_evennode_euH4, _negative_com_evennode_usH1, _negative_com_evennode_usH2, _negative_com_evennode_usH3, _negative_com_evennode_usH4])
  private static let _negative_com_familyds: PublicSuffix.Node = .label("familyds", next: [.termination])
  private static let _negative_com_fastlyHterrarium: PublicSuffix.Node = .label("fastly-terrarium", next: [.termination])
  private static let _negative_com_fastvpsHserver: PublicSuffix.Node = .label("fastvps-server", next: [.termination])
  private static let _negative_com_fbsbx_apps: PublicSuffix.Node = .label("apps", next: [.termination])
  private static let _negative_com_fbsbx: PublicSuffix.Node = .label("fbsbx", next: [_negative_com_fbsbx_apps])
  private static let _negative_com_firebaseapp: PublicSuffix.Node = .label("firebaseapp", next: [.termination])
  private static let _negative_com_firewallHgateway: PublicSuffix.Node = .label("firewall-gateway", next: [.termination])
  private static let _negative_com_fldrv: PublicSuffix.Node = .label("fldrv", next: [.termination])
  private static let _negative_com_forgeblocks: PublicSuffix.Node = .label("forgeblocks", next: [.termination])
  private static let _negative_com_framercanvas: PublicSuffix.Node = .label("framercanvas", next: [.termination])
  private static let _negative_com_freeboxHos: PublicSuffix.Node = .label("freebox-os", next: [.termination])
  private static let _negative_com_freeboxos: PublicSuffix.Node = .label("freeboxos", next: [.termination])
  private static let _negative_com_freemyip: PublicSuffix.Node = .label("freemyip", next: [.termination])
  private static let _negative_com_fromHak: PublicSuffix.Node = .label("from-ak", next: [.termination])
  private static let _negative_com_fromHal: PublicSuffix.Node = .label("from-al", next: [.termination])
  private static let _negative_com_fromHar: PublicSuffix.Node = .label("from-ar", next: [.termination])
  private static let _negative_com_fromHca: PublicSuffix.Node = .label("from-ca", next: [.termination])
  private static let _negative_com_fromHct: PublicSuffix.Node = .label("from-ct", next: [.termination])
  private static let _negative_com_fromHdc: PublicSuffix.Node = .label("from-dc", next: [.termination])
  private static let _negative_com_fromHde: PublicSuffix.Node = .label("from-de", next: [.termination])
  private static let _negative_com_fromHfl: PublicSuffix.Node = .label("from-fl", next: [.termination])
  private static let _negative_com_fromHga: PublicSuffix.Node = .label("from-ga", next: [.termination])
  private static let _negative_com_fromHhi: PublicSuffix.Node = .label("from-hi", next: [.termination])
  private static let _negative_com_fromHia: PublicSuffix.Node = .label("from-ia", next: [.termination])
  private static let _negative_com_fromHid: PublicSuffix.Node = .label("from-id", next: [.termination])
  private static let _negative_com_fromHil: PublicSuffix.Node = .label("from-il", next: [.termination])
  private static let _negative_com_fromHin: PublicSuffix.Node = .label("from-in", next: [.termination])
  private static let _negative_com_fromHks: PublicSuffix.Node = .label("from-ks", next: [.termination])
  private static let _negative_com_fromHky: PublicSuffix.Node = .label("from-ky", next: [.termination])
  private static let _negative_com_fromHma: PublicSuffix.Node = .label("from-ma", next: [.termination])
  private static let _negative_com_fromHmd: PublicSuffix.Node = .label("from-md", next: [.termination])
  private static let _negative_com_fromHmi: PublicSuffix.Node = .label("from-mi", next: [.termination])
  private static let _negative_com_fromHmn: PublicSuffix.Node = .label("from-mn", next: [.termination])
  private static let _negative_com_fromHmo: PublicSuffix.Node = .label("from-mo", next: [.termination])
  private static let _negative_com_fromHms: PublicSuffix.Node = .label("from-ms", next: [.termination])
  private static let _negative_com_fromHmt: PublicSuffix.Node = .label("from-mt", next: [.termination])
  private static let _negative_com_fromHnc: PublicSuffix.Node = .label("from-nc", next: [.termination])
  private static let _negative_com_fromHnd: PublicSuffix.Node = .label("from-nd", next: [.termination])
  private static let _negative_com_fromHne: PublicSuffix.Node = .label("from-ne", next: [.termination])
  private static let _negative_com_fromHnh: PublicSuffix.Node = .label("from-nh", next: [.termination])
  private static let _negative_com_fromHnj: PublicSuffix.Node = .label("from-nj", next: [.termination])
  private static let _negative_com_fromHnm: PublicSuffix.Node = .label("from-nm", next: [.termination])
  private static let _negative_com_fromHnv: PublicSuffix.Node = .label("from-nv", next: [.termination])
  private static let _negative_com_fromHoh: PublicSuffix.Node = .label("from-oh", next: [.termination])
  private static let _negative_com_fromHok: PublicSuffix.Node = .label("from-ok", next: [.termination])
  private static let _negative_com_fromHor: PublicSuffix.Node = .label("from-or", next: [.termination])
  private static let _negative_com_fromHpa: PublicSuffix.Node = .label("from-pa", next: [.termination])
  private static let _negative_com_fromHpr: PublicSuffix.Node = .label("from-pr", next: [.termination])
  private static let _negative_com_fromHri: PublicSuffix.Node = .label("from-ri", next: [.termination])
  private static let _negative_com_fromHsc: PublicSuffix.Node = .label("from-sc", next: [.termination])
  private static let _negative_com_fromHsd: PublicSuffix.Node = .label("from-sd", next: [.termination])
  private static let _negative_com_fromHtn: PublicSuffix.Node = .label("from-tn", next: [.termination])
  private static let _negative_com_fromHtx: PublicSuffix.Node = .label("from-tx", next: [.termination])
  private static let _negative_com_fromHut: PublicSuffix.Node = .label("from-ut", next: [.termination])
  private static let _negative_com_fromHva: PublicSuffix.Node = .label("from-va", next: [.termination])
  private static let _negative_com_fromHvt: PublicSuffix.Node = .label("from-vt", next: [.termination])
  private static let _negative_com_fromHwa: PublicSuffix.Node = .label("from-wa", next: [.termination])
  private static let _negative_com_fromHwi: PublicSuffix.Node = .label("from-wi", next: [.termination])
  private static let _negative_com_fromHwv: PublicSuffix.Node = .label("from-wv", next: [.termination])
  private static let _negative_com_fromHwy: PublicSuffix.Node = .label("from-wy", next: [.termination])
  private static let _negative_com_geekgalaxy: PublicSuffix.Node = .label("geekgalaxy", next: [.termination])
  private static let _negative_com_gentapps: PublicSuffix.Node = .label("gentapps", next: [.termination])
  private static let _negative_com_gentlentapis: PublicSuffix.Node = .label("gentlentapis", next: [.termination])
  private static let _negative_com_getmyip: PublicSuffix.Node = .label("getmyip", next: [.termination])
  private static let _negative_com_giize: PublicSuffix.Node = .label("giize", next: [.termination])
  private static let _negative_com_githubusercontent: PublicSuffix.Node = .label("githubusercontent", next: [.termination])
  private static let _negative_com_gleeze: PublicSuffix.Node = .label("gleeze", next: [.termination])
  private static let _negative_com_googleapis: PublicSuffix.Node = .label("googleapis", next: [.termination])
  private static let _negative_com_googlecode: PublicSuffix.Node = .label("googlecode", next: [.termination])
  private static let _negative_com_gotdns: PublicSuffix.Node = .label("gotdns", next: [.termination])
  private static let _negative_com_gotpantheon: PublicSuffix.Node = .label("gotpantheon", next: [.termination])
  private static let _negative_com_gr: PublicSuffix.Node = .label("gr", next: [.termination])
  private static let _negative_com_healthHcarereform: PublicSuffix.Node = .label("health-carereform", next: [.termination])
  private static let _negative_com_herokuapp: PublicSuffix.Node = .label("herokuapp", next: [.termination])
  private static let _negative_com_herokussl: PublicSuffix.Node = .label("herokussl", next: [.termination])
  private static let _negative_com_hidora: PublicSuffix.Node = .label("hidora", next: [.termination])
  private static let _negative_com_hk: PublicSuffix.Node = .label("hk", next: [.termination])
  private static let _negative_com_hobbyHsite: PublicSuffix.Node = .label("hobby-site", next: [.termination])
  private static let _negative_com_homelinux: PublicSuffix.Node = .label("homelinux", next: [.termination])
  private static let _negative_com_homesecuritymac: PublicSuffix.Node = .label("homesecuritymac", next: [.termination])
  private static let _negative_com_homesecuritypc: PublicSuffix.Node = .label("homesecuritypc", next: [.termination])
  private static let _negative_com_homeunix: PublicSuffix.Node = .label("homeunix", next: [.termination])
  private static let _negative_com_hostedHbyHprevider_paas: PublicSuffix.Node = .label("paas", next: [.termination])
  private static let _negative_com_hostedHbyHprevider: PublicSuffix.Node = .label("hosted-by-previder", next: [_negative_com_hostedHbyHprevider_paas])
  private static let _negative_com_hostedpi: PublicSuffix.Node = .label("hostedpi", next: [.termination])
  private static let _negative_com_hosteur_ragHcloud: PublicSuffix.Node = .label("rag-cloud", next: [.termination])
  private static let _negative_com_hosteur_ragHcloudHch: PublicSuffix.Node = .label("rag-cloud-ch", next: [.termination])
  private static let _negative_com_hosteur: PublicSuffix.Node = .label("hosteur", next: [_negative_com_hosteur_ragHcloud, _negative_com_hosteur_ragHcloudHch])
  private static let _negative_com_hotelwithflight: PublicSuffix.Node = .label("hotelwithflight", next: [.termination])
  private static let _negative_com_hu: PublicSuffix.Node = .label("hu", next: [.termination])
  private static let _negative_com_iamallama: PublicSuffix.Node = .label("iamallama", next: [.termination])
  private static let _negative_com_ikHserver_jcloud: PublicSuffix.Node = .label("jcloud", next: [.termination])
  private static let _negative_com_ikHserver_jcloudHverHjpc: PublicSuffix.Node = .label("jcloud-ver-jpc", next: [.termination])
  private static let _negative_com_ikHserver: PublicSuffix.Node = .label("ik-server", next: [_negative_com_ikHserver_jcloud, _negative_com_ikHserver_jcloudHverHjpc])
  private static let _negative_com_impertrix: PublicSuffix.Node = .label("impertrix", next: [.termination])
  private static let _negative_com_impertrixcdn: PublicSuffix.Node = .label("impertrixcdn", next: [.termination])
  private static let _negative_com_isHaHanarchist: PublicSuffix.Node = .label("is-a-anarchist", next: [.termination])
  private static let _negative_com_isHaHblogger: PublicSuffix.Node = .label("is-a-blogger", next: [.termination])
  private static let _negative_com_isHaHbookkeeper: PublicSuffix.Node = .label("is-a-bookkeeper", next: [.termination])
  private static let _negative_com_isHaHbullsHfan: PublicSuffix.Node = .label("is-a-bulls-fan", next: [.termination])
  private static let _negative_com_isHaHcaterer: PublicSuffix.Node = .label("is-a-caterer", next: [.termination])
  private static let _negative_com_isHaHchef: PublicSuffix.Node = .label("is-a-chef", next: [.termination])
  private static let _negative_com_isHaHconservative: PublicSuffix.Node = .label("is-a-conservative", next: [.termination])
  private static let _negative_com_isHaHcpa: PublicSuffix.Node = .label("is-a-cpa", next: [.termination])
  private static let _negative_com_isHaHcubicleHslave: PublicSuffix.Node = .label("is-a-cubicle-slave", next: [.termination])
  private static let _negative_com_isHaHdemocrat: PublicSuffix.Node = .label("is-a-democrat", next: [.termination])
  private static let _negative_com_isHaHdesigner: PublicSuffix.Node = .label("is-a-designer", next: [.termination])
  private static let _negative_com_isHaHdoctor: PublicSuffix.Node = .label("is-a-doctor", next: [.termination])
  private static let _negative_com_isHaHfinancialadvisor: PublicSuffix.Node = .label("is-a-financialadvisor", next: [.termination])
  private static let _negative_com_isHaHgeek: PublicSuffix.Node = .label("is-a-geek", next: [.termination])
  private static let _negative_com_isHaHgreen: PublicSuffix.Node = .label("is-a-green", next: [.termination])
  private static let _negative_com_isHaHguru: PublicSuffix.Node = .label("is-a-guru", next: [.termination])
  private static let _negative_com_isHaHhardHworker: PublicSuffix.Node = .label("is-a-hard-worker", next: [.termination])
  private static let _negative_com_isHaHhunter: PublicSuffix.Node = .label("is-a-hunter", next: [.termination])
  private static let _negative_com_isHaHlandscaper: PublicSuffix.Node = .label("is-a-landscaper", next: [.termination])
  private static let _negative_com_isHaHlawyer: PublicSuffix.Node = .label("is-a-lawyer", next: [.termination])
  private static let _negative_com_isHaHliberal: PublicSuffix.Node = .label("is-a-liberal", next: [.termination])
  private static let _negative_com_isHaHlibertarian: PublicSuffix.Node = .label("is-a-libertarian", next: [.termination])
  private static let _negative_com_isHaHllama: PublicSuffix.Node = .label("is-a-llama", next: [.termination])
  private static let _negative_com_isHaHmusician: PublicSuffix.Node = .label("is-a-musician", next: [.termination])
  private static let _negative_com_isHaHnascarfan: PublicSuffix.Node = .label("is-a-nascarfan", next: [.termination])
  private static let _negative_com_isHaHnurse: PublicSuffix.Node = .label("is-a-nurse", next: [.termination])
  private static let _negative_com_isHaHpainter: PublicSuffix.Node = .label("is-a-painter", next: [.termination])
  private static let _negative_com_isHaHpersonaltrainer: PublicSuffix.Node = .label("is-a-personaltrainer", next: [.termination])
  private static let _negative_com_isHaHphotographer: PublicSuffix.Node = .label("is-a-photographer", next: [.termination])
  private static let _negative_com_isHaHplayer: PublicSuffix.Node = .label("is-a-player", next: [.termination])
  private static let _negative_com_isHaHrepublican: PublicSuffix.Node = .label("is-a-republican", next: [.termination])
  private static let _negative_com_isHaHrockstar: PublicSuffix.Node = .label("is-a-rockstar", next: [.termination])
  private static let _negative_com_isHaHsocialist: PublicSuffix.Node = .label("is-a-socialist", next: [.termination])
  private static let _negative_com_isHaHstudent: PublicSuffix.Node = .label("is-a-student", next: [.termination])
  private static let _negative_com_isHaHteacher: PublicSuffix.Node = .label("is-a-teacher", next: [.termination])
  private static let _negative_com_isHaHtechie: PublicSuffix.Node = .label("is-a-techie", next: [.termination])
  private static let _negative_com_isHaHtherapist: PublicSuffix.Node = .label("is-a-therapist", next: [.termination])
  private static let _negative_com_isHanHaccountant: PublicSuffix.Node = .label("is-an-accountant", next: [.termination])
  private static let _negative_com_isHanHactor: PublicSuffix.Node = .label("is-an-actor", next: [.termination])
  private static let _negative_com_isHanHactress: PublicSuffix.Node = .label("is-an-actress", next: [.termination])
  private static let _negative_com_isHanHanarchist: PublicSuffix.Node = .label("is-an-anarchist", next: [.termination])
  private static let _negative_com_isHanHartist: PublicSuffix.Node = .label("is-an-artist", next: [.termination])
  private static let _negative_com_isHanHengineer: PublicSuffix.Node = .label("is-an-engineer", next: [.termination])
  private static let _negative_com_isHanHentertainer: PublicSuffix.Node = .label("is-an-entertainer", next: [.termination])
  private static let _negative_com_isHcertified: PublicSuffix.Node = .label("is-certified", next: [.termination])
  private static let _negative_com_isHgone: PublicSuffix.Node = .label("is-gone", next: [.termination])
  private static let _negative_com_isHintoHanime: PublicSuffix.Node = .label("is-into-anime", next: [.termination])
  private static let _negative_com_isHintoHcars: PublicSuffix.Node = .label("is-into-cars", next: [.termination])
  private static let _negative_com_isHintoHcartoons: PublicSuffix.Node = .label("is-into-cartoons", next: [.termination])
  private static let _negative_com_isHintoHgames: PublicSuffix.Node = .label("is-into-games", next: [.termination])
  private static let _negative_com_isHleet: PublicSuffix.Node = .label("is-leet", next: [.termination])
  private static let _negative_com_isHnotHcertified: PublicSuffix.Node = .label("is-not-certified", next: [.termination])
  private static let _negative_com_isHslick: PublicSuffix.Node = .label("is-slick", next: [.termination])
  private static let _negative_com_isHuberleet: PublicSuffix.Node = .label("is-uberleet", next: [.termination])
  private static let _negative_com_isHwithHtheband: PublicSuffix.Node = .label("is-with-theband", next: [.termination])
  private static let _negative_com_isaHgeek: PublicSuffix.Node = .label("isa-geek", next: [.termination])
  private static let _negative_com_isaHhockeynut: PublicSuffix.Node = .label("isa-hockeynut", next: [.termination])
  private static let _negative_com_issmarterthanyou: PublicSuffix.Node = .label("issmarterthanyou", next: [.termination])
  private static let _negative_com_jdevcloud: PublicSuffix.Node = .label("jdevcloud", next: [.termination])
  private static let _negative_com_jelastic_demo: PublicSuffix.Node = .label("demo", next: [.termination])
  private static let _negative_com_jelastic: PublicSuffix.Node = .label("jelastic", next: [_negative_com_jelastic_demo])
  private static let _negative_com_joyent_cns: PublicSuffix.Node = .label("cns", next: [.any])
  private static let _negative_com_joyent: PublicSuffix.Node = .label("joyent", next: [_negative_com_joyent_cns])
  private static let _negative_com_jpn: PublicSuffix.Node = .label("jpn", next: [.termination])
  private static let _negative_com_kasserver: PublicSuffix.Node = .label("kasserver", next: [.termination])
  private static let _negative_com_kilatiron: PublicSuffix.Node = .label("kilatiron", next: [.termination])
  private static let _negative_com_kozow: PublicSuffix.Node = .label("kozow", next: [.termination])
  private static let _negative_com_kr: PublicSuffix.Node = .label("kr", next: [.termination])
  private static let _negative_com_ktistory: PublicSuffix.Node = .label("ktistory", next: [.termination])
  private static let _negative_com_likesHpie: PublicSuffix.Node = .label("likes-pie", next: [.termination])
  private static let _negative_com_likescandy: PublicSuffix.Node = .label("likescandy", next: [.termination])
  private static let _negative_com_linode_members: PublicSuffix.Node = .label("members", next: [.termination])
  private static let _negative_com_linode_nodebalancer: PublicSuffix.Node = .label("nodebalancer", next: [.any])
  private static let _negative_com_linode: PublicSuffix.Node = .label("linode", next: [_negative_com_linode_members, _negative_com_linode_nodebalancer])
  private static let _negative_com_linodeobjects: PublicSuffix.Node = .label("linodeobjects", next: [.any])
  private static let _negative_com_linodeusercontent_ip: PublicSuffix.Node = .label("ip", next: [.termination])
  private static let _negative_com_linodeusercontent: PublicSuffix.Node = .label("linodeusercontent", next: [_negative_com_linodeusercontent_ip])
  private static let _negative_com_lmpm_app: PublicSuffix.Node = .label("app", next: [.termination])
  private static let _negative_com_lmpm: PublicSuffix.Node = .label("lmpm", next: [_negative_com_lmpm_app])
  private static let _negative_com_logoip: PublicSuffix.Node = .label("logoip", next: [.termination])
  private static let _negative_com_loseyourip: PublicSuffix.Node = .label("loseyourip", next: [.termination])
  private static let _negative_com_lpusercontent: PublicSuffix.Node = .label("lpusercontent", next: [.termination])
  private static let _negative_com_massivegrid_paas: PublicSuffix.Node = .label("paas", next: [.termination])
  private static let _negative_com_massivegrid: PublicSuffix.Node = .label("massivegrid", next: [_negative_com_massivegrid_paas])
  private static let _negative_com_mazeplay: PublicSuffix.Node = .label("mazeplay", next: [.termination])
  private static let _negative_com_messwithdns: PublicSuffix.Node = .label("messwithdns", next: [.termination])
  private static let _negative_com_meteorapp_eu: PublicSuffix.Node = .label("eu", next: [.termination])
  private static let _negative_com_meteorapp: PublicSuffix.Node = .label("meteorapp", next: [.termination, _negative_com_meteorapp_eu])
  private static let _negative_com_mex: PublicSuffix.Node = .label("mex", next: [.termination])
  private static let _negative_com_miniserver: PublicSuffix.Node = .label("miniserver", next: [.termination])
  private static let _negative_com_myactivedirectory: PublicSuffix.Node = .label("myactivedirectory", next: [.termination])
  private static let _negative_com_myasustor: PublicSuffix.Node = .label("myasustor", next: [.termination])
  private static let _negative_com_mydatto: PublicSuffix.Node = .label("mydatto", next: [.termination])
  private static let _negative_com_mydobiss: PublicSuffix.Node = .label("mydobiss", next: [.termination])
  private static let _negative_com_mydrobo: PublicSuffix.Node = .label("mydrobo", next: [.termination])
  private static let _negative_com_myiphost: PublicSuffix.Node = .label("myiphost", next: [.termination])
  private static let _negative_com_myqnapcloud: PublicSuffix.Node = .label("myqnapcloud", next: [.termination])
  private static let _negative_com_myravendb: PublicSuffix.Node = .label("myravendb", next: [.termination])
  private static let _negative_com_mysecuritycamera: PublicSuffix.Node = .label("mysecuritycamera", next: [.termination])
  private static let _negative_com_myshopblocks: PublicSuffix.Node = .label("myshopblocks", next: [.termination])
  private static let _negative_com_myshopify: PublicSuffix.Node = .label("myshopify", next: [.termination])
  private static let _negative_com_myspreadshop: PublicSuffix.Node = .label("myspreadshop", next: [.termination])
  private static let _negative_com_mythicHbeasts_caracal: PublicSuffix.Node = .label("caracal", next: [.termination])
  private static let _negative_com_mythicHbeasts_customer: PublicSuffix.Node = .label("customer", next: [.termination])
  private static let _negative_com_mythicHbeasts_fentiger: PublicSuffix.Node = .label("fentiger", next: [.termination])
  private static let _negative_com_mythicHbeasts_lynx: PublicSuffix.Node = .label("lynx", next: [.termination])
  private static let _negative_com_mythicHbeasts_ocelot: PublicSuffix.Node = .label("ocelot", next: [.termination])
  private static let _negative_com_mythicHbeasts_oncilla: PublicSuffix.Node = .label("oncilla", next: [.termination])
  private static let _negative_com_mythicHbeasts_onza: PublicSuffix.Node = .label("onza", next: [.termination])
  private static let _negative_com_mythicHbeasts_sphinx: PublicSuffix.Node = .label("sphinx", next: [.termination])
  private static let _negative_com_mythicHbeasts_vs: PublicSuffix.Node = .label("vs", next: [.termination])
  private static let _negative_com_mythicHbeasts_x: PublicSuffix.Node = .label("x", next: [.termination])
  private static let _negative_com_mythicHbeasts_yali: PublicSuffix.Node = .label("yali", next: [.termination])
  private static let _negative_com_mythicHbeasts: PublicSuffix.Node = .label("mythic-beasts", next: [_negative_com_mythicHbeasts_caracal, _negative_com_mythicHbeasts_customer, _negative_com_mythicHbeasts_fentiger, _negative_com_mythicHbeasts_lynx, _negative_com_mythicHbeasts_ocelot, _negative_com_mythicHbeasts_oncilla, _negative_com_mythicHbeasts_onza, _negative_com_mythicHbeasts_sphinx, _negative_com_mythicHbeasts_vs, _negative_com_mythicHbeasts_x, _negative_com_mythicHbeasts_yali])
  private static let _negative_com_mytuleap: PublicSuffix.Node = .label("mytuleap", next: [.termination])
  private static let _negative_com_myvnc: PublicSuffix.Node = .label("myvnc", next: [.termination])
  private static let _negative_com_neatHurl: PublicSuffix.Node = .label("neat-url", next: [.termination])
  private static let _negative_com_netHfreaks: PublicSuffix.Node = .label("net-freaks", next: [.termination])
  private static let _negative_com_nfshost: PublicSuffix.Node = .label("nfshost", next: [.termination])
  private static let _negative_com_no: PublicSuffix.Node = .label("no", next: [.termination])
  private static let _negative_com_nospamproxy_cloud: PublicSuffix.Node = .label("cloud", next: [.termination])
  private static let _negative_com_nospamproxy: PublicSuffix.Node = .label("nospamproxy", next: [_negative_com_nospamproxy_cloud])
  private static let _negative_com_observableusercontent_static: PublicSuffix.Node = .label("static", next: [.termination])
  private static let _negative_com_observableusercontent: PublicSuffix.Node = .label("observableusercontent", next: [_negative_com_observableusercontent_static])
  private static let _negative_com_onHaptible: PublicSuffix.Node = .label("on-aptible", next: [.termination])
  private static let _negative_com_onfabrica: PublicSuffix.Node = .label("onfabrica", next: [.termination])
  private static let _negative_com_onrender: PublicSuffix.Node = .label("onrender", next: [.termination])
  private static let _negative_com_onthewifi: PublicSuffix.Node = .label("onthewifi", next: [.termination])
  private static let _negative_com_ooguy: PublicSuffix.Node = .label("ooguy", next: [.termination])
  private static let _negative_com_operaunite: PublicSuffix.Node = .label("operaunite", next: [.termination])
  private static let _negative_com_orsites: PublicSuffix.Node = .label("orsites", next: [.termination])
  private static let _negative_com_outsystemscloud: PublicSuffix.Node = .label("outsystemscloud", next: [.termination])
  private static let _negative_com_ownprovider: PublicSuffix.Node = .label("ownprovider", next: [.termination])
  private static let _negative_com_pagefrontapp: PublicSuffix.Node = .label("pagefrontapp", next: [.termination])
  private static let _negative_com_pagespeedmobilizer: PublicSuffix.Node = .label("pagespeedmobilizer", next: [.termination])
  private static let _negative_com_pagexl: PublicSuffix.Node = .label("pagexl", next: [.termination])
  private static let _negative_com_paywhirl: PublicSuffix.Node = .label("paywhirl", next: [.any])
  private static let _negative_com_pgfog: PublicSuffix.Node = .label("pgfog", next: [.termination])
  private static let _negative_com_pixolino: PublicSuffix.Node = .label("pixolino", next: [.termination])
  private static let _negative_com_platterHapp: PublicSuffix.Node = .label("platter-app", next: [.termination])
  private static let _negative_com_playstationHcloud: PublicSuffix.Node = .label("playstation-cloud", next: [.termination])
  private static let _negative_com_pleskns: PublicSuffix.Node = .label("pleskns", next: [.termination])
  private static let _negative_com_point2this: PublicSuffix.Node = .label("point2this", next: [.termination])
  private static let _negative_com_postmanHecho: PublicSuffix.Node = .label("postman-echo", next: [.termination])
  private static let _negative_com_prgmr_xen: PublicSuffix.Node = .label("xen", next: [.termination])
  private static let _negative_com_prgmr: PublicSuffix.Node = .label("prgmr", next: [_negative_com_prgmr_xen])
  private static let _negative_com_publishproxy: PublicSuffix.Node = .label("publishproxy", next: [.termination])
  private static let _negative_com_pythonanywhere_eu: PublicSuffix.Node = .label("eu", next: [.termination])
  private static let _negative_com_pythonanywhere: PublicSuffix.Node = .label("pythonanywhere", next: [.termination, _negative_com_pythonanywhere_eu])
  private static let _negative_com_qa2: PublicSuffix.Node = .label("qa2", next: [.termination])
  private static let _negative_com_qbuser: PublicSuffix.Node = .label("qbuser", next: [.termination])
  private static let _negative_com_qc: PublicSuffix.Node = .label("qc", next: [.termination])
  private static let _negative_com_qualifioapp: PublicSuffix.Node = .label("qualifioapp", next: [.termination])
  private static let _negative_com_quicksytes: PublicSuffix.Node = .label("quicksytes", next: [.termination])
  private static let _negative_com_quipelements: PublicSuffix.Node = .label("quipelements", next: [.any])
  private static let _negative_com_rackmaze: PublicSuffix.Node = .label("rackmaze", next: [.termination])
  private static let _negative_com_remotewd: PublicSuffix.Node = .label("remotewd", next: [.termination])
  private static let _negative_com_render_app: PublicSuffix.Node = .label("app", next: [.termination])
  private static let _negative_com_render: PublicSuffix.Node = .label("render", next: [_negative_com_render_app])
  private static let _negative_com_reservd: PublicSuffix.Node = .label("reservd", next: [.termination])
  private static let _negative_com_reserveHonline: PublicSuffix.Node = .label("reserve-online", next: [.termination])
  private static let _negative_com_rhcloud: PublicSuffix.Node = .label("rhcloud", next: [.termination])
  private static let _negative_com_ru: PublicSuffix.Node = .label("ru", next: [.termination])
  private static let _negative_com_sa: PublicSuffix.Node = .label("sa", next: [.termination])
  private static let _negative_com_savesHtheHwhales: PublicSuffix.Node = .label("saves-the-whales", next: [.termination])
  private static let _negative_com_scrysec: PublicSuffix.Node = .label("scrysec", next: [.termination])
  private static let _negative_com_securitytactics: PublicSuffix.Node = .label("securitytactics", next: [.termination])
  private static let _negative_com_selfip: PublicSuffix.Node = .label("selfip", next: [.termination])
  private static let _negative_com_sellsHforHless: PublicSuffix.Node = .label("sells-for-less", next: [.termination])
  private static let _negative_com_sellsHforHu: PublicSuffix.Node = .label("sells-for-u", next: [.termination])
  private static let _negative_com_servebbs: PublicSuffix.Node = .label("servebbs", next: [.termination])
  private static let _negative_com_servebeer: PublicSuffix.Node = .label("servebeer", next: [.termination])
  private static let _negative_com_servecounterstrike: PublicSuffix.Node = .label("servecounterstrike", next: [.termination])
  private static let _negative_com_serveexchange: PublicSuffix.Node = .label("serveexchange", next: [.termination])
  private static let _negative_com_serveftp: PublicSuffix.Node = .label("serveftp", next: [.termination])
  private static let _negative_com_servegame: PublicSuffix.Node = .label("servegame", next: [.termination])
  private static let _negative_com_servehalflife: PublicSuffix.Node = .label("servehalflife", next: [.termination])
  private static let _negative_com_servehttp: PublicSuffix.Node = .label("servehttp", next: [.termination])
  private static let _negative_com_servehumour: PublicSuffix.Node = .label("servehumour", next: [.termination])
  private static let _negative_com_serveirc: PublicSuffix.Node = .label("serveirc", next: [.termination])
  private static let _negative_com_servemp3: PublicSuffix.Node = .label("servemp3", next: [.termination])
  private static let _negative_com_servep2p: PublicSuffix.Node = .label("servep2p", next: [.termination])
  private static let _negative_com_servepics: PublicSuffix.Node = .label("servepics", next: [.termination])
  private static let _negative_com_servequake: PublicSuffix.Node = .label("servequake", next: [.termination])
  private static let _negative_com_servesarcasm: PublicSuffix.Node = .label("servesarcasm", next: [.termination])
  private static let _negative_com_shopitsite: PublicSuffix.Node = .label("shopitsite", next: [.termination])
  private static let _negative_com_siiites: PublicSuffix.Node = .label("siiites", next: [.termination])
  private static let _negative_com_simpleHurl: PublicSuffix.Node = .label("simple-url", next: [.termination])
  private static let _negative_com_sinaapp: PublicSuffix.Node = .label("sinaapp", next: [.termination])
  private static let _negative_com_skygearapp: PublicSuffix.Node = .label("skygearapp", next: [.termination])
  private static let _negative_com_smushcdn: PublicSuffix.Node = .label("smushcdn", next: [.termination])
  private static let _negative_com_spaceHtoHrent: PublicSuffix.Node = .label("space-to-rent", next: [.termination])
  private static let _negative_com_stackheroHnetwork: PublicSuffix.Node = .label("stackhero-network", next: [.termination])
  private static let _negative_com_stdlib_api: PublicSuffix.Node = .label("api", next: [.termination])
  private static let _negative_com_stdlib: PublicSuffix.Node = .label("stdlib", next: [_negative_com_stdlib_api])
  private static let _negative_com_streamlitapp: PublicSuffix.Node = .label("streamlitapp", next: [.termination])
  private static let _negative_com_stufftoread: PublicSuffix.Node = .label("stufftoread", next: [.termination])
  private static let _negative_com_tbHhosting_site: PublicSuffix.Node = .label("site", next: [.termination])
  private static let _negative_com_tbHhosting: PublicSuffix.Node = .label("tb-hosting", next: [_negative_com_tbHhosting_site])
  private static let _negative_com_teachesHyoga: PublicSuffix.Node = .label("teaches-yoga", next: [.termination])
  private static let _negative_com_tempHdns: PublicSuffix.Node = .label("temp-dns", next: [.termination])
  private static let _negative_com_theworkpc: PublicSuffix.Node = .label("theworkpc", next: [.termination])
  private static let _negative_com_thingdustdata: PublicSuffix.Node = .label("thingdustdata", next: [.termination])
  private static let _negative_com_townnewsHstaging: PublicSuffix.Node = .label("townnews-staging", next: [.termination])
  private static let _negative_com_tryHsnowplow: PublicSuffix.Node = .label("try-snowplow", next: [.termination])
  private static let _negative_com_trycloudflare: PublicSuffix.Node = .label("trycloudflare", next: [.termination])
  private static let _negative_com_tuleapHpartners: PublicSuffix.Node = .label("tuleap-partners", next: [.termination])
  private static let _negative_com_typeform_pro: PublicSuffix.Node = .label("pro", next: [.termination])
  private static let _negative_com_typeform: PublicSuffix.Node = .label("typeform", next: [_negative_com_typeform_pro])
  private static let _negative_com_uk: PublicSuffix.Node = .label("uk", next: [.termination])
  private static let _negative_com_unusualperson: PublicSuffix.Node = .label("unusualperson", next: [.termination])
  private static let _negative_com_us: PublicSuffix.Node = .label("us", next: [.termination])
  private static let _negative_com_uy: PublicSuffix.Node = .label("uy", next: [.termination])
  private static let _negative_com_vipsinaapp: PublicSuffix.Node = .label("vipsinaapp", next: [.termination])
  private static let _negative_com_vultrobjects: PublicSuffix.Node = .label("vultrobjects", next: [.any])
  private static let _negative_com_wafaicloud_jed: PublicSuffix.Node = .label("jed", next: [.termination])
  private static let _negative_com_wafaicloud_lon: PublicSuffix.Node = .label("lon", next: [.termination])
  private static let _negative_com_wafaicloud_ryd: PublicSuffix.Node = .label("ryd", next: [.termination])
  private static let _negative_com_wafaicloud: PublicSuffix.Node = .label("wafaicloud", next: [_negative_com_wafaicloud_jed, _negative_com_wafaicloud_lon, _negative_com_wafaicloud_ryd])
  private static let _negative_com_wafflecell: PublicSuffix.Node = .label("wafflecell", next: [.termination])
  private static let _negative_com_wiardweb_pages: PublicSuffix.Node = .label("pages", next: [.termination])
  private static let _negative_com_wiardweb: PublicSuffix.Node = .label("wiardweb", next: [_negative_com_wiardweb_pages])
  private static let _negative_com_withgoogle: PublicSuffix.Node = .label("withgoogle", next: [.termination])
  private static let _negative_com_withyoutube: PublicSuffix.Node = .label("withyoutube", next: [.termination])
  private static let _negative_com_wixsite: PublicSuffix.Node = .label("wixsite", next: [.termination])
  private static let _negative_com_woltlabHdemo: PublicSuffix.Node = .label("woltlab-demo", next: [.termination])
  private static let _negative_com_workisboring: PublicSuffix.Node = .label("workisboring", next: [.termination])
  private static let _negative_com_wpdevcloud: PublicSuffix.Node = .label("wpdevcloud", next: [.termination])
  private static let _negative_com_wpenginepowered_js: PublicSuffix.Node = .label("js", next: [.termination])
  private static let _negative_com_wpenginepowered: PublicSuffix.Node = .label("wpenginepowered", next: [.termination, _negative_com_wpenginepowered_js])
  private static let _negative_com_wphostedmail: PublicSuffix.Node = .label("wphostedmail", next: [.termination])
  private static let _negative_com_wpmucdn: PublicSuffix.Node = .label("wpmucdn", next: [.termination])
  private static let _negative_com_writesthisblog: PublicSuffix.Node = .label("writesthisblog", next: [.termination])
  private static let _negative_com_xnbay_u2: PublicSuffix.Node = .label("u2", next: [.termination])
  private static let _negative_com_xnbay_u2Hlocal: PublicSuffix.Node = .label("u2-local", next: [.termination])
  private static let _negative_com_xnbay: PublicSuffix.Node = .label("xnbay", next: [.termination, _negative_com_xnbay_u2, _negative_com_xnbay_u2Hlocal])
  private static let _negative_com_yolasite: PublicSuffix.Node = .label("yolasite", next: [.termination])
  private static let _negative_com_za: PublicSuffix.Node = .label("za", next: [.termination])
  private static let _negative_com: PublicSuffix.Node = .label("com", next: [.termination, _negative_com_001www, _negative_com_0emm, _negative_com_1kapp, _negative_com_3utilities, _negative_com_4u, _negative_com_adobeaemcloud, _negative_com_africa, _negative_com_airkitapps, _negative_com_airkitappsHau, _negative_com_aivencloud, _negative_com_alphaHmyqnapcloud, _negative_com_amazonaws, _negative_com_amscompute, _negative_com_appchizi, _negative_com_applinzi, _negative_com_appspacehosted, _negative_com_appspaceusercontent, _negative_com_appspot, _negative_com_ar, _negative_com_authgearHstaging, _negative_com_authgearapps, _negative_com_awsglobalaccelerator, _negative_com_awsmppl, _negative_com_balenaHdevices, _negative_com_barsycenter, _negative_com_barsyonline, _negative_com_betainabox, _negative_com_blogdns, _negative_com_blogspot, _negative_com_blogsyte, _negative_com_bloxcms, _negative_com_bountyHfull, _negative_com_boutir, _negative_com_bplaced, _negative_com_br, _negative_com_builtwithdark, _negative_com_cafjs, _negative_com_cechire, _negative_com_ciscofreak, _negative_com_clicketcloud, _negative_com_cloudcontrolapp, _negative_com_cloudcontrolled, _negative_com_cn, _negative_com_co, _negative_com_code, _negative_com_codespot, _negative_com_customerHoci, _negative_com_damnserver, _negative_com_datadetect, _negative_com_dattolocal, _negative_com_dattorelay, _negative_com_dattoweb, _negative_com_ddns5, _negative_com_ddnsfree, _negative_com_ddnsgeek, _negative_com_ddnsking, _negative_com_ddnslive, _negative_com_de, _negative_com_devHmyqnapcloud, _negative_com_devcdnaccesso, _negative_com_digitaloceanspaces, _negative_com_discordsays, _negative_com_discordsez, _negative_com_ditchyourip, _negative_com_dnsalias, _negative_com_dnsdojo, _negative_com_dnsiskinky, _negative_com_doesntexist, _negative_com_dontexist, _negative_com_doomdns, _negative_com_dopaas, _negative_com_drayddns, _negative_com_dreamhosters, _negative_com_dsmynas, _negative_com_dynHoHsaur, _negative_com_dynalias, _negative_com_dyndnsHatHhome, _negative_com_dyndnsHatHwork, _negative_com_dyndnsHblog, _negative_com_dyndnsHfree, _negative_com_dyndnsHhome, _negative_com_dyndnsHip, _negative_com_dyndnsHmail, _negative_com_dyndnsHoffice, _negative_com_dyndnsHpics, _negative_com_dyndnsHremote, _negative_com_dyndnsHserver, _negative_com_dyndnsHweb, _negative_com_dyndnsHwiki, _negative_com_dyndnsHwork, _negative_com_dynns, _negative_com_elasticbeanstalk, _negative_com_encoreapi, _negative_com_estHaHlaHmaison, _negative_com_estHaHlaHmasion, _negative_com_estHleHpatron, _negative_com_estHmonHblogueur, _negative_com_eu, _negative_com_evennode, _negative_com_familyds, _negative_com_fastlyHterrarium, _negative_com_fastvpsHserver, _negative_com_fbsbx, _negative_com_firebaseapp, _negative_com_firewallHgateway, _negative_com_fldrv, _negative_com_forgeblocks, _negative_com_framercanvas, _negative_com_freeboxHos, _negative_com_freeboxos, _negative_com_freemyip, _negative_com_fromHak, _negative_com_fromHal, _negative_com_fromHar, _negative_com_fromHca, _negative_com_fromHct, _negative_com_fromHdc, _negative_com_fromHde, _negative_com_fromHfl, _negative_com_fromHga, _negative_com_fromHhi, _negative_com_fromHia, _negative_com_fromHid, _negative_com_fromHil, _negative_com_fromHin, _negative_com_fromHks, _negative_com_fromHky, _negative_com_fromHma, _negative_com_fromHmd, _negative_com_fromHmi, _negative_com_fromHmn, _negative_com_fromHmo, _negative_com_fromHms, _negative_com_fromHmt, _negative_com_fromHnc, _negative_com_fromHnd, _negative_com_fromHne, _negative_com_fromHnh, _negative_com_fromHnj, _negative_com_fromHnm, _negative_com_fromHnv, _negative_com_fromHoh, _negative_com_fromHok, _negative_com_fromHor, _negative_com_fromHpa, _negative_com_fromHpr, _negative_com_fromHri, _negative_com_fromHsc, _negative_com_fromHsd, _negative_com_fromHtn, _negative_com_fromHtx, _negative_com_fromHut, _negative_com_fromHva, _negative_com_fromHvt, _negative_com_fromHwa, _negative_com_fromHwi, _negative_com_fromHwv, _negative_com_fromHwy, _negative_com_geekgalaxy, _negative_com_gentapps, _negative_com_gentlentapis, _negative_com_getmyip, _negative_com_giize, _negative_com_githubusercontent, _negative_com_gleeze, _negative_com_googleapis, _negative_com_googlecode, _negative_com_gotdns, _negative_com_gotpantheon, _negative_com_gr, _negative_com_healthHcarereform, _negative_com_herokuapp, _negative_com_herokussl, _negative_com_hidora, _negative_com_hk, _negative_com_hobbyHsite, _negative_com_homelinux, _negative_com_homesecuritymac, _negative_com_homesecuritypc, _negative_com_homeunix, _negative_com_hostedHbyHprevider, _negative_com_hostedpi, _negative_com_hosteur, _negative_com_hotelwithflight, _negative_com_hu, _negative_com_iamallama, _negative_com_ikHserver, _negative_com_impertrix, _negative_com_impertrixcdn, _negative_com_isHaHanarchist, _negative_com_isHaHblogger, _negative_com_isHaHbookkeeper, _negative_com_isHaHbullsHfan, _negative_com_isHaHcaterer, _negative_com_isHaHchef, _negative_com_isHaHconservative, _negative_com_isHaHcpa, _negative_com_isHaHcubicleHslave, _negative_com_isHaHdemocrat, _negative_com_isHaHdesigner, _negative_com_isHaHdoctor, _negative_com_isHaHfinancialadvisor, _negative_com_isHaHgeek, _negative_com_isHaHgreen, _negative_com_isHaHguru, _negative_com_isHaHhardHworker, _negative_com_isHaHhunter, _negative_com_isHaHlandscaper, _negative_com_isHaHlawyer, _negative_com_isHaHliberal, _negative_com_isHaHlibertarian, _negative_com_isHaHllama, _negative_com_isHaHmusician, _negative_com_isHaHnascarfan, _negative_com_isHaHnurse, _negative_com_isHaHpainter, _negative_com_isHaHpersonaltrainer, _negative_com_isHaHphotographer, _negative_com_isHaHplayer, _negative_com_isHaHrepublican, _negative_com_isHaHrockstar, _negative_com_isHaHsocialist, _negative_com_isHaHstudent, _negative_com_isHaHteacher, _negative_com_isHaHtechie, _negative_com_isHaHtherapist, _negative_com_isHanHaccountant, _negative_com_isHanHactor, _negative_com_isHanHactress, _negative_com_isHanHanarchist, _negative_com_isHanHartist, _negative_com_isHanHengineer, _negative_com_isHanHentertainer, _negative_com_isHcertified, _negative_com_isHgone, _negative_com_isHintoHanime, _negative_com_isHintoHcars, _negative_com_isHintoHcartoons, _negative_com_isHintoHgames, _negative_com_isHleet, _negative_com_isHnotHcertified, _negative_com_isHslick, _negative_com_isHuberleet, _negative_com_isHwithHtheband, _negative_com_isaHgeek, _negative_com_isaHhockeynut, _negative_com_issmarterthanyou, _negative_com_jdevcloud, _negative_com_jelastic, _negative_com_joyent, _negative_com_jpn, _negative_com_kasserver, _negative_com_kilatiron, _negative_com_kozow, _negative_com_kr, _negative_com_ktistory, _negative_com_likesHpie, _negative_com_likescandy, _negative_com_linode, _negative_com_linodeobjects, _negative_com_linodeusercontent, _negative_com_lmpm, _negative_com_logoip, _negative_com_loseyourip, _negative_com_lpusercontent, _negative_com_massivegrid, _negative_com_mazeplay, _negative_com_messwithdns, _negative_com_meteorapp, _negative_com_mex, _negative_com_miniserver, _negative_com_myactivedirectory, _negative_com_myasustor, _negative_com_mydatto, _negative_com_mydobiss, _negative_com_mydrobo, _negative_com_myiphost, _negative_com_myqnapcloud, _negative_com_myravendb, _negative_com_mysecuritycamera, _negative_com_myshopblocks, _negative_com_myshopify, _negative_com_myspreadshop, _negative_com_mythicHbeasts, _negative_com_mytuleap, _negative_com_myvnc, _negative_com_neatHurl, _negative_com_netHfreaks, _negative_com_nfshost, _negative_com_no, _negative_com_nospamproxy, _negative_com_observableusercontent, _negative_com_onHaptible, _negative_com_onfabrica, _negative_com_onrender, _negative_com_onthewifi, _negative_com_ooguy, _negative_com_operaunite, _negative_com_orsites, _negative_com_outsystemscloud, _negative_com_ownprovider, _negative_com_pagefrontapp, _negative_com_pagespeedmobilizer, _negative_com_pagexl, _negative_com_paywhirl, _negative_com_pgfog, _negative_com_pixolino, _negative_com_platterHapp, _negative_com_playstationHcloud, _negative_com_pleskns, _negative_com_point2this, _negative_com_postmanHecho, _negative_com_prgmr, _negative_com_publishproxy, _negative_com_pythonanywhere, _negative_com_qa2, _negative_com_qbuser, _negative_com_qc, _negative_com_qualifioapp, _negative_com_quicksytes, _negative_com_quipelements, _negative_com_rackmaze, _negative_com_remotewd, _negative_com_render, _negative_com_reservd, _negative_com_reserveHonline, _negative_com_rhcloud, _negative_com_ru, _negative_com_sa, _negative_com_savesHtheHwhales, _negative_com_scrysec, _negative_com_securitytactics, _negative_com_selfip, _negative_com_sellsHforHless, _negative_com_sellsHforHu, _negative_com_servebbs, _negative_com_servebeer, _negative_com_servecounterstrike, _negative_com_serveexchange, _negative_com_serveftp, _negative_com_servegame, _negative_com_servehalflife, _negative_com_servehttp, _negative_com_servehumour, _negative_com_serveirc, _negative_com_servemp3, _negative_com_servep2p, _negative_com_servepics, _negative_com_servequake, _negative_com_servesarcasm, _negative_com_shopitsite, _negative_com_siiites, _negative_com_simpleHurl, _negative_com_sinaapp, _negative_com_skygearapp, _negative_com_smushcdn, _negative_com_spaceHtoHrent, _negative_com_stackheroHnetwork, _negative_com_stdlib, _negative_com_streamlitapp, _negative_com_stufftoread, _negative_com_tbHhosting, _negative_com_teachesHyoga, _negative_com_tempHdns, _negative_com_theworkpc, _negative_com_thingdustdata, _negative_com_townnewsHstaging, _negative_com_tryHsnowplow, _negative_com_trycloudflare, _negative_com_tuleapHpartners, _negative_com_typeform, _negative_com_uk, _negative_com_unusualperson, _negative_com_us, _negative_com_uy, _negative_com_vipsinaapp, _negative_com_vultrobjects, _negative_com_wafaicloud, _negative_com_wafflecell, _negative_com_wiardweb, _negative_com_withgoogle, _negative_com_withyoutube, _negative_com_wixsite, _negative_com_woltlabHdemo, _negative_com_workisboring, _negative_com_wpdevcloud, _negative_com_wpenginepowered, _negative_com_wphostedmail, _negative_com_wpmucdn, _negative_com_writesthisblog, _negative_com_xnbay, _negative_com_yolasite, _negative_com_za])
  private static let _negative_comcast: PublicSuffix.Node = .label("comcast", next: [.termination])
  private static let _negative_commbank: PublicSuffix.Node = .label("commbank", next: [.termination])
  private static let _negative_community_myforum: PublicSuffix.Node = .label("myforum", next: [.termination])
  private static let _negative_community_nog: PublicSuffix.Node = .label("nog", next: [.termination])
  private static let _negative_community_ravendb: PublicSuffix.Node = .label("ravendb", next: [.termination])
  private static let _negative_community: PublicSuffix.Node = .label("community", next: [.termination, _negative_community_myforum, _negative_community_nog, _negative_community_ravendb])
  private static let _negative_company: PublicSuffix.Node = .label("company", next: [.termination])
  private static let _negative_compare: PublicSuffix.Node = .label("compare", next: [.termination])
  private static let _negative_computer: PublicSuffix.Node = .label("computer", next: [.termination])
  private static let _negative_comsec: PublicSuffix.Node = .label("comsec", next: [.termination])
  private static let _negative_condos: PublicSuffix.Node = .label("condos", next: [.termination])
  private static let _negative_construction: PublicSuffix.Node = .label("construction", next: [.termination])
  private static let _negative_consulting: PublicSuffix.Node = .label("consulting", next: [.termination])
  private static let _negative_contact: PublicSuffix.Node = .label("contact", next: [.termination])
  private static let _negative_contractors: PublicSuffix.Node = .label("contractors", next: [.termination])
  private static let _negative_cooking: PublicSuffix.Node = .label("cooking", next: [.termination])
  private static let _negative_cookingchannel: PublicSuffix.Node = .label("cookingchannel", next: [.termination])
  private static let _negative_cool_de: PublicSuffix.Node = .label("de", next: [.termination])
  private static let _negative_cool_elementor: PublicSuffix.Node = .label("elementor", next: [.termination])
  private static let _negative_cool: PublicSuffix.Node = .label("cool", next: [.termination, _negative_cool_de, _negative_cool_elementor])
  private static let _negative_coop: PublicSuffix.Node = .label("coop", next: [.termination])
  private static let _negative_corsica: PublicSuffix.Node = .label("corsica", next: [.termination])
  private static let _negative_country: PublicSuffix.Node = .label("country", next: [.termination])
  private static let _negative_coupon: PublicSuffix.Node = .label("coupon", next: [.termination])
  private static let _negative_coupons: PublicSuffix.Node = .label("coupons", next: [.termination])
  private static let _negative_courses: PublicSuffix.Node = .label("courses", next: [.termination])
  private static let _negative_cpa: PublicSuffix.Node = .label("cpa", next: [.termination])
  private static let _negative_cr_ac: PublicSuffix.Node = .label("ac", next: [.termination])
  private static let _negative_cr_co: PublicSuffix.Node = .label("co", next: [.termination])
  private static let _negative_cr_ed: PublicSuffix.Node = .label("ed", next: [.termination])
  private static let _negative_cr_fi: PublicSuffix.Node = .label("fi", next: [.termination])
  private static let _negative_cr_go: PublicSuffix.Node = .label("go", next: [.termination])
  private static let _negative_cr_or: PublicSuffix.Node = .label("or", next: [.termination])
  private static let _negative_cr_sa: PublicSuffix.Node = .label("sa", next: [.termination])
  private static let _negative_cr: PublicSuffix.Node = .label("cr", next: [.termination, _negative_cr_ac, _negative_cr_co, _negative_cr_ed, _negative_cr_fi, _negative_cr_go, _negative_cr_or, _negative_cr_sa])
  private static let _negative_credit: PublicSuffix.Node = .label("credit", next: [.termination])
  private static let _negative_creditcard: PublicSuffix.Node = .label("creditcard", next: [.termination])
  private static let _negative_creditunion: PublicSuffix.Node = .label("creditunion", next: [.termination])
  private static let _negative_cricket: PublicSuffix.Node = .label("cricket", next: [.termination])
  private static let _negative_crown: PublicSuffix.Node = .label("crown", next: [.termination])
  private static let _negative_crs: PublicSuffix.Node = .label("crs", next: [.termination])
  private static let _negative_cruise: PublicSuffix.Node = .label("cruise", next: [.termination])
  private static let _negative_cruises: PublicSuffix.Node = .label("cruises", next: [.termination])
  private static let _negative_cu_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_cu_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_cu_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_cu_inf: PublicSuffix.Node = .label("inf", next: [.termination])
  private static let _negative_cu_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_cu_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_cu: PublicSuffix.Node = .label("cu", next: [.termination, _negative_cu_com, _negative_cu_edu, _negative_cu_gov, _negative_cu_inf, _negative_cu_net, _negative_cu_org])
  private static let _negative_cuisinella: PublicSuffix.Node = .label("cuisinella", next: [.termination])
  private static let _negative_cv_blogspot: PublicSuffix.Node = .label("blogspot", next: [.termination])
  private static let _negative_cv_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_cv_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_cv_int: PublicSuffix.Node = .label("int", next: [.termination])
  private static let _negative_cv_nome: PublicSuffix.Node = .label("nome", next: [.termination])
  private static let _negative_cv_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_cv: PublicSuffix.Node = .label("cv", next: [.termination, _negative_cv_blogspot, _negative_cv_com, _negative_cv_edu, _negative_cv_int, _negative_cv_nome, _negative_cv_org])
  private static let _negative_cw_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_cw_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_cw_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_cw_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_cw: PublicSuffix.Node = .label("cw", next: [.termination, _negative_cw_com, _negative_cw_edu, _negative_cw_net, _negative_cw_org])
  private static let _negative_cx_ath: PublicSuffix.Node = .label("ath", next: [.termination])
  private static let _negative_cx_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_cx_info: PublicSuffix.Node = .label("info", next: [.termination])
  private static let _negative_cx: PublicSuffix.Node = .label("cx", next: [.termination, _negative_cx_ath, _negative_cx_gov, _negative_cx_info])
  private static let _negative_cy_ac: PublicSuffix.Node = .label("ac", next: [.termination])
  private static let _negative_cy_biz: PublicSuffix.Node = .label("biz", next: [.termination])
  private static let _negative_cy_com_blogspot: PublicSuffix.Node = .label("blogspot", next: [.termination])
  private static let _negative_cy_com_scaleforce_j: PublicSuffix.Node = .label("j", next: [.termination])
  private static let _negative_cy_com_scaleforce: PublicSuffix.Node = .label("scaleforce", next: [_negative_cy_com_scaleforce_j])
  private static let _negative_cy_com: PublicSuffix.Node = .label("com", next: [.termination, _negative_cy_com_blogspot, _negative_cy_com_scaleforce])
  private static let _negative_cy_ekloges: PublicSuffix.Node = .label("ekloges", next: [.termination])
  private static let _negative_cy_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_cy_ltd: PublicSuffix.Node = .label("ltd", next: [.termination])
  private static let _negative_cy_mil: PublicSuffix.Node = .label("mil", next: [.termination])
  private static let _negative_cy_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_cy_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_cy_press: PublicSuffix.Node = .label("press", next: [.termination])
  private static let _negative_cy_pro: PublicSuffix.Node = .label("pro", next: [.termination])
  private static let _negative_cy_tm: PublicSuffix.Node = .label("tm", next: [.termination])
  private static let _negative_cy: PublicSuffix.Node = .label("cy", next: [.termination, _negative_cy_ac, _negative_cy_biz, _negative_cy_com, _negative_cy_ekloges, _negative_cy_gov, _negative_cy_ltd, _negative_cy_mil, _negative_cy_net, _negative_cy_org, _negative_cy_press, _negative_cy_pro, _negative_cy_tm])
  private static let _negative_cymru: PublicSuffix.Node = .label("cymru", next: [.termination])
  private static let _negative_cyou: PublicSuffix.Node = .label("cyou", next: [.termination])
  private static let _negative_cz_blogspot: PublicSuffix.Node = .label("blogspot", next: [.termination])
  private static let _negative_cz_co: PublicSuffix.Node = .label("co", next: [.termination])
  private static let _negative_cz_e4: PublicSuffix.Node = .label("e4", next: [.termination])
  private static let _negative_cz_metacentrum_cloud: PublicSuffix.Node = .label("cloud", next: [.any])
  private static let _negative_cz_metacentrum_custom: PublicSuffix.Node = .label("custom", next: [.termination])
  private static let _negative_cz_metacentrum: PublicSuffix.Node = .label("metacentrum", next: [_negative_cz_metacentrum_cloud, _negative_cz_metacentrum_custom])
  private static let _negative_cz_muni_cloud_flt: PublicSuffix.Node = .label("flt", next: [.termination])
  private static let _negative_cz_muni_cloud_usr: PublicSuffix.Node = .label("usr", next: [.termination])
  private static let _negative_cz_muni_cloud: PublicSuffix.Node = .label("cloud", next: [_negative_cz_muni_cloud_flt, _negative_cz_muni_cloud_usr])
  private static let _negative_cz_muni: PublicSuffix.Node = .label("muni", next: [_negative_cz_muni_cloud])
  private static let _negative_cz_realm: PublicSuffix.Node = .label("realm", next: [.termination])
  private static let _negative_cz: PublicSuffix.Node = .label("cz", next: [.termination, _negative_cz_blogspot, _negative_cz_co, _negative_cz_e4, _negative_cz_metacentrum, _negative_cz_muni, _negative_cz_realm])
  private static let _negative_dabur: PublicSuffix.Node = .label("dabur", next: [.termination])
  private static let _negative_dad: PublicSuffix.Node = .label("dad", next: [.termination])
  private static let _negative_dance: PublicSuffix.Node = .label("dance", next: [.termination])
  private static let _negative_data: PublicSuffix.Node = .label("data", next: [.termination])
  private static let _negative_date: PublicSuffix.Node = .label("date", next: [.termination])
  private static let _negative_dating: PublicSuffix.Node = .label("dating", next: [.termination])
  private static let _negative_datsun: PublicSuffix.Node = .label("datsun", next: [.termination])
  private static let _negative_day: PublicSuffix.Node = .label("day", next: [.termination])
  private static let _negative_dclk: PublicSuffix.Node = .label("dclk", next: [.termination])
  private static let _negative_dds: PublicSuffix.Node = .label("dds", next: [.termination])
  private static let _negative_de_12hp: PublicSuffix.Node = .label("12hp", next: [.termination])
  private static let _negative_de_2ix: PublicSuffix.Node = .label("2ix", next: [.termination])
  private static let _negative_de_4lima: PublicSuffix.Node = .label("4lima", next: [.termination])
  private static let _negative_de_barsy: PublicSuffix.Node = .label("barsy", next: [.termination])
  private static let _negative_de_blogspot: PublicSuffix.Node = .label("blogspot", next: [.termination])
  private static let _negative_de_bplaced: PublicSuffix.Node = .label("bplaced", next: [.termination])
  private static let _negative_de_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_de_communityHpro: PublicSuffix.Node = .label("community-pro", next: [.termination])
  private static let _negative_de_cosidns_dyn: PublicSuffix.Node = .label("dyn", next: [.termination])
  private static let _negative_de_cosidns: PublicSuffix.Node = .label("cosidns", next: [_negative_de_cosidns_dyn])
  private static let _negative_de_ddHdns: PublicSuffix.Node = .label("dd-dns", next: [.termination])
  private static let _negative_de_ddnss_dyn: PublicSuffix.Node = .label("dyn", next: [.termination])
  private static let _negative_de_ddnss_dyndns: PublicSuffix.Node = .label("dyndns", next: [.termination])
  private static let _negative_de_ddnss: PublicSuffix.Node = .label("ddnss", next: [.termination, _negative_de_ddnss_dyn, _negative_de_ddnss_dyndns])
  private static let _negative_de_diskussionsbereich: PublicSuffix.Node = .label("diskussionsbereich", next: [.termination])
  private static let _negative_de_dnshome: PublicSuffix.Node = .label("dnshome", next: [.termination])
  private static let _negative_de_dnsupdater: PublicSuffix.Node = .label("dnsupdater", next: [.termination])
  private static let _negative_de_drayHdns: PublicSuffix.Node = .label("dray-dns", next: [.termination])
  private static let _negative_de_draydns: PublicSuffix.Node = .label("draydns", next: [.termination])
  private static let _negative_de_dynHberlin: PublicSuffix.Node = .label("dyn-berlin", next: [.termination])
  private static let _negative_de_dynHip24: PublicSuffix.Node = .label("dyn-ip24", next: [.termination])
  private static let _negative_de_dynHvpn: PublicSuffix.Node = .label("dyn-vpn", next: [.termination])
  private static let _negative_de_dynamischesHdns: PublicSuffix.Node = .label("dynamisches-dns", next: [.termination])
  private static let _negative_de_dyndns1: PublicSuffix.Node = .label("dyndns1", next: [.termination])
  private static let _negative_de_dynvpn: PublicSuffix.Node = .label("dynvpn", next: [.termination])
  private static let _negative_de_firewallHgateway: PublicSuffix.Node = .label("firewall-gateway", next: [.termination])
  private static let _negative_de_frusky: PublicSuffix.Node = .label("frusky", next: [.any])
  private static let _negative_de_fuettertdasnetz: PublicSuffix.Node = .label("fuettertdasnetz", next: [.termination])
  private static let _negative_de_gitHrepos: PublicSuffix.Node = .label("git-repos", next: [.termination])
  private static let _negative_de_goip: PublicSuffix.Node = .label("goip", next: [.termination])
  private static let _negative_de_günstigbestellen: PublicSuffix.Node = .label("günstigbestellen", next: [.termination])
  private static let _negative_de_günstigliefern: PublicSuffix.Node = .label("günstigliefern", next: [.termination])
  private static let _negative_de_homeHwebserver_dyn: PublicSuffix.Node = .label("dyn", next: [.termination])
  private static let _negative_de_homeHwebserver: PublicSuffix.Node = .label("home-webserver", next: [.termination, _negative_de_homeHwebserver_dyn])
  private static let _negative_de_hsHheilbronn_it_pages: PublicSuffix.Node = .label("pages", next: [.termination])
  private static let _negative_de_hsHheilbronn_it: PublicSuffix.Node = .label("it", next: [_negative_de_hsHheilbronn_it_pages])
  private static let _negative_de_hsHheilbronn: PublicSuffix.Node = .label("hs-heilbronn", next: [_negative_de_hsHheilbronn_it])
  private static let _negative_de_inHberlin: PublicSuffix.Node = .label("in-berlin", next: [.termination])
  private static let _negative_de_inHbrb: PublicSuffix.Node = .label("in-brb", next: [.termination])
  private static let _negative_de_inHbutter: PublicSuffix.Node = .label("in-butter", next: [.termination])
  private static let _negative_de_inHdsl: PublicSuffix.Node = .label("in-dsl", next: [.termination])
  private static let _negative_de_inHvpn: PublicSuffix.Node = .label("in-vpn", next: [.termination])
  private static let _negative_de_internetHdns: PublicSuffix.Node = .label("internet-dns", next: [.termination])
  private static let _negative_de_iservschule: PublicSuffix.Node = .label("iservschule", next: [.termination])
  private static let _negative_de_isteingeek: PublicSuffix.Node = .label("isteingeek", next: [.termination])
  private static let _negative_de_istmein: PublicSuffix.Node = .label("istmein", next: [.termination])
  private static let _negative_de_keymachine: PublicSuffix.Node = .label("keymachine", next: [.termination])
  private static let _negative_de_lHoHgHiHn: PublicSuffix.Node = .label("l-o-g-i-n", next: [.termination])
  private static let _negative_de_lcubeHserver: PublicSuffix.Node = .label("lcube-server", next: [.termination])
  private static let _negative_de_lebtimnetz: PublicSuffix.Node = .label("lebtimnetz", next: [.termination])
  private static let _negative_de_leitungsen: PublicSuffix.Node = .label("leitungsen", next: [.termination])
  private static let _negative_de_limaHcity: PublicSuffix.Node = .label("lima-city", next: [.termination])
  private static let _negative_de_logoip: PublicSuffix.Node = .label("logoip", next: [.termination])
  private static let _negative_de_meinHiserv: PublicSuffix.Node = .label("mein-iserv", next: [.termination])
  private static let _negative_de_meinHvigor: PublicSuffix.Node = .label("mein-vigor", next: [.termination])
  private static let _negative_de_myHgateway: PublicSuffix.Node = .label("my-gateway", next: [.termination])
  private static let _negative_de_myHrouter: PublicSuffix.Node = .label("my-router", next: [.termination])
  private static let _negative_de_myHvigor: PublicSuffix.Node = .label("my-vigor", next: [.termination])
  private static let _negative_de_myHwan: PublicSuffix.Node = .label("my-wan", next: [.termination])
  private static let _negative_de_myhomeHserver: PublicSuffix.Node = .label("myhome-server", next: [.termination])
  private static let _negative_de_myspreadshop: PublicSuffix.Node = .label("myspreadshop", next: [.termination])
  private static let _negative_de_schulplattform: PublicSuffix.Node = .label("schulplattform", next: [.termination])
  private static let _negative_de_schulserver: PublicSuffix.Node = .label("schulserver", next: [.termination])
  private static let _negative_de_spdns: PublicSuffix.Node = .label("spdns", next: [.termination])
  private static let _negative_de_speedpartner_customer: PublicSuffix.Node = .label("customer", next: [.termination])
  private static let _negative_de_speedpartner: PublicSuffix.Node = .label("speedpartner", next: [_negative_de_speedpartner_customer])
  private static let _negative_de_square7: PublicSuffix.Node = .label("square7", next: [.termination])
  private static let _negative_de_svnHrepos: PublicSuffix.Node = .label("svn-repos", next: [.termination])
  private static let _negative_de_synoHds: PublicSuffix.Node = .label("syno-ds", next: [.termination])
  private static let _negative_de_synologyHdiskstation: PublicSuffix.Node = .label("synology-diskstation", next: [.termination])
  private static let _negative_de_synologyHds: PublicSuffix.Node = .label("synology-ds", next: [.termination])
  private static let _negative_de_taifunHdns: PublicSuffix.Node = .label("taifun-dns", next: [.termination])
  private static let _negative_de_testHiserv: PublicSuffix.Node = .label("test-iserv", next: [.termination])
  private static let _negative_de_traeumtgerade: PublicSuffix.Node = .label("traeumtgerade", next: [.termination])
  private static let _negative_de_uberspace: PublicSuffix.Node = .label("uberspace", next: [.any])
  private static let _negative_de_virtualHuser: PublicSuffix.Node = .label("virtual-user", next: [.termination])
  private static let _negative_de_virtualuser: PublicSuffix.Node = .label("virtualuser", next: [.termination])
  private static let _negative_de: PublicSuffix.Node = .label("de", next: [.termination, _negative_de_12hp, _negative_de_2ix, _negative_de_4lima, _negative_de_barsy, _negative_de_blogspot, _negative_de_bplaced, _negative_de_com, _negative_de_communityHpro, _negative_de_cosidns, _negative_de_ddHdns, _negative_de_ddnss, _negative_de_diskussionsbereich, _negative_de_dnshome, _negative_de_dnsupdater, _negative_de_drayHdns, _negative_de_draydns, _negative_de_dynHberlin, _negative_de_dynHip24, _negative_de_dynHvpn, _negative_de_dynamischesHdns, _negative_de_dyndns1, _negative_de_dynvpn, _negative_de_firewallHgateway, _negative_de_frusky, _negative_de_fuettertdasnetz, _negative_de_gitHrepos, _negative_de_goip, _negative_de_günstigbestellen, _negative_de_günstigliefern, _negative_de_homeHwebserver, _negative_de_hsHheilbronn, _negative_de_inHberlin, _negative_de_inHbrb, _negative_de_inHbutter, _negative_de_inHdsl, _negative_de_inHvpn, _negative_de_internetHdns, _negative_de_iservschule, _negative_de_isteingeek, _negative_de_istmein, _negative_de_keymachine, _negative_de_lHoHgHiHn, _negative_de_lcubeHserver, _negative_de_lebtimnetz, _negative_de_leitungsen, _negative_de_limaHcity, _negative_de_logoip, _negative_de_meinHiserv, _negative_de_meinHvigor, _negative_de_myHgateway, _negative_de_myHrouter, _negative_de_myHvigor, _negative_de_myHwan, _negative_de_myhomeHserver, _negative_de_myspreadshop, _negative_de_schulplattform, _negative_de_schulserver, _negative_de_spdns, _negative_de_speedpartner, _negative_de_square7, _negative_de_svnHrepos, _negative_de_synoHds, _negative_de_synologyHdiskstation, _negative_de_synologyHds, _negative_de_taifunHdns, _negative_de_testHiserv, _negative_de_traeumtgerade, _negative_de_uberspace, _negative_de_virtualHuser, _negative_de_virtualuser])
  private static let _negative_deal: PublicSuffix.Node = .label("deal", next: [.termination])
  private static let _negative_dealer: PublicSuffix.Node = .label("dealer", next: [.termination])
  private static let _negative_deals: PublicSuffix.Node = .label("deals", next: [.termination])
  private static let _negative_degree: PublicSuffix.Node = .label("degree", next: [.termination])
  private static let _negative_delivery: PublicSuffix.Node = .label("delivery", next: [.termination])
  private static let _negative_dell: PublicSuffix.Node = .label("dell", next: [.termination])
  private static let _negative_deloitte: PublicSuffix.Node = .label("deloitte", next: [.termination])
  private static let _negative_delta: PublicSuffix.Node = .label("delta", next: [.termination])
  private static let _negative_democrat: PublicSuffix.Node = .label("democrat", next: [.termination])
  private static let _negative_dental: PublicSuffix.Node = .label("dental", next: [.termination])
  private static let _negative_dentist: PublicSuffix.Node = .label("dentist", next: [.termination])
  private static let _negative_desi: PublicSuffix.Node = .label("desi", next: [.termination])
  private static let _negative_design_bss: PublicSuffix.Node = .label("bss", next: [.termination])
  private static let _negative_design: PublicSuffix.Node = .label("design", next: [.termination, _negative_design_bss])
  private static let _negative_dev_curv: PublicSuffix.Node = .label("curv", next: [.termination])
  private static let _negative_dev_deno: PublicSuffix.Node = .label("deno", next: [.termination])
  private static let _negative_dev_denoHstaging: PublicSuffix.Node = .label("deno-staging", next: [.termination])
  private static let _negative_dev_deta: PublicSuffix.Node = .label("deta", next: [.termination])
  private static let _negative_dev_fly: PublicSuffix.Node = .label("fly", next: [.termination])
  private static let _negative_dev_gateway: PublicSuffix.Node = .label("gateway", next: [.any])
  private static let _negative_dev_githubpreview: PublicSuffix.Node = .label("githubpreview", next: [.termination])
  private static let _negative_dev_iserv: PublicSuffix.Node = .label("iserv", next: [.termination])
  private static let _negative_dev_lcl: PublicSuffix.Node = .label("lcl", next: [.any])
  private static let _negative_dev_lclstage: PublicSuffix.Node = .label("lclstage", next: [.any])
  private static let _negative_dev_localcert_user: PublicSuffix.Node = .label("user", next: [.any])
  private static let _negative_dev_localcert: PublicSuffix.Node = .label("localcert", next: [_negative_dev_localcert_user])
  private static let _negative_dev_loginline: PublicSuffix.Node = .label("loginline", next: [.termination])
  private static let _negative_dev_mediatech: PublicSuffix.Node = .label("mediatech", next: [.termination])
  private static let _negative_dev_pages: PublicSuffix.Node = .label("pages", next: [.termination])
  private static let _negative_dev_platterHapp: PublicSuffix.Node = .label("platter-app", next: [.termination])
  private static let _negative_dev_shiftcrypto: PublicSuffix.Node = .label("shiftcrypto", next: [.termination])
  private static let _negative_dev_stg: PublicSuffix.Node = .label("stg", next: [.any])
  private static let _negative_dev_stgstage: PublicSuffix.Node = .label("stgstage", next: [.any])
  private static let _negative_dev_vercel: PublicSuffix.Node = .label("vercel", next: [.termination])
  private static let _negative_dev_webhare: PublicSuffix.Node = .label("webhare", next: [.any])
  private static let _negative_dev_workers: PublicSuffix.Node = .label("workers", next: [.termination])
  private static let _negative_dev: PublicSuffix.Node = .label("dev", next: [.termination, _negative_dev_curv, _negative_dev_deno, _negative_dev_denoHstaging, _negative_dev_deta, _negative_dev_fly, _negative_dev_gateway, _negative_dev_githubpreview, _negative_dev_iserv, _negative_dev_lcl, _negative_dev_lclstage, _negative_dev_localcert, _negative_dev_loginline, _negative_dev_mediatech, _negative_dev_pages, _negative_dev_platterHapp, _negative_dev_shiftcrypto, _negative_dev_stg, _negative_dev_stgstage, _negative_dev_vercel, _negative_dev_webhare, _negative_dev_workers])
  private static let _negative_dhl: PublicSuffix.Node = .label("dhl", next: [.termination])
  private static let _negative_diamonds: PublicSuffix.Node = .label("diamonds", next: [.termination])
  private static let _negative_diet: PublicSuffix.Node = .label("diet", next: [.termination])
  private static let _negative_digital_cloudapps_london: PublicSuffix.Node = .label("london", next: [.termination])
  private static let _negative_digital_cloudapps: PublicSuffix.Node = .label("cloudapps", next: [.termination, _negative_digital_cloudapps_london])
  private static let _negative_digital: PublicSuffix.Node = .label("digital", next: [.termination, _negative_digital_cloudapps])
  private static let _negative_direct: PublicSuffix.Node = .label("direct", next: [.termination])
  private static let _negative_directory: PublicSuffix.Node = .label("directory", next: [.termination])
  private static let _negative_discount: PublicSuffix.Node = .label("discount", next: [.termination])
  private static let _negative_discover: PublicSuffix.Node = .label("discover", next: [.termination])
  private static let _negative_dish: PublicSuffix.Node = .label("dish", next: [.termination])
  private static let _negative_diy: PublicSuffix.Node = .label("diy", next: [.termination])
  private static let _negative_dj: PublicSuffix.Node = .label("dj", next: [.termination])
  private static let _negative_dk_biz: PublicSuffix.Node = .label("biz", next: [.termination])
  private static let _negative_dk_blogspot: PublicSuffix.Node = .label("blogspot", next: [.termination])
  private static let _negative_dk_co: PublicSuffix.Node = .label("co", next: [.termination])
  private static let _negative_dk_firm: PublicSuffix.Node = .label("firm", next: [.termination])
  private static let _negative_dk_myspreadshop: PublicSuffix.Node = .label("myspreadshop", next: [.termination])
  private static let _negative_dk_reg: PublicSuffix.Node = .label("reg", next: [.termination])
  private static let _negative_dk_store: PublicSuffix.Node = .label("store", next: [.termination])
  private static let _negative_dk: PublicSuffix.Node = .label("dk", next: [.termination, _negative_dk_biz, _negative_dk_blogspot, _negative_dk_co, _negative_dk_firm, _negative_dk_myspreadshop, _negative_dk_reg, _negative_dk_store])
  private static let _negative_dm_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_dm_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_dm_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_dm_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_dm_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_dm: PublicSuffix.Node = .label("dm", next: [.termination, _negative_dm_com, _negative_dm_edu, _negative_dm_gov, _negative_dm_net, _negative_dm_org])
  private static let _negative_dnp: PublicSuffix.Node = .label("dnp", next: [.termination])
  private static let _negative_do_art: PublicSuffix.Node = .label("art", next: [.termination])
  private static let _negative_do_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_do_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_do_gob: PublicSuffix.Node = .label("gob", next: [.termination])
  private static let _negative_do_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_do_mil: PublicSuffix.Node = .label("mil", next: [.termination])
  private static let _negative_do_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_do_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_do_sld: PublicSuffix.Node = .label("sld", next: [.termination])
  private static let _negative_do_web: PublicSuffix.Node = .label("web", next: [.termination])
  private static let _negative_do: PublicSuffix.Node = .label("do", next: [.termination, _negative_do_art, _negative_do_com, _negative_do_edu, _negative_do_gob, _negative_do_gov, _negative_do_mil, _negative_do_net, _negative_do_org, _negative_do_sld, _negative_do_web])
  private static let _negative_docs: PublicSuffix.Node = .label("docs", next: [.termination])
  private static let _negative_doctor: PublicSuffix.Node = .label("doctor", next: [.termination])
  private static let _negative_dog: PublicSuffix.Node = .label("dog", next: [.termination])
  private static let _negative_domains: PublicSuffix.Node = .label("domains", next: [.termination])
  private static let _negative_dot: PublicSuffix.Node = .label("dot", next: [.termination])
  private static let _negative_download: PublicSuffix.Node = .label("download", next: [.termination])
  private static let _negative_drive: PublicSuffix.Node = .label("drive", next: [.termination])
  private static let _negative_dtv: PublicSuffix.Node = .label("dtv", next: [.termination])
  private static let _negative_dubai: PublicSuffix.Node = .label("dubai", next: [.termination])
  private static let _negative_dunlop: PublicSuffix.Node = .label("dunlop", next: [.termination])
  private static let _negative_dupont: PublicSuffix.Node = .label("dupont", next: [.termination])
  private static let _negative_durban: PublicSuffix.Node = .label("durban", next: [.termination])
  private static let _negative_dvag: PublicSuffix.Node = .label("dvag", next: [.termination])
  private static let _negative_dvr: PublicSuffix.Node = .label("dvr", next: [.termination])
  private static let _negative_dz_art: PublicSuffix.Node = .label("art", next: [.termination])
  private static let _negative_dz_asso: PublicSuffix.Node = .label("asso", next: [.termination])
  private static let _negative_dz_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_dz_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_dz_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_dz_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_dz_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_dz_pol: PublicSuffix.Node = .label("pol", next: [.termination])
  private static let _negative_dz_soc: PublicSuffix.Node = .label("soc", next: [.termination])
  private static let _negative_dz_tm: PublicSuffix.Node = .label("tm", next: [.termination])
  private static let _negative_dz: PublicSuffix.Node = .label("dz", next: [.termination, _negative_dz_art, _negative_dz_asso, _negative_dz_com, _negative_dz_edu, _negative_dz_gov, _negative_dz_net, _negative_dz_org, _negative_dz_pol, _negative_dz_soc, _negative_dz_tm])
  private static let _negative_earth_dapps_bzz: PublicSuffix.Node = .label("bzz", next: [.any])
  private static let _negative_earth_dapps: PublicSuffix.Node = .label("dapps", next: [.any, _negative_earth_dapps_bzz])
  private static let _negative_earth: PublicSuffix.Node = .label("earth", next: [.termination, _negative_earth_dapps])
  private static let _negative_eat: PublicSuffix.Node = .label("eat", next: [.termination])
  private static let _negative_ec_base: PublicSuffix.Node = .label("base", next: [.termination])
  private static let _negative_ec_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_ec_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_ec_fin: PublicSuffix.Node = .label("fin", next: [.termination])
  private static let _negative_ec_gob: PublicSuffix.Node = .label("gob", next: [.termination])
  private static let _negative_ec_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_ec_info: PublicSuffix.Node = .label("info", next: [.termination])
  private static let _negative_ec_k12: PublicSuffix.Node = .label("k12", next: [.termination])
  private static let _negative_ec_med: PublicSuffix.Node = .label("med", next: [.termination])
  private static let _negative_ec_mil: PublicSuffix.Node = .label("mil", next: [.termination])
  private static let _negative_ec_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_ec_official: PublicSuffix.Node = .label("official", next: [.termination])
  private static let _negative_ec_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_ec_pro: PublicSuffix.Node = .label("pro", next: [.termination])
  private static let _negative_ec: PublicSuffix.Node = .label("ec", next: [.termination, _negative_ec_base, _negative_ec_com, _negative_ec_edu, _negative_ec_fin, _negative_ec_gob, _negative_ec_gov, _negative_ec_info, _negative_ec_k12, _negative_ec_med, _negative_ec_mil, _negative_ec_net, _negative_ec_official, _negative_ec_org, _negative_ec_pro])
  private static let _negative_eco: PublicSuffix.Node = .label("eco", next: [.termination])
  private static let _negative_edeka: PublicSuffix.Node = .label("edeka", next: [.termination])
  private static let _negative_edu_rit_gitHpages: PublicSuffix.Node = .label("git-pages", next: [.termination])
  private static let _negative_edu_rit: PublicSuffix.Node = .label("rit", next: [_negative_edu_rit_gitHpages])
  private static let _negative_edu: PublicSuffix.Node = .label("edu", next: [.termination, _negative_edu_rit])
  private static let _negative_education_co: PublicSuffix.Node = .label("co", next: [.termination])
  private static let _negative_education: PublicSuffix.Node = .label("education", next: [.termination, _negative_education_co])
  private static let _negative_ee_aip: PublicSuffix.Node = .label("aip", next: [.termination])
  private static let _negative_ee_com_blogspot: PublicSuffix.Node = .label("blogspot", next: [.termination])
  private static let _negative_ee_com: PublicSuffix.Node = .label("com", next: [.termination, _negative_ee_com_blogspot])
  private static let _negative_ee_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_ee_fie: PublicSuffix.Node = .label("fie", next: [.termination])
  private static let _negative_ee_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_ee_lib: PublicSuffix.Node = .label("lib", next: [.termination])
  private static let _negative_ee_med: PublicSuffix.Node = .label("med", next: [.termination])
  private static let _negative_ee_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_ee_pri: PublicSuffix.Node = .label("pri", next: [.termination])
  private static let _negative_ee_riik: PublicSuffix.Node = .label("riik", next: [.termination])
  private static let _negative_ee: PublicSuffix.Node = .label("ee", next: [.termination, _negative_ee_aip, _negative_ee_com, _negative_ee_edu, _negative_ee_fie, _negative_ee_gov, _negative_ee_lib, _negative_ee_med, _negative_ee_org, _negative_ee_pri, _negative_ee_riik])
  private static let _negative_eg_com_blogspot: PublicSuffix.Node = .label("blogspot", next: [.termination])
  private static let _negative_eg_com: PublicSuffix.Node = .label("com", next: [.termination, _negative_eg_com_blogspot])
  private static let _negative_eg_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_eg_eun: PublicSuffix.Node = .label("eun", next: [.termination])
  private static let _negative_eg_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_eg_mil: PublicSuffix.Node = .label("mil", next: [.termination])
  private static let _negative_eg_name: PublicSuffix.Node = .label("name", next: [.termination])
  private static let _negative_eg_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_eg_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_eg_sci: PublicSuffix.Node = .label("sci", next: [.termination])
  private static let _negative_eg: PublicSuffix.Node = .label("eg", next: [.termination, _negative_eg_com, _negative_eg_edu, _negative_eg_eun, _negative_eg_gov, _negative_eg_mil, _negative_eg_name, _negative_eg_net, _negative_eg_org, _negative_eg_sci])
  private static let _negative_email: PublicSuffix.Node = .label("email", next: [.termination])
  private static let _negative_emerck: PublicSuffix.Node = .label("emerck", next: [.termination])
  private static let _negative_energy: PublicSuffix.Node = .label("energy", next: [.termination])
  private static let _negative_engineer: PublicSuffix.Node = .label("engineer", next: [.termination])
  private static let _negative_engineering: PublicSuffix.Node = .label("engineering", next: [.termination])
  private static let _negative_enterprises: PublicSuffix.Node = .label("enterprises", next: [.termination])
  private static let _negative_epson: PublicSuffix.Node = .label("epson", next: [.termination])
  private static let _negative_equipment: PublicSuffix.Node = .label("equipment", next: [.termination])
  private static let _negative_er: PublicSuffix.Node = .label("er", next: [.any])
  private static let _negative_ericsson: PublicSuffix.Node = .label("ericsson", next: [.termination])
  private static let _negative_erni: PublicSuffix.Node = .label("erni", next: [.termination])
  private static let _negative_es_com_blogspot: PublicSuffix.Node = .label("blogspot", next: [.termination])
  private static let _negative_es_com: PublicSuffix.Node = .label("com", next: [.termination, _negative_es_com_blogspot])
  private static let _negative_es_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_es_gob: PublicSuffix.Node = .label("gob", next: [.termination])
  private static let _negative_es_myspreadshop: PublicSuffix.Node = .label("myspreadshop", next: [.termination])
  private static let _negative_es_nom: PublicSuffix.Node = .label("nom", next: [.termination])
  private static let _negative_es_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_es: PublicSuffix.Node = .label("es", next: [.termination, _negative_es_com, _negative_es_edu, _negative_es_gob, _negative_es_myspreadshop, _negative_es_nom, _negative_es_org])
  private static let _negative_esq: PublicSuffix.Node = .label("esq", next: [.termination])
  private static let _negative_estate_compute: PublicSuffix.Node = .label("compute", next: [.any])
  private static let _negative_estate: PublicSuffix.Node = .label("estate", next: [.termination, _negative_estate_compute])
  private static let _negative_et_biz: PublicSuffix.Node = .label("biz", next: [.termination])
  private static let _negative_et_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_et_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_et_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_et_info: PublicSuffix.Node = .label("info", next: [.termination])
  private static let _negative_et_name: PublicSuffix.Node = .label("name", next: [.termination])
  private static let _negative_et_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_et_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_et: PublicSuffix.Node = .label("et", next: [.termination, _negative_et_biz, _negative_et_com, _negative_et_edu, _negative_et_gov, _negative_et_info, _negative_et_name, _negative_et_net, _negative_et_org])
  private static let _negative_etisalat: PublicSuffix.Node = .label("etisalat", next: [.termination])
  private static let _negative_eu_airkitapps: PublicSuffix.Node = .label("airkitapps", next: [.termination])
  private static let _negative_eu_barsy: PublicSuffix.Node = .label("barsy", next: [.termination])
  private static let _negative_eu_cloudns: PublicSuffix.Node = .label("cloudns", next: [.termination])
  private static let _negative_eu_diskstation: PublicSuffix.Node = .label("diskstation", next: [.termination])
  private static let _negative_eu_dogado_jelastic: PublicSuffix.Node = .label("jelastic", next: [.termination])
  private static let _negative_eu_dogado: PublicSuffix.Node = .label("dogado", next: [_negative_eu_dogado_jelastic])
  private static let _negative_eu_mycd: PublicSuffix.Node = .label("mycd", next: [.termination])
  private static let _negative_eu_spdns: PublicSuffix.Node = .label("spdns", next: [.termination])
  private static let _negative_eu_transurl: PublicSuffix.Node = .label("transurl", next: [.any])
  private static let _negative_eu_wellbeingzone: PublicSuffix.Node = .label("wellbeingzone", next: [.termination])
  private static let _negative_eu: PublicSuffix.Node = .label("eu", next: [.termination, _negative_eu_airkitapps, _negative_eu_barsy, _negative_eu_cloudns, _negative_eu_diskstation, _negative_eu_dogado, _negative_eu_mycd, _negative_eu_spdns, _negative_eu_transurl, _negative_eu_wellbeingzone])
  private static let _negative_eurovision: PublicSuffix.Node = .label("eurovision", next: [.termination])
  private static let _negative_eus_party_user: PublicSuffix.Node = .label("user", next: [.termination])
  private static let _negative_eus_party: PublicSuffix.Node = .label("party", next: [_negative_eus_party_user])
  private static let _negative_eus: PublicSuffix.Node = .label("eus", next: [.termination, _negative_eus_party])
  private static let _negative_events_co: PublicSuffix.Node = .label("co", next: [.termination])
  private static let _negative_events_koobin: PublicSuffix.Node = .label("koobin", next: [.termination])
  private static let _negative_events: PublicSuffix.Node = .label("events", next: [.termination, _negative_events_co, _negative_events_koobin])
  private static let _negative_exchange: PublicSuffix.Node = .label("exchange", next: [.termination])
  private static let _negative_expert: PublicSuffix.Node = .label("expert", next: [.termination])
  private static let _negative_exposed: PublicSuffix.Node = .label("exposed", next: [.termination])
  private static let _negative_express: PublicSuffix.Node = .label("express", next: [.termination])
  private static let _negative_extraspace: PublicSuffix.Node = .label("extraspace", next: [.termination])
  private static let _negative_fage: PublicSuffix.Node = .label("fage", next: [.termination])
  private static let _negative_fail: PublicSuffix.Node = .label("fail", next: [.termination])
  private static let _negative_fairwinds: PublicSuffix.Node = .label("fairwinds", next: [.termination])
  private static let _negative_faith_ybo: PublicSuffix.Node = .label("ybo", next: [.termination])
  private static let _negative_faith: PublicSuffix.Node = .label("faith", next: [.termination, _negative_faith_ybo])
  private static let _negative_family: PublicSuffix.Node = .label("family", next: [.termination])
  private static let _negative_fan: PublicSuffix.Node = .label("fan", next: [.termination])
  private static let _negative_fans: PublicSuffix.Node = .label("fans", next: [.termination])
  private static let _negative_farm_storj: PublicSuffix.Node = .label("storj", next: [.termination])
  private static let _negative_farm: PublicSuffix.Node = .label("farm", next: [.termination, _negative_farm_storj])
  private static let _negative_farmers: PublicSuffix.Node = .label("farmers", next: [.termination])
  private static let _negative_fashion_of: PublicSuffix.Node = .label("of", next: [.termination])
  private static let _negative_fashion: PublicSuffix.Node = .label("fashion", next: [.termination, _negative_fashion_of])
  private static let _negative_fast: PublicSuffix.Node = .label("fast", next: [.termination])
  private static let _negative_fedex: PublicSuffix.Node = .label("fedex", next: [.termination])
  private static let _negative_feedback: PublicSuffix.Node = .label("feedback", next: [.termination])
  private static let _negative_ferrari: PublicSuffix.Node = .label("ferrari", next: [.termination])
  private static let _negative_ferrero: PublicSuffix.Node = .label("ferrero", next: [.termination])
  private static let _negative_fi_aland: PublicSuffix.Node = .label("aland", next: [.termination])
  private static let _negative_fi_blogspot: PublicSuffix.Node = .label("blogspot", next: [.termination])
  private static let _negative_fi_cloudplatform_fi: PublicSuffix.Node = .label("fi", next: [.termination])
  private static let _negative_fi_cloudplatform: PublicSuffix.Node = .label("cloudplatform", next: [_negative_fi_cloudplatform_fi])
  private static let _negative_fi_datacenter_demo: PublicSuffix.Node = .label("demo", next: [.termination])
  private static let _negative_fi_datacenter_paas: PublicSuffix.Node = .label("paas", next: [.termination])
  private static let _negative_fi_datacenter: PublicSuffix.Node = .label("datacenter", next: [_negative_fi_datacenter_demo, _negative_fi_datacenter_paas])
  private static let _negative_fi_dy: PublicSuffix.Node = .label("dy", next: [.termination])
  private static let _negative_fi_häkkinen: PublicSuffix.Node = .label("häkkinen", next: [.termination])
  private static let _negative_fi_iki: PublicSuffix.Node = .label("iki", next: [.termination])
  private static let _negative_fi_kapsi: PublicSuffix.Node = .label("kapsi", next: [.termination])
  private static let _negative_fi_myspreadshop: PublicSuffix.Node = .label("myspreadshop", next: [.termination])
  private static let _negative_fi: PublicSuffix.Node = .label("fi", next: [.termination, _negative_fi_aland, _negative_fi_blogspot, _negative_fi_cloudplatform, _negative_fi_datacenter, _negative_fi_dy, _negative_fi_häkkinen, _negative_fi_iki, _negative_fi_kapsi, _negative_fi_myspreadshop])
  private static let _negative_fiat: PublicSuffix.Node = .label("fiat", next: [.termination])
  private static let _negative_fidelity: PublicSuffix.Node = .label("fidelity", next: [.termination])
  private static let _negative_fido: PublicSuffix.Node = .label("fido", next: [.termination])
  private static let _negative_film: PublicSuffix.Node = .label("film", next: [.termination])
  private static let _negative_final: PublicSuffix.Node = .label("final", next: [.termination])
  private static let _negative_finance: PublicSuffix.Node = .label("finance", next: [.termination])
  private static let _negative_financial_co: PublicSuffix.Node = .label("co", next: [.termination])
  private static let _negative_financial: PublicSuffix.Node = .label("financial", next: [.termination, _negative_financial_co])
  private static let _negative_fire: PublicSuffix.Node = .label("fire", next: [.termination])
  private static let _negative_firestone: PublicSuffix.Node = .label("firestone", next: [.termination])
  private static let _negative_firmdale: PublicSuffix.Node = .label("firmdale", next: [.termination])
  private static let _negative_fish: PublicSuffix.Node = .label("fish", next: [.termination])
  private static let _negative_fishing: PublicSuffix.Node = .label("fishing", next: [.termination])
  private static let _negative_fit: PublicSuffix.Node = .label("fit", next: [.termination])
  private static let _negative_fitness: PublicSuffix.Node = .label("fitness", next: [.termination])
  private static let _negative_fj_ac: PublicSuffix.Node = .label("ac", next: [.termination])
  private static let _negative_fj_biz: PublicSuffix.Node = .label("biz", next: [.termination])
  private static let _negative_fj_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_fj_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_fj_info: PublicSuffix.Node = .label("info", next: [.termination])
  private static let _negative_fj_mil: PublicSuffix.Node = .label("mil", next: [.termination])
  private static let _negative_fj_name: PublicSuffix.Node = .label("name", next: [.termination])
  private static let _negative_fj_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_fj_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_fj_pro: PublicSuffix.Node = .label("pro", next: [.termination])
  private static let _negative_fj: PublicSuffix.Node = .label("fj", next: [.termination, _negative_fj_ac, _negative_fj_biz, _negative_fj_com, _negative_fj_gov, _negative_fj_info, _negative_fj_mil, _negative_fj_name, _negative_fj_net, _negative_fj_org, _negative_fj_pro])
  private static let _negative_fk: PublicSuffix.Node = .label("fk", next: [.any])
  private static let _negative_flickr: PublicSuffix.Node = .label("flickr", next: [.termination])
  private static let _negative_flights: PublicSuffix.Node = .label("flights", next: [.termination])
  private static let _negative_flir: PublicSuffix.Node = .label("flir", next: [.termination])
  private static let _negative_florist: PublicSuffix.Node = .label("florist", next: [.termination])
  private static let _negative_flowers: PublicSuffix.Node = .label("flowers", next: [.termination])
  private static let _negative_fly: PublicSuffix.Node = .label("fly", next: [.termination])
  private static let _negative_fm_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_fm_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_fm_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_fm_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_fm_radio: PublicSuffix.Node = .label("radio", next: [.termination])
  private static let _negative_fm: PublicSuffix.Node = .label("fm", next: [.termination, _negative_fm_com, _negative_fm_edu, _negative_fm_net, _negative_fm_org, _negative_fm_radio])
  private static let _negative_fo: PublicSuffix.Node = .label("fo", next: [.termination])
  private static let _negative_foo: PublicSuffix.Node = .label("foo", next: [.termination])
  private static let _negative_food: PublicSuffix.Node = .label("food", next: [.termination])
  private static let _negative_foodnetwork: PublicSuffix.Node = .label("foodnetwork", next: [.termination])
  private static let _negative_football: PublicSuffix.Node = .label("football", next: [.termination])
  private static let _negative_ford: PublicSuffix.Node = .label("ford", next: [.termination])
  private static let _negative_forex: PublicSuffix.Node = .label("forex", next: [.termination])
  private static let _negative_forsale: PublicSuffix.Node = .label("forsale", next: [.termination])
  private static let _negative_forum: PublicSuffix.Node = .label("forum", next: [.termination])
  private static let _negative_foundation: PublicSuffix.Node = .label("foundation", next: [.termination])
  private static let _negative_fox: PublicSuffix.Node = .label("fox", next: [.termination])
  private static let _negative_fr_aeroport: PublicSuffix.Node = .label("aeroport", next: [.termination])
  private static let _negative_fr_asso: PublicSuffix.Node = .label("asso", next: [.termination])
  private static let _negative_fr_avocat: PublicSuffix.Node = .label("avocat", next: [.termination])
  private static let _negative_fr_avoues: PublicSuffix.Node = .label("avoues", next: [.termination])
  private static let _negative_fr_blogspot: PublicSuffix.Node = .label("blogspot", next: [.termination])
  private static let _negative_fr_cci: PublicSuffix.Node = .label("cci", next: [.termination])
  private static let _negative_fr_chambagri: PublicSuffix.Node = .label("chambagri", next: [.termination])
  private static let _negative_fr_chirurgiensHdentistes: PublicSuffix.Node = .label("chirurgiens-dentistes", next: [.termination])
  private static let _negative_fr_chirurgiensHdentistesHenHfrance: PublicSuffix.Node = .label("chirurgiens-dentistes-en-france", next: [.termination])
  private static let _negative_fr_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_fr_dedibox: PublicSuffix.Node = .label("dedibox", next: [.termination])
  private static let _negative_fr_enHroot: PublicSuffix.Node = .label("en-root", next: [.termination])
  private static let _negative_fr_expertsHcomptables: PublicSuffix.Node = .label("experts-comptables", next: [.termination])
  private static let _negative_fr_fbxHos: PublicSuffix.Node = .label("fbx-os", next: [.termination])
  private static let _negative_fr_fbxos: PublicSuffix.Node = .label("fbxos", next: [.termination])
  private static let _negative_fr_freeboxHos: PublicSuffix.Node = .label("freebox-os", next: [.termination])
  private static let _negative_fr_freeboxos: PublicSuffix.Node = .label("freeboxos", next: [.termination])
  private static let _negative_fr_geometreHexpert: PublicSuffix.Node = .label("geometre-expert", next: [.termination])
  private static let _negative_fr_goupile: PublicSuffix.Node = .label("goupile", next: [.termination])
  private static let _negative_fr_gouv: PublicSuffix.Node = .label("gouv", next: [.termination])
  private static let _negative_fr_greta: PublicSuffix.Node = .label("greta", next: [.termination])
  private static let _negative_fr_huissierHjustice: PublicSuffix.Node = .label("huissier-justice", next: [.termination])
  private static let _negative_fr_medecin: PublicSuffix.Node = .label("medecin", next: [.termination])
  private static let _negative_fr_myspreadshop: PublicSuffix.Node = .label("myspreadshop", next: [.termination])
  private static let _negative_fr_nom: PublicSuffix.Node = .label("nom", next: [.termination])
  private static let _negative_fr_notaires: PublicSuffix.Node = .label("notaires", next: [.termination])
  private static let _negative_fr_onHweb: PublicSuffix.Node = .label("on-web", next: [.termination])
  private static let _negative_fr_pharmacien: PublicSuffix.Node = .label("pharmacien", next: [.termination])
  private static let _negative_fr_port: PublicSuffix.Node = .label("port", next: [.termination])
  private static let _negative_fr_prd: PublicSuffix.Node = .label("prd", next: [.termination])
  private static let _negative_fr_tm: PublicSuffix.Node = .label("tm", next: [.termination])
  private static let _negative_fr_veterinaire: PublicSuffix.Node = .label("veterinaire", next: [.termination])
  private static let _negative_fr_ynh: PublicSuffix.Node = .label("ynh", next: [.termination])
  private static let _negative_fr: PublicSuffix.Node = .label("fr", next: [.termination, _negative_fr_aeroport, _negative_fr_asso, _negative_fr_avocat, _negative_fr_avoues, _negative_fr_blogspot, _negative_fr_cci, _negative_fr_chambagri, _negative_fr_chirurgiensHdentistes, _negative_fr_chirurgiensHdentistesHenHfrance, _negative_fr_com, _negative_fr_dedibox, _negative_fr_enHroot, _negative_fr_expertsHcomptables, _negative_fr_fbxHos, _negative_fr_fbxos, _negative_fr_freeboxHos, _negative_fr_freeboxos, _negative_fr_geometreHexpert, _negative_fr_goupile, _negative_fr_gouv, _negative_fr_greta, _negative_fr_huissierHjustice, _negative_fr_medecin, _negative_fr_myspreadshop, _negative_fr_nom, _negative_fr_notaires, _negative_fr_onHweb, _negative_fr_pharmacien, _negative_fr_port, _negative_fr_prd, _negative_fr_tm, _negative_fr_veterinaire, _negative_fr_ynh])
  private static let _negative_free: PublicSuffix.Node = .label("free", next: [.termination])
  private static let _negative_fresenius: PublicSuffix.Node = .label("fresenius", next: [.termination])
  private static let _negative_frl: PublicSuffix.Node = .label("frl", next: [.termination])
  private static let _negative_frogans: PublicSuffix.Node = .label("frogans", next: [.termination])
  private static let _negative_frontdoor: PublicSuffix.Node = .label("frontdoor", next: [.termination])
  private static let _negative_frontier: PublicSuffix.Node = .label("frontier", next: [.termination])
  private static let _negative_ftr: PublicSuffix.Node = .label("ftr", next: [.termination])
  private static let _negative_fujitsu: PublicSuffix.Node = .label("fujitsu", next: [.termination])
  private static let _negative_fun: PublicSuffix.Node = .label("fun", next: [.termination])
  private static let _negative_fund: PublicSuffix.Node = .label("fund", next: [.termination])
  private static let _negative_furniture: PublicSuffix.Node = .label("furniture", next: [.termination])
  private static let _negative_futbol: PublicSuffix.Node = .label("futbol", next: [.termination])
  private static let _negative_fyi: PublicSuffix.Node = .label("fyi", next: [.termination])
  private static let _negative_ga: PublicSuffix.Node = .label("ga", next: [.termination])
  private static let _negative_gal: PublicSuffix.Node = .label("gal", next: [.termination])
  private static let _negative_gallery: PublicSuffix.Node = .label("gallery", next: [.termination])
  private static let _negative_gallo: PublicSuffix.Node = .label("gallo", next: [.termination])
  private static let _negative_gallup: PublicSuffix.Node = .label("gallup", next: [.termination])
  private static let _negative_game: PublicSuffix.Node = .label("game", next: [.termination])
  private static let _negative_games: PublicSuffix.Node = .label("games", next: [.termination])
  private static let _negative_gap: PublicSuffix.Node = .label("gap", next: [.termination])
  private static let _negative_garden: PublicSuffix.Node = .label("garden", next: [.termination])
  private static let _negative_gay: PublicSuffix.Node = .label("gay", next: [.termination])
  private static let _negative_gb: PublicSuffix.Node = .label("gb", next: [.termination])
  private static let _negative_gbiz: PublicSuffix.Node = .label("gbiz", next: [.termination])
  private static let _negative_gd_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_gd_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_gd: PublicSuffix.Node = .label("gd", next: [.termination, _negative_gd_edu, _negative_gd_gov])
  private static let _negative_gdn_cnpy: PublicSuffix.Node = .label("cnpy", next: [.termination])
  private static let _negative_gdn: PublicSuffix.Node = .label("gdn", next: [.termination, _negative_gdn_cnpy])
  private static let _negative_ge_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_ge_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_ge_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_ge_mil: PublicSuffix.Node = .label("mil", next: [.termination])
  private static let _negative_ge_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_ge_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_ge_pvt: PublicSuffix.Node = .label("pvt", next: [.termination])
  private static let _negative_ge: PublicSuffix.Node = .label("ge", next: [.termination, _negative_ge_com, _negative_ge_edu, _negative_ge_gov, _negative_ge_mil, _negative_ge_net, _negative_ge_org, _negative_ge_pvt])
  private static let _negative_gea: PublicSuffix.Node = .label("gea", next: [.termination])
  private static let _negative_gent: PublicSuffix.Node = .label("gent", next: [.termination])
  private static let _negative_genting: PublicSuffix.Node = .label("genting", next: [.termination])
  private static let _negative_george: PublicSuffix.Node = .label("george", next: [.termination])
  private static let _negative_gf: PublicSuffix.Node = .label("gf", next: [.termination])
  private static let _negative_gg_co: PublicSuffix.Node = .label("co", next: [.termination])
  private static let _negative_gg_cya: PublicSuffix.Node = .label("cya", next: [.termination])
  private static let _negative_gg_kaas: PublicSuffix.Node = .label("kaas", next: [.termination])
  private static let _negative_gg_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_gg_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_gg_panel_daemon: PublicSuffix.Node = .label("daemon", next: [.termination])
  private static let _negative_gg_panel: PublicSuffix.Node = .label("panel", next: [.termination, _negative_gg_panel_daemon])
  private static let _negative_gg: PublicSuffix.Node = .label("gg", next: [.termination, _negative_gg_co, _negative_gg_cya, _negative_gg_kaas, _negative_gg_net, _negative_gg_org, _negative_gg_panel])
  private static let _negative_ggee: PublicSuffix.Node = .label("ggee", next: [.termination])
  private static let _negative_gh_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_gh_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_gh_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_gh_mil: PublicSuffix.Node = .label("mil", next: [.termination])
  private static let _negative_gh_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_gh: PublicSuffix.Node = .label("gh", next: [.termination, _negative_gh_com, _negative_gh_edu, _negative_gh_gov, _negative_gh_mil, _negative_gh_org])
  private static let _negative_gi_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_gi_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_gi_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_gi_ltd: PublicSuffix.Node = .label("ltd", next: [.termination])
  private static let _negative_gi_mod: PublicSuffix.Node = .label("mod", next: [.termination])
  private static let _negative_gi_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_gi: PublicSuffix.Node = .label("gi", next: [.termination, _negative_gi_com, _negative_gi_edu, _negative_gi_gov, _negative_gi_ltd, _negative_gi_mod, _negative_gi_org])
  private static let _negative_gift: PublicSuffix.Node = .label("gift", next: [.termination])
  private static let _negative_gifts: PublicSuffix.Node = .label("gifts", next: [.termination])
  private static let _negative_gives: PublicSuffix.Node = .label("gives", next: [.termination])
  private static let _negative_giving: PublicSuffix.Node = .label("giving", next: [.termination])
  private static let _negative_gl_biz: PublicSuffix.Node = .label("biz", next: [.termination])
  private static let _negative_gl_co: PublicSuffix.Node = .label("co", next: [.termination])
  private static let _negative_gl_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_gl_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_gl_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_gl_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_gl_xx: PublicSuffix.Node = .label("xx", next: [.termination])
  private static let _negative_gl: PublicSuffix.Node = .label("gl", next: [.termination, _negative_gl_biz, _negative_gl_co, _negative_gl_com, _negative_gl_edu, _negative_gl_net, _negative_gl_org, _negative_gl_xx])
  private static let _negative_glass: PublicSuffix.Node = .label("glass", next: [.termination])
  private static let _negative_gle: PublicSuffix.Node = .label("gle", next: [.termination])
  private static let _negative_global: PublicSuffix.Node = .label("global", next: [.termination])
  private static let _negative_globo: PublicSuffix.Node = .label("globo", next: [.termination])
  private static let _negative_gm: PublicSuffix.Node = .label("gm", next: [.termination])
  private static let _negative_gmail: PublicSuffix.Node = .label("gmail", next: [.termination])
  private static let _negative_gmbh: PublicSuffix.Node = .label("gmbh", next: [.termination])
  private static let _negative_gmo: PublicSuffix.Node = .label("gmo", next: [.termination])
  private static let _negative_gmx: PublicSuffix.Node = .label("gmx", next: [.termination])
  private static let _negative_gn_ac: PublicSuffix.Node = .label("ac", next: [.termination])
  private static let _negative_gn_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_gn_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_gn_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_gn_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_gn_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_gn: PublicSuffix.Node = .label("gn", next: [.termination, _negative_gn_ac, _negative_gn_com, _negative_gn_edu, _negative_gn_gov, _negative_gn_net, _negative_gn_org])
  private static let _negative_godaddy: PublicSuffix.Node = .label("godaddy", next: [.termination])
  private static let _negative_gold: PublicSuffix.Node = .label("gold", next: [.termination])
  private static let _negative_goldpoint: PublicSuffix.Node = .label("goldpoint", next: [.termination])
  private static let _negative_golf: PublicSuffix.Node = .label("golf", next: [.termination])
  private static let _negative_goo: PublicSuffix.Node = .label("goo", next: [.termination])
  private static let _negative_goodyear: PublicSuffix.Node = .label("goodyear", next: [.termination])
  private static let _negative_goog_cloud: PublicSuffix.Node = .label("cloud", next: [.termination])
  private static let _negative_goog_translate: PublicSuffix.Node = .label("translate", next: [.termination])
  private static let _negative_goog_usercontent: PublicSuffix.Node = .label("usercontent", next: [.any])
  private static let _negative_goog: PublicSuffix.Node = .label("goog", next: [.termination, _negative_goog_cloud, _negative_goog_translate, _negative_goog_usercontent])
  private static let _negative_google: PublicSuffix.Node = .label("google", next: [.termination])
  private static let _negative_gop: PublicSuffix.Node = .label("gop", next: [.termination])
  private static let _negative_got: PublicSuffix.Node = .label("got", next: [.termination])
  private static let _negative_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_gp_app: PublicSuffix.Node = .label("app", next: [.termination])
  private static let _negative_gp_asso: PublicSuffix.Node = .label("asso", next: [.termination])
  private static let _negative_gp_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_gp_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_gp_mobi: PublicSuffix.Node = .label("mobi", next: [.termination])
  private static let _negative_gp_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_gp_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_gp: PublicSuffix.Node = .label("gp", next: [.termination, _negative_gp_app, _negative_gp_asso, _negative_gp_com, _negative_gp_edu, _negative_gp_mobi, _negative_gp_net, _negative_gp_org])
  private static let _negative_gq: PublicSuffix.Node = .label("gq", next: [.termination])
  private static let _negative_gr_blogspot: PublicSuffix.Node = .label("blogspot", next: [.termination])
  private static let _negative_gr_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_gr_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_gr_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_gr_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_gr_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_gr: PublicSuffix.Node = .label("gr", next: [.termination, _negative_gr_blogspot, _negative_gr_com, _negative_gr_edu, _negative_gr_gov, _negative_gr_net, _negative_gr_org])
  private static let _negative_grainger: PublicSuffix.Node = .label("grainger", next: [.termination])
  private static let _negative_graphics: PublicSuffix.Node = .label("graphics", next: [.termination])
  private static let _negative_gratis: PublicSuffix.Node = .label("gratis", next: [.termination])
  private static let _negative_green: PublicSuffix.Node = .label("green", next: [.termination])
  private static let _negative_gripe: PublicSuffix.Node = .label("gripe", next: [.termination])
  private static let _negative_grocery: PublicSuffix.Node = .label("grocery", next: [.termination])
  private static let _negative_group_discourse: PublicSuffix.Node = .label("discourse", next: [.termination])
  private static let _negative_group: PublicSuffix.Node = .label("group", next: [.termination, _negative_group_discourse])
  private static let _negative_gs: PublicSuffix.Node = .label("gs", next: [.termination])
  private static let _negative_gt_blog: PublicSuffix.Node = .label("blog", next: [.termination])
  private static let _negative_gt_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_gt_de: PublicSuffix.Node = .label("de", next: [.termination])
  private static let _negative_gt_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_gt_gob: PublicSuffix.Node = .label("gob", next: [.termination])
  private static let _negative_gt_ind: PublicSuffix.Node = .label("ind", next: [.termination])
  private static let _negative_gt_mil: PublicSuffix.Node = .label("mil", next: [.termination])
  private static let _negative_gt_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_gt_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_gt_to: PublicSuffix.Node = .label("to", next: [.termination])
  private static let _negative_gt: PublicSuffix.Node = .label("gt", next: [.termination, _negative_gt_blog, _negative_gt_com, _negative_gt_de, _negative_gt_edu, _negative_gt_gob, _negative_gt_ind, _negative_gt_mil, _negative_gt_net, _negative_gt_org, _negative_gt_to])
  private static let _negative_gu_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_gu_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_gu_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_gu_guam: PublicSuffix.Node = .label("guam", next: [.termination])
  private static let _negative_gu_info: PublicSuffix.Node = .label("info", next: [.termination])
  private static let _negative_gu_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_gu_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_gu_web: PublicSuffix.Node = .label("web", next: [.termination])
  private static let _negative_gu: PublicSuffix.Node = .label("gu", next: [.termination, _negative_gu_com, _negative_gu_edu, _negative_gu_gov, _negative_gu_guam, _negative_gu_info, _negative_gu_net, _negative_gu_org, _negative_gu_web])
  private static let _negative_guardian: PublicSuffix.Node = .label("guardian", next: [.termination])
  private static let _negative_gucci: PublicSuffix.Node = .label("gucci", next: [.termination])
  private static let _negative_guge: PublicSuffix.Node = .label("guge", next: [.termination])
  private static let _negative_guide: PublicSuffix.Node = .label("guide", next: [.termination])
  private static let _negative_guitars: PublicSuffix.Node = .label("guitars", next: [.termination])
  private static let _negative_guru: PublicSuffix.Node = .label("guru", next: [.termination])
  private static let _negative_gw: PublicSuffix.Node = .label("gw", next: [.termination])
  private static let _negative_gy_be: PublicSuffix.Node = .label("be", next: [.termination])
  private static let _negative_gy_co: PublicSuffix.Node = .label("co", next: [.termination])
  private static let _negative_gy_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_gy_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_gy_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_gy_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_gy_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_gy: PublicSuffix.Node = .label("gy", next: [.termination, _negative_gy_be, _negative_gy_co, _negative_gy_com, _negative_gy_edu, _negative_gy_gov, _negative_gy_net, _negative_gy_org])
  private static let _negative_hair: PublicSuffix.Node = .label("hair", next: [.termination])
  private static let _negative_hamburg: PublicSuffix.Node = .label("hamburg", next: [.termination])
  private static let _negative_hangout: PublicSuffix.Node = .label("hangout", next: [.termination])
  private static let _negative_haus: PublicSuffix.Node = .label("haus", next: [.termination])
  private static let _negative_hbo: PublicSuffix.Node = .label("hbo", next: [.termination])
  private static let _negative_hdfc: PublicSuffix.Node = .label("hdfc", next: [.termination])
  private static let _negative_hdfcbank: PublicSuffix.Node = .label("hdfcbank", next: [.termination])
  private static let _negative_health_hra: PublicSuffix.Node = .label("hra", next: [.termination])
  private static let _negative_health: PublicSuffix.Node = .label("health", next: [.termination, _negative_health_hra])
  private static let _negative_healthcare: PublicSuffix.Node = .label("healthcare", next: [.termination])
  private static let _negative_help: PublicSuffix.Node = .label("help", next: [.termination])
  private static let _negative_helsinki: PublicSuffix.Node = .label("helsinki", next: [.termination])
  private static let _negative_here: PublicSuffix.Node = .label("here", next: [.termination])
  private static let _negative_hermes: PublicSuffix.Node = .label("hermes", next: [.termination])
  private static let _negative_hgtv: PublicSuffix.Node = .label("hgtv", next: [.termination])
  private static let _negative_hiphop: PublicSuffix.Node = .label("hiphop", next: [.termination])
  private static let _negative_hisamitsu: PublicSuffix.Node = .label("hisamitsu", next: [.termination])
  private static let _negative_hitachi: PublicSuffix.Node = .label("hitachi", next: [.termination])
  private static let _negative_hiv: PublicSuffix.Node = .label("hiv", next: [.termination])
  private static let _negative_hk_blogspot: PublicSuffix.Node = .label("blogspot", next: [.termination])
  private static let _negative_hk_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_hk_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_hk_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_hk_idv: PublicSuffix.Node = .label("idv", next: [.termination])
  private static let _negative_hk_inc: PublicSuffix.Node = .label("inc", next: [.termination])
  private static let _negative_hk_ltd: PublicSuffix.Node = .label("ltd", next: [.termination])
  private static let _negative_hk_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_hk_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_hk_secaas: PublicSuffix.Node = .label("secaas", next: [.termination])
  private static let _negative_hk_个人: PublicSuffix.Node = .label("个人", next: [.termination])
  private static let _negative_hk_個人: PublicSuffix.Node = .label("個人", next: [.termination])
  private static let _negative_hk_公司: PublicSuffix.Node = .label("公司", next: [.termination])
  private static let _negative_hk_政府: PublicSuffix.Node = .label("政府", next: [.termination])
  private static let _negative_hk_敎育: PublicSuffix.Node = .label("敎育", next: [.termination])
  private static let _negative_hk_教育: PublicSuffix.Node = .label("教育", next: [.termination])
  private static let _negative_hk_箇人: PublicSuffix.Node = .label("箇人", next: [.termination])
  private static let _negative_hk_組織: PublicSuffix.Node = .label("組織", next: [.termination])
  private static let _negative_hk_組织: PublicSuffix.Node = .label("組织", next: [.termination])
  private static let _negative_hk_網絡: PublicSuffix.Node = .label("網絡", next: [.termination])
  private static let _negative_hk_網络: PublicSuffix.Node = .label("網络", next: [.termination])
  private static let _negative_hk_组織: PublicSuffix.Node = .label("组織", next: [.termination])
  private static let _negative_hk_组织: PublicSuffix.Node = .label("组织", next: [.termination])
  private static let _negative_hk_网絡: PublicSuffix.Node = .label("网絡", next: [.termination])
  private static let _negative_hk_网络: PublicSuffix.Node = .label("网络", next: [.termination])
  private static let _negative_hk: PublicSuffix.Node = .label("hk", next: [.termination, _negative_hk_blogspot, _negative_hk_com, _negative_hk_edu, _negative_hk_gov, _negative_hk_idv, _negative_hk_inc, _negative_hk_ltd, _negative_hk_net, _negative_hk_org, _negative_hk_secaas, _negative_hk_个人, _negative_hk_個人, _negative_hk_公司, _negative_hk_政府, _negative_hk_敎育, _negative_hk_教育, _negative_hk_箇人, _negative_hk_組織, _negative_hk_組织, _negative_hk_網絡, _negative_hk_網络, _negative_hk_组織, _negative_hk_组织, _negative_hk_网絡, _negative_hk_网络])
  private static let _negative_hkt: PublicSuffix.Node = .label("hkt", next: [.termination])
  private static let _negative_hm: PublicSuffix.Node = .label("hm", next: [.termination])
  private static let _negative_hn_cc: PublicSuffix.Node = .label("cc", next: [.termination])
  private static let _negative_hn_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_hn_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_hn_gob: PublicSuffix.Node = .label("gob", next: [.termination])
  private static let _negative_hn_mil: PublicSuffix.Node = .label("mil", next: [.termination])
  private static let _negative_hn_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_hn_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_hn: PublicSuffix.Node = .label("hn", next: [.termination, _negative_hn_cc, _negative_hn_com, _negative_hn_edu, _negative_hn_gob, _negative_hn_mil, _negative_hn_net, _negative_hn_org])
  private static let _negative_hockey: PublicSuffix.Node = .label("hockey", next: [.termination])
  private static let _negative_holdings: PublicSuffix.Node = .label("holdings", next: [.termination])
  private static let _negative_holiday: PublicSuffix.Node = .label("holiday", next: [.termination])
  private static let _negative_homedepot: PublicSuffix.Node = .label("homedepot", next: [.termination])
  private static let _negative_homegoods: PublicSuffix.Node = .label("homegoods", next: [.termination])
  private static let _negative_homes: PublicSuffix.Node = .label("homes", next: [.termination])
  private static let _negative_homesense: PublicSuffix.Node = .label("homesense", next: [.termination])
  private static let _negative_honda: PublicSuffix.Node = .label("honda", next: [.termination])
  private static let _negative_horse: PublicSuffix.Node = .label("horse", next: [.termination])
  private static let _negative_hospital: PublicSuffix.Node = .label("hospital", next: [.termination])
  private static let _negative_host_cloudaccess: PublicSuffix.Node = .label("cloudaccess", next: [.termination])
  private static let _negative_host_easypanel: PublicSuffix.Node = .label("easypanel", next: [.termination])
  private static let _negative_host_fastvps: PublicSuffix.Node = .label("fastvps", next: [.termination])
  private static let _negative_host_freesite: PublicSuffix.Node = .label("freesite", next: [.termination])
  private static let _negative_host_half: PublicSuffix.Node = .label("half", next: [.termination])
  private static let _negative_host_jele: PublicSuffix.Node = .label("jele", next: [.termination])
  private static let _negative_host_mircloud: PublicSuffix.Node = .label("mircloud", next: [.termination])
  private static let _negative_host_myfast: PublicSuffix.Node = .label("myfast", next: [.termination])
  private static let _negative_host_pcloud: PublicSuffix.Node = .label("pcloud", next: [.termination])
  private static let _negative_host_tempurl: PublicSuffix.Node = .label("tempurl", next: [.termination])
  private static let _negative_host_wpmudev: PublicSuffix.Node = .label("wpmudev", next: [.termination])
  private static let _negative_host: PublicSuffix.Node = .label("host", next: [.termination, _negative_host_cloudaccess, _negative_host_easypanel, _negative_host_fastvps, _negative_host_freesite, _negative_host_half, _negative_host_jele, _negative_host_mircloud, _negative_host_myfast, _negative_host_pcloud, _negative_host_tempurl, _negative_host_wpmudev])
  private static let _negative_hosting_opencraft: PublicSuffix.Node = .label("opencraft", next: [.termination])
  private static let _negative_hosting: PublicSuffix.Node = .label("hosting", next: [.termination, _negative_hosting_opencraft])
  private static let _negative_hot: PublicSuffix.Node = .label("hot", next: [.termination])
  private static let _negative_hoteles: PublicSuffix.Node = .label("hoteles", next: [.termination])
  private static let _negative_hotels: PublicSuffix.Node = .label("hotels", next: [.termination])
  private static let _negative_hotmail: PublicSuffix.Node = .label("hotmail", next: [.termination])
  private static let _negative_house: PublicSuffix.Node = .label("house", next: [.termination])
  private static let _negative_how: PublicSuffix.Node = .label("how", next: [.termination])
  private static let _negative_hr_blogspot: PublicSuffix.Node = .label("blogspot", next: [.termination])
  private static let _negative_hr_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_hr_free: PublicSuffix.Node = .label("free", next: [.termination])
  private static let _negative_hr_from: PublicSuffix.Node = .label("from", next: [.termination])
  private static let _negative_hr_iz: PublicSuffix.Node = .label("iz", next: [.termination])
  private static let _negative_hr_name: PublicSuffix.Node = .label("name", next: [.termination])
  private static let _negative_hr: PublicSuffix.Node = .label("hr", next: [.termination, _negative_hr_blogspot, _negative_hr_com, _negative_hr_free, _negative_hr_from, _negative_hr_iz, _negative_hr_name])
  private static let _negative_hsbc: PublicSuffix.Node = .label("hsbc", next: [.termination])
  private static let _negative_ht_adult: PublicSuffix.Node = .label("adult", next: [.termination])
  private static let _negative_ht_art: PublicSuffix.Node = .label("art", next: [.termination])
  private static let _negative_ht_asso: PublicSuffix.Node = .label("asso", next: [.termination])
  private static let _negative_ht_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_ht_coop: PublicSuffix.Node = .label("coop", next: [.termination])
  private static let _negative_ht_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_ht_firm: PublicSuffix.Node = .label("firm", next: [.termination])
  private static let _negative_ht_gouv: PublicSuffix.Node = .label("gouv", next: [.termination])
  private static let _negative_ht_info: PublicSuffix.Node = .label("info", next: [.termination])
  private static let _negative_ht_med: PublicSuffix.Node = .label("med", next: [.termination])
  private static let _negative_ht_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_ht_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_ht_perso: PublicSuffix.Node = .label("perso", next: [.termination])
  private static let _negative_ht_pol: PublicSuffix.Node = .label("pol", next: [.termination])
  private static let _negative_ht_pro: PublicSuffix.Node = .label("pro", next: [.termination])
  private static let _negative_ht_rel: PublicSuffix.Node = .label("rel", next: [.termination])
  private static let _negative_ht_shop: PublicSuffix.Node = .label("shop", next: [.termination])
  private static let _negative_ht: PublicSuffix.Node = .label("ht", next: [.termination, _negative_ht_adult, _negative_ht_art, _negative_ht_asso, _negative_ht_com, _negative_ht_coop, _negative_ht_edu, _negative_ht_firm, _negative_ht_gouv, _negative_ht_info, _negative_ht_med, _negative_ht_net, _negative_ht_org, _negative_ht_perso, _negative_ht_pol, _negative_ht_pro, _negative_ht_rel, _negative_ht_shop])
  private static let _negative_hu_2000: PublicSuffix.Node = .label("2000", next: [.termination])
  private static let _negative_hu_agrar: PublicSuffix.Node = .label("agrar", next: [.termination])
  private static let _negative_hu_blogspot: PublicSuffix.Node = .label("blogspot", next: [.termination])
  private static let _negative_hu_bolt: PublicSuffix.Node = .label("bolt", next: [.termination])
  private static let _negative_hu_casino: PublicSuffix.Node = .label("casino", next: [.termination])
  private static let _negative_hu_city: PublicSuffix.Node = .label("city", next: [.termination])
  private static let _negative_hu_co: PublicSuffix.Node = .label("co", next: [.termination])
  private static let _negative_hu_erotica: PublicSuffix.Node = .label("erotica", next: [.termination])
  private static let _negative_hu_erotika: PublicSuffix.Node = .label("erotika", next: [.termination])
  private static let _negative_hu_film: PublicSuffix.Node = .label("film", next: [.termination])
  private static let _negative_hu_forum: PublicSuffix.Node = .label("forum", next: [.termination])
  private static let _negative_hu_games: PublicSuffix.Node = .label("games", next: [.termination])
  private static let _negative_hu_hotel: PublicSuffix.Node = .label("hotel", next: [.termination])
  private static let _negative_hu_info: PublicSuffix.Node = .label("info", next: [.termination])
  private static let _negative_hu_ingatlan: PublicSuffix.Node = .label("ingatlan", next: [.termination])
  private static let _negative_hu_jogasz: PublicSuffix.Node = .label("jogasz", next: [.termination])
  private static let _negative_hu_konyvelo: PublicSuffix.Node = .label("konyvelo", next: [.termination])
  private static let _negative_hu_lakas: PublicSuffix.Node = .label("lakas", next: [.termination])
  private static let _negative_hu_media: PublicSuffix.Node = .label("media", next: [.termination])
  private static let _negative_hu_news: PublicSuffix.Node = .label("news", next: [.termination])
  private static let _negative_hu_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_hu_priv: PublicSuffix.Node = .label("priv", next: [.termination])
  private static let _negative_hu_reklam: PublicSuffix.Node = .label("reklam", next: [.termination])
  private static let _negative_hu_sex: PublicSuffix.Node = .label("sex", next: [.termination])
  private static let _negative_hu_shop: PublicSuffix.Node = .label("shop", next: [.termination])
  private static let _negative_hu_sport: PublicSuffix.Node = .label("sport", next: [.termination])
  private static let _negative_hu_suli: PublicSuffix.Node = .label("suli", next: [.termination])
  private static let _negative_hu_szex: PublicSuffix.Node = .label("szex", next: [.termination])
  private static let _negative_hu_tm: PublicSuffix.Node = .label("tm", next: [.termination])
  private static let _negative_hu_tozsde: PublicSuffix.Node = .label("tozsde", next: [.termination])
  private static let _negative_hu_utazas: PublicSuffix.Node = .label("utazas", next: [.termination])
  private static let _negative_hu_video: PublicSuffix.Node = .label("video", next: [.termination])
  private static let _negative_hu: PublicSuffix.Node = .label("hu", next: [.termination, _negative_hu_2000, _negative_hu_agrar, _negative_hu_blogspot, _negative_hu_bolt, _negative_hu_casino, _negative_hu_city, _negative_hu_co, _negative_hu_erotica, _negative_hu_erotika, _negative_hu_film, _negative_hu_forum, _negative_hu_games, _negative_hu_hotel, _negative_hu_info, _negative_hu_ingatlan, _negative_hu_jogasz, _negative_hu_konyvelo, _negative_hu_lakas, _negative_hu_media, _negative_hu_news, _negative_hu_org, _negative_hu_priv, _negative_hu_reklam, _negative_hu_sex, _negative_hu_shop, _negative_hu_sport, _negative_hu_suli, _negative_hu_szex, _negative_hu_tm, _negative_hu_tozsde, _negative_hu_utazas, _negative_hu_video])
  private static let _negative_hughes: PublicSuffix.Node = .label("hughes", next: [.termination])
  private static let _negative_hyatt: PublicSuffix.Node = .label("hyatt", next: [.termination])
  private static let _negative_hyundai: PublicSuffix.Node = .label("hyundai", next: [.termination])
  private static let _negative_ibm: PublicSuffix.Node = .label("ibm", next: [.termination])
  private static let _negative_icbc: PublicSuffix.Node = .label("icbc", next: [.termination])
  private static let _negative_ice: PublicSuffix.Node = .label("ice", next: [.termination])
  private static let _negative_icu: PublicSuffix.Node = .label("icu", next: [.termination])
  private static let _negative_id_ac: PublicSuffix.Node = .label("ac", next: [.termination])
  private static let _negative_id_biz: PublicSuffix.Node = .label("biz", next: [.termination])
  private static let _negative_id_co_blogspot: PublicSuffix.Node = .label("blogspot", next: [.termination])
  private static let _negative_id_co: PublicSuffix.Node = .label("co", next: [.termination, _negative_id_co_blogspot])
  private static let _negative_id_desa: PublicSuffix.Node = .label("desa", next: [.termination])
  private static let _negative_id_flap: PublicSuffix.Node = .label("flap", next: [.termination])
  private static let _negative_id_forte: PublicSuffix.Node = .label("forte", next: [.termination])
  private static let _negative_id_go: PublicSuffix.Node = .label("go", next: [.termination])
  private static let _negative_id_mil: PublicSuffix.Node = .label("mil", next: [.termination])
  private static let _negative_id_my_rss: PublicSuffix.Node = .label("rss", next: [.any])
  private static let _negative_id_my: PublicSuffix.Node = .label("my", next: [.termination, _negative_id_my_rss])
  private static let _negative_id_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_id_or: PublicSuffix.Node = .label("or", next: [.termination])
  private static let _negative_id_ponpes: PublicSuffix.Node = .label("ponpes", next: [.termination])
  private static let _negative_id_sch: PublicSuffix.Node = .label("sch", next: [.termination])
  private static let _negative_id_web: PublicSuffix.Node = .label("web", next: [.termination])
  private static let _negative_id: PublicSuffix.Node = .label("id", next: [.termination, _negative_id_ac, _negative_id_biz, _negative_id_co, _negative_id_desa, _negative_id_flap, _negative_id_forte, _negative_id_go, _negative_id_mil, _negative_id_my, _negative_id_net, _negative_id_or, _negative_id_ponpes, _negative_id_sch, _negative_id_web])
  private static let _negative_ie_blogspot: PublicSuffix.Node = .label("blogspot", next: [.termination])
  private static let _negative_ie_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_ie_myspreadshop: PublicSuffix.Node = .label("myspreadshop", next: [.termination])
  private static let _negative_ie: PublicSuffix.Node = .label("ie", next: [.termination, _negative_ie_blogspot, _negative_ie_gov, _negative_ie_myspreadshop])
  private static let _negative_ieee: PublicSuffix.Node = .label("ieee", next: [.termination])
  private static let _negative_ifm: PublicSuffix.Node = .label("ifm", next: [.termination])
  private static let _negative_ikano: PublicSuffix.Node = .label("ikano", next: [.termination])
  private static let _negative_il_ac: PublicSuffix.Node = .label("ac", next: [.termination])
  private static let _negative_il_co_blogspot: PublicSuffix.Node = .label("blogspot", next: [.termination])
  private static let _negative_il_co_ravpage: PublicSuffix.Node = .label("ravpage", next: [.termination])
  private static let _negative_il_co_tabitorder: PublicSuffix.Node = .label("tabitorder", next: [.termination])
  private static let _negative_il_co: PublicSuffix.Node = .label("co", next: [.termination, _negative_il_co_blogspot, _negative_il_co_ravpage, _negative_il_co_tabitorder])
  private static let _negative_il_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_il_idf: PublicSuffix.Node = .label("idf", next: [.termination])
  private static let _negative_il_k12: PublicSuffix.Node = .label("k12", next: [.termination])
  private static let _negative_il_muni: PublicSuffix.Node = .label("muni", next: [.termination])
  private static let _negative_il_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_il_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_il: PublicSuffix.Node = .label("il", next: [.termination, _negative_il_ac, _negative_il_co, _negative_il_gov, _negative_il_idf, _negative_il_k12, _negative_il_muni, _negative_il_net, _negative_il_org])
  private static let _negative_im_ac: PublicSuffix.Node = .label("ac", next: [.termination])
  private static let _negative_im_co_ltd: PublicSuffix.Node = .label("ltd", next: [.termination])
  private static let _negative_im_co_plc: PublicSuffix.Node = .label("plc", next: [.termination])
  private static let _negative_im_co: PublicSuffix.Node = .label("co", next: [.termination, _negative_im_co_ltd, _negative_im_co_plc])
  private static let _negative_im_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_im_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_im_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_im_ro: PublicSuffix.Node = .label("ro", next: [.termination])
  private static let _negative_im_tt: PublicSuffix.Node = .label("tt", next: [.termination])
  private static let _negative_im_tv: PublicSuffix.Node = .label("tv", next: [.termination])
  private static let _negative_im: PublicSuffix.Node = .label("im", next: [.termination, _negative_im_ac, _negative_im_co, _negative_im_com, _negative_im_net, _negative_im_org, _negative_im_ro, _negative_im_tt, _negative_im_tv])
  private static let _negative_imamat: PublicSuffix.Node = .label("imamat", next: [.termination])
  private static let _negative_imdb: PublicSuffix.Node = .label("imdb", next: [.termination])
  private static let _negative_immo: PublicSuffix.Node = .label("immo", next: [.termination])
  private static let _negative_immobilien: PublicSuffix.Node = .label("immobilien", next: [.termination])
  private static let _negative_in_5g: PublicSuffix.Node = .label("5g", next: [.termination])
  private static let _negative_in_6g: PublicSuffix.Node = .label("6g", next: [.termination])
  private static let _negative_in_ac: PublicSuffix.Node = .label("ac", next: [.termination])
  private static let _negative_in_ai: PublicSuffix.Node = .label("ai", next: [.termination])
  private static let _negative_in_am: PublicSuffix.Node = .label("am", next: [.termination])
  private static let _negative_in_barsy: PublicSuffix.Node = .label("barsy", next: [.termination])
  private static let _negative_in_bihar: PublicSuffix.Node = .label("bihar", next: [.termination])
  private static let _negative_in_biz: PublicSuffix.Node = .label("biz", next: [.termination])
  private static let _negative_in_blogspot: PublicSuffix.Node = .label("blogspot", next: [.termination])
  private static let _negative_in_business: PublicSuffix.Node = .label("business", next: [.termination])
  private static let _negative_in_ca: PublicSuffix.Node = .label("ca", next: [.termination])
  private static let _negative_in_cloudns: PublicSuffix.Node = .label("cloudns", next: [.termination])
  private static let _negative_in_cn: PublicSuffix.Node = .label("cn", next: [.termination])
  private static let _negative_in_co: PublicSuffix.Node = .label("co", next: [.termination])
  private static let _negative_in_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_in_coop: PublicSuffix.Node = .label("coop", next: [.termination])
  private static let _negative_in_cs: PublicSuffix.Node = .label("cs", next: [.termination])
  private static let _negative_in_delhi: PublicSuffix.Node = .label("delhi", next: [.termination])
  private static let _negative_in_dr: PublicSuffix.Node = .label("dr", next: [.termination])
  private static let _negative_in_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_in_er: PublicSuffix.Node = .label("er", next: [.termination])
  private static let _negative_in_firm: PublicSuffix.Node = .label("firm", next: [.termination])
  private static let _negative_in_gen: PublicSuffix.Node = .label("gen", next: [.termination])
  private static let _negative_in_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_in_gujarat: PublicSuffix.Node = .label("gujarat", next: [.termination])
  private static let _negative_in_ind: PublicSuffix.Node = .label("ind", next: [.termination])
  private static let _negative_in_info: PublicSuffix.Node = .label("info", next: [.termination])
  private static let _negative_in_int: PublicSuffix.Node = .label("int", next: [.termination])
  private static let _negative_in_internet: PublicSuffix.Node = .label("internet", next: [.termination])
  private static let _negative_in_io: PublicSuffix.Node = .label("io", next: [.termination])
  private static let _negative_in_me: PublicSuffix.Node = .label("me", next: [.termination])
  private static let _negative_in_mil: PublicSuffix.Node = .label("mil", next: [.termination])
  private static let _negative_in_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_in_nic: PublicSuffix.Node = .label("nic", next: [.termination])
  private static let _negative_in_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_in_pg: PublicSuffix.Node = .label("pg", next: [.termination])
  private static let _negative_in_post: PublicSuffix.Node = .label("post", next: [.termination])
  private static let _negative_in_pro: PublicSuffix.Node = .label("pro", next: [.termination])
  private static let _negative_in_res: PublicSuffix.Node = .label("res", next: [.termination])
  private static let _negative_in_supabase: PublicSuffix.Node = .label("supabase", next: [.termination])
  private static let _negative_in_travel: PublicSuffix.Node = .label("travel", next: [.termination])
  private static let _negative_in_tv: PublicSuffix.Node = .label("tv", next: [.termination])
  private static let _negative_in_uk: PublicSuffix.Node = .label("uk", next: [.termination])
  private static let _negative_in_up: PublicSuffix.Node = .label("up", next: [.termination])
  private static let _negative_in_us: PublicSuffix.Node = .label("us", next: [.termination])
  private static let _negative_in_web: PublicSuffix.Node = .label("web", next: [.termination])
  private static let _negative_in: PublicSuffix.Node = .label("in", next: [.termination, _negative_in_5g, _negative_in_6g, _negative_in_ac, _negative_in_ai, _negative_in_am, _negative_in_barsy, _negative_in_bihar, _negative_in_biz, _negative_in_blogspot, _negative_in_business, _negative_in_ca, _negative_in_cloudns, _negative_in_cn, _negative_in_co, _negative_in_com, _negative_in_coop, _negative_in_cs, _negative_in_delhi, _negative_in_dr, _negative_in_edu, _negative_in_er, _negative_in_firm, _negative_in_gen, _negative_in_gov, _negative_in_gujarat, _negative_in_ind, _negative_in_info, _negative_in_int, _negative_in_internet, _negative_in_io, _negative_in_me, _negative_in_mil, _negative_in_net, _negative_in_nic, _negative_in_org, _negative_in_pg, _negative_in_post, _negative_in_pro, _negative_in_res, _negative_in_supabase, _negative_in_travel, _negative_in_tv, _negative_in_uk, _negative_in_up, _negative_in_us, _negative_in_web])
  private static let _negative_inc: PublicSuffix.Node = .label("inc", next: [.termination])
  private static let _negative_industries: PublicSuffix.Node = .label("industries", next: [.termination])
  private static let _negative_infiniti: PublicSuffix.Node = .label("infiniti", next: [.termination])
  private static let _negative_info_barrelHofHknowledge: PublicSuffix.Node = .label("barrel-of-knowledge", next: [.termination])
  private static let _negative_info_barrellHofHknowledge: PublicSuffix.Node = .label("barrell-of-knowledge", next: [.termination])
  private static let _negative_info_barsy: PublicSuffix.Node = .label("barsy", next: [.termination])
  private static let _negative_info_cloudns: PublicSuffix.Node = .label("cloudns", next: [.termination])
  private static let _negative_info_dnsupdate: PublicSuffix.Node = .label("dnsupdate", next: [.termination])
  private static let _negative_info_dvrcam: PublicSuffix.Node = .label("dvrcam", next: [.termination])
  private static let _negative_info_dynamicHdns: PublicSuffix.Node = .label("dynamic-dns", next: [.termination])
  private static let _negative_info_dyndns: PublicSuffix.Node = .label("dyndns", next: [.termination])
  private static let _negative_info_forHour: PublicSuffix.Node = .label("for-our", next: [.termination])
  private static let _negative_info_forumz: PublicSuffix.Node = .label("forumz", next: [.termination])
  private static let _negative_info_groksHthe: PublicSuffix.Node = .label("groks-the", next: [.termination])
  private static let _negative_info_groksHthis: PublicSuffix.Node = .label("groks-this", next: [.termination])
  private static let _negative_info_hereHforHmore: PublicSuffix.Node = .label("here-for-more", next: [.termination])
  private static let _negative_info_ilovecollege: PublicSuffix.Node = .label("ilovecollege", next: [.termination])
  private static let _negative_info_knowsitall: PublicSuffix.Node = .label("knowsitall", next: [.termination])
  private static let _negative_info_mayfirst: PublicSuffix.Node = .label("mayfirst", next: [.termination])
  private static let _negative_info_noHip: PublicSuffix.Node = .label("no-ip", next: [.termination])
  private static let _negative_info_nsupdate: PublicSuffix.Node = .label("nsupdate", next: [.termination])
  private static let _negative_info_selfip: PublicSuffix.Node = .label("selfip", next: [.termination])
  private static let _negative_info_vHinfo: PublicSuffix.Node = .label("v-info", next: [.termination])
  private static let _negative_info_webhop: PublicSuffix.Node = .label("webhop", next: [.termination])
  private static let _negative_info: PublicSuffix.Node = .label("info", next: [.termination, _negative_info_barrelHofHknowledge, _negative_info_barrellHofHknowledge, _negative_info_barsy, _negative_info_cloudns, _negative_info_dnsupdate, _negative_info_dvrcam, _negative_info_dynamicHdns, _negative_info_dyndns, _negative_info_forHour, _negative_info_forumz, _negative_info_groksHthe, _negative_info_groksHthis, _negative_info_hereHforHmore, _negative_info_ilovecollege, _negative_info_knowsitall, _negative_info_mayfirst, _negative_info_noHip, _negative_info_nsupdate, _negative_info_selfip, _negative_info_vHinfo, _negative_info_webhop])
  private static let _negative_ing: PublicSuffix.Node = .label("ing", next: [.termination])
  private static let _negative_ink: PublicSuffix.Node = .label("ink", next: [.termination])
  private static let _negative_institute: PublicSuffix.Node = .label("institute", next: [.termination])
  private static let _negative_insurance: PublicSuffix.Node = .label("insurance", next: [.termination])
  private static let _negative_insure: PublicSuffix.Node = .label("insure", next: [.termination])
  private static let _negative_int_eu: PublicSuffix.Node = .label("eu", next: [.termination])
  private static let _negative_int: PublicSuffix.Node = .label("int", next: [.termination, _negative_int_eu])
  private static let _negative_international: PublicSuffix.Node = .label("international", next: [.termination])
  private static let _negative_intuit: PublicSuffix.Node = .label("intuit", next: [.termination])
  private static let _negative_investments: PublicSuffix.Node = .label("investments", next: [.termination])
  private static let _negative_io_2038: PublicSuffix.Node = .label("2038", next: [.termination])
  private static let _negative_io_apigee: PublicSuffix.Node = .label("apigee", next: [.termination])
  private static let _negative_io_azurecontainer: PublicSuffix.Node = .label("azurecontainer", next: [.any])
  private static let _negative_io_bHdata: PublicSuffix.Node = .label("b-data", next: [.termination])
  private static let _negative_io_backplaneapp: PublicSuffix.Node = .label("backplaneapp", next: [.termination])
  private static let _negative_io_banzaicloud_app: PublicSuffix.Node = .label("app", next: [.termination])
  private static let _negative_io_banzaicloud_backyards: PublicSuffix.Node = .label("backyards", next: [.any])
  private static let _negative_io_banzaicloud: PublicSuffix.Node = .label("banzaicloud", next: [_negative_io_banzaicloud_app, _negative_io_banzaicloud_backyards])
  private static let _negative_io_barsy: PublicSuffix.Node = .label("barsy", next: [.termination])
  private static let _negative_io_basicserver: PublicSuffix.Node = .label("basicserver", next: [.termination])
  private static let _negative_io_beagleboard: PublicSuffix.Node = .label("beagleboard", next: [.termination])
  private static let _negative_io_beebyte_paas: PublicSuffix.Node = .label("paas", next: [.termination])
  private static let _negative_io_beebyte: PublicSuffix.Node = .label("beebyte", next: [_negative_io_beebyte_paas])
  private static let _negative_io_beebyteapp_sekd1: PublicSuffix.Node = .label("sekd1", next: [.termination])
  private static let _negative_io_beebyteapp: PublicSuffix.Node = .label("beebyteapp", next: [_negative_io_beebyteapp_sekd1])
  private static let _negative_io_bigv_uk0: PublicSuffix.Node = .label("uk0", next: [.termination])
  private static let _negative_io_bigv: PublicSuffix.Node = .label("bigv", next: [_negative_io_bigv_uk0])
  private static let _negative_io_bitbucket: PublicSuffix.Node = .label("bitbucket", next: [.termination])
  private static let _negative_io_bluebite: PublicSuffix.Node = .label("bluebite", next: [.termination])
  private static let _negative_io_boxfuse: PublicSuffix.Node = .label("boxfuse", next: [.termination])
  private static let _negative_io_browsersafetymark: PublicSuffix.Node = .label("browsersafetymark", next: [.termination])
  private static let _negative_io_cleverapps: PublicSuffix.Node = .label("cleverapps", next: [.termination])
  private static let _negative_io_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_io_dappnode_dyndns: PublicSuffix.Node = .label("dyndns", next: [.termination])
  private static let _negative_io_dappnode: PublicSuffix.Node = .label("dappnode", next: [_negative_io_dappnode_dyndns])
  private static let _negative_io_dedyn: PublicSuffix.Node = .label("dedyn", next: [.termination])
  private static let _negative_io_definima: PublicSuffix.Node = .label("definima", next: [.termination])
  private static let _negative_io_drud: PublicSuffix.Node = .label("drud", next: [.termination])
  private static let _negative_io_dyn53: PublicSuffix.Node = .label("dyn53", next: [.termination])
  private static let _negative_io_editorx: PublicSuffix.Node = .label("editorx", next: [.termination])
  private static let _negative_io_edugit: PublicSuffix.Node = .label("edugit", next: [.termination])
  private static let _negative_io_fhHmuenster: PublicSuffix.Node = .label("fh-muenster", next: [.termination])
  private static let _negative_io_forgerock_id: PublicSuffix.Node = .label("id", next: [.termination])
  private static let _negative_io_forgerock: PublicSuffix.Node = .label("forgerock", next: [_negative_io_forgerock_id])
  private static let _negative_io_ghost: PublicSuffix.Node = .label("ghost", next: [.termination])
  private static let _negative_io_github: PublicSuffix.Node = .label("github", next: [.termination])
  private static let _negative_io_gitlab: PublicSuffix.Node = .label("gitlab", next: [.termination])
  private static let _negative_io_hasuraHapp: PublicSuffix.Node = .label("hasura-app", next: [.termination])
  private static let _negative_io_hostyhosting: PublicSuffix.Node = .label("hostyhosting", next: [.termination])
  private static let _negative_io_hzc: PublicSuffix.Node = .label("hzc", next: [.termination])
  private static let _negative_io_jele: PublicSuffix.Node = .label("jele", next: [.termination])
  private static let _negative_io_lair_apps: PublicSuffix.Node = .label("apps", next: [.termination])
  private static let _negative_io_lair: PublicSuffix.Node = .label("lair", next: [_negative_io_lair_apps])
  private static let _negative_io_loginline: PublicSuffix.Node = .label("loginline", next: [.termination])
  private static let _negative_io_lolipop: PublicSuffix.Node = .label("lolipop", next: [.termination])
  private static let _negative_io_moHsiemens: PublicSuffix.Node = .label("mo-siemens", next: [.termination])
  private static let _negative_io_moonscale: PublicSuffix.Node = .label("moonscale", next: [.any])
  private static let _negative_io_musician: PublicSuffix.Node = .label("musician", next: [.termination])
  private static let _negative_io_ngrok: PublicSuffix.Node = .label("ngrok", next: [.termination])
  private static let _negative_io_nid: PublicSuffix.Node = .label("nid", next: [.termination])
  private static let _negative_io_nodeart_stage: PublicSuffix.Node = .label("stage", next: [.termination])
  private static let _negative_io_nodeart: PublicSuffix.Node = .label("nodeart", next: [_negative_io_nodeart_stage])
  private static let _negative_io_onHk3s: PublicSuffix.Node = .label("on-k3s", next: [.any])
  private static let _negative_io_onHrio: PublicSuffix.Node = .label("on-rio", next: [.any])
  private static let _negative_io_pantheonsite: PublicSuffix.Node = .label("pantheonsite", next: [.termination])
  private static let _negative_io_protonet: PublicSuffix.Node = .label("protonet", next: [.termination])
  private static let _negative_io_pstmn_mock: PublicSuffix.Node = .label("mock", next: [.termination])
  private static let _negative_io_pstmn: PublicSuffix.Node = .label("pstmn", next: [.termination, _negative_io_pstmn_mock])
  private static let _negative_io_qcx_sys: PublicSuffix.Node = .label("sys", next: [.any])
  private static let _negative_io_qcx: PublicSuffix.Node = .label("qcx", next: [.termination, _negative_io_qcx_sys])
  private static let _negative_io_qoto: PublicSuffix.Node = .label("qoto", next: [.termination])
  private static let _negative_io_readthedocs: PublicSuffix.Node = .label("readthedocs", next: [.termination])
  private static let _negative_io_resindevice: PublicSuffix.Node = .label("resindevice", next: [.termination])
  private static let _negative_io_resinstaging_devices: PublicSuffix.Node = .label("devices", next: [.termination])
  private static let _negative_io_resinstaging: PublicSuffix.Node = .label("resinstaging", next: [_negative_io_resinstaging_devices])
  private static let _negative_io_s5y: PublicSuffix.Node = .label("s5y", next: [.any])
  private static let _negative_io_sandcats: PublicSuffix.Node = .label("sandcats", next: [.termination])
  private static let _negative_io_shiftcrypto: PublicSuffix.Node = .label("shiftcrypto", next: [.termination])
  private static let _negative_io_shiftedit: PublicSuffix.Node = .label("shiftedit", next: [.termination])
  private static let _negative_io_shw: PublicSuffix.Node = .label("shw", next: [.termination])
  private static let _negative_io_spacekit: PublicSuffix.Node = .label("spacekit", next: [.termination])
  private static let _negative_io_stolos: PublicSuffix.Node = .label("stolos", next: [.any])
  private static let _negative_io_telebit: PublicSuffix.Node = .label("telebit", next: [.termination])
  private static let _negative_io_thingdust_dev_cust: PublicSuffix.Node = .label("cust", next: [.termination])
  private static let _negative_io_thingdust_dev_reservd: PublicSuffix.Node = .label("reservd", next: [.termination])
  private static let _negative_io_thingdust_dev: PublicSuffix.Node = .label("dev", next: [_negative_io_thingdust_dev_cust, _negative_io_thingdust_dev_reservd])
  private static let _negative_io_thingdust_disrec_cust: PublicSuffix.Node = .label("cust", next: [.termination])
  private static let _negative_io_thingdust_disrec_reservd: PublicSuffix.Node = .label("reservd", next: [.termination])
  private static let _negative_io_thingdust_disrec: PublicSuffix.Node = .label("disrec", next: [_negative_io_thingdust_disrec_cust, _negative_io_thingdust_disrec_reservd])
  private static let _negative_io_thingdust_prod_cust: PublicSuffix.Node = .label("cust", next: [.termination])
  private static let _negative_io_thingdust_prod: PublicSuffix.Node = .label("prod", next: [_negative_io_thingdust_prod_cust])
  private static let _negative_io_thingdust_testing_cust: PublicSuffix.Node = .label("cust", next: [.termination])
  private static let _negative_io_thingdust_testing_reservd: PublicSuffix.Node = .label("reservd", next: [.termination])
  private static let _negative_io_thingdust_testing: PublicSuffix.Node = .label("testing", next: [_negative_io_thingdust_testing_cust, _negative_io_thingdust_testing_reservd])
  private static let _negative_io_thingdust: PublicSuffix.Node = .label("thingdust", next: [_negative_io_thingdust_dev, _negative_io_thingdust_disrec, _negative_io_thingdust_prod, _negative_io_thingdust_testing])
  private static let _negative_io_tickets: PublicSuffix.Node = .label("tickets", next: [.termination])
  private static let _negative_io_unispace_cloudHfr1: PublicSuffix.Node = .label("cloud-fr1", next: [.termination])
  private static let _negative_io_unispace: PublicSuffix.Node = .label("unispace", next: [_negative_io_unispace_cloudHfr1])
  private static let _negative_io_upli: PublicSuffix.Node = .label("upli", next: [.termination])
  private static let _negative_io_utwente: PublicSuffix.Node = .label("utwente", next: [.termination])
  private static let _negative_io_vaporcloud: PublicSuffix.Node = .label("vaporcloud", next: [.termination])
  private static let _negative_io_vbrplsbx_g: PublicSuffix.Node = .label("g", next: [.termination])
  private static let _negative_io_vbrplsbx: PublicSuffix.Node = .label("vbrplsbx", next: [_negative_io_vbrplsbx_g])
  private static let _negative_io_virtualserver: PublicSuffix.Node = .label("virtualserver", next: [.termination])
  private static let _negative_io_webthings: PublicSuffix.Node = .label("webthings", next: [.termination])
  private static let _negative_io_wedeploy: PublicSuffix.Node = .label("wedeploy", next: [.termination])
  private static let _negative_io: PublicSuffix.Node = .label("io", next: [.termination, _negative_io_2038, _negative_io_apigee, _negative_io_azurecontainer, _negative_io_bHdata, _negative_io_backplaneapp, _negative_io_banzaicloud, _negative_io_barsy, _negative_io_basicserver, _negative_io_beagleboard, _negative_io_beebyte, _negative_io_beebyteapp, _negative_io_bigv, _negative_io_bitbucket, _negative_io_bluebite, _negative_io_boxfuse, _negative_io_browsersafetymark, _negative_io_cleverapps, _negative_io_com, _negative_io_dappnode, _negative_io_dedyn, _negative_io_definima, _negative_io_drud, _negative_io_dyn53, _negative_io_editorx, _negative_io_edugit, _negative_io_fhHmuenster, _negative_io_forgerock, _negative_io_ghost, _negative_io_github, _negative_io_gitlab, _negative_io_hasuraHapp, _negative_io_hostyhosting, _negative_io_hzc, _negative_io_jele, _negative_io_lair, _negative_io_loginline, _negative_io_lolipop, _negative_io_moHsiemens, _negative_io_moonscale, _negative_io_musician, _negative_io_ngrok, _negative_io_nid, _negative_io_nodeart, _negative_io_onHk3s, _negative_io_onHrio, _negative_io_pantheonsite, _negative_io_protonet, _negative_io_pstmn, _negative_io_qcx, _negative_io_qoto, _negative_io_readthedocs, _negative_io_resindevice, _negative_io_resinstaging, _negative_io_s5y, _negative_io_sandcats, _negative_io_shiftcrypto, _negative_io_shiftedit, _negative_io_shw, _negative_io_spacekit, _negative_io_stolos, _negative_io_telebit, _negative_io_thingdust, _negative_io_tickets, _negative_io_unispace, _negative_io_upli, _negative_io_utwente, _negative_io_vaporcloud, _negative_io_vbrplsbx, _negative_io_virtualserver, _negative_io_webthings, _negative_io_wedeploy])
  private static let _negative_ipiranga: PublicSuffix.Node = .label("ipiranga", next: [.termination])
  private static let _negative_iq_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_iq_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_iq_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_iq_mil: PublicSuffix.Node = .label("mil", next: [.termination])
  private static let _negative_iq_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_iq_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_iq: PublicSuffix.Node = .label("iq", next: [.termination, _negative_iq_com, _negative_iq_edu, _negative_iq_gov, _negative_iq_mil, _negative_iq_net, _negative_iq_org])
  private static let _negative_ir_ac: PublicSuffix.Node = .label("ac", next: [.termination])
  private static let _negative_ir_co: PublicSuffix.Node = .label("co", next: [.termination])
  private static let _negative_ir_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_ir_id: PublicSuffix.Node = .label("id", next: [.termination])
  private static let _negative_ir_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_ir_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_ir_sch: PublicSuffix.Node = .label("sch", next: [.termination])
  private static let _negative_ir_ايران: PublicSuffix.Node = .label("ايران", next: [.termination])
  private static let _negative_ir_ایران: PublicSuffix.Node = .label("ایران", next: [.termination])
  private static let _negative_ir: PublicSuffix.Node = .label("ir", next: [.termination, _negative_ir_ac, _negative_ir_co, _negative_ir_gov, _negative_ir_id, _negative_ir_net, _negative_ir_org, _negative_ir_sch, _negative_ir_ايران, _negative_ir_ایران])
  private static let _negative_irish: PublicSuffix.Node = .label("irish", next: [.termination])
  private static let _negative_is_blogspot: PublicSuffix.Node = .label("blogspot", next: [.termination])
  private static let _negative_is_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_is_cupcake: PublicSuffix.Node = .label("cupcake", next: [.termination])
  private static let _negative_is_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_is_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_is_int: PublicSuffix.Node = .label("int", next: [.termination])
  private static let _negative_is_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_is_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_is: PublicSuffix.Node = .label("is", next: [.termination, _negative_is_blogspot, _negative_is_com, _negative_is_cupcake, _negative_is_edu, _negative_is_gov, _negative_is_int, _negative_is_net, _negative_is_org])
  private static let _negative_ismaili: PublicSuffix.Node = .label("ismaili", next: [.termination])
  private static let _negative_ist: PublicSuffix.Node = .label("ist", next: [.termination])
  private static let _negative_istanbul: PublicSuffix.Node = .label("istanbul", next: [.termination])
  private static let _negative_it_16Hb: PublicSuffix.Node = .label("16-b", next: [.termination])
  private static let _negative_it_32Hb: PublicSuffix.Node = .label("32-b", next: [.termination])
  private static let _negative_it_64Hb: PublicSuffix.Node = .label("64-b", next: [.termination])
  private static let _negative_it_abr: PublicSuffix.Node = .label("abr", next: [.termination])
  private static let _negative_it_abruzzo: PublicSuffix.Node = .label("abruzzo", next: [.termination])
  private static let _negative_it_ag: PublicSuffix.Node = .label("ag", next: [.termination])
  private static let _negative_it_agrigento: PublicSuffix.Node = .label("agrigento", next: [.termination])
  private static let _negative_it_al: PublicSuffix.Node = .label("al", next: [.termination])
  private static let _negative_it_alessandria: PublicSuffix.Node = .label("alessandria", next: [.termination])
  private static let _negative_it_altoHadige: PublicSuffix.Node = .label("alto-adige", next: [.termination])
  private static let _negative_it_altoadige: PublicSuffix.Node = .label("altoadige", next: [.termination])
  private static let _negative_it_an: PublicSuffix.Node = .label("an", next: [.termination])
  private static let _negative_it_ancona: PublicSuffix.Node = .label("ancona", next: [.termination])
  private static let _negative_it_andriaHbarlettaHtrani: PublicSuffix.Node = .label("andria-barletta-trani", next: [.termination])
  private static let _negative_it_andriaHtraniHbarletta: PublicSuffix.Node = .label("andria-trani-barletta", next: [.termination])
  private static let _negative_it_andriabarlettatrani: PublicSuffix.Node = .label("andriabarlettatrani", next: [.termination])
  private static let _negative_it_andriatranibarletta: PublicSuffix.Node = .label("andriatranibarletta", next: [.termination])
  private static let _negative_it_ao: PublicSuffix.Node = .label("ao", next: [.termination])
  private static let _negative_it_aosta: PublicSuffix.Node = .label("aosta", next: [.termination])
  private static let _negative_it_aostaHvalley: PublicSuffix.Node = .label("aosta-valley", next: [.termination])
  private static let _negative_it_aostavalley: PublicSuffix.Node = .label("aostavalley", next: [.termination])
  private static let _negative_it_aoste: PublicSuffix.Node = .label("aoste", next: [.termination])
  private static let _negative_it_ap: PublicSuffix.Node = .label("ap", next: [.termination])
  private static let _negative_it_aq: PublicSuffix.Node = .label("aq", next: [.termination])
  private static let _negative_it_aquila: PublicSuffix.Node = .label("aquila", next: [.termination])
  private static let _negative_it_ar: PublicSuffix.Node = .label("ar", next: [.termination])
  private static let _negative_it_arezzo: PublicSuffix.Node = .label("arezzo", next: [.termination])
  private static let _negative_it_ascoliHpiceno: PublicSuffix.Node = .label("ascoli-piceno", next: [.termination])
  private static let _negative_it_ascolipiceno: PublicSuffix.Node = .label("ascolipiceno", next: [.termination])
  private static let _negative_it_asti: PublicSuffix.Node = .label("asti", next: [.termination])
  private static let _negative_it_at: PublicSuffix.Node = .label("at", next: [.termination])
  private static let _negative_it_av: PublicSuffix.Node = .label("av", next: [.termination])
  private static let _negative_it_avellino: PublicSuffix.Node = .label("avellino", next: [.termination])
  private static let _negative_it_ba: PublicSuffix.Node = .label("ba", next: [.termination])
  private static let _negative_it_balsan: PublicSuffix.Node = .label("balsan", next: [.termination])
  private static let _negative_it_balsanHsudtirol: PublicSuffix.Node = .label("balsan-sudtirol", next: [.termination])
  private static let _negative_it_balsanHsuedtirol: PublicSuffix.Node = .label("balsan-suedtirol", next: [.termination])
  private static let _negative_it_balsanHsüdtirol: PublicSuffix.Node = .label("balsan-südtirol", next: [.termination])
  private static let _negative_it_bari: PublicSuffix.Node = .label("bari", next: [.termination])
  private static let _negative_it_barlettaHtraniHandria: PublicSuffix.Node = .label("barletta-trani-andria", next: [.termination])
  private static let _negative_it_barlettatraniandria: PublicSuffix.Node = .label("barlettatraniandria", next: [.termination])
  private static let _negative_it_bas: PublicSuffix.Node = .label("bas", next: [.termination])
  private static let _negative_it_basilicata: PublicSuffix.Node = .label("basilicata", next: [.termination])
  private static let _negative_it_belluno: PublicSuffix.Node = .label("belluno", next: [.termination])
  private static let _negative_it_benevento: PublicSuffix.Node = .label("benevento", next: [.termination])
  private static let _negative_it_bergamo: PublicSuffix.Node = .label("bergamo", next: [.termination])
  private static let _negative_it_bg: PublicSuffix.Node = .label("bg", next: [.termination])
  private static let _negative_it_bi: PublicSuffix.Node = .label("bi", next: [.termination])
  private static let _negative_it_biella: PublicSuffix.Node = .label("biella", next: [.termination])
  private static let _negative_it_bl: PublicSuffix.Node = .label("bl", next: [.termination])
  private static let _negative_it_blogspot: PublicSuffix.Node = .label("blogspot", next: [.termination])
  private static let _negative_it_bn: PublicSuffix.Node = .label("bn", next: [.termination])
  private static let _negative_it_bo: PublicSuffix.Node = .label("bo", next: [.termination])
  private static let _negative_it_bologna: PublicSuffix.Node = .label("bologna", next: [.termination])
  private static let _negative_it_bolzano: PublicSuffix.Node = .label("bolzano", next: [.termination])
  private static let _negative_it_bolzanoHaltoadige: PublicSuffix.Node = .label("bolzano-altoadige", next: [.termination])
  private static let _negative_it_bozen: PublicSuffix.Node = .label("bozen", next: [.termination])
  private static let _negative_it_bozenHsudtirol: PublicSuffix.Node = .label("bozen-sudtirol", next: [.termination])
  private static let _negative_it_bozenHsuedtirol: PublicSuffix.Node = .label("bozen-suedtirol", next: [.termination])
  private static let _negative_it_bozenHsüdtirol: PublicSuffix.Node = .label("bozen-südtirol", next: [.termination])
  private static let _negative_it_br: PublicSuffix.Node = .label("br", next: [.termination])
  private static let _negative_it_brescia: PublicSuffix.Node = .label("brescia", next: [.termination])
  private static let _negative_it_brindisi: PublicSuffix.Node = .label("brindisi", next: [.termination])
  private static let _negative_it_bs: PublicSuffix.Node = .label("bs", next: [.termination])
  private static let _negative_it_bt: PublicSuffix.Node = .label("bt", next: [.termination])
  private static let _negative_it_bulsan: PublicSuffix.Node = .label("bulsan", next: [.termination])
  private static let _negative_it_bulsanHsudtirol: PublicSuffix.Node = .label("bulsan-sudtirol", next: [.termination])
  private static let _negative_it_bulsanHsuedtirol: PublicSuffix.Node = .label("bulsan-suedtirol", next: [.termination])
  private static let _negative_it_bulsanHsüdtirol: PublicSuffix.Node = .label("bulsan-südtirol", next: [.termination])
  private static let _negative_it_bz: PublicSuffix.Node = .label("bz", next: [.termination])
  private static let _negative_it_ca: PublicSuffix.Node = .label("ca", next: [.termination])
  private static let _negative_it_cagliari: PublicSuffix.Node = .label("cagliari", next: [.termination])
  private static let _negative_it_cal: PublicSuffix.Node = .label("cal", next: [.termination])
  private static let _negative_it_calabria: PublicSuffix.Node = .label("calabria", next: [.termination])
  private static let _negative_it_caltanissetta: PublicSuffix.Node = .label("caltanissetta", next: [.termination])
  private static let _negative_it_cam: PublicSuffix.Node = .label("cam", next: [.termination])
  private static let _negative_it_campania: PublicSuffix.Node = .label("campania", next: [.termination])
  private static let _negative_it_campidanoHmedio: PublicSuffix.Node = .label("campidano-medio", next: [.termination])
  private static let _negative_it_campidanomedio: PublicSuffix.Node = .label("campidanomedio", next: [.termination])
  private static let _negative_it_campobasso: PublicSuffix.Node = .label("campobasso", next: [.termination])
  private static let _negative_it_carboniaHiglesias: PublicSuffix.Node = .label("carbonia-iglesias", next: [.termination])
  private static let _negative_it_carboniaiglesias: PublicSuffix.Node = .label("carboniaiglesias", next: [.termination])
  private static let _negative_it_carraraHmassa: PublicSuffix.Node = .label("carrara-massa", next: [.termination])
  private static let _negative_it_carraramassa: PublicSuffix.Node = .label("carraramassa", next: [.termination])
  private static let _negative_it_caserta: PublicSuffix.Node = .label("caserta", next: [.termination])
  private static let _negative_it_catania: PublicSuffix.Node = .label("catania", next: [.termination])
  private static let _negative_it_catanzaro: PublicSuffix.Node = .label("catanzaro", next: [.termination])
  private static let _negative_it_cb: PublicSuffix.Node = .label("cb", next: [.termination])
  private static let _negative_it_ce: PublicSuffix.Node = .label("ce", next: [.termination])
  private static let _negative_it_cesenaHforli: PublicSuffix.Node = .label("cesena-forli", next: [.termination])
  private static let _negative_it_cesenaHforlì: PublicSuffix.Node = .label("cesena-forlì", next: [.termination])
  private static let _negative_it_cesenaforli: PublicSuffix.Node = .label("cesenaforli", next: [.termination])
  private static let _negative_it_cesenaforlì: PublicSuffix.Node = .label("cesenaforlì", next: [.termination])
  private static let _negative_it_ch: PublicSuffix.Node = .label("ch", next: [.termination])
  private static let _negative_it_chieti: PublicSuffix.Node = .label("chieti", next: [.termination])
  private static let _negative_it_ci: PublicSuffix.Node = .label("ci", next: [.termination])
  private static let _negative_it_cl: PublicSuffix.Node = .label("cl", next: [.termination])
  private static let _negative_it_cn: PublicSuffix.Node = .label("cn", next: [.termination])
  private static let _negative_it_co: PublicSuffix.Node = .label("co", next: [.termination])
  private static let _negative_it_como: PublicSuffix.Node = .label("como", next: [.termination])
  private static let _negative_it_cosenza: PublicSuffix.Node = .label("cosenza", next: [.termination])
  private static let _negative_it_cr: PublicSuffix.Node = .label("cr", next: [.termination])
  private static let _negative_it_cremona: PublicSuffix.Node = .label("cremona", next: [.termination])
  private static let _negative_it_crotone: PublicSuffix.Node = .label("crotone", next: [.termination])
  private static let _negative_it_cs: PublicSuffix.Node = .label("cs", next: [.termination])
  private static let _negative_it_ct: PublicSuffix.Node = .label("ct", next: [.termination])
  private static let _negative_it_cuneo: PublicSuffix.Node = .label("cuneo", next: [.termination])
  private static let _negative_it_cz: PublicSuffix.Node = .label("cz", next: [.termination])
  private static let _negative_it_dellHogliastra: PublicSuffix.Node = .label("dell-ogliastra", next: [.termination])
  private static let _negative_it_dellogliastra: PublicSuffix.Node = .label("dellogliastra", next: [.termination])
  private static let _negative_it_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_it_emiliaHromagna: PublicSuffix.Node = .label("emilia-romagna", next: [.termination])
  private static let _negative_it_emiliaromagna: PublicSuffix.Node = .label("emiliaromagna", next: [.termination])
  private static let _negative_it_emr: PublicSuffix.Node = .label("emr", next: [.termination])
  private static let _negative_it_en: PublicSuffix.Node = .label("en", next: [.termination])
  private static let _negative_it_enna: PublicSuffix.Node = .label("enna", next: [.termination])
  private static let _negative_it_fc: PublicSuffix.Node = .label("fc", next: [.termination])
  private static let _negative_it_fe: PublicSuffix.Node = .label("fe", next: [.termination])
  private static let _negative_it_fermo: PublicSuffix.Node = .label("fermo", next: [.termination])
  private static let _negative_it_ferrara: PublicSuffix.Node = .label("ferrara", next: [.termination])
  private static let _negative_it_fg: PublicSuffix.Node = .label("fg", next: [.termination])
  private static let _negative_it_fi: PublicSuffix.Node = .label("fi", next: [.termination])
  private static let _negative_it_firenze: PublicSuffix.Node = .label("firenze", next: [.termination])
  private static let _negative_it_florence: PublicSuffix.Node = .label("florence", next: [.termination])
  private static let _negative_it_fm: PublicSuffix.Node = .label("fm", next: [.termination])
  private static let _negative_it_foggia: PublicSuffix.Node = .label("foggia", next: [.termination])
  private static let _negative_it_forliHcesena: PublicSuffix.Node = .label("forli-cesena", next: [.termination])
  private static let _negative_it_forlicesena: PublicSuffix.Node = .label("forlicesena", next: [.termination])
  private static let _negative_it_forlìHcesena: PublicSuffix.Node = .label("forlì-cesena", next: [.termination])
  private static let _negative_it_forlìcesena: PublicSuffix.Node = .label("forlìcesena", next: [.termination])
  private static let _negative_it_fr: PublicSuffix.Node = .label("fr", next: [.termination])
  private static let _negative_it_friuliHvHgiulia: PublicSuffix.Node = .label("friuli-v-giulia", next: [.termination])
  private static let _negative_it_friuliHveHgiulia: PublicSuffix.Node = .label("friuli-ve-giulia", next: [.termination])
  private static let _negative_it_friuliHvegiulia: PublicSuffix.Node = .label("friuli-vegiulia", next: [.termination])
  private static let _negative_it_friuliHveneziaHgiulia: PublicSuffix.Node = .label("friuli-venezia-giulia", next: [.termination])
  private static let _negative_it_friuliHveneziagiulia: PublicSuffix.Node = .label("friuli-veneziagiulia", next: [.termination])
  private static let _negative_it_friuliHvgiulia: PublicSuffix.Node = .label("friuli-vgiulia", next: [.termination])
  private static let _negative_it_friulivHgiulia: PublicSuffix.Node = .label("friuliv-giulia", next: [.termination])
  private static let _negative_it_friuliveHgiulia: PublicSuffix.Node = .label("friulive-giulia", next: [.termination])
  private static let _negative_it_friulivegiulia: PublicSuffix.Node = .label("friulivegiulia", next: [.termination])
  private static let _negative_it_friuliveneziaHgiulia: PublicSuffix.Node = .label("friulivenezia-giulia", next: [.termination])
  private static let _negative_it_friuliveneziagiulia: PublicSuffix.Node = .label("friuliveneziagiulia", next: [.termination])
  private static let _negative_it_friulivgiulia: PublicSuffix.Node = .label("friulivgiulia", next: [.termination])
  private static let _negative_it_frosinone: PublicSuffix.Node = .label("frosinone", next: [.termination])
  private static let _negative_it_fvg: PublicSuffix.Node = .label("fvg", next: [.termination])
  private static let _negative_it_ge: PublicSuffix.Node = .label("ge", next: [.termination])
  private static let _negative_it_genoa: PublicSuffix.Node = .label("genoa", next: [.termination])
  private static let _negative_it_genova: PublicSuffix.Node = .label("genova", next: [.termination])
  private static let _negative_it_go: PublicSuffix.Node = .label("go", next: [.termination])
  private static let _negative_it_gorizia: PublicSuffix.Node = .label("gorizia", next: [.termination])
  private static let _negative_it_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_it_gr: PublicSuffix.Node = .label("gr", next: [.termination])
  private static let _negative_it_grosseto: PublicSuffix.Node = .label("grosseto", next: [.termination])
  private static let _negative_it_ibxos: PublicSuffix.Node = .label("ibxos", next: [.termination])
  private static let _negative_it_iglesiasHcarbonia: PublicSuffix.Node = .label("iglesias-carbonia", next: [.termination])
  private static let _negative_it_iglesiascarbonia: PublicSuffix.Node = .label("iglesiascarbonia", next: [.termination])
  private static let _negative_it_iliadboxos: PublicSuffix.Node = .label("iliadboxos", next: [.termination])
  private static let _negative_it_im: PublicSuffix.Node = .label("im", next: [.termination])
  private static let _negative_it_imperia: PublicSuffix.Node = .label("imperia", next: [.termination])
  private static let _negative_it_is: PublicSuffix.Node = .label("is", next: [.termination])
  private static let _negative_it_isernia: PublicSuffix.Node = .label("isernia", next: [.termination])
  private static let _negative_it_kr: PublicSuffix.Node = .label("kr", next: [.termination])
  private static let _negative_it_laHspezia: PublicSuffix.Node = .label("la-spezia", next: [.termination])
  private static let _negative_it_laquila: PublicSuffix.Node = .label("laquila", next: [.termination])
  private static let _negative_it_laspezia: PublicSuffix.Node = .label("laspezia", next: [.termination])
  private static let _negative_it_latina: PublicSuffix.Node = .label("latina", next: [.termination])
  private static let _negative_it_laz: PublicSuffix.Node = .label("laz", next: [.termination])
  private static let _negative_it_lazio: PublicSuffix.Node = .label("lazio", next: [.termination])
  private static let _negative_it_lc: PublicSuffix.Node = .label("lc", next: [.termination])
  private static let _negative_it_le: PublicSuffix.Node = .label("le", next: [.termination])
  private static let _negative_it_lecce: PublicSuffix.Node = .label("lecce", next: [.termination])
  private static let _negative_it_lecco: PublicSuffix.Node = .label("lecco", next: [.termination])
  private static let _negative_it_li: PublicSuffix.Node = .label("li", next: [.termination])
  private static let _negative_it_lig: PublicSuffix.Node = .label("lig", next: [.termination])
  private static let _negative_it_liguria: PublicSuffix.Node = .label("liguria", next: [.termination])
  private static let _negative_it_livorno: PublicSuffix.Node = .label("livorno", next: [.termination])
  private static let _negative_it_lo: PublicSuffix.Node = .label("lo", next: [.termination])
  private static let _negative_it_lodi: PublicSuffix.Node = .label("lodi", next: [.termination])
  private static let _negative_it_lom: PublicSuffix.Node = .label("lom", next: [.termination])
  private static let _negative_it_lombardia: PublicSuffix.Node = .label("lombardia", next: [.termination])
  private static let _negative_it_lombardy: PublicSuffix.Node = .label("lombardy", next: [.termination])
  private static let _negative_it_lt: PublicSuffix.Node = .label("lt", next: [.termination])
  private static let _negative_it_lu: PublicSuffix.Node = .label("lu", next: [.termination])
  private static let _negative_it_lucania: PublicSuffix.Node = .label("lucania", next: [.termination])
  private static let _negative_it_lucca: PublicSuffix.Node = .label("lucca", next: [.termination])
  private static let _negative_it_macerata: PublicSuffix.Node = .label("macerata", next: [.termination])
  private static let _negative_it_mantova: PublicSuffix.Node = .label("mantova", next: [.termination])
  private static let _negative_it_mar: PublicSuffix.Node = .label("mar", next: [.termination])
  private static let _negative_it_marche: PublicSuffix.Node = .label("marche", next: [.termination])
  private static let _negative_it_massaHcarrara: PublicSuffix.Node = .label("massa-carrara", next: [.termination])
  private static let _negative_it_massacarrara: PublicSuffix.Node = .label("massacarrara", next: [.termination])
  private static let _negative_it_matera: PublicSuffix.Node = .label("matera", next: [.termination])
  private static let _negative_it_mb: PublicSuffix.Node = .label("mb", next: [.termination])
  private static let _negative_it_mc: PublicSuffix.Node = .label("mc", next: [.termination])
  private static let _negative_it_me: PublicSuffix.Node = .label("me", next: [.termination])
  private static let _negative_it_medioHcampidano: PublicSuffix.Node = .label("medio-campidano", next: [.termination])
  private static let _negative_it_mediocampidano: PublicSuffix.Node = .label("mediocampidano", next: [.termination])
  private static let _negative_it_messina: PublicSuffix.Node = .label("messina", next: [.termination])
  private static let _negative_it_mi: PublicSuffix.Node = .label("mi", next: [.termination])
  private static let _negative_it_milan: PublicSuffix.Node = .label("milan", next: [.termination])
  private static let _negative_it_milano: PublicSuffix.Node = .label("milano", next: [.termination])
  private static let _negative_it_mn: PublicSuffix.Node = .label("mn", next: [.termination])
  private static let _negative_it_mo: PublicSuffix.Node = .label("mo", next: [.termination])
  private static let _negative_it_modena: PublicSuffix.Node = .label("modena", next: [.termination])
  private static let _negative_it_mol: PublicSuffix.Node = .label("mol", next: [.termination])
  private static let _negative_it_molise: PublicSuffix.Node = .label("molise", next: [.termination])
  private static let _negative_it_monza: PublicSuffix.Node = .label("monza", next: [.termination])
  private static let _negative_it_monzaHbrianza: PublicSuffix.Node = .label("monza-brianza", next: [.termination])
  private static let _negative_it_monzaHeHdellaHbrianza: PublicSuffix.Node = .label("monza-e-della-brianza", next: [.termination])
  private static let _negative_it_monzabrianza: PublicSuffix.Node = .label("monzabrianza", next: [.termination])
  private static let _negative_it_monzaebrianza: PublicSuffix.Node = .label("monzaebrianza", next: [.termination])
  private static let _negative_it_monzaedellabrianza: PublicSuffix.Node = .label("monzaedellabrianza", next: [.termination])
  private static let _negative_it_ms: PublicSuffix.Node = .label("ms", next: [.termination])
  private static let _negative_it_mt: PublicSuffix.Node = .label("mt", next: [.termination])
  private static let _negative_it_myspreadshop: PublicSuffix.Node = .label("myspreadshop", next: [.termination])
  private static let _negative_it_na: PublicSuffix.Node = .label("na", next: [.termination])
  private static let _negative_it_naples: PublicSuffix.Node = .label("naples", next: [.termination])
  private static let _negative_it_napoli: PublicSuffix.Node = .label("napoli", next: [.termination])
  private static let _negative_it_neen_jc: PublicSuffix.Node = .label("jc", next: [.termination])
  private static let _negative_it_neen: PublicSuffix.Node = .label("neen", next: [_negative_it_neen_jc])
  private static let _negative_it_no: PublicSuffix.Node = .label("no", next: [.termination])
  private static let _negative_it_novara: PublicSuffix.Node = .label("novara", next: [.termination])
  private static let _negative_it_nu: PublicSuffix.Node = .label("nu", next: [.termination])
  private static let _negative_it_nuoro: PublicSuffix.Node = .label("nuoro", next: [.termination])
  private static let _negative_it_og: PublicSuffix.Node = .label("og", next: [.termination])
  private static let _negative_it_ogliastra: PublicSuffix.Node = .label("ogliastra", next: [.termination])
  private static let _negative_it_olbiaHtempio: PublicSuffix.Node = .label("olbia-tempio", next: [.termination])
  private static let _negative_it_olbiatempio: PublicSuffix.Node = .label("olbiatempio", next: [.termination])
  private static let _negative_it_or: PublicSuffix.Node = .label("or", next: [.termination])
  private static let _negative_it_oristano: PublicSuffix.Node = .label("oristano", next: [.termination])
  private static let _negative_it_ot: PublicSuffix.Node = .label("ot", next: [.termination])
  private static let _negative_it_pa: PublicSuffix.Node = .label("pa", next: [.termination])
  private static let _negative_it_padova: PublicSuffix.Node = .label("padova", next: [.termination])
  private static let _negative_it_padua: PublicSuffix.Node = .label("padua", next: [.termination])
  private static let _negative_it_palermo: PublicSuffix.Node = .label("palermo", next: [.termination])
  private static let _negative_it_parma: PublicSuffix.Node = .label("parma", next: [.termination])
  private static let _negative_it_pavia: PublicSuffix.Node = .label("pavia", next: [.termination])
  private static let _negative_it_pc: PublicSuffix.Node = .label("pc", next: [.termination])
  private static let _negative_it_pd: PublicSuffix.Node = .label("pd", next: [.termination])
  private static let _negative_it_pe: PublicSuffix.Node = .label("pe", next: [.termination])
  private static let _negative_it_perugia: PublicSuffix.Node = .label("perugia", next: [.termination])
  private static let _negative_it_pesaroHurbino: PublicSuffix.Node = .label("pesaro-urbino", next: [.termination])
  private static let _negative_it_pesarourbino: PublicSuffix.Node = .label("pesarourbino", next: [.termination])
  private static let _negative_it_pescara: PublicSuffix.Node = .label("pescara", next: [.termination])
  private static let _negative_it_pg: PublicSuffix.Node = .label("pg", next: [.termination])
  private static let _negative_it_pi: PublicSuffix.Node = .label("pi", next: [.termination])
  private static let _negative_it_piacenza: PublicSuffix.Node = .label("piacenza", next: [.termination])
  private static let _negative_it_piedmont: PublicSuffix.Node = .label("piedmont", next: [.termination])
  private static let _negative_it_piemonte: PublicSuffix.Node = .label("piemonte", next: [.termination])
  private static let _negative_it_pisa: PublicSuffix.Node = .label("pisa", next: [.termination])
  private static let _negative_it_pistoia: PublicSuffix.Node = .label("pistoia", next: [.termination])
  private static let _negative_it_pmn: PublicSuffix.Node = .label("pmn", next: [.termination])
  private static let _negative_it_pn: PublicSuffix.Node = .label("pn", next: [.termination])
  private static let _negative_it_po: PublicSuffix.Node = .label("po", next: [.termination])
  private static let _negative_it_pordenone: PublicSuffix.Node = .label("pordenone", next: [.termination])
  private static let _negative_it_potenza: PublicSuffix.Node = .label("potenza", next: [.termination])
  private static let _negative_it_pr: PublicSuffix.Node = .label("pr", next: [.termination])
  private static let _negative_it_prato: PublicSuffix.Node = .label("prato", next: [.termination])
  private static let _negative_it_pt: PublicSuffix.Node = .label("pt", next: [.termination])
  private static let _negative_it_pu: PublicSuffix.Node = .label("pu", next: [.termination])
  private static let _negative_it_pug: PublicSuffix.Node = .label("pug", next: [.termination])
  private static let _negative_it_puglia: PublicSuffix.Node = .label("puglia", next: [.termination])
  private static let _negative_it_pv: PublicSuffix.Node = .label("pv", next: [.termination])
  private static let _negative_it_pz: PublicSuffix.Node = .label("pz", next: [.termination])
  private static let _negative_it_ra: PublicSuffix.Node = .label("ra", next: [.termination])
  private static let _negative_it_ragusa: PublicSuffix.Node = .label("ragusa", next: [.termination])
  private static let _negative_it_ravenna: PublicSuffix.Node = .label("ravenna", next: [.termination])
  private static let _negative_it_rc: PublicSuffix.Node = .label("rc", next: [.termination])
  private static let _negative_it_re: PublicSuffix.Node = .label("re", next: [.termination])
  private static let _negative_it_reggioHcalabria: PublicSuffix.Node = .label("reggio-calabria", next: [.termination])
  private static let _negative_it_reggioHemilia: PublicSuffix.Node = .label("reggio-emilia", next: [.termination])
  private static let _negative_it_reggiocalabria: PublicSuffix.Node = .label("reggiocalabria", next: [.termination])
  private static let _negative_it_reggioemilia: PublicSuffix.Node = .label("reggioemilia", next: [.termination])
  private static let _negative_it_rg: PublicSuffix.Node = .label("rg", next: [.termination])
  private static let _negative_it_ri: PublicSuffix.Node = .label("ri", next: [.termination])
  private static let _negative_it_rieti: PublicSuffix.Node = .label("rieti", next: [.termination])
  private static let _negative_it_rimini: PublicSuffix.Node = .label("rimini", next: [.termination])
  private static let _negative_it_rm: PublicSuffix.Node = .label("rm", next: [.termination])
  private static let _negative_it_rn: PublicSuffix.Node = .label("rn", next: [.termination])
  private static let _negative_it_ro: PublicSuffix.Node = .label("ro", next: [.termination])
  private static let _negative_it_roma: PublicSuffix.Node = .label("roma", next: [.termination])
  private static let _negative_it_rome: PublicSuffix.Node = .label("rome", next: [.termination])
  private static let _negative_it_rovigo: PublicSuffix.Node = .label("rovigo", next: [.termination])
  private static let _negative_it_sa: PublicSuffix.Node = .label("sa", next: [.termination])
  private static let _negative_it_salerno: PublicSuffix.Node = .label("salerno", next: [.termination])
  private static let _negative_it_sar: PublicSuffix.Node = .label("sar", next: [.termination])
  private static let _negative_it_sardegna: PublicSuffix.Node = .label("sardegna", next: [.termination])
  private static let _negative_it_sardinia: PublicSuffix.Node = .label("sardinia", next: [.termination])
  private static let _negative_it_sassari: PublicSuffix.Node = .label("sassari", next: [.termination])
  private static let _negative_it_savona: PublicSuffix.Node = .label("savona", next: [.termination])
  private static let _negative_it_si: PublicSuffix.Node = .label("si", next: [.termination])
  private static let _negative_it_sic: PublicSuffix.Node = .label("sic", next: [.termination])
  private static let _negative_it_sicilia: PublicSuffix.Node = .label("sicilia", next: [.termination])
  private static let _negative_it_sicily: PublicSuffix.Node = .label("sicily", next: [.termination])
  private static let _negative_it_siena: PublicSuffix.Node = .label("siena", next: [.termination])
  private static let _negative_it_siracusa: PublicSuffix.Node = .label("siracusa", next: [.termination])
  private static let _negative_it_so: PublicSuffix.Node = .label("so", next: [.termination])
  private static let _negative_it_sondrio: PublicSuffix.Node = .label("sondrio", next: [.termination])
  private static let _negative_it_sp: PublicSuffix.Node = .label("sp", next: [.termination])
  private static let _negative_it_sr: PublicSuffix.Node = .label("sr", next: [.termination])
  private static let _negative_it_ss: PublicSuffix.Node = .label("ss", next: [.termination])
  private static let _negative_it_suedtirol: PublicSuffix.Node = .label("suedtirol", next: [.termination])
  private static let _negative_it_sv: PublicSuffix.Node = .label("sv", next: [.termination])
  private static let _negative_it_syncloud: PublicSuffix.Node = .label("syncloud", next: [.termination])
  private static let _negative_it_südtirol: PublicSuffix.Node = .label("südtirol", next: [.termination])
  private static let _negative_it_ta: PublicSuffix.Node = .label("ta", next: [.termination])
  private static let _negative_it_taa: PublicSuffix.Node = .label("taa", next: [.termination])
  private static let _negative_it_taranto: PublicSuffix.Node = .label("taranto", next: [.termination])
  private static let _negative_it_te: PublicSuffix.Node = .label("te", next: [.termination])
  private static let _negative_it_tempioHolbia: PublicSuffix.Node = .label("tempio-olbia", next: [.termination])
  private static let _negative_it_tempioolbia: PublicSuffix.Node = .label("tempioolbia", next: [.termination])
  private static let _negative_it_teramo: PublicSuffix.Node = .label("teramo", next: [.termination])
  private static let _negative_it_terni: PublicSuffix.Node = .label("terni", next: [.termination])
  private static let _negative_it_tim_open_jelastic_cloud: PublicSuffix.Node = .label("cloud", next: [.termination])
  private static let _negative_it_tim_open_jelastic: PublicSuffix.Node = .label("jelastic", next: [_negative_it_tim_open_jelastic_cloud])
  private static let _negative_it_tim_open: PublicSuffix.Node = .label("open", next: [_negative_it_tim_open_jelastic])
  private static let _negative_it_tim: PublicSuffix.Node = .label("tim", next: [_negative_it_tim_open])
  private static let _negative_it_tn: PublicSuffix.Node = .label("tn", next: [.termination])
  private static let _negative_it_to: PublicSuffix.Node = .label("to", next: [.termination])
  private static let _negative_it_torino: PublicSuffix.Node = .label("torino", next: [.termination])
  private static let _negative_it_tos: PublicSuffix.Node = .label("tos", next: [.termination])
  private static let _negative_it_toscana: PublicSuffix.Node = .label("toscana", next: [.termination])
  private static let _negative_it_tp: PublicSuffix.Node = .label("tp", next: [.termination])
  private static let _negative_it_tr: PublicSuffix.Node = .label("tr", next: [.termination])
  private static let _negative_it_traniHandriaHbarletta: PublicSuffix.Node = .label("trani-andria-barletta", next: [.termination])
  private static let _negative_it_traniHbarlettaHandria: PublicSuffix.Node = .label("trani-barletta-andria", next: [.termination])
  private static let _negative_it_traniandriabarletta: PublicSuffix.Node = .label("traniandriabarletta", next: [.termination])
  private static let _negative_it_tranibarlettaandria: PublicSuffix.Node = .label("tranibarlettaandria", next: [.termination])
  private static let _negative_it_trapani: PublicSuffix.Node = .label("trapani", next: [.termination])
  private static let _negative_it_trentinHsudHtirol: PublicSuffix.Node = .label("trentin-sud-tirol", next: [.termination])
  private static let _negative_it_trentinHsudtirol: PublicSuffix.Node = .label("trentin-sudtirol", next: [.termination])
  private static let _negative_it_trentinHsuedHtirol: PublicSuffix.Node = .label("trentin-sued-tirol", next: [.termination])
  private static let _negative_it_trentinHsuedtirol: PublicSuffix.Node = .label("trentin-suedtirol", next: [.termination])
  private static let _negative_it_trentinHsüdHtirol: PublicSuffix.Node = .label("trentin-süd-tirol", next: [.termination])
  private static let _negative_it_trentinHsüdtirol: PublicSuffix.Node = .label("trentin-südtirol", next: [.termination])
  private static let _negative_it_trentino: PublicSuffix.Node = .label("trentino", next: [.termination])
  private static let _negative_it_trentinoHaHadige: PublicSuffix.Node = .label("trentino-a-adige", next: [.termination])
  private static let _negative_it_trentinoHaadige: PublicSuffix.Node = .label("trentino-aadige", next: [.termination])
  private static let _negative_it_trentinoHaltoHadige: PublicSuffix.Node = .label("trentino-alto-adige", next: [.termination])
  private static let _negative_it_trentinoHaltoadige: PublicSuffix.Node = .label("trentino-altoadige", next: [.termination])
  private static let _negative_it_trentinoHsHtirol: PublicSuffix.Node = .label("trentino-s-tirol", next: [.termination])
  private static let _negative_it_trentinoHstirol: PublicSuffix.Node = .label("trentino-stirol", next: [.termination])
  private static let _negative_it_trentinoHsudHtirol: PublicSuffix.Node = .label("trentino-sud-tirol", next: [.termination])
  private static let _negative_it_trentinoHsudtirol: PublicSuffix.Node = .label("trentino-sudtirol", next: [.termination])
  private static let _negative_it_trentinoHsuedHtirol: PublicSuffix.Node = .label("trentino-sued-tirol", next: [.termination])
  private static let _negative_it_trentinoHsuedtirol: PublicSuffix.Node = .label("trentino-suedtirol", next: [.termination])
  private static let _negative_it_trentinoHsüdHtirol: PublicSuffix.Node = .label("trentino-süd-tirol", next: [.termination])
  private static let _negative_it_trentinoHsüdtirol: PublicSuffix.Node = .label("trentino-südtirol", next: [.termination])
  private static let _negative_it_trentinoaHadige: PublicSuffix.Node = .label("trentinoa-adige", next: [.termination])
  private static let _negative_it_trentinoaadige: PublicSuffix.Node = .label("trentinoaadige", next: [.termination])
  private static let _negative_it_trentinoaltoHadige: PublicSuffix.Node = .label("trentinoalto-adige", next: [.termination])
  private static let _negative_it_trentinoaltoadige: PublicSuffix.Node = .label("trentinoaltoadige", next: [.termination])
  private static let _negative_it_trentinosHtirol: PublicSuffix.Node = .label("trentinos-tirol", next: [.termination])
  private static let _negative_it_trentinostirol: PublicSuffix.Node = .label("trentinostirol", next: [.termination])
  private static let _negative_it_trentinosudHtirol: PublicSuffix.Node = .label("trentinosud-tirol", next: [.termination])
  private static let _negative_it_trentinosudtirol: PublicSuffix.Node = .label("trentinosudtirol", next: [.termination])
  private static let _negative_it_trentinosuedHtirol: PublicSuffix.Node = .label("trentinosued-tirol", next: [.termination])
  private static let _negative_it_trentinosuedtirol: PublicSuffix.Node = .label("trentinosuedtirol", next: [.termination])
  private static let _negative_it_trentinosüdHtirol: PublicSuffix.Node = .label("trentinosüd-tirol", next: [.termination])
  private static let _negative_it_trentinosüdtirol: PublicSuffix.Node = .label("trentinosüdtirol", next: [.termination])
  private static let _negative_it_trentinsudHtirol: PublicSuffix.Node = .label("trentinsud-tirol", next: [.termination])
  private static let _negative_it_trentinsudtirol: PublicSuffix.Node = .label("trentinsudtirol", next: [.termination])
  private static let _negative_it_trentinsuedHtirol: PublicSuffix.Node = .label("trentinsued-tirol", next: [.termination])
  private static let _negative_it_trentinsuedtirol: PublicSuffix.Node = .label("trentinsuedtirol", next: [.termination])
  private static let _negative_it_trentinsüdHtirol: PublicSuffix.Node = .label("trentinsüd-tirol", next: [.termination])
  private static let _negative_it_trentinsüdtirol: PublicSuffix.Node = .label("trentinsüdtirol", next: [.termination])
  private static let _negative_it_trento: PublicSuffix.Node = .label("trento", next: [.termination])
  private static let _negative_it_treviso: PublicSuffix.Node = .label("treviso", next: [.termination])
  private static let _negative_it_trieste: PublicSuffix.Node = .label("trieste", next: [.termination])
  private static let _negative_it_ts: PublicSuffix.Node = .label("ts", next: [.termination])
  private static let _negative_it_turin: PublicSuffix.Node = .label("turin", next: [.termination])
  private static let _negative_it_tuscany: PublicSuffix.Node = .label("tuscany", next: [.termination])
  private static let _negative_it_tv: PublicSuffix.Node = .label("tv", next: [.termination])
  private static let _negative_it_ud: PublicSuffix.Node = .label("ud", next: [.termination])
  private static let _negative_it_udine: PublicSuffix.Node = .label("udine", next: [.termination])
  private static let _negative_it_umb: PublicSuffix.Node = .label("umb", next: [.termination])
  private static let _negative_it_umbria: PublicSuffix.Node = .label("umbria", next: [.termination])
  private static let _negative_it_urbinoHpesaro: PublicSuffix.Node = .label("urbino-pesaro", next: [.termination])
  private static let _negative_it_urbinopesaro: PublicSuffix.Node = .label("urbinopesaro", next: [.termination])
  private static let _negative_it_va: PublicSuffix.Node = .label("va", next: [.termination])
  private static let _negative_it_valHdHaosta: PublicSuffix.Node = .label("val-d-aosta", next: [.termination])
  private static let _negative_it_valHdaosta: PublicSuffix.Node = .label("val-daosta", next: [.termination])
  private static let _negative_it_valdHaosta: PublicSuffix.Node = .label("vald-aosta", next: [.termination])
  private static let _negative_it_valdaosta: PublicSuffix.Node = .label("valdaosta", next: [.termination])
  private static let _negative_it_valleHaosta: PublicSuffix.Node = .label("valle-aosta", next: [.termination])
  private static let _negative_it_valleHdHaosta: PublicSuffix.Node = .label("valle-d-aosta", next: [.termination])
  private static let _negative_it_valleHdaosta: PublicSuffix.Node = .label("valle-daosta", next: [.termination])
  private static let _negative_it_valleaosta: PublicSuffix.Node = .label("valleaosta", next: [.termination])
  private static let _negative_it_valledHaosta: PublicSuffix.Node = .label("valled-aosta", next: [.termination])
  private static let _negative_it_valledaosta: PublicSuffix.Node = .label("valledaosta", next: [.termination])
  private static let _negative_it_valleeHaoste: PublicSuffix.Node = .label("vallee-aoste", next: [.termination])
  private static let _negative_it_valleeHdHaoste: PublicSuffix.Node = .label("vallee-d-aoste", next: [.termination])
  private static let _negative_it_valleeaoste: PublicSuffix.Node = .label("valleeaoste", next: [.termination])
  private static let _negative_it_valleedaoste: PublicSuffix.Node = .label("valleedaoste", next: [.termination])
  private static let _negative_it_valléeHaoste: PublicSuffix.Node = .label("vallée-aoste", next: [.termination])
  private static let _negative_it_valléeHdHaoste: PublicSuffix.Node = .label("vallée-d-aoste", next: [.termination])
  private static let _negative_it_valléeaoste: PublicSuffix.Node = .label("valléeaoste", next: [.termination])
  private static let _negative_it_valléedaoste: PublicSuffix.Node = .label("valléedaoste", next: [.termination])
  private static let _negative_it_vao: PublicSuffix.Node = .label("vao", next: [.termination])
  private static let _negative_it_varese: PublicSuffix.Node = .label("varese", next: [.termination])
  private static let _negative_it_vb: PublicSuffix.Node = .label("vb", next: [.termination])
  private static let _negative_it_vc: PublicSuffix.Node = .label("vc", next: [.termination])
  private static let _negative_it_vda: PublicSuffix.Node = .label("vda", next: [.termination])
  private static let _negative_it_ve: PublicSuffix.Node = .label("ve", next: [.termination])
  private static let _negative_it_ven: PublicSuffix.Node = .label("ven", next: [.termination])
  private static let _negative_it_veneto: PublicSuffix.Node = .label("veneto", next: [.termination])
  private static let _negative_it_venezia: PublicSuffix.Node = .label("venezia", next: [.termination])
  private static let _negative_it_venice: PublicSuffix.Node = .label("venice", next: [.termination])
  private static let _negative_it_verbania: PublicSuffix.Node = .label("verbania", next: [.termination])
  private static let _negative_it_vercelli: PublicSuffix.Node = .label("vercelli", next: [.termination])
  private static let _negative_it_verona: PublicSuffix.Node = .label("verona", next: [.termination])
  private static let _negative_it_vi: PublicSuffix.Node = .label("vi", next: [.termination])
  private static let _negative_it_viboHvalentia: PublicSuffix.Node = .label("vibo-valentia", next: [.termination])
  private static let _negative_it_vibovalentia: PublicSuffix.Node = .label("vibovalentia", next: [.termination])
  private static let _negative_it_vicenza: PublicSuffix.Node = .label("vicenza", next: [.termination])
  private static let _negative_it_viterbo: PublicSuffix.Node = .label("viterbo", next: [.termination])
  private static let _negative_it_vr: PublicSuffix.Node = .label("vr", next: [.termination])
  private static let _negative_it_vs: PublicSuffix.Node = .label("vs", next: [.termination])
  private static let _negative_it_vt: PublicSuffix.Node = .label("vt", next: [.termination])
  private static let _negative_it_vv: PublicSuffix.Node = .label("vv", next: [.termination])
  private static let _negative_it: PublicSuffix.Node = .label("it", next: [.termination, _negative_it_16Hb, _negative_it_32Hb, _negative_it_64Hb, _negative_it_abr, _negative_it_abruzzo, _negative_it_ag, _negative_it_agrigento, _negative_it_al, _negative_it_alessandria, _negative_it_altoHadige, _negative_it_altoadige, _negative_it_an, _negative_it_ancona, _negative_it_andriaHbarlettaHtrani, _negative_it_andriaHtraniHbarletta, _negative_it_andriabarlettatrani, _negative_it_andriatranibarletta, _negative_it_ao, _negative_it_aosta, _negative_it_aostaHvalley, _negative_it_aostavalley, _negative_it_aoste, _negative_it_ap, _negative_it_aq, _negative_it_aquila, _negative_it_ar, _negative_it_arezzo, _negative_it_ascoliHpiceno, _negative_it_ascolipiceno, _negative_it_asti, _negative_it_at, _negative_it_av, _negative_it_avellino, _negative_it_ba, _negative_it_balsan, _negative_it_balsanHsudtirol, _negative_it_balsanHsuedtirol, _negative_it_balsanHsüdtirol, _negative_it_bari, _negative_it_barlettaHtraniHandria, _negative_it_barlettatraniandria, _negative_it_bas, _negative_it_basilicata, _negative_it_belluno, _negative_it_benevento, _negative_it_bergamo, _negative_it_bg, _negative_it_bi, _negative_it_biella, _negative_it_bl, _negative_it_blogspot, _negative_it_bn, _negative_it_bo, _negative_it_bologna, _negative_it_bolzano, _negative_it_bolzanoHaltoadige, _negative_it_bozen, _negative_it_bozenHsudtirol, _negative_it_bozenHsuedtirol, _negative_it_bozenHsüdtirol, _negative_it_br, _negative_it_brescia, _negative_it_brindisi, _negative_it_bs, _negative_it_bt, _negative_it_bulsan, _negative_it_bulsanHsudtirol, _negative_it_bulsanHsuedtirol, _negative_it_bulsanHsüdtirol, _negative_it_bz, _negative_it_ca, _negative_it_cagliari, _negative_it_cal, _negative_it_calabria, _negative_it_caltanissetta, _negative_it_cam, _negative_it_campania, _negative_it_campidanoHmedio, _negative_it_campidanomedio, _negative_it_campobasso, _negative_it_carboniaHiglesias, _negative_it_carboniaiglesias, _negative_it_carraraHmassa, _negative_it_carraramassa, _negative_it_caserta, _negative_it_catania, _negative_it_catanzaro, _negative_it_cb, _negative_it_ce, _negative_it_cesenaHforli, _negative_it_cesenaHforlì, _negative_it_cesenaforli, _negative_it_cesenaforlì, _negative_it_ch, _negative_it_chieti, _negative_it_ci, _negative_it_cl, _negative_it_cn, _negative_it_co, _negative_it_como, _negative_it_cosenza, _negative_it_cr, _negative_it_cremona, _negative_it_crotone, _negative_it_cs, _negative_it_ct, _negative_it_cuneo, _negative_it_cz, _negative_it_dellHogliastra, _negative_it_dellogliastra, _negative_it_edu, _negative_it_emiliaHromagna, _negative_it_emiliaromagna, _negative_it_emr, _negative_it_en, _negative_it_enna, _negative_it_fc, _negative_it_fe, _negative_it_fermo, _negative_it_ferrara, _negative_it_fg, _negative_it_fi, _negative_it_firenze, _negative_it_florence, _negative_it_fm, _negative_it_foggia, _negative_it_forliHcesena, _negative_it_forlicesena, _negative_it_forlìHcesena, _negative_it_forlìcesena, _negative_it_fr, _negative_it_friuliHvHgiulia, _negative_it_friuliHveHgiulia, _negative_it_friuliHvegiulia, _negative_it_friuliHveneziaHgiulia, _negative_it_friuliHveneziagiulia, _negative_it_friuliHvgiulia, _negative_it_friulivHgiulia, _negative_it_friuliveHgiulia, _negative_it_friulivegiulia, _negative_it_friuliveneziaHgiulia, _negative_it_friuliveneziagiulia, _negative_it_friulivgiulia, _negative_it_frosinone, _negative_it_fvg, _negative_it_ge, _negative_it_genoa, _negative_it_genova, _negative_it_go, _negative_it_gorizia, _negative_it_gov, _negative_it_gr, _negative_it_grosseto, _negative_it_ibxos, _negative_it_iglesiasHcarbonia, _negative_it_iglesiascarbonia, _negative_it_iliadboxos, _negative_it_im, _negative_it_imperia, _negative_it_is, _negative_it_isernia, _negative_it_kr, _negative_it_laHspezia, _negative_it_laquila, _negative_it_laspezia, _negative_it_latina, _negative_it_laz, _negative_it_lazio, _negative_it_lc, _negative_it_le, _negative_it_lecce, _negative_it_lecco, _negative_it_li, _negative_it_lig, _negative_it_liguria, _negative_it_livorno, _negative_it_lo, _negative_it_lodi, _negative_it_lom, _negative_it_lombardia, _negative_it_lombardy, _negative_it_lt, _negative_it_lu, _negative_it_lucania, _negative_it_lucca, _negative_it_macerata, _negative_it_mantova, _negative_it_mar, _negative_it_marche, _negative_it_massaHcarrara, _negative_it_massacarrara, _negative_it_matera, _negative_it_mb, _negative_it_mc, _negative_it_me, _negative_it_medioHcampidano, _negative_it_mediocampidano, _negative_it_messina, _negative_it_mi, _negative_it_milan, _negative_it_milano, _negative_it_mn, _negative_it_mo, _negative_it_modena, _negative_it_mol, _negative_it_molise, _negative_it_monza, _negative_it_monzaHbrianza, _negative_it_monzaHeHdellaHbrianza, _negative_it_monzabrianza, _negative_it_monzaebrianza, _negative_it_monzaedellabrianza, _negative_it_ms, _negative_it_mt, _negative_it_myspreadshop, _negative_it_na, _negative_it_naples, _negative_it_napoli, _negative_it_neen, _negative_it_no, _negative_it_novara, _negative_it_nu, _negative_it_nuoro, _negative_it_og, _negative_it_ogliastra, _negative_it_olbiaHtempio, _negative_it_olbiatempio, _negative_it_or, _negative_it_oristano, _negative_it_ot, _negative_it_pa, _negative_it_padova, _negative_it_padua, _negative_it_palermo, _negative_it_parma, _negative_it_pavia, _negative_it_pc, _negative_it_pd, _negative_it_pe, _negative_it_perugia, _negative_it_pesaroHurbino, _negative_it_pesarourbino, _negative_it_pescara, _negative_it_pg, _negative_it_pi, _negative_it_piacenza, _negative_it_piedmont, _negative_it_piemonte, _negative_it_pisa, _negative_it_pistoia, _negative_it_pmn, _negative_it_pn, _negative_it_po, _negative_it_pordenone, _negative_it_potenza, _negative_it_pr, _negative_it_prato, _negative_it_pt, _negative_it_pu, _negative_it_pug, _negative_it_puglia, _negative_it_pv, _negative_it_pz, _negative_it_ra, _negative_it_ragusa, _negative_it_ravenna, _negative_it_rc, _negative_it_re, _negative_it_reggioHcalabria, _negative_it_reggioHemilia, _negative_it_reggiocalabria, _negative_it_reggioemilia, _negative_it_rg, _negative_it_ri, _negative_it_rieti, _negative_it_rimini, _negative_it_rm, _negative_it_rn, _negative_it_ro, _negative_it_roma, _negative_it_rome, _negative_it_rovigo, _negative_it_sa, _negative_it_salerno, _negative_it_sar, _negative_it_sardegna, _negative_it_sardinia, _negative_it_sassari, _negative_it_savona, _negative_it_si, _negative_it_sic, _negative_it_sicilia, _negative_it_sicily, _negative_it_siena, _negative_it_siracusa, _negative_it_so, _negative_it_sondrio, _negative_it_sp, _negative_it_sr, _negative_it_ss, _negative_it_suedtirol, _negative_it_sv, _negative_it_syncloud, _negative_it_südtirol, _negative_it_ta, _negative_it_taa, _negative_it_taranto, _negative_it_te, _negative_it_tempioHolbia, _negative_it_tempioolbia, _negative_it_teramo, _negative_it_terni, _negative_it_tim, _negative_it_tn, _negative_it_to, _negative_it_torino, _negative_it_tos, _negative_it_toscana, _negative_it_tp, _negative_it_tr, _negative_it_traniHandriaHbarletta, _negative_it_traniHbarlettaHandria, _negative_it_traniandriabarletta, _negative_it_tranibarlettaandria, _negative_it_trapani, _negative_it_trentinHsudHtirol, _negative_it_trentinHsudtirol, _negative_it_trentinHsuedHtirol, _negative_it_trentinHsuedtirol, _negative_it_trentinHsüdHtirol, _negative_it_trentinHsüdtirol, _negative_it_trentino, _negative_it_trentinoHaHadige, _negative_it_trentinoHaadige, _negative_it_trentinoHaltoHadige, _negative_it_trentinoHaltoadige, _negative_it_trentinoHsHtirol, _negative_it_trentinoHstirol, _negative_it_trentinoHsudHtirol, _negative_it_trentinoHsudtirol, _negative_it_trentinoHsuedHtirol, _negative_it_trentinoHsuedtirol, _negative_it_trentinoHsüdHtirol, _negative_it_trentinoHsüdtirol, _negative_it_trentinoaHadige, _negative_it_trentinoaadige, _negative_it_trentinoaltoHadige, _negative_it_trentinoaltoadige, _negative_it_trentinosHtirol, _negative_it_trentinostirol, _negative_it_trentinosudHtirol, _negative_it_trentinosudtirol, _negative_it_trentinosuedHtirol, _negative_it_trentinosuedtirol, _negative_it_trentinosüdHtirol, _negative_it_trentinosüdtirol, _negative_it_trentinsudHtirol, _negative_it_trentinsudtirol, _negative_it_trentinsuedHtirol, _negative_it_trentinsuedtirol, _negative_it_trentinsüdHtirol, _negative_it_trentinsüdtirol, _negative_it_trento, _negative_it_treviso, _negative_it_trieste, _negative_it_ts, _negative_it_turin, _negative_it_tuscany, _negative_it_tv, _negative_it_ud, _negative_it_udine, _negative_it_umb, _negative_it_umbria, _negative_it_urbinoHpesaro, _negative_it_urbinopesaro, _negative_it_va, _negative_it_valHdHaosta, _negative_it_valHdaosta, _negative_it_valdHaosta, _negative_it_valdaosta, _negative_it_valleHaosta, _negative_it_valleHdHaosta, _negative_it_valleHdaosta, _negative_it_valleaosta, _negative_it_valledHaosta, _negative_it_valledaosta, _negative_it_valleeHaoste, _negative_it_valleeHdHaoste, _negative_it_valleeaoste, _negative_it_valleedaoste, _negative_it_valléeHaoste, _negative_it_valléeHdHaoste, _negative_it_valléeaoste, _negative_it_valléedaoste, _negative_it_vao, _negative_it_varese, _negative_it_vb, _negative_it_vc, _negative_it_vda, _negative_it_ve, _negative_it_ven, _negative_it_veneto, _negative_it_venezia, _negative_it_venice, _negative_it_verbania, _negative_it_vercelli, _negative_it_verona, _negative_it_vi, _negative_it_viboHvalentia, _negative_it_vibovalentia, _negative_it_vicenza, _negative_it_viterbo, _negative_it_vr, _negative_it_vs, _negative_it_vt, _negative_it_vv])
  private static let _negative_itau: PublicSuffix.Node = .label("itau", next: [.termination])
  private static let _negative_itv: PublicSuffix.Node = .label("itv", next: [.termination])
  private static let _negative_jaguar: PublicSuffix.Node = .label("jaguar", next: [.termination])
  private static let _negative_java: PublicSuffix.Node = .label("java", next: [.termination])
  private static let _negative_jcb: PublicSuffix.Node = .label("jcb", next: [.termination])
  private static let _negative_je_co: PublicSuffix.Node = .label("co", next: [.termination])
  private static let _negative_je_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_je_of: PublicSuffix.Node = .label("of", next: [.termination])
  private static let _negative_je_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_je: PublicSuffix.Node = .label("je", next: [.termination, _negative_je_co, _negative_je_net, _negative_je_of, _negative_je_org])
  private static let _negative_jeep: PublicSuffix.Node = .label("jeep", next: [.termination])
  private static let _negative_jetzt: PublicSuffix.Node = .label("jetzt", next: [.termination])
  private static let _negative_jewelry: PublicSuffix.Node = .label("jewelry", next: [.termination])
  private static let _negative_jio: PublicSuffix.Node = .label("jio", next: [.termination])
  private static let _negative_jll: PublicSuffix.Node = .label("jll", next: [.termination])
  private static let _negative_jm: PublicSuffix.Node = .label("jm", next: [.any])
  private static let _negative_jmp: PublicSuffix.Node = .label("jmp", next: [.termination])
  private static let _negative_jnj: PublicSuffix.Node = .label("jnj", next: [.termination])
  private static let _negative_jo_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_jo_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_jo_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_jo_mil: PublicSuffix.Node = .label("mil", next: [.termination])
  private static let _negative_jo_name: PublicSuffix.Node = .label("name", next: [.termination])
  private static let _negative_jo_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_jo_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_jo_sch: PublicSuffix.Node = .label("sch", next: [.termination])
  private static let _negative_jo: PublicSuffix.Node = .label("jo", next: [.termination, _negative_jo_com, _negative_jo_edu, _negative_jo_gov, _negative_jo_mil, _negative_jo_name, _negative_jo_net, _negative_jo_org, _negative_jo_sch])
  private static let _negative_jobs: PublicSuffix.Node = .label("jobs", next: [.termination])
  private static let _negative_joburg: PublicSuffix.Node = .label("joburg", next: [.termination])
  private static let _negative_jot: PublicSuffix.Node = .label("jot", next: [.termination])
  private static let _negative_joy: PublicSuffix.Node = .label("joy", next: [.termination])
  private static let _negative_jp_ac: PublicSuffix.Node = .label("ac", next: [.termination])
  private static let _negative_jp_ad: PublicSuffix.Node = .label("ad", next: [.termination])
  private static let _negative_jp_aichi_aisai: PublicSuffix.Node = .label("aisai", next: [.termination])
  private static let _negative_jp_aichi_ama: PublicSuffix.Node = .label("ama", next: [.termination])
  private static let _negative_jp_aichi_anjo: PublicSuffix.Node = .label("anjo", next: [.termination])
  private static let _negative_jp_aichi_asuke: PublicSuffix.Node = .label("asuke", next: [.termination])
  private static let _negative_jp_aichi_chiryu: PublicSuffix.Node = .label("chiryu", next: [.termination])
  private static let _negative_jp_aichi_chita: PublicSuffix.Node = .label("chita", next: [.termination])
  private static let _negative_jp_aichi_fuso: PublicSuffix.Node = .label("fuso", next: [.termination])
  private static let _negative_jp_aichi_gamagori: PublicSuffix.Node = .label("gamagori", next: [.termination])
  private static let _negative_jp_aichi_handa: PublicSuffix.Node = .label("handa", next: [.termination])
  private static let _negative_jp_aichi_hazu: PublicSuffix.Node = .label("hazu", next: [.termination])
  private static let _negative_jp_aichi_hekinan: PublicSuffix.Node = .label("hekinan", next: [.termination])
  private static let _negative_jp_aichi_higashiura: PublicSuffix.Node = .label("higashiura", next: [.termination])
  private static let _negative_jp_aichi_ichinomiya: PublicSuffix.Node = .label("ichinomiya", next: [.termination])
  private static let _negative_jp_aichi_inazawa: PublicSuffix.Node = .label("inazawa", next: [.termination])
  private static let _negative_jp_aichi_inuyama: PublicSuffix.Node = .label("inuyama", next: [.termination])
  private static let _negative_jp_aichi_isshiki: PublicSuffix.Node = .label("isshiki", next: [.termination])
  private static let _negative_jp_aichi_iwakura: PublicSuffix.Node = .label("iwakura", next: [.termination])
  private static let _negative_jp_aichi_kanie: PublicSuffix.Node = .label("kanie", next: [.termination])
  private static let _negative_jp_aichi_kariya: PublicSuffix.Node = .label("kariya", next: [.termination])
  private static let _negative_jp_aichi_kasugai: PublicSuffix.Node = .label("kasugai", next: [.termination])
  private static let _negative_jp_aichi_kira: PublicSuffix.Node = .label("kira", next: [.termination])
  private static let _negative_jp_aichi_kiyosu: PublicSuffix.Node = .label("kiyosu", next: [.termination])
  private static let _negative_jp_aichi_komaki: PublicSuffix.Node = .label("komaki", next: [.termination])
  private static let _negative_jp_aichi_konan: PublicSuffix.Node = .label("konan", next: [.termination])
  private static let _negative_jp_aichi_kota: PublicSuffix.Node = .label("kota", next: [.termination])
  private static let _negative_jp_aichi_mihama: PublicSuffix.Node = .label("mihama", next: [.termination])
  private static let _negative_jp_aichi_miyoshi: PublicSuffix.Node = .label("miyoshi", next: [.termination])
  private static let _negative_jp_aichi_nishio: PublicSuffix.Node = .label("nishio", next: [.termination])
  private static let _negative_jp_aichi_nisshin: PublicSuffix.Node = .label("nisshin", next: [.termination])
  private static let _negative_jp_aichi_obu: PublicSuffix.Node = .label("obu", next: [.termination])
  private static let _negative_jp_aichi_oguchi: PublicSuffix.Node = .label("oguchi", next: [.termination])
  private static let _negative_jp_aichi_oharu: PublicSuffix.Node = .label("oharu", next: [.termination])
  private static let _negative_jp_aichi_okazaki: PublicSuffix.Node = .label("okazaki", next: [.termination])
  private static let _negative_jp_aichi_owariasahi: PublicSuffix.Node = .label("owariasahi", next: [.termination])
  private static let _negative_jp_aichi_seto: PublicSuffix.Node = .label("seto", next: [.termination])
  private static let _negative_jp_aichi_shikatsu: PublicSuffix.Node = .label("shikatsu", next: [.termination])
  private static let _negative_jp_aichi_shinshiro: PublicSuffix.Node = .label("shinshiro", next: [.termination])
  private static let _negative_jp_aichi_shitara: PublicSuffix.Node = .label("shitara", next: [.termination])
  private static let _negative_jp_aichi_tahara: PublicSuffix.Node = .label("tahara", next: [.termination])
  private static let _negative_jp_aichi_takahama: PublicSuffix.Node = .label("takahama", next: [.termination])
  private static let _negative_jp_aichi_tobishima: PublicSuffix.Node = .label("tobishima", next: [.termination])
  private static let _negative_jp_aichi_toei: PublicSuffix.Node = .label("toei", next: [.termination])
  private static let _negative_jp_aichi_togo: PublicSuffix.Node = .label("togo", next: [.termination])
  private static let _negative_jp_aichi_tokai: PublicSuffix.Node = .label("tokai", next: [.termination])
  private static let _negative_jp_aichi_tokoname: PublicSuffix.Node = .label("tokoname", next: [.termination])
  private static let _negative_jp_aichi_toyoake: PublicSuffix.Node = .label("toyoake", next: [.termination])
  private static let _negative_jp_aichi_toyohashi: PublicSuffix.Node = .label("toyohashi", next: [.termination])
  private static let _negative_jp_aichi_toyokawa: PublicSuffix.Node = .label("toyokawa", next: [.termination])
  private static let _negative_jp_aichi_toyone: PublicSuffix.Node = .label("toyone", next: [.termination])
  private static let _negative_jp_aichi_toyota: PublicSuffix.Node = .label("toyota", next: [.termination])
  private static let _negative_jp_aichi_tsushima: PublicSuffix.Node = .label("tsushima", next: [.termination])
  private static let _negative_jp_aichi_yatomi: PublicSuffix.Node = .label("yatomi", next: [.termination])
  private static let _negative_jp_aichi: PublicSuffix.Node = .label("aichi", next: [.termination, _negative_jp_aichi_aisai, _negative_jp_aichi_ama, _negative_jp_aichi_anjo, _negative_jp_aichi_asuke, _negative_jp_aichi_chiryu, _negative_jp_aichi_chita, _negative_jp_aichi_fuso, _negative_jp_aichi_gamagori, _negative_jp_aichi_handa, _negative_jp_aichi_hazu, _negative_jp_aichi_hekinan, _negative_jp_aichi_higashiura, _negative_jp_aichi_ichinomiya, _negative_jp_aichi_inazawa, _negative_jp_aichi_inuyama, _negative_jp_aichi_isshiki, _negative_jp_aichi_iwakura, _negative_jp_aichi_kanie, _negative_jp_aichi_kariya, _negative_jp_aichi_kasugai, _negative_jp_aichi_kira, _negative_jp_aichi_kiyosu, _negative_jp_aichi_komaki, _negative_jp_aichi_konan, _negative_jp_aichi_kota, _negative_jp_aichi_mihama, _negative_jp_aichi_miyoshi, _negative_jp_aichi_nishio, _negative_jp_aichi_nisshin, _negative_jp_aichi_obu, _negative_jp_aichi_oguchi, _negative_jp_aichi_oharu, _negative_jp_aichi_okazaki, _negative_jp_aichi_owariasahi, _negative_jp_aichi_seto, _negative_jp_aichi_shikatsu, _negative_jp_aichi_shinshiro, _negative_jp_aichi_shitara, _negative_jp_aichi_tahara, _negative_jp_aichi_takahama, _negative_jp_aichi_tobishima, _negative_jp_aichi_toei, _negative_jp_aichi_togo, _negative_jp_aichi_tokai, _negative_jp_aichi_tokoname, _negative_jp_aichi_toyoake, _negative_jp_aichi_toyohashi, _negative_jp_aichi_toyokawa, _negative_jp_aichi_toyone, _negative_jp_aichi_toyota, _negative_jp_aichi_tsushima, _negative_jp_aichi_yatomi])
  private static let _negative_jp_akita_akita: PublicSuffix.Node = .label("akita", next: [.termination])
  private static let _negative_jp_akita_daisen: PublicSuffix.Node = .label("daisen", next: [.termination])
  private static let _negative_jp_akita_fujisato: PublicSuffix.Node = .label("fujisato", next: [.termination])
  private static let _negative_jp_akita_gojome: PublicSuffix.Node = .label("gojome", next: [.termination])
  private static let _negative_jp_akita_hachirogata: PublicSuffix.Node = .label("hachirogata", next: [.termination])
  private static let _negative_jp_akita_happou: PublicSuffix.Node = .label("happou", next: [.termination])
  private static let _negative_jp_akita_higashinaruse: PublicSuffix.Node = .label("higashinaruse", next: [.termination])
  private static let _negative_jp_akita_honjo: PublicSuffix.Node = .label("honjo", next: [.termination])
  private static let _negative_jp_akita_honjyo: PublicSuffix.Node = .label("honjyo", next: [.termination])
  private static let _negative_jp_akita_ikawa: PublicSuffix.Node = .label("ikawa", next: [.termination])
  private static let _negative_jp_akita_kamikoani: PublicSuffix.Node = .label("kamikoani", next: [.termination])
  private static let _negative_jp_akita_kamioka: PublicSuffix.Node = .label("kamioka", next: [.termination])
  private static let _negative_jp_akita_katagami: PublicSuffix.Node = .label("katagami", next: [.termination])
  private static let _negative_jp_akita_kazuno: PublicSuffix.Node = .label("kazuno", next: [.termination])
  private static let _negative_jp_akita_kitaakita: PublicSuffix.Node = .label("kitaakita", next: [.termination])
  private static let _negative_jp_akita_kosaka: PublicSuffix.Node = .label("kosaka", next: [.termination])
  private static let _negative_jp_akita_kyowa: PublicSuffix.Node = .label("kyowa", next: [.termination])
  private static let _negative_jp_akita_misato: PublicSuffix.Node = .label("misato", next: [.termination])
  private static let _negative_jp_akita_mitane: PublicSuffix.Node = .label("mitane", next: [.termination])
  private static let _negative_jp_akita_moriyoshi: PublicSuffix.Node = .label("moriyoshi", next: [.termination])
  private static let _negative_jp_akita_nikaho: PublicSuffix.Node = .label("nikaho", next: [.termination])
  private static let _negative_jp_akita_noshiro: PublicSuffix.Node = .label("noshiro", next: [.termination])
  private static let _negative_jp_akita_odate: PublicSuffix.Node = .label("odate", next: [.termination])
  private static let _negative_jp_akita_oga: PublicSuffix.Node = .label("oga", next: [.termination])
  private static let _negative_jp_akita_ogata: PublicSuffix.Node = .label("ogata", next: [.termination])
  private static let _negative_jp_akita_semboku: PublicSuffix.Node = .label("semboku", next: [.termination])
  private static let _negative_jp_akita_yokote: PublicSuffix.Node = .label("yokote", next: [.termination])
  private static let _negative_jp_akita_yurihonjo: PublicSuffix.Node = .label("yurihonjo", next: [.termination])
  private static let _negative_jp_akita: PublicSuffix.Node = .label("akita", next: [.termination, _negative_jp_akita_akita, _negative_jp_akita_daisen, _negative_jp_akita_fujisato, _negative_jp_akita_gojome, _negative_jp_akita_hachirogata, _negative_jp_akita_happou, _negative_jp_akita_higashinaruse, _negative_jp_akita_honjo, _negative_jp_akita_honjyo, _negative_jp_akita_ikawa, _negative_jp_akita_kamikoani, _negative_jp_akita_kamioka, _negative_jp_akita_katagami, _negative_jp_akita_kazuno, _negative_jp_akita_kitaakita, _negative_jp_akita_kosaka, _negative_jp_akita_kyowa, _negative_jp_akita_misato, _negative_jp_akita_mitane, _negative_jp_akita_moriyoshi, _negative_jp_akita_nikaho, _negative_jp_akita_noshiro, _negative_jp_akita_odate, _negative_jp_akita_oga, _negative_jp_akita_ogata, _negative_jp_akita_semboku, _negative_jp_akita_yokote, _negative_jp_akita_yurihonjo])
  private static let _negative_jp_angry: PublicSuffix.Node = .label("angry", next: [.termination])
  private static let _negative_jp_aomori_aomori: PublicSuffix.Node = .label("aomori", next: [.termination])
  private static let _negative_jp_aomori_gonohe: PublicSuffix.Node = .label("gonohe", next: [.termination])
  private static let _negative_jp_aomori_hachinohe: PublicSuffix.Node = .label("hachinohe", next: [.termination])
  private static let _negative_jp_aomori_hashikami: PublicSuffix.Node = .label("hashikami", next: [.termination])
  private static let _negative_jp_aomori_hiranai: PublicSuffix.Node = .label("hiranai", next: [.termination])
  private static let _negative_jp_aomori_hirosaki: PublicSuffix.Node = .label("hirosaki", next: [.termination])
  private static let _negative_jp_aomori_itayanagi: PublicSuffix.Node = .label("itayanagi", next: [.termination])
  private static let _negative_jp_aomori_kuroishi: PublicSuffix.Node = .label("kuroishi", next: [.termination])
  private static let _negative_jp_aomori_misawa: PublicSuffix.Node = .label("misawa", next: [.termination])
  private static let _negative_jp_aomori_mutsu: PublicSuffix.Node = .label("mutsu", next: [.termination])
  private static let _negative_jp_aomori_nakadomari: PublicSuffix.Node = .label("nakadomari", next: [.termination])
  private static let _negative_jp_aomori_noheji: PublicSuffix.Node = .label("noheji", next: [.termination])
  private static let _negative_jp_aomori_oirase: PublicSuffix.Node = .label("oirase", next: [.termination])
  private static let _negative_jp_aomori_owani: PublicSuffix.Node = .label("owani", next: [.termination])
  private static let _negative_jp_aomori_rokunohe: PublicSuffix.Node = .label("rokunohe", next: [.termination])
  private static let _negative_jp_aomori_sannohe: PublicSuffix.Node = .label("sannohe", next: [.termination])
  private static let _negative_jp_aomori_shichinohe: PublicSuffix.Node = .label("shichinohe", next: [.termination])
  private static let _negative_jp_aomori_shingo: PublicSuffix.Node = .label("shingo", next: [.termination])
  private static let _negative_jp_aomori_takko: PublicSuffix.Node = .label("takko", next: [.termination])
  private static let _negative_jp_aomori_towada: PublicSuffix.Node = .label("towada", next: [.termination])
  private static let _negative_jp_aomori_tsugaru: PublicSuffix.Node = .label("tsugaru", next: [.termination])
  private static let _negative_jp_aomori_tsuruta: PublicSuffix.Node = .label("tsuruta", next: [.termination])
  private static let _negative_jp_aomori: PublicSuffix.Node = .label("aomori", next: [.termination, _negative_jp_aomori_aomori, _negative_jp_aomori_gonohe, _negative_jp_aomori_hachinohe, _negative_jp_aomori_hashikami, _negative_jp_aomori_hiranai, _negative_jp_aomori_hirosaki, _negative_jp_aomori_itayanagi, _negative_jp_aomori_kuroishi, _negative_jp_aomori_misawa, _negative_jp_aomori_mutsu, _negative_jp_aomori_nakadomari, _negative_jp_aomori_noheji, _negative_jp_aomori_oirase, _negative_jp_aomori_owani, _negative_jp_aomori_rokunohe, _negative_jp_aomori_sannohe, _negative_jp_aomori_shichinohe, _negative_jp_aomori_shingo, _negative_jp_aomori_takko, _negative_jp_aomori_towada, _negative_jp_aomori_tsugaru, _negative_jp_aomori_tsuruta])
  private static let _negative_jp_babyblue: PublicSuffix.Node = .label("babyblue", next: [.termination])
  private static let _negative_jp_babymilk: PublicSuffix.Node = .label("babymilk", next: [.termination])
  private static let _negative_jp_backdrop: PublicSuffix.Node = .label("backdrop", next: [.termination])
  private static let _negative_jp_bambina: PublicSuffix.Node = .label("bambina", next: [.termination])
  private static let _negative_jp_bitter: PublicSuffix.Node = .label("bitter", next: [.termination])
  private static let _negative_jp_blogspot: PublicSuffix.Node = .label("blogspot", next: [.termination])
  private static let _negative_jp_blush: PublicSuffix.Node = .label("blush", next: [.termination])
  private static let _negative_jp_boo: PublicSuffix.Node = .label("boo", next: [.termination])
  private static let _negative_jp_boy: PublicSuffix.Node = .label("boy", next: [.termination])
  private static let _negative_jp_boyfriend: PublicSuffix.Node = .label("boyfriend", next: [.termination])
  private static let _negative_jp_but: PublicSuffix.Node = .label("but", next: [.termination])
  private static let _negative_jp_buyshop: PublicSuffix.Node = .label("buyshop", next: [.termination])
  private static let _negative_jp_candypop: PublicSuffix.Node = .label("candypop", next: [.termination])
  private static let _negative_jp_capoo: PublicSuffix.Node = .label("capoo", next: [.termination])
  private static let _negative_jp_catfood: PublicSuffix.Node = .label("catfood", next: [.termination])
  private static let _negative_jp_cheap: PublicSuffix.Node = .label("cheap", next: [.termination])
  private static let _negative_jp_chiba_abiko: PublicSuffix.Node = .label("abiko", next: [.termination])
  private static let _negative_jp_chiba_asahi: PublicSuffix.Node = .label("asahi", next: [.termination])
  private static let _negative_jp_chiba_chonan: PublicSuffix.Node = .label("chonan", next: [.termination])
  private static let _negative_jp_chiba_chosei: PublicSuffix.Node = .label("chosei", next: [.termination])
  private static let _negative_jp_chiba_choshi: PublicSuffix.Node = .label("choshi", next: [.termination])
  private static let _negative_jp_chiba_chuo: PublicSuffix.Node = .label("chuo", next: [.termination])
  private static let _negative_jp_chiba_funabashi: PublicSuffix.Node = .label("funabashi", next: [.termination])
  private static let _negative_jp_chiba_futtsu: PublicSuffix.Node = .label("futtsu", next: [.termination])
  private static let _negative_jp_chiba_hanamigawa: PublicSuffix.Node = .label("hanamigawa", next: [.termination])
  private static let _negative_jp_chiba_ichihara: PublicSuffix.Node = .label("ichihara", next: [.termination])
  private static let _negative_jp_chiba_ichikawa: PublicSuffix.Node = .label("ichikawa", next: [.termination])
  private static let _negative_jp_chiba_ichinomiya: PublicSuffix.Node = .label("ichinomiya", next: [.termination])
  private static let _negative_jp_chiba_inzai: PublicSuffix.Node = .label("inzai", next: [.termination])
  private static let _negative_jp_chiba_isumi: PublicSuffix.Node = .label("isumi", next: [.termination])
  private static let _negative_jp_chiba_kamagaya: PublicSuffix.Node = .label("kamagaya", next: [.termination])
  private static let _negative_jp_chiba_kamogawa: PublicSuffix.Node = .label("kamogawa", next: [.termination])
  private static let _negative_jp_chiba_kashiwa: PublicSuffix.Node = .label("kashiwa", next: [.termination])
  private static let _negative_jp_chiba_katori: PublicSuffix.Node = .label("katori", next: [.termination])
  private static let _negative_jp_chiba_katsuura: PublicSuffix.Node = .label("katsuura", next: [.termination])
  private static let _negative_jp_chiba_kimitsu: PublicSuffix.Node = .label("kimitsu", next: [.termination])
  private static let _negative_jp_chiba_kisarazu: PublicSuffix.Node = .label("kisarazu", next: [.termination])
  private static let _negative_jp_chiba_kozaki: PublicSuffix.Node = .label("kozaki", next: [.termination])
  private static let _negative_jp_chiba_kujukuri: PublicSuffix.Node = .label("kujukuri", next: [.termination])
  private static let _negative_jp_chiba_kyonan: PublicSuffix.Node = .label("kyonan", next: [.termination])
  private static let _negative_jp_chiba_matsudo: PublicSuffix.Node = .label("matsudo", next: [.termination])
  private static let _negative_jp_chiba_midori: PublicSuffix.Node = .label("midori", next: [.termination])
  private static let _negative_jp_chiba_mihama: PublicSuffix.Node = .label("mihama", next: [.termination])
  private static let _negative_jp_chiba_minamiboso: PublicSuffix.Node = .label("minamiboso", next: [.termination])
  private static let _negative_jp_chiba_mobara: PublicSuffix.Node = .label("mobara", next: [.termination])
  private static let _negative_jp_chiba_mutsuzawa: PublicSuffix.Node = .label("mutsuzawa", next: [.termination])
  private static let _negative_jp_chiba_nagara: PublicSuffix.Node = .label("nagara", next: [.termination])
  private static let _negative_jp_chiba_nagareyama: PublicSuffix.Node = .label("nagareyama", next: [.termination])
  private static let _negative_jp_chiba_narashino: PublicSuffix.Node = .label("narashino", next: [.termination])
  private static let _negative_jp_chiba_narita: PublicSuffix.Node = .label("narita", next: [.termination])
  private static let _negative_jp_chiba_noda: PublicSuffix.Node = .label("noda", next: [.termination])
  private static let _negative_jp_chiba_oamishirasato: PublicSuffix.Node = .label("oamishirasato", next: [.termination])
  private static let _negative_jp_chiba_omigawa: PublicSuffix.Node = .label("omigawa", next: [.termination])
  private static let _negative_jp_chiba_onjuku: PublicSuffix.Node = .label("onjuku", next: [.termination])
  private static let _negative_jp_chiba_otaki: PublicSuffix.Node = .label("otaki", next: [.termination])
  private static let _negative_jp_chiba_sakae: PublicSuffix.Node = .label("sakae", next: [.termination])
  private static let _negative_jp_chiba_sakura: PublicSuffix.Node = .label("sakura", next: [.termination])
  private static let _negative_jp_chiba_shimofusa: PublicSuffix.Node = .label("shimofusa", next: [.termination])
  private static let _negative_jp_chiba_shirako: PublicSuffix.Node = .label("shirako", next: [.termination])
  private static let _negative_jp_chiba_shiroi: PublicSuffix.Node = .label("shiroi", next: [.termination])
  private static let _negative_jp_chiba_shisui: PublicSuffix.Node = .label("shisui", next: [.termination])
  private static let _negative_jp_chiba_sodegaura: PublicSuffix.Node = .label("sodegaura", next: [.termination])
  private static let _negative_jp_chiba_sosa: PublicSuffix.Node = .label("sosa", next: [.termination])
  private static let _negative_jp_chiba_tako: PublicSuffix.Node = .label("tako", next: [.termination])
  private static let _negative_jp_chiba_tateyama: PublicSuffix.Node = .label("tateyama", next: [.termination])
  private static let _negative_jp_chiba_togane: PublicSuffix.Node = .label("togane", next: [.termination])
  private static let _negative_jp_chiba_tohnosho: PublicSuffix.Node = .label("tohnosho", next: [.termination])
  private static let _negative_jp_chiba_tomisato: PublicSuffix.Node = .label("tomisato", next: [.termination])
  private static let _negative_jp_chiba_urayasu: PublicSuffix.Node = .label("urayasu", next: [.termination])
  private static let _negative_jp_chiba_yachimata: PublicSuffix.Node = .label("yachimata", next: [.termination])
  private static let _negative_jp_chiba_yachiyo: PublicSuffix.Node = .label("yachiyo", next: [.termination])
  private static let _negative_jp_chiba_yokaichiba: PublicSuffix.Node = .label("yokaichiba", next: [.termination])
  private static let _negative_jp_chiba_yokoshibahikari: PublicSuffix.Node = .label("yokoshibahikari", next: [.termination])
  private static let _negative_jp_chiba_yotsukaido: PublicSuffix.Node = .label("yotsukaido", next: [.termination])
  private static let _negative_jp_chiba: PublicSuffix.Node = .label("chiba", next: [.termination, _negative_jp_chiba_abiko, _negative_jp_chiba_asahi, _negative_jp_chiba_chonan, _negative_jp_chiba_chosei, _negative_jp_chiba_choshi, _negative_jp_chiba_chuo, _negative_jp_chiba_funabashi, _negative_jp_chiba_futtsu, _negative_jp_chiba_hanamigawa, _negative_jp_chiba_ichihara, _negative_jp_chiba_ichikawa, _negative_jp_chiba_ichinomiya, _negative_jp_chiba_inzai, _negative_jp_chiba_isumi, _negative_jp_chiba_kamagaya, _negative_jp_chiba_kamogawa, _negative_jp_chiba_kashiwa, _negative_jp_chiba_katori, _negative_jp_chiba_katsuura, _negative_jp_chiba_kimitsu, _negative_jp_chiba_kisarazu, _negative_jp_chiba_kozaki, _negative_jp_chiba_kujukuri, _negative_jp_chiba_kyonan, _negative_jp_chiba_matsudo, _negative_jp_chiba_midori, _negative_jp_chiba_mihama, _negative_jp_chiba_minamiboso, _negative_jp_chiba_mobara, _negative_jp_chiba_mutsuzawa, _negative_jp_chiba_nagara, _negative_jp_chiba_nagareyama, _negative_jp_chiba_narashino, _negative_jp_chiba_narita, _negative_jp_chiba_noda, _negative_jp_chiba_oamishirasato, _negative_jp_chiba_omigawa, _negative_jp_chiba_onjuku, _negative_jp_chiba_otaki, _negative_jp_chiba_sakae, _negative_jp_chiba_sakura, _negative_jp_chiba_shimofusa, _negative_jp_chiba_shirako, _negative_jp_chiba_shiroi, _negative_jp_chiba_shisui, _negative_jp_chiba_sodegaura, _negative_jp_chiba_sosa, _negative_jp_chiba_tako, _negative_jp_chiba_tateyama, _negative_jp_chiba_togane, _negative_jp_chiba_tohnosho, _negative_jp_chiba_tomisato, _negative_jp_chiba_urayasu, _negative_jp_chiba_yachimata, _negative_jp_chiba_yachiyo, _negative_jp_chiba_yokaichiba, _negative_jp_chiba_yokoshibahikari, _negative_jp_chiba_yotsukaido])
  private static let _negative_jp_chicappa: PublicSuffix.Node = .label("chicappa", next: [.termination])
  private static let _negative_jp_chillout: PublicSuffix.Node = .label("chillout", next: [.termination])
  private static let _negative_jp_chips: PublicSuffix.Node = .label("chips", next: [.termination])
  private static let _negative_jp_chowder: PublicSuffix.Node = .label("chowder", next: [.termination])
  private static let _negative_jp_chu: PublicSuffix.Node = .label("chu", next: [.termination])
  private static let _negative_jp_ciao: PublicSuffix.Node = .label("ciao", next: [.termination])
  private static let _negative_jp_co: PublicSuffix.Node = .label("co", next: [.termination])
  private static let _negative_jp_cocotte: PublicSuffix.Node = .label("cocotte", next: [.termination])
  private static let _negative_jp_coolblog: PublicSuffix.Node = .label("coolblog", next: [.termination])
  private static let _negative_jp_cranky: PublicSuffix.Node = .label("cranky", next: [.termination])
  private static let _negative_jp_cutegirl: PublicSuffix.Node = .label("cutegirl", next: [.termination])
  private static let _negative_jp_daa: PublicSuffix.Node = .label("daa", next: [.termination])
  private static let _negative_jp_deca: PublicSuffix.Node = .label("deca", next: [.termination])
  private static let _negative_jp_deci: PublicSuffix.Node = .label("deci", next: [.termination])
  private static let _negative_jp_digick: PublicSuffix.Node = .label("digick", next: [.termination])
  private static let _negative_jp_ed: PublicSuffix.Node = .label("ed", next: [.termination])
  private static let _negative_jp_egoism: PublicSuffix.Node = .label("egoism", next: [.termination])
  private static let _negative_jp_ehime_ainan: PublicSuffix.Node = .label("ainan", next: [.termination])
  private static let _negative_jp_ehime_honai: PublicSuffix.Node = .label("honai", next: [.termination])
  private static let _negative_jp_ehime_ikata: PublicSuffix.Node = .label("ikata", next: [.termination])
  private static let _negative_jp_ehime_imabari: PublicSuffix.Node = .label("imabari", next: [.termination])
  private static let _negative_jp_ehime_iyo: PublicSuffix.Node = .label("iyo", next: [.termination])
  private static let _negative_jp_ehime_kamijima: PublicSuffix.Node = .label("kamijima", next: [.termination])
  private static let _negative_jp_ehime_kihoku: PublicSuffix.Node = .label("kihoku", next: [.termination])
  private static let _negative_jp_ehime_kumakogen: PublicSuffix.Node = .label("kumakogen", next: [.termination])
  private static let _negative_jp_ehime_masaki: PublicSuffix.Node = .label("masaki", next: [.termination])
  private static let _negative_jp_ehime_matsuno: PublicSuffix.Node = .label("matsuno", next: [.termination])
  private static let _negative_jp_ehime_matsuyama: PublicSuffix.Node = .label("matsuyama", next: [.termination])
  private static let _negative_jp_ehime_namikata: PublicSuffix.Node = .label("namikata", next: [.termination])
  private static let _negative_jp_ehime_niihama: PublicSuffix.Node = .label("niihama", next: [.termination])
  private static let _negative_jp_ehime_ozu: PublicSuffix.Node = .label("ozu", next: [.termination])
  private static let _negative_jp_ehime_saijo: PublicSuffix.Node = .label("saijo", next: [.termination])
  private static let _negative_jp_ehime_seiyo: PublicSuffix.Node = .label("seiyo", next: [.termination])
  private static let _negative_jp_ehime_shikokuchuo: PublicSuffix.Node = .label("shikokuchuo", next: [.termination])
  private static let _negative_jp_ehime_tobe: PublicSuffix.Node = .label("tobe", next: [.termination])
  private static let _negative_jp_ehime_toon: PublicSuffix.Node = .label("toon", next: [.termination])
  private static let _negative_jp_ehime_uchiko: PublicSuffix.Node = .label("uchiko", next: [.termination])
  private static let _negative_jp_ehime_uwajima: PublicSuffix.Node = .label("uwajima", next: [.termination])
  private static let _negative_jp_ehime_yawatahama: PublicSuffix.Node = .label("yawatahama", next: [.termination])
  private static let _negative_jp_ehime: PublicSuffix.Node = .label("ehime", next: [.termination, _negative_jp_ehime_ainan, _negative_jp_ehime_honai, _negative_jp_ehime_ikata, _negative_jp_ehime_imabari, _negative_jp_ehime_iyo, _negative_jp_ehime_kamijima, _negative_jp_ehime_kihoku, _negative_jp_ehime_kumakogen, _negative_jp_ehime_masaki, _negative_jp_ehime_matsuno, _negative_jp_ehime_matsuyama, _negative_jp_ehime_namikata, _negative_jp_ehime_niihama, _negative_jp_ehime_ozu, _negative_jp_ehime_saijo, _negative_jp_ehime_seiyo, _negative_jp_ehime_shikokuchuo, _negative_jp_ehime_tobe, _negative_jp_ehime_toon, _negative_jp_ehime_uchiko, _negative_jp_ehime_uwajima, _negative_jp_ehime_yawatahama])
  private static let _negative_jp_fakefur: PublicSuffix.Node = .label("fakefur", next: [.termination])
  private static let _negative_jp_fashionstore: PublicSuffix.Node = .label("fashionstore", next: [.termination])
  private static let _negative_jp_fem: PublicSuffix.Node = .label("fem", next: [.termination])
  private static let _negative_jp_flier: PublicSuffix.Node = .label("flier", next: [.termination])
  private static let _negative_jp_floppy: PublicSuffix.Node = .label("floppy", next: [.termination])
  private static let _negative_jp_fool: PublicSuffix.Node = .label("fool", next: [.termination])
  private static let _negative_jp_frenchkiss: PublicSuffix.Node = .label("frenchkiss", next: [.termination])
  private static let _negative_jp_fukui_echizen: PublicSuffix.Node = .label("echizen", next: [.termination])
  private static let _negative_jp_fukui_eiheiji: PublicSuffix.Node = .label("eiheiji", next: [.termination])
  private static let _negative_jp_fukui_fukui: PublicSuffix.Node = .label("fukui", next: [.termination])
  private static let _negative_jp_fukui_ikeda: PublicSuffix.Node = .label("ikeda", next: [.termination])
  private static let _negative_jp_fukui_katsuyama: PublicSuffix.Node = .label("katsuyama", next: [.termination])
  private static let _negative_jp_fukui_mihama: PublicSuffix.Node = .label("mihama", next: [.termination])
  private static let _negative_jp_fukui_minamiechizen: PublicSuffix.Node = .label("minamiechizen", next: [.termination])
  private static let _negative_jp_fukui_obama: PublicSuffix.Node = .label("obama", next: [.termination])
  private static let _negative_jp_fukui_ohi: PublicSuffix.Node = .label("ohi", next: [.termination])
  private static let _negative_jp_fukui_ono: PublicSuffix.Node = .label("ono", next: [.termination])
  private static let _negative_jp_fukui_sabae: PublicSuffix.Node = .label("sabae", next: [.termination])
  private static let _negative_jp_fukui_sakai: PublicSuffix.Node = .label("sakai", next: [.termination])
  private static let _negative_jp_fukui_takahama: PublicSuffix.Node = .label("takahama", next: [.termination])
  private static let _negative_jp_fukui_tsuruga: PublicSuffix.Node = .label("tsuruga", next: [.termination])
  private static let _negative_jp_fukui_wakasa: PublicSuffix.Node = .label("wakasa", next: [.termination])
  private static let _negative_jp_fukui: PublicSuffix.Node = .label("fukui", next: [.termination, _negative_jp_fukui_echizen, _negative_jp_fukui_eiheiji, _negative_jp_fukui_fukui, _negative_jp_fukui_ikeda, _negative_jp_fukui_katsuyama, _negative_jp_fukui_mihama, _negative_jp_fukui_minamiechizen, _negative_jp_fukui_obama, _negative_jp_fukui_ohi, _negative_jp_fukui_ono, _negative_jp_fukui_sabae, _negative_jp_fukui_sakai, _negative_jp_fukui_takahama, _negative_jp_fukui_tsuruga, _negative_jp_fukui_wakasa])
  private static let _negative_jp_fukuoka_ashiya: PublicSuffix.Node = .label("ashiya", next: [.termination])
  private static let _negative_jp_fukuoka_buzen: PublicSuffix.Node = .label("buzen", next: [.termination])
  private static let _negative_jp_fukuoka_chikugo: PublicSuffix.Node = .label("chikugo", next: [.termination])
  private static let _negative_jp_fukuoka_chikuho: PublicSuffix.Node = .label("chikuho", next: [.termination])
  private static let _negative_jp_fukuoka_chikujo: PublicSuffix.Node = .label("chikujo", next: [.termination])
  private static let _negative_jp_fukuoka_chikushino: PublicSuffix.Node = .label("chikushino", next: [.termination])
  private static let _negative_jp_fukuoka_chikuzen: PublicSuffix.Node = .label("chikuzen", next: [.termination])
  private static let _negative_jp_fukuoka_chuo: PublicSuffix.Node = .label("chuo", next: [.termination])
  private static let _negative_jp_fukuoka_dazaifu: PublicSuffix.Node = .label("dazaifu", next: [.termination])
  private static let _negative_jp_fukuoka_fukuchi: PublicSuffix.Node = .label("fukuchi", next: [.termination])
  private static let _negative_jp_fukuoka_hakata: PublicSuffix.Node = .label("hakata", next: [.termination])
  private static let _negative_jp_fukuoka_higashi: PublicSuffix.Node = .label("higashi", next: [.termination])
  private static let _negative_jp_fukuoka_hirokawa: PublicSuffix.Node = .label("hirokawa", next: [.termination])
  private static let _negative_jp_fukuoka_hisayama: PublicSuffix.Node = .label("hisayama", next: [.termination])
  private static let _negative_jp_fukuoka_iizuka: PublicSuffix.Node = .label("iizuka", next: [.termination])
  private static let _negative_jp_fukuoka_inatsuki: PublicSuffix.Node = .label("inatsuki", next: [.termination])
  private static let _negative_jp_fukuoka_kaho: PublicSuffix.Node = .label("kaho", next: [.termination])
  private static let _negative_jp_fukuoka_kasuga: PublicSuffix.Node = .label("kasuga", next: [.termination])
  private static let _negative_jp_fukuoka_kasuya: PublicSuffix.Node = .label("kasuya", next: [.termination])
  private static let _negative_jp_fukuoka_kawara: PublicSuffix.Node = .label("kawara", next: [.termination])
  private static let _negative_jp_fukuoka_keisen: PublicSuffix.Node = .label("keisen", next: [.termination])
  private static let _negative_jp_fukuoka_koga: PublicSuffix.Node = .label("koga", next: [.termination])
  private static let _negative_jp_fukuoka_kurate: PublicSuffix.Node = .label("kurate", next: [.termination])
  private static let _negative_jp_fukuoka_kurogi: PublicSuffix.Node = .label("kurogi", next: [.termination])
  private static let _negative_jp_fukuoka_kurume: PublicSuffix.Node = .label("kurume", next: [.termination])
  private static let _negative_jp_fukuoka_minami: PublicSuffix.Node = .label("minami", next: [.termination])
  private static let _negative_jp_fukuoka_miyako: PublicSuffix.Node = .label("miyako", next: [.termination])
  private static let _negative_jp_fukuoka_miyama: PublicSuffix.Node = .label("miyama", next: [.termination])
  private static let _negative_jp_fukuoka_miyawaka: PublicSuffix.Node = .label("miyawaka", next: [.termination])
  private static let _negative_jp_fukuoka_mizumaki: PublicSuffix.Node = .label("mizumaki", next: [.termination])
  private static let _negative_jp_fukuoka_munakata: PublicSuffix.Node = .label("munakata", next: [.termination])
  private static let _negative_jp_fukuoka_nakagawa: PublicSuffix.Node = .label("nakagawa", next: [.termination])
  private static let _negative_jp_fukuoka_nakama: PublicSuffix.Node = .label("nakama", next: [.termination])
  private static let _negative_jp_fukuoka_nishi: PublicSuffix.Node = .label("nishi", next: [.termination])
  private static let _negative_jp_fukuoka_nogata: PublicSuffix.Node = .label("nogata", next: [.termination])
  private static let _negative_jp_fukuoka_ogori: PublicSuffix.Node = .label("ogori", next: [.termination])
  private static let _negative_jp_fukuoka_okagaki: PublicSuffix.Node = .label("okagaki", next: [.termination])
  private static let _negative_jp_fukuoka_okawa: PublicSuffix.Node = .label("okawa", next: [.termination])
  private static let _negative_jp_fukuoka_oki: PublicSuffix.Node = .label("oki", next: [.termination])
  private static let _negative_jp_fukuoka_omuta: PublicSuffix.Node = .label("omuta", next: [.termination])
  private static let _negative_jp_fukuoka_onga: PublicSuffix.Node = .label("onga", next: [.termination])
  private static let _negative_jp_fukuoka_onojo: PublicSuffix.Node = .label("onojo", next: [.termination])
  private static let _negative_jp_fukuoka_oto: PublicSuffix.Node = .label("oto", next: [.termination])
  private static let _negative_jp_fukuoka_saigawa: PublicSuffix.Node = .label("saigawa", next: [.termination])
  private static let _negative_jp_fukuoka_sasaguri: PublicSuffix.Node = .label("sasaguri", next: [.termination])
  private static let _negative_jp_fukuoka_shingu: PublicSuffix.Node = .label("shingu", next: [.termination])
  private static let _negative_jp_fukuoka_shinyoshitomi: PublicSuffix.Node = .label("shinyoshitomi", next: [.termination])
  private static let _negative_jp_fukuoka_shonai: PublicSuffix.Node = .label("shonai", next: [.termination])
  private static let _negative_jp_fukuoka_soeda: PublicSuffix.Node = .label("soeda", next: [.termination])
  private static let _negative_jp_fukuoka_sue: PublicSuffix.Node = .label("sue", next: [.termination])
  private static let _negative_jp_fukuoka_tachiarai: PublicSuffix.Node = .label("tachiarai", next: [.termination])
  private static let _negative_jp_fukuoka_tagawa: PublicSuffix.Node = .label("tagawa", next: [.termination])
  private static let _negative_jp_fukuoka_takata: PublicSuffix.Node = .label("takata", next: [.termination])
  private static let _negative_jp_fukuoka_toho: PublicSuffix.Node = .label("toho", next: [.termination])
  private static let _negative_jp_fukuoka_toyotsu: PublicSuffix.Node = .label("toyotsu", next: [.termination])
  private static let _negative_jp_fukuoka_tsuiki: PublicSuffix.Node = .label("tsuiki", next: [.termination])
  private static let _negative_jp_fukuoka_ukiha: PublicSuffix.Node = .label("ukiha", next: [.termination])
  private static let _negative_jp_fukuoka_umi: PublicSuffix.Node = .label("umi", next: [.termination])
  private static let _negative_jp_fukuoka_usui: PublicSuffix.Node = .label("usui", next: [.termination])
  private static let _negative_jp_fukuoka_yamada: PublicSuffix.Node = .label("yamada", next: [.termination])
  private static let _negative_jp_fukuoka_yame: PublicSuffix.Node = .label("yame", next: [.termination])
  private static let _negative_jp_fukuoka_yanagawa: PublicSuffix.Node = .label("yanagawa", next: [.termination])
  private static let _negative_jp_fukuoka_yukuhashi: PublicSuffix.Node = .label("yukuhashi", next: [.termination])
  private static let _negative_jp_fukuoka: PublicSuffix.Node = .label("fukuoka", next: [.termination, _negative_jp_fukuoka_ashiya, _negative_jp_fukuoka_buzen, _negative_jp_fukuoka_chikugo, _negative_jp_fukuoka_chikuho, _negative_jp_fukuoka_chikujo, _negative_jp_fukuoka_chikushino, _negative_jp_fukuoka_chikuzen, _negative_jp_fukuoka_chuo, _negative_jp_fukuoka_dazaifu, _negative_jp_fukuoka_fukuchi, _negative_jp_fukuoka_hakata, _negative_jp_fukuoka_higashi, _negative_jp_fukuoka_hirokawa, _negative_jp_fukuoka_hisayama, _negative_jp_fukuoka_iizuka, _negative_jp_fukuoka_inatsuki, _negative_jp_fukuoka_kaho, _negative_jp_fukuoka_kasuga, _negative_jp_fukuoka_kasuya, _negative_jp_fukuoka_kawara, _negative_jp_fukuoka_keisen, _negative_jp_fukuoka_koga, _negative_jp_fukuoka_kurate, _negative_jp_fukuoka_kurogi, _negative_jp_fukuoka_kurume, _negative_jp_fukuoka_minami, _negative_jp_fukuoka_miyako, _negative_jp_fukuoka_miyama, _negative_jp_fukuoka_miyawaka, _negative_jp_fukuoka_mizumaki, _negative_jp_fukuoka_munakata, _negative_jp_fukuoka_nakagawa, _negative_jp_fukuoka_nakama, _negative_jp_fukuoka_nishi, _negative_jp_fukuoka_nogata, _negative_jp_fukuoka_ogori, _negative_jp_fukuoka_okagaki, _negative_jp_fukuoka_okawa, _negative_jp_fukuoka_oki, _negative_jp_fukuoka_omuta, _negative_jp_fukuoka_onga, _negative_jp_fukuoka_onojo, _negative_jp_fukuoka_oto, _negative_jp_fukuoka_saigawa, _negative_jp_fukuoka_sasaguri, _negative_jp_fukuoka_shingu, _negative_jp_fukuoka_shinyoshitomi, _negative_jp_fukuoka_shonai, _negative_jp_fukuoka_soeda, _negative_jp_fukuoka_sue, _negative_jp_fukuoka_tachiarai, _negative_jp_fukuoka_tagawa, _negative_jp_fukuoka_takata, _negative_jp_fukuoka_toho, _negative_jp_fukuoka_toyotsu, _negative_jp_fukuoka_tsuiki, _negative_jp_fukuoka_ukiha, _negative_jp_fukuoka_umi, _negative_jp_fukuoka_usui, _negative_jp_fukuoka_yamada, _negative_jp_fukuoka_yame, _negative_jp_fukuoka_yanagawa, _negative_jp_fukuoka_yukuhashi])
  private static let _negative_jp_fukushima_aizubange: PublicSuffix.Node = .label("aizubange", next: [.termination])
  private static let _negative_jp_fukushima_aizumisato: PublicSuffix.Node = .label("aizumisato", next: [.termination])
  private static let _negative_jp_fukushima_aizuwakamatsu: PublicSuffix.Node = .label("aizuwakamatsu", next: [.termination])
  private static let _negative_jp_fukushima_asakawa: PublicSuffix.Node = .label("asakawa", next: [.termination])
  private static let _negative_jp_fukushima_bandai: PublicSuffix.Node = .label("bandai", next: [.termination])
  private static let _negative_jp_fukushima_date: PublicSuffix.Node = .label("date", next: [.termination])
  private static let _negative_jp_fukushima_fukushima: PublicSuffix.Node = .label("fukushima", next: [.termination])
  private static let _negative_jp_fukushima_furudono: PublicSuffix.Node = .label("furudono", next: [.termination])
  private static let _negative_jp_fukushima_futaba: PublicSuffix.Node = .label("futaba", next: [.termination])
  private static let _negative_jp_fukushima_hanawa: PublicSuffix.Node = .label("hanawa", next: [.termination])
  private static let _negative_jp_fukushima_higashi: PublicSuffix.Node = .label("higashi", next: [.termination])
  private static let _negative_jp_fukushima_hirata: PublicSuffix.Node = .label("hirata", next: [.termination])
  private static let _negative_jp_fukushima_hirono: PublicSuffix.Node = .label("hirono", next: [.termination])
  private static let _negative_jp_fukushima_iitate: PublicSuffix.Node = .label("iitate", next: [.termination])
  private static let _negative_jp_fukushima_inawashiro: PublicSuffix.Node = .label("inawashiro", next: [.termination])
  private static let _negative_jp_fukushima_ishikawa: PublicSuffix.Node = .label("ishikawa", next: [.termination])
  private static let _negative_jp_fukushima_iwaki: PublicSuffix.Node = .label("iwaki", next: [.termination])
  private static let _negative_jp_fukushima_izumizaki: PublicSuffix.Node = .label("izumizaki", next: [.termination])
  private static let _negative_jp_fukushima_kagamiishi: PublicSuffix.Node = .label("kagamiishi", next: [.termination])
  private static let _negative_jp_fukushima_kaneyama: PublicSuffix.Node = .label("kaneyama", next: [.termination])
  private static let _negative_jp_fukushima_kawamata: PublicSuffix.Node = .label("kawamata", next: [.termination])
  private static let _negative_jp_fukushima_kitakata: PublicSuffix.Node = .label("kitakata", next: [.termination])
  private static let _negative_jp_fukushima_kitashiobara: PublicSuffix.Node = .label("kitashiobara", next: [.termination])
  private static let _negative_jp_fukushima_koori: PublicSuffix.Node = .label("koori", next: [.termination])
  private static let _negative_jp_fukushima_koriyama: PublicSuffix.Node = .label("koriyama", next: [.termination])
  private static let _negative_jp_fukushima_kunimi: PublicSuffix.Node = .label("kunimi", next: [.termination])
  private static let _negative_jp_fukushima_miharu: PublicSuffix.Node = .label("miharu", next: [.termination])
  private static let _negative_jp_fukushima_mishima: PublicSuffix.Node = .label("mishima", next: [.termination])
  private static let _negative_jp_fukushima_namie: PublicSuffix.Node = .label("namie", next: [.termination])
  private static let _negative_jp_fukushima_nango: PublicSuffix.Node = .label("nango", next: [.termination])
  private static let _negative_jp_fukushima_nishiaizu: PublicSuffix.Node = .label("nishiaizu", next: [.termination])
  private static let _negative_jp_fukushima_nishigo: PublicSuffix.Node = .label("nishigo", next: [.termination])
  private static let _negative_jp_fukushima_okuma: PublicSuffix.Node = .label("okuma", next: [.termination])
  private static let _negative_jp_fukushima_omotego: PublicSuffix.Node = .label("omotego", next: [.termination])
  private static let _negative_jp_fukushima_ono: PublicSuffix.Node = .label("ono", next: [.termination])
  private static let _negative_jp_fukushima_otama: PublicSuffix.Node = .label("otama", next: [.termination])
  private static let _negative_jp_fukushima_samegawa: PublicSuffix.Node = .label("samegawa", next: [.termination])
  private static let _negative_jp_fukushima_shimogo: PublicSuffix.Node = .label("shimogo", next: [.termination])
  private static let _negative_jp_fukushima_shirakawa: PublicSuffix.Node = .label("shirakawa", next: [.termination])
  private static let _negative_jp_fukushima_showa: PublicSuffix.Node = .label("showa", next: [.termination])
  private static let _negative_jp_fukushima_soma: PublicSuffix.Node = .label("soma", next: [.termination])
  private static let _negative_jp_fukushima_sukagawa: PublicSuffix.Node = .label("sukagawa", next: [.termination])
  private static let _negative_jp_fukushima_taishin: PublicSuffix.Node = .label("taishin", next: [.termination])
  private static let _negative_jp_fukushima_tamakawa: PublicSuffix.Node = .label("tamakawa", next: [.termination])
  private static let _negative_jp_fukushima_tanagura: PublicSuffix.Node = .label("tanagura", next: [.termination])
  private static let _negative_jp_fukushima_tenei: PublicSuffix.Node = .label("tenei", next: [.termination])
  private static let _negative_jp_fukushima_yabuki: PublicSuffix.Node = .label("yabuki", next: [.termination])
  private static let _negative_jp_fukushima_yamato: PublicSuffix.Node = .label("yamato", next: [.termination])
  private static let _negative_jp_fukushima_yamatsuri: PublicSuffix.Node = .label("yamatsuri", next: [.termination])
  private static let _negative_jp_fukushima_yanaizu: PublicSuffix.Node = .label("yanaizu", next: [.termination])
  private static let _negative_jp_fukushima_yugawa: PublicSuffix.Node = .label("yugawa", next: [.termination])
  private static let _negative_jp_fukushima: PublicSuffix.Node = .label("fukushima", next: [.termination, _negative_jp_fukushima_aizubange, _negative_jp_fukushima_aizumisato, _negative_jp_fukushima_aizuwakamatsu, _negative_jp_fukushima_asakawa, _negative_jp_fukushima_bandai, _negative_jp_fukushima_date, _negative_jp_fukushima_fukushima, _negative_jp_fukushima_furudono, _negative_jp_fukushima_futaba, _negative_jp_fukushima_hanawa, _negative_jp_fukushima_higashi, _negative_jp_fukushima_hirata, _negative_jp_fukushima_hirono, _negative_jp_fukushima_iitate, _negative_jp_fukushima_inawashiro, _negative_jp_fukushima_ishikawa, _negative_jp_fukushima_iwaki, _negative_jp_fukushima_izumizaki, _negative_jp_fukushima_kagamiishi, _negative_jp_fukushima_kaneyama, _negative_jp_fukushima_kawamata, _negative_jp_fukushima_kitakata, _negative_jp_fukushima_kitashiobara, _negative_jp_fukushima_koori, _negative_jp_fukushima_koriyama, _negative_jp_fukushima_kunimi, _negative_jp_fukushima_miharu, _negative_jp_fukushima_mishima, _negative_jp_fukushima_namie, _negative_jp_fukushima_nango, _negative_jp_fukushima_nishiaizu, _negative_jp_fukushima_nishigo, _negative_jp_fukushima_okuma, _negative_jp_fukushima_omotego, _negative_jp_fukushima_ono, _negative_jp_fukushima_otama, _negative_jp_fukushima_samegawa, _negative_jp_fukushima_shimogo, _negative_jp_fukushima_shirakawa, _negative_jp_fukushima_showa, _negative_jp_fukushima_soma, _negative_jp_fukushima_sukagawa, _negative_jp_fukushima_taishin, _negative_jp_fukushima_tamakawa, _negative_jp_fukushima_tanagura, _negative_jp_fukushima_tenei, _negative_jp_fukushima_yabuki, _negative_jp_fukushima_yamato, _negative_jp_fukushima_yamatsuri, _negative_jp_fukushima_yanaizu, _negative_jp_fukushima_yugawa])
  private static let _negative_jp_gifu_anpachi: PublicSuffix.Node = .label("anpachi", next: [.termination])
  private static let _negative_jp_gifu_ena: PublicSuffix.Node = .label("ena", next: [.termination])
  private static let _negative_jp_gifu_gifu: PublicSuffix.Node = .label("gifu", next: [.termination])
  private static let _negative_jp_gifu_ginan: PublicSuffix.Node = .label("ginan", next: [.termination])
  private static let _negative_jp_gifu_godo: PublicSuffix.Node = .label("godo", next: [.termination])
  private static let _negative_jp_gifu_gujo: PublicSuffix.Node = .label("gujo", next: [.termination])
  private static let _negative_jp_gifu_hashima: PublicSuffix.Node = .label("hashima", next: [.termination])
  private static let _negative_jp_gifu_hichiso: PublicSuffix.Node = .label("hichiso", next: [.termination])
  private static let _negative_jp_gifu_hida: PublicSuffix.Node = .label("hida", next: [.termination])
  private static let _negative_jp_gifu_higashishirakawa: PublicSuffix.Node = .label("higashishirakawa", next: [.termination])
  private static let _negative_jp_gifu_ibigawa: PublicSuffix.Node = .label("ibigawa", next: [.termination])
  private static let _negative_jp_gifu_ikeda: PublicSuffix.Node = .label("ikeda", next: [.termination])
  private static let _negative_jp_gifu_kakamigahara: PublicSuffix.Node = .label("kakamigahara", next: [.termination])
  private static let _negative_jp_gifu_kani: PublicSuffix.Node = .label("kani", next: [.termination])
  private static let _negative_jp_gifu_kasahara: PublicSuffix.Node = .label("kasahara", next: [.termination])
  private static let _negative_jp_gifu_kasamatsu: PublicSuffix.Node = .label("kasamatsu", next: [.termination])
  private static let _negative_jp_gifu_kawaue: PublicSuffix.Node = .label("kawaue", next: [.termination])
  private static let _negative_jp_gifu_kitagata: PublicSuffix.Node = .label("kitagata", next: [.termination])
  private static let _negative_jp_gifu_mino: PublicSuffix.Node = .label("mino", next: [.termination])
  private static let _negative_jp_gifu_minokamo: PublicSuffix.Node = .label("minokamo", next: [.termination])
  private static let _negative_jp_gifu_mitake: PublicSuffix.Node = .label("mitake", next: [.termination])
  private static let _negative_jp_gifu_mizunami: PublicSuffix.Node = .label("mizunami", next: [.termination])
  private static let _negative_jp_gifu_motosu: PublicSuffix.Node = .label("motosu", next: [.termination])
  private static let _negative_jp_gifu_nakatsugawa: PublicSuffix.Node = .label("nakatsugawa", next: [.termination])
  private static let _negative_jp_gifu_ogaki: PublicSuffix.Node = .label("ogaki", next: [.termination])
  private static let _negative_jp_gifu_sakahogi: PublicSuffix.Node = .label("sakahogi", next: [.termination])
  private static let _negative_jp_gifu_seki: PublicSuffix.Node = .label("seki", next: [.termination])
  private static let _negative_jp_gifu_sekigahara: PublicSuffix.Node = .label("sekigahara", next: [.termination])
  private static let _negative_jp_gifu_shirakawa: PublicSuffix.Node = .label("shirakawa", next: [.termination])
  private static let _negative_jp_gifu_tajimi: PublicSuffix.Node = .label("tajimi", next: [.termination])
  private static let _negative_jp_gifu_takayama: PublicSuffix.Node = .label("takayama", next: [.termination])
  private static let _negative_jp_gifu_tarui: PublicSuffix.Node = .label("tarui", next: [.termination])
  private static let _negative_jp_gifu_toki: PublicSuffix.Node = .label("toki", next: [.termination])
  private static let _negative_jp_gifu_tomika: PublicSuffix.Node = .label("tomika", next: [.termination])
  private static let _negative_jp_gifu_wanouchi: PublicSuffix.Node = .label("wanouchi", next: [.termination])
  private static let _negative_jp_gifu_yamagata: PublicSuffix.Node = .label("yamagata", next: [.termination])
  private static let _negative_jp_gifu_yaotsu: PublicSuffix.Node = .label("yaotsu", next: [.termination])
  private static let _negative_jp_gifu_yoro: PublicSuffix.Node = .label("yoro", next: [.termination])
  private static let _negative_jp_gifu: PublicSuffix.Node = .label("gifu", next: [.termination, _negative_jp_gifu_anpachi, _negative_jp_gifu_ena, _negative_jp_gifu_gifu, _negative_jp_gifu_ginan, _negative_jp_gifu_godo, _negative_jp_gifu_gujo, _negative_jp_gifu_hashima, _negative_jp_gifu_hichiso, _negative_jp_gifu_hida, _negative_jp_gifu_higashishirakawa, _negative_jp_gifu_ibigawa, _negative_jp_gifu_ikeda, _negative_jp_gifu_kakamigahara, _negative_jp_gifu_kani, _negative_jp_gifu_kasahara, _negative_jp_gifu_kasamatsu, _negative_jp_gifu_kawaue, _negative_jp_gifu_kitagata, _negative_jp_gifu_mino, _negative_jp_gifu_minokamo, _negative_jp_gifu_mitake, _negative_jp_gifu_mizunami, _negative_jp_gifu_motosu, _negative_jp_gifu_nakatsugawa, _negative_jp_gifu_ogaki, _negative_jp_gifu_sakahogi, _negative_jp_gifu_seki, _negative_jp_gifu_sekigahara, _negative_jp_gifu_shirakawa, _negative_jp_gifu_tajimi, _negative_jp_gifu_takayama, _negative_jp_gifu_tarui, _negative_jp_gifu_toki, _negative_jp_gifu_tomika, _negative_jp_gifu_wanouchi, _negative_jp_gifu_yamagata, _negative_jp_gifu_yaotsu, _negative_jp_gifu_yoro])
  private static let _negative_jp_girlfriend: PublicSuffix.Node = .label("girlfriend", next: [.termination])
  private static let _negative_jp_girly: PublicSuffix.Node = .label("girly", next: [.termination])
  private static let _negative_jp_gloomy: PublicSuffix.Node = .label("gloomy", next: [.termination])
  private static let _negative_jp_go: PublicSuffix.Node = .label("go", next: [.termination])
  private static let _negative_jp_gonna: PublicSuffix.Node = .label("gonna", next: [.termination])
  private static let _negative_jp_gr: PublicSuffix.Node = .label("gr", next: [.termination])
  private static let _negative_jp_greater: PublicSuffix.Node = .label("greater", next: [.termination])
  private static let _negative_jp_gunma_annaka: PublicSuffix.Node = .label("annaka", next: [.termination])
  private static let _negative_jp_gunma_chiyoda: PublicSuffix.Node = .label("chiyoda", next: [.termination])
  private static let _negative_jp_gunma_fujioka: PublicSuffix.Node = .label("fujioka", next: [.termination])
  private static let _negative_jp_gunma_higashiagatsuma: PublicSuffix.Node = .label("higashiagatsuma", next: [.termination])
  private static let _negative_jp_gunma_isesaki: PublicSuffix.Node = .label("isesaki", next: [.termination])
  private static let _negative_jp_gunma_itakura: PublicSuffix.Node = .label("itakura", next: [.termination])
  private static let _negative_jp_gunma_kanna: PublicSuffix.Node = .label("kanna", next: [.termination])
  private static let _negative_jp_gunma_kanra: PublicSuffix.Node = .label("kanra", next: [.termination])
  private static let _negative_jp_gunma_katashina: PublicSuffix.Node = .label("katashina", next: [.termination])
  private static let _negative_jp_gunma_kawaba: PublicSuffix.Node = .label("kawaba", next: [.termination])
  private static let _negative_jp_gunma_kiryu: PublicSuffix.Node = .label("kiryu", next: [.termination])
  private static let _negative_jp_gunma_kusatsu: PublicSuffix.Node = .label("kusatsu", next: [.termination])
  private static let _negative_jp_gunma_maebashi: PublicSuffix.Node = .label("maebashi", next: [.termination])
  private static let _negative_jp_gunma_meiwa: PublicSuffix.Node = .label("meiwa", next: [.termination])
  private static let _negative_jp_gunma_midori: PublicSuffix.Node = .label("midori", next: [.termination])
  private static let _negative_jp_gunma_minakami: PublicSuffix.Node = .label("minakami", next: [.termination])
  private static let _negative_jp_gunma_naganohara: PublicSuffix.Node = .label("naganohara", next: [.termination])
  private static let _negative_jp_gunma_nakanojo: PublicSuffix.Node = .label("nakanojo", next: [.termination])
  private static let _negative_jp_gunma_nanmoku: PublicSuffix.Node = .label("nanmoku", next: [.termination])
  private static let _negative_jp_gunma_numata: PublicSuffix.Node = .label("numata", next: [.termination])
  private static let _negative_jp_gunma_oizumi: PublicSuffix.Node = .label("oizumi", next: [.termination])
  private static let _negative_jp_gunma_ora: PublicSuffix.Node = .label("ora", next: [.termination])
  private static let _negative_jp_gunma_ota: PublicSuffix.Node = .label("ota", next: [.termination])
  private static let _negative_jp_gunma_shibukawa: PublicSuffix.Node = .label("shibukawa", next: [.termination])
  private static let _negative_jp_gunma_shimonita: PublicSuffix.Node = .label("shimonita", next: [.termination])
  private static let _negative_jp_gunma_shinto: PublicSuffix.Node = .label("shinto", next: [.termination])
  private static let _negative_jp_gunma_showa: PublicSuffix.Node = .label("showa", next: [.termination])
  private static let _negative_jp_gunma_takasaki: PublicSuffix.Node = .label("takasaki", next: [.termination])
  private static let _negative_jp_gunma_takayama: PublicSuffix.Node = .label("takayama", next: [.termination])
  private static let _negative_jp_gunma_tamamura: PublicSuffix.Node = .label("tamamura", next: [.termination])
  private static let _negative_jp_gunma_tatebayashi: PublicSuffix.Node = .label("tatebayashi", next: [.termination])
  private static let _negative_jp_gunma_tomioka: PublicSuffix.Node = .label("tomioka", next: [.termination])
  private static let _negative_jp_gunma_tsukiyono: PublicSuffix.Node = .label("tsukiyono", next: [.termination])
  private static let _negative_jp_gunma_tsumagoi: PublicSuffix.Node = .label("tsumagoi", next: [.termination])
  private static let _negative_jp_gunma_ueno: PublicSuffix.Node = .label("ueno", next: [.termination])
  private static let _negative_jp_gunma_yoshioka: PublicSuffix.Node = .label("yoshioka", next: [.termination])
  private static let _negative_jp_gunma: PublicSuffix.Node = .label("gunma", next: [.termination, _negative_jp_gunma_annaka, _negative_jp_gunma_chiyoda, _negative_jp_gunma_fujioka, _negative_jp_gunma_higashiagatsuma, _negative_jp_gunma_isesaki, _negative_jp_gunma_itakura, _negative_jp_gunma_kanna, _negative_jp_gunma_kanra, _negative_jp_gunma_katashina, _negative_jp_gunma_kawaba, _negative_jp_gunma_kiryu, _negative_jp_gunma_kusatsu, _negative_jp_gunma_maebashi, _negative_jp_gunma_meiwa, _negative_jp_gunma_midori, _negative_jp_gunma_minakami, _negative_jp_gunma_naganohara, _negative_jp_gunma_nakanojo, _negative_jp_gunma_nanmoku, _negative_jp_gunma_numata, _negative_jp_gunma_oizumi, _negative_jp_gunma_ora, _negative_jp_gunma_ota, _negative_jp_gunma_shibukawa, _negative_jp_gunma_shimonita, _negative_jp_gunma_shinto, _negative_jp_gunma_showa, _negative_jp_gunma_takasaki, _negative_jp_gunma_takayama, _negative_jp_gunma_tamamura, _negative_jp_gunma_tatebayashi, _negative_jp_gunma_tomioka, _negative_jp_gunma_tsukiyono, _negative_jp_gunma_tsumagoi, _negative_jp_gunma_ueno, _negative_jp_gunma_yoshioka])
  private static let _negative_jp_hacca: PublicSuffix.Node = .label("hacca", next: [.termination])
  private static let _negative_jp_handcrafted: PublicSuffix.Node = .label("handcrafted", next: [.termination])
  private static let _negative_jp_heavy: PublicSuffix.Node = .label("heavy", next: [.termination])
  private static let _negative_jp_her: PublicSuffix.Node = .label("her", next: [.termination])
  private static let _negative_jp_hiho: PublicSuffix.Node = .label("hiho", next: [.termination])
  private static let _negative_jp_hippy: PublicSuffix.Node = .label("hippy", next: [.termination])
  private static let _negative_jp_hiroshima_asaminami: PublicSuffix.Node = .label("asaminami", next: [.termination])
  private static let _negative_jp_hiroshima_daiwa: PublicSuffix.Node = .label("daiwa", next: [.termination])
  private static let _negative_jp_hiroshima_etajima: PublicSuffix.Node = .label("etajima", next: [.termination])
  private static let _negative_jp_hiroshima_fuchu: PublicSuffix.Node = .label("fuchu", next: [.termination])
  private static let _negative_jp_hiroshima_fukuyama: PublicSuffix.Node = .label("fukuyama", next: [.termination])
  private static let _negative_jp_hiroshima_hatsukaichi: PublicSuffix.Node = .label("hatsukaichi", next: [.termination])
  private static let _negative_jp_hiroshima_higashihiroshima: PublicSuffix.Node = .label("higashihiroshima", next: [.termination])
  private static let _negative_jp_hiroshima_hongo: PublicSuffix.Node = .label("hongo", next: [.termination])
  private static let _negative_jp_hiroshima_jinsekikogen: PublicSuffix.Node = .label("jinsekikogen", next: [.termination])
  private static let _negative_jp_hiroshima_kaita: PublicSuffix.Node = .label("kaita", next: [.termination])
  private static let _negative_jp_hiroshima_kui: PublicSuffix.Node = .label("kui", next: [.termination])
  private static let _negative_jp_hiroshima_kumano: PublicSuffix.Node = .label("kumano", next: [.termination])
  private static let _negative_jp_hiroshima_kure: PublicSuffix.Node = .label("kure", next: [.termination])
  private static let _negative_jp_hiroshima_mihara: PublicSuffix.Node = .label("mihara", next: [.termination])
  private static let _negative_jp_hiroshima_miyoshi: PublicSuffix.Node = .label("miyoshi", next: [.termination])
  private static let _negative_jp_hiroshima_naka: PublicSuffix.Node = .label("naka", next: [.termination])
  private static let _negative_jp_hiroshima_onomichi: PublicSuffix.Node = .label("onomichi", next: [.termination])
  private static let _negative_jp_hiroshima_osakikamijima: PublicSuffix.Node = .label("osakikamijima", next: [.termination])
  private static let _negative_jp_hiroshima_otake: PublicSuffix.Node = .label("otake", next: [.termination])
  private static let _negative_jp_hiroshima_saka: PublicSuffix.Node = .label("saka", next: [.termination])
  private static let _negative_jp_hiroshima_sera: PublicSuffix.Node = .label("sera", next: [.termination])
  private static let _negative_jp_hiroshima_seranishi: PublicSuffix.Node = .label("seranishi", next: [.termination])
  private static let _negative_jp_hiroshima_shinichi: PublicSuffix.Node = .label("shinichi", next: [.termination])
  private static let _negative_jp_hiroshima_shobara: PublicSuffix.Node = .label("shobara", next: [.termination])
  private static let _negative_jp_hiroshima_takehara: PublicSuffix.Node = .label("takehara", next: [.termination])
  private static let _negative_jp_hiroshima: PublicSuffix.Node = .label("hiroshima", next: [.termination, _negative_jp_hiroshima_asaminami, _negative_jp_hiroshima_daiwa, _negative_jp_hiroshima_etajima, _negative_jp_hiroshima_fuchu, _negative_jp_hiroshima_fukuyama, _negative_jp_hiroshima_hatsukaichi, _negative_jp_hiroshima_higashihiroshima, _negative_jp_hiroshima_hongo, _negative_jp_hiroshima_jinsekikogen, _negative_jp_hiroshima_kaita, _negative_jp_hiroshima_kui, _negative_jp_hiroshima_kumano, _negative_jp_hiroshima_kure, _negative_jp_hiroshima_mihara, _negative_jp_hiroshima_miyoshi, _negative_jp_hiroshima_naka, _negative_jp_hiroshima_onomichi, _negative_jp_hiroshima_osakikamijima, _negative_jp_hiroshima_otake, _negative_jp_hiroshima_saka, _negative_jp_hiroshima_sera, _negative_jp_hiroshima_seranishi, _negative_jp_hiroshima_shinichi, _negative_jp_hiroshima_shobara, _negative_jp_hiroshima_takehara])
  private static let _negative_jp_hokkaido_abashiri: PublicSuffix.Node = .label("abashiri", next: [.termination])
  private static let _negative_jp_hokkaido_abira: PublicSuffix.Node = .label("abira", next: [.termination])
  private static let _negative_jp_hokkaido_aibetsu: PublicSuffix.Node = .label("aibetsu", next: [.termination])
  private static let _negative_jp_hokkaido_akabira: PublicSuffix.Node = .label("akabira", next: [.termination])
  private static let _negative_jp_hokkaido_akkeshi: PublicSuffix.Node = .label("akkeshi", next: [.termination])
  private static let _negative_jp_hokkaido_asahikawa: PublicSuffix.Node = .label("asahikawa", next: [.termination])
  private static let _negative_jp_hokkaido_ashibetsu: PublicSuffix.Node = .label("ashibetsu", next: [.termination])
  private static let _negative_jp_hokkaido_ashoro: PublicSuffix.Node = .label("ashoro", next: [.termination])
  private static let _negative_jp_hokkaido_assabu: PublicSuffix.Node = .label("assabu", next: [.termination])
  private static let _negative_jp_hokkaido_atsuma: PublicSuffix.Node = .label("atsuma", next: [.termination])
  private static let _negative_jp_hokkaido_bibai: PublicSuffix.Node = .label("bibai", next: [.termination])
  private static let _negative_jp_hokkaido_biei: PublicSuffix.Node = .label("biei", next: [.termination])
  private static let _negative_jp_hokkaido_bifuka: PublicSuffix.Node = .label("bifuka", next: [.termination])
  private static let _negative_jp_hokkaido_bihoro: PublicSuffix.Node = .label("bihoro", next: [.termination])
  private static let _negative_jp_hokkaido_biratori: PublicSuffix.Node = .label("biratori", next: [.termination])
  private static let _negative_jp_hokkaido_chippubetsu: PublicSuffix.Node = .label("chippubetsu", next: [.termination])
  private static let _negative_jp_hokkaido_chitose: PublicSuffix.Node = .label("chitose", next: [.termination])
  private static let _negative_jp_hokkaido_date: PublicSuffix.Node = .label("date", next: [.termination])
  private static let _negative_jp_hokkaido_ebetsu: PublicSuffix.Node = .label("ebetsu", next: [.termination])
  private static let _negative_jp_hokkaido_embetsu: PublicSuffix.Node = .label("embetsu", next: [.termination])
  private static let _negative_jp_hokkaido_eniwa: PublicSuffix.Node = .label("eniwa", next: [.termination])
  private static let _negative_jp_hokkaido_erimo: PublicSuffix.Node = .label("erimo", next: [.termination])
  private static let _negative_jp_hokkaido_esan: PublicSuffix.Node = .label("esan", next: [.termination])
  private static let _negative_jp_hokkaido_esashi: PublicSuffix.Node = .label("esashi", next: [.termination])
  private static let _negative_jp_hokkaido_fukagawa: PublicSuffix.Node = .label("fukagawa", next: [.termination])
  private static let _negative_jp_hokkaido_fukushima: PublicSuffix.Node = .label("fukushima", next: [.termination])
  private static let _negative_jp_hokkaido_furano: PublicSuffix.Node = .label("furano", next: [.termination])
  private static let _negative_jp_hokkaido_furubira: PublicSuffix.Node = .label("furubira", next: [.termination])
  private static let _negative_jp_hokkaido_haboro: PublicSuffix.Node = .label("haboro", next: [.termination])
  private static let _negative_jp_hokkaido_hakodate: PublicSuffix.Node = .label("hakodate", next: [.termination])
  private static let _negative_jp_hokkaido_hamatonbetsu: PublicSuffix.Node = .label("hamatonbetsu", next: [.termination])
  private static let _negative_jp_hokkaido_hidaka: PublicSuffix.Node = .label("hidaka", next: [.termination])
  private static let _negative_jp_hokkaido_higashikagura: PublicSuffix.Node = .label("higashikagura", next: [.termination])
  private static let _negative_jp_hokkaido_higashikawa: PublicSuffix.Node = .label("higashikawa", next: [.termination])
  private static let _negative_jp_hokkaido_hiroo: PublicSuffix.Node = .label("hiroo", next: [.termination])
  private static let _negative_jp_hokkaido_hokuryu: PublicSuffix.Node = .label("hokuryu", next: [.termination])
  private static let _negative_jp_hokkaido_hokuto: PublicSuffix.Node = .label("hokuto", next: [.termination])
  private static let _negative_jp_hokkaido_honbetsu: PublicSuffix.Node = .label("honbetsu", next: [.termination])
  private static let _negative_jp_hokkaido_horokanai: PublicSuffix.Node = .label("horokanai", next: [.termination])
  private static let _negative_jp_hokkaido_horonobe: PublicSuffix.Node = .label("horonobe", next: [.termination])
  private static let _negative_jp_hokkaido_ikeda: PublicSuffix.Node = .label("ikeda", next: [.termination])
  private static let _negative_jp_hokkaido_imakane: PublicSuffix.Node = .label("imakane", next: [.termination])
  private static let _negative_jp_hokkaido_ishikari: PublicSuffix.Node = .label("ishikari", next: [.termination])
  private static let _negative_jp_hokkaido_iwamizawa: PublicSuffix.Node = .label("iwamizawa", next: [.termination])
  private static let _negative_jp_hokkaido_iwanai: PublicSuffix.Node = .label("iwanai", next: [.termination])
  private static let _negative_jp_hokkaido_kamifurano: PublicSuffix.Node = .label("kamifurano", next: [.termination])
  private static let _negative_jp_hokkaido_kamikawa: PublicSuffix.Node = .label("kamikawa", next: [.termination])
  private static let _negative_jp_hokkaido_kamishihoro: PublicSuffix.Node = .label("kamishihoro", next: [.termination])
  private static let _negative_jp_hokkaido_kamisunagawa: PublicSuffix.Node = .label("kamisunagawa", next: [.termination])
  private static let _negative_jp_hokkaido_kamoenai: PublicSuffix.Node = .label("kamoenai", next: [.termination])
  private static let _negative_jp_hokkaido_kayabe: PublicSuffix.Node = .label("kayabe", next: [.termination])
  private static let _negative_jp_hokkaido_kembuchi: PublicSuffix.Node = .label("kembuchi", next: [.termination])
  private static let _negative_jp_hokkaido_kikonai: PublicSuffix.Node = .label("kikonai", next: [.termination])
  private static let _negative_jp_hokkaido_kimobetsu: PublicSuffix.Node = .label("kimobetsu", next: [.termination])
  private static let _negative_jp_hokkaido_kitahiroshima: PublicSuffix.Node = .label("kitahiroshima", next: [.termination])
  private static let _negative_jp_hokkaido_kitami: PublicSuffix.Node = .label("kitami", next: [.termination])
  private static let _negative_jp_hokkaido_kiyosato: PublicSuffix.Node = .label("kiyosato", next: [.termination])
  private static let _negative_jp_hokkaido_koshimizu: PublicSuffix.Node = .label("koshimizu", next: [.termination])
  private static let _negative_jp_hokkaido_kunneppu: PublicSuffix.Node = .label("kunneppu", next: [.termination])
  private static let _negative_jp_hokkaido_kuriyama: PublicSuffix.Node = .label("kuriyama", next: [.termination])
  private static let _negative_jp_hokkaido_kuromatsunai: PublicSuffix.Node = .label("kuromatsunai", next: [.termination])
  private static let _negative_jp_hokkaido_kushiro: PublicSuffix.Node = .label("kushiro", next: [.termination])
  private static let _negative_jp_hokkaido_kutchan: PublicSuffix.Node = .label("kutchan", next: [.termination])
  private static let _negative_jp_hokkaido_kyowa: PublicSuffix.Node = .label("kyowa", next: [.termination])
  private static let _negative_jp_hokkaido_mashike: PublicSuffix.Node = .label("mashike", next: [.termination])
  private static let _negative_jp_hokkaido_matsumae: PublicSuffix.Node = .label("matsumae", next: [.termination])
  private static let _negative_jp_hokkaido_mikasa: PublicSuffix.Node = .label("mikasa", next: [.termination])
  private static let _negative_jp_hokkaido_minamifurano: PublicSuffix.Node = .label("minamifurano", next: [.termination])
  private static let _negative_jp_hokkaido_mombetsu: PublicSuffix.Node = .label("mombetsu", next: [.termination])
  private static let _negative_jp_hokkaido_moseushi: PublicSuffix.Node = .label("moseushi", next: [.termination])
  private static let _negative_jp_hokkaido_mukawa: PublicSuffix.Node = .label("mukawa", next: [.termination])
  private static let _negative_jp_hokkaido_muroran: PublicSuffix.Node = .label("muroran", next: [.termination])
  private static let _negative_jp_hokkaido_naie: PublicSuffix.Node = .label("naie", next: [.termination])
  private static let _negative_jp_hokkaido_nakagawa: PublicSuffix.Node = .label("nakagawa", next: [.termination])
  private static let _negative_jp_hokkaido_nakasatsunai: PublicSuffix.Node = .label("nakasatsunai", next: [.termination])
  private static let _negative_jp_hokkaido_nakatombetsu: PublicSuffix.Node = .label("nakatombetsu", next: [.termination])
  private static let _negative_jp_hokkaido_nanae: PublicSuffix.Node = .label("nanae", next: [.termination])
  private static let _negative_jp_hokkaido_nanporo: PublicSuffix.Node = .label("nanporo", next: [.termination])
  private static let _negative_jp_hokkaido_nayoro: PublicSuffix.Node = .label("nayoro", next: [.termination])
  private static let _negative_jp_hokkaido_nemuro: PublicSuffix.Node = .label("nemuro", next: [.termination])
  private static let _negative_jp_hokkaido_niikappu: PublicSuffix.Node = .label("niikappu", next: [.termination])
  private static let _negative_jp_hokkaido_niki: PublicSuffix.Node = .label("niki", next: [.termination])
  private static let _negative_jp_hokkaido_nishiokoppe: PublicSuffix.Node = .label("nishiokoppe", next: [.termination])
  private static let _negative_jp_hokkaido_noboribetsu: PublicSuffix.Node = .label("noboribetsu", next: [.termination])
  private static let _negative_jp_hokkaido_numata: PublicSuffix.Node = .label("numata", next: [.termination])
  private static let _negative_jp_hokkaido_obihiro: PublicSuffix.Node = .label("obihiro", next: [.termination])
  private static let _negative_jp_hokkaido_obira: PublicSuffix.Node = .label("obira", next: [.termination])
  private static let _negative_jp_hokkaido_oketo: PublicSuffix.Node = .label("oketo", next: [.termination])
  private static let _negative_jp_hokkaido_okoppe: PublicSuffix.Node = .label("okoppe", next: [.termination])
  private static let _negative_jp_hokkaido_otaru: PublicSuffix.Node = .label("otaru", next: [.termination])
  private static let _negative_jp_hokkaido_otobe: PublicSuffix.Node = .label("otobe", next: [.termination])
  private static let _negative_jp_hokkaido_otofuke: PublicSuffix.Node = .label("otofuke", next: [.termination])
  private static let _negative_jp_hokkaido_otoineppu: PublicSuffix.Node = .label("otoineppu", next: [.termination])
  private static let _negative_jp_hokkaido_oumu: PublicSuffix.Node = .label("oumu", next: [.termination])
  private static let _negative_jp_hokkaido_ozora: PublicSuffix.Node = .label("ozora", next: [.termination])
  private static let _negative_jp_hokkaido_pippu: PublicSuffix.Node = .label("pippu", next: [.termination])
  private static let _negative_jp_hokkaido_rankoshi: PublicSuffix.Node = .label("rankoshi", next: [.termination])
  private static let _negative_jp_hokkaido_rebun: PublicSuffix.Node = .label("rebun", next: [.termination])
  private static let _negative_jp_hokkaido_rikubetsu: PublicSuffix.Node = .label("rikubetsu", next: [.termination])
  private static let _negative_jp_hokkaido_rishiri: PublicSuffix.Node = .label("rishiri", next: [.termination])
  private static let _negative_jp_hokkaido_rishirifuji: PublicSuffix.Node = .label("rishirifuji", next: [.termination])
  private static let _negative_jp_hokkaido_saroma: PublicSuffix.Node = .label("saroma", next: [.termination])
  private static let _negative_jp_hokkaido_sarufutsu: PublicSuffix.Node = .label("sarufutsu", next: [.termination])
  private static let _negative_jp_hokkaido_shakotan: PublicSuffix.Node = .label("shakotan", next: [.termination])
  private static let _negative_jp_hokkaido_shari: PublicSuffix.Node = .label("shari", next: [.termination])
  private static let _negative_jp_hokkaido_shibecha: PublicSuffix.Node = .label("shibecha", next: [.termination])
  private static let _negative_jp_hokkaido_shibetsu: PublicSuffix.Node = .label("shibetsu", next: [.termination])
  private static let _negative_jp_hokkaido_shikabe: PublicSuffix.Node = .label("shikabe", next: [.termination])
  private static let _negative_jp_hokkaido_shikaoi: PublicSuffix.Node = .label("shikaoi", next: [.termination])
  private static let _negative_jp_hokkaido_shimamaki: PublicSuffix.Node = .label("shimamaki", next: [.termination])
  private static let _negative_jp_hokkaido_shimizu: PublicSuffix.Node = .label("shimizu", next: [.termination])
  private static let _negative_jp_hokkaido_shimokawa: PublicSuffix.Node = .label("shimokawa", next: [.termination])
  private static let _negative_jp_hokkaido_shinshinotsu: PublicSuffix.Node = .label("shinshinotsu", next: [.termination])
  private static let _negative_jp_hokkaido_shintoku: PublicSuffix.Node = .label("shintoku", next: [.termination])
  private static let _negative_jp_hokkaido_shiranuka: PublicSuffix.Node = .label("shiranuka", next: [.termination])
  private static let _negative_jp_hokkaido_shiraoi: PublicSuffix.Node = .label("shiraoi", next: [.termination])
  private static let _negative_jp_hokkaido_shiriuchi: PublicSuffix.Node = .label("shiriuchi", next: [.termination])
  private static let _negative_jp_hokkaido_sobetsu: PublicSuffix.Node = .label("sobetsu", next: [.termination])
  private static let _negative_jp_hokkaido_sunagawa: PublicSuffix.Node = .label("sunagawa", next: [.termination])
  private static let _negative_jp_hokkaido_taiki: PublicSuffix.Node = .label("taiki", next: [.termination])
  private static let _negative_jp_hokkaido_takasu: PublicSuffix.Node = .label("takasu", next: [.termination])
  private static let _negative_jp_hokkaido_takikawa: PublicSuffix.Node = .label("takikawa", next: [.termination])
  private static let _negative_jp_hokkaido_takinoue: PublicSuffix.Node = .label("takinoue", next: [.termination])
  private static let _negative_jp_hokkaido_teshikaga: PublicSuffix.Node = .label("teshikaga", next: [.termination])
  private static let _negative_jp_hokkaido_tobetsu: PublicSuffix.Node = .label("tobetsu", next: [.termination])
  private static let _negative_jp_hokkaido_tohma: PublicSuffix.Node = .label("tohma", next: [.termination])
  private static let _negative_jp_hokkaido_tomakomai: PublicSuffix.Node = .label("tomakomai", next: [.termination])
  private static let _negative_jp_hokkaido_tomari: PublicSuffix.Node = .label("tomari", next: [.termination])
  private static let _negative_jp_hokkaido_toya: PublicSuffix.Node = .label("toya", next: [.termination])
  private static let _negative_jp_hokkaido_toyako: PublicSuffix.Node = .label("toyako", next: [.termination])
  private static let _negative_jp_hokkaido_toyotomi: PublicSuffix.Node = .label("toyotomi", next: [.termination])
  private static let _negative_jp_hokkaido_toyoura: PublicSuffix.Node = .label("toyoura", next: [.termination])
  private static let _negative_jp_hokkaido_tsubetsu: PublicSuffix.Node = .label("tsubetsu", next: [.termination])
  private static let _negative_jp_hokkaido_tsukigata: PublicSuffix.Node = .label("tsukigata", next: [.termination])
  private static let _negative_jp_hokkaido_urakawa: PublicSuffix.Node = .label("urakawa", next: [.termination])
  private static let _negative_jp_hokkaido_urausu: PublicSuffix.Node = .label("urausu", next: [.termination])
  private static let _negative_jp_hokkaido_uryu: PublicSuffix.Node = .label("uryu", next: [.termination])
  private static let _negative_jp_hokkaido_utashinai: PublicSuffix.Node = .label("utashinai", next: [.termination])
  private static let _negative_jp_hokkaido_wakkanai: PublicSuffix.Node = .label("wakkanai", next: [.termination])
  private static let _negative_jp_hokkaido_wassamu: PublicSuffix.Node = .label("wassamu", next: [.termination])
  private static let _negative_jp_hokkaido_yakumo: PublicSuffix.Node = .label("yakumo", next: [.termination])
  private static let _negative_jp_hokkaido_yoichi: PublicSuffix.Node = .label("yoichi", next: [.termination])
  private static let _negative_jp_hokkaido: PublicSuffix.Node = .label("hokkaido", next: [.termination, _negative_jp_hokkaido_abashiri, _negative_jp_hokkaido_abira, _negative_jp_hokkaido_aibetsu, _negative_jp_hokkaido_akabira, _negative_jp_hokkaido_akkeshi, _negative_jp_hokkaido_asahikawa, _negative_jp_hokkaido_ashibetsu, _negative_jp_hokkaido_ashoro, _negative_jp_hokkaido_assabu, _negative_jp_hokkaido_atsuma, _negative_jp_hokkaido_bibai, _negative_jp_hokkaido_biei, _negative_jp_hokkaido_bifuka, _negative_jp_hokkaido_bihoro, _negative_jp_hokkaido_biratori, _negative_jp_hokkaido_chippubetsu, _negative_jp_hokkaido_chitose, _negative_jp_hokkaido_date, _negative_jp_hokkaido_ebetsu, _negative_jp_hokkaido_embetsu, _negative_jp_hokkaido_eniwa, _negative_jp_hokkaido_erimo, _negative_jp_hokkaido_esan, _negative_jp_hokkaido_esashi, _negative_jp_hokkaido_fukagawa, _negative_jp_hokkaido_fukushima, _negative_jp_hokkaido_furano, _negative_jp_hokkaido_furubira, _negative_jp_hokkaido_haboro, _negative_jp_hokkaido_hakodate, _negative_jp_hokkaido_hamatonbetsu, _negative_jp_hokkaido_hidaka, _negative_jp_hokkaido_higashikagura, _negative_jp_hokkaido_higashikawa, _negative_jp_hokkaido_hiroo, _negative_jp_hokkaido_hokuryu, _negative_jp_hokkaido_hokuto, _negative_jp_hokkaido_honbetsu, _negative_jp_hokkaido_horokanai, _negative_jp_hokkaido_horonobe, _negative_jp_hokkaido_ikeda, _negative_jp_hokkaido_imakane, _negative_jp_hokkaido_ishikari, _negative_jp_hokkaido_iwamizawa, _negative_jp_hokkaido_iwanai, _negative_jp_hokkaido_kamifurano, _negative_jp_hokkaido_kamikawa, _negative_jp_hokkaido_kamishihoro, _negative_jp_hokkaido_kamisunagawa, _negative_jp_hokkaido_kamoenai, _negative_jp_hokkaido_kayabe, _negative_jp_hokkaido_kembuchi, _negative_jp_hokkaido_kikonai, _negative_jp_hokkaido_kimobetsu, _negative_jp_hokkaido_kitahiroshima, _negative_jp_hokkaido_kitami, _negative_jp_hokkaido_kiyosato, _negative_jp_hokkaido_koshimizu, _negative_jp_hokkaido_kunneppu, _negative_jp_hokkaido_kuriyama, _negative_jp_hokkaido_kuromatsunai, _negative_jp_hokkaido_kushiro, _negative_jp_hokkaido_kutchan, _negative_jp_hokkaido_kyowa, _negative_jp_hokkaido_mashike, _negative_jp_hokkaido_matsumae, _negative_jp_hokkaido_mikasa, _negative_jp_hokkaido_minamifurano, _negative_jp_hokkaido_mombetsu, _negative_jp_hokkaido_moseushi, _negative_jp_hokkaido_mukawa, _negative_jp_hokkaido_muroran, _negative_jp_hokkaido_naie, _negative_jp_hokkaido_nakagawa, _negative_jp_hokkaido_nakasatsunai, _negative_jp_hokkaido_nakatombetsu, _negative_jp_hokkaido_nanae, _negative_jp_hokkaido_nanporo, _negative_jp_hokkaido_nayoro, _negative_jp_hokkaido_nemuro, _negative_jp_hokkaido_niikappu, _negative_jp_hokkaido_niki, _negative_jp_hokkaido_nishiokoppe, _negative_jp_hokkaido_noboribetsu, _negative_jp_hokkaido_numata, _negative_jp_hokkaido_obihiro, _negative_jp_hokkaido_obira, _negative_jp_hokkaido_oketo, _negative_jp_hokkaido_okoppe, _negative_jp_hokkaido_otaru, _negative_jp_hokkaido_otobe, _negative_jp_hokkaido_otofuke, _negative_jp_hokkaido_otoineppu, _negative_jp_hokkaido_oumu, _negative_jp_hokkaido_ozora, _negative_jp_hokkaido_pippu, _negative_jp_hokkaido_rankoshi, _negative_jp_hokkaido_rebun, _negative_jp_hokkaido_rikubetsu, _negative_jp_hokkaido_rishiri, _negative_jp_hokkaido_rishirifuji, _negative_jp_hokkaido_saroma, _negative_jp_hokkaido_sarufutsu, _negative_jp_hokkaido_shakotan, _negative_jp_hokkaido_shari, _negative_jp_hokkaido_shibecha, _negative_jp_hokkaido_shibetsu, _negative_jp_hokkaido_shikabe, _negative_jp_hokkaido_shikaoi, _negative_jp_hokkaido_shimamaki, _negative_jp_hokkaido_shimizu, _negative_jp_hokkaido_shimokawa, _negative_jp_hokkaido_shinshinotsu, _negative_jp_hokkaido_shintoku, _negative_jp_hokkaido_shiranuka, _negative_jp_hokkaido_shiraoi, _negative_jp_hokkaido_shiriuchi, _negative_jp_hokkaido_sobetsu, _negative_jp_hokkaido_sunagawa, _negative_jp_hokkaido_taiki, _negative_jp_hokkaido_takasu, _negative_jp_hokkaido_takikawa, _negative_jp_hokkaido_takinoue, _negative_jp_hokkaido_teshikaga, _negative_jp_hokkaido_tobetsu, _negative_jp_hokkaido_tohma, _negative_jp_hokkaido_tomakomai, _negative_jp_hokkaido_tomari, _negative_jp_hokkaido_toya, _negative_jp_hokkaido_toyako, _negative_jp_hokkaido_toyotomi, _negative_jp_hokkaido_toyoura, _negative_jp_hokkaido_tsubetsu, _negative_jp_hokkaido_tsukigata, _negative_jp_hokkaido_urakawa, _negative_jp_hokkaido_urausu, _negative_jp_hokkaido_uryu, _negative_jp_hokkaido_utashinai, _negative_jp_hokkaido_wakkanai, _negative_jp_hokkaido_wassamu, _negative_jp_hokkaido_yakumo, _negative_jp_hokkaido_yoichi])
  private static let _negative_jp_holy: PublicSuffix.Node = .label("holy", next: [.termination])
  private static let _negative_jp_hungry: PublicSuffix.Node = .label("hungry", next: [.termination])
  private static let _negative_jp_hyogo_aioi: PublicSuffix.Node = .label("aioi", next: [.termination])
  private static let _negative_jp_hyogo_akashi: PublicSuffix.Node = .label("akashi", next: [.termination])
  private static let _negative_jp_hyogo_ako: PublicSuffix.Node = .label("ako", next: [.termination])
  private static let _negative_jp_hyogo_amagasaki: PublicSuffix.Node = .label("amagasaki", next: [.termination])
  private static let _negative_jp_hyogo_aogaki: PublicSuffix.Node = .label("aogaki", next: [.termination])
  private static let _negative_jp_hyogo_asago: PublicSuffix.Node = .label("asago", next: [.termination])
  private static let _negative_jp_hyogo_ashiya: PublicSuffix.Node = .label("ashiya", next: [.termination])
  private static let _negative_jp_hyogo_awaji: PublicSuffix.Node = .label("awaji", next: [.termination])
  private static let _negative_jp_hyogo_fukusaki: PublicSuffix.Node = .label("fukusaki", next: [.termination])
  private static let _negative_jp_hyogo_goshiki: PublicSuffix.Node = .label("goshiki", next: [.termination])
  private static let _negative_jp_hyogo_harima: PublicSuffix.Node = .label("harima", next: [.termination])
  private static let _negative_jp_hyogo_himeji: PublicSuffix.Node = .label("himeji", next: [.termination])
  private static let _negative_jp_hyogo_ichikawa: PublicSuffix.Node = .label("ichikawa", next: [.termination])
  private static let _negative_jp_hyogo_inagawa: PublicSuffix.Node = .label("inagawa", next: [.termination])
  private static let _negative_jp_hyogo_itami: PublicSuffix.Node = .label("itami", next: [.termination])
  private static let _negative_jp_hyogo_kakogawa: PublicSuffix.Node = .label("kakogawa", next: [.termination])
  private static let _negative_jp_hyogo_kamigori: PublicSuffix.Node = .label("kamigori", next: [.termination])
  private static let _negative_jp_hyogo_kamikawa: PublicSuffix.Node = .label("kamikawa", next: [.termination])
  private static let _negative_jp_hyogo_kasai: PublicSuffix.Node = .label("kasai", next: [.termination])
  private static let _negative_jp_hyogo_kasuga: PublicSuffix.Node = .label("kasuga", next: [.termination])
  private static let _negative_jp_hyogo_kawanishi: PublicSuffix.Node = .label("kawanishi", next: [.termination])
  private static let _negative_jp_hyogo_miki: PublicSuffix.Node = .label("miki", next: [.termination])
  private static let _negative_jp_hyogo_minamiawaji: PublicSuffix.Node = .label("minamiawaji", next: [.termination])
  private static let _negative_jp_hyogo_nishinomiya: PublicSuffix.Node = .label("nishinomiya", next: [.termination])
  private static let _negative_jp_hyogo_nishiwaki: PublicSuffix.Node = .label("nishiwaki", next: [.termination])
  private static let _negative_jp_hyogo_ono: PublicSuffix.Node = .label("ono", next: [.termination])
  private static let _negative_jp_hyogo_sanda: PublicSuffix.Node = .label("sanda", next: [.termination])
  private static let _negative_jp_hyogo_sannan: PublicSuffix.Node = .label("sannan", next: [.termination])
  private static let _negative_jp_hyogo_sasayama: PublicSuffix.Node = .label("sasayama", next: [.termination])
  private static let _negative_jp_hyogo_sayo: PublicSuffix.Node = .label("sayo", next: [.termination])
  private static let _negative_jp_hyogo_shingu: PublicSuffix.Node = .label("shingu", next: [.termination])
  private static let _negative_jp_hyogo_shinonsen: PublicSuffix.Node = .label("shinonsen", next: [.termination])
  private static let _negative_jp_hyogo_shiso: PublicSuffix.Node = .label("shiso", next: [.termination])
  private static let _negative_jp_hyogo_sumoto: PublicSuffix.Node = .label("sumoto", next: [.termination])
  private static let _negative_jp_hyogo_taishi: PublicSuffix.Node = .label("taishi", next: [.termination])
  private static let _negative_jp_hyogo_taka: PublicSuffix.Node = .label("taka", next: [.termination])
  private static let _negative_jp_hyogo_takarazuka: PublicSuffix.Node = .label("takarazuka", next: [.termination])
  private static let _negative_jp_hyogo_takasago: PublicSuffix.Node = .label("takasago", next: [.termination])
  private static let _negative_jp_hyogo_takino: PublicSuffix.Node = .label("takino", next: [.termination])
  private static let _negative_jp_hyogo_tamba: PublicSuffix.Node = .label("tamba", next: [.termination])
  private static let _negative_jp_hyogo_tatsuno: PublicSuffix.Node = .label("tatsuno", next: [.termination])
  private static let _negative_jp_hyogo_toyooka: PublicSuffix.Node = .label("toyooka", next: [.termination])
  private static let _negative_jp_hyogo_yabu: PublicSuffix.Node = .label("yabu", next: [.termination])
  private static let _negative_jp_hyogo_yashiro: PublicSuffix.Node = .label("yashiro", next: [.termination])
  private static let _negative_jp_hyogo_yoka: PublicSuffix.Node = .label("yoka", next: [.termination])
  private static let _negative_jp_hyogo_yokawa: PublicSuffix.Node = .label("yokawa", next: [.termination])
  private static let _negative_jp_hyogo: PublicSuffix.Node = .label("hyogo", next: [.termination, _negative_jp_hyogo_aioi, _negative_jp_hyogo_akashi, _negative_jp_hyogo_ako, _negative_jp_hyogo_amagasaki, _negative_jp_hyogo_aogaki, _negative_jp_hyogo_asago, _negative_jp_hyogo_ashiya, _negative_jp_hyogo_awaji, _negative_jp_hyogo_fukusaki, _negative_jp_hyogo_goshiki, _negative_jp_hyogo_harima, _negative_jp_hyogo_himeji, _negative_jp_hyogo_ichikawa, _negative_jp_hyogo_inagawa, _negative_jp_hyogo_itami, _negative_jp_hyogo_kakogawa, _negative_jp_hyogo_kamigori, _negative_jp_hyogo_kamikawa, _negative_jp_hyogo_kasai, _negative_jp_hyogo_kasuga, _negative_jp_hyogo_kawanishi, _negative_jp_hyogo_miki, _negative_jp_hyogo_minamiawaji, _negative_jp_hyogo_nishinomiya, _negative_jp_hyogo_nishiwaki, _negative_jp_hyogo_ono, _negative_jp_hyogo_sanda, _negative_jp_hyogo_sannan, _negative_jp_hyogo_sasayama, _negative_jp_hyogo_sayo, _negative_jp_hyogo_shingu, _negative_jp_hyogo_shinonsen, _negative_jp_hyogo_shiso, _negative_jp_hyogo_sumoto, _negative_jp_hyogo_taishi, _negative_jp_hyogo_taka, _negative_jp_hyogo_takarazuka, _negative_jp_hyogo_takasago, _negative_jp_hyogo_takino, _negative_jp_hyogo_tamba, _negative_jp_hyogo_tatsuno, _negative_jp_hyogo_toyooka, _negative_jp_hyogo_yabu, _negative_jp_hyogo_yashiro, _negative_jp_hyogo_yoka, _negative_jp_hyogo_yokawa])
  private static let _negative_jp_ibaraki_ami: PublicSuffix.Node = .label("ami", next: [.termination])
  private static let _negative_jp_ibaraki_asahi: PublicSuffix.Node = .label("asahi", next: [.termination])
  private static let _negative_jp_ibaraki_bando: PublicSuffix.Node = .label("bando", next: [.termination])
  private static let _negative_jp_ibaraki_chikusei: PublicSuffix.Node = .label("chikusei", next: [.termination])
  private static let _negative_jp_ibaraki_daigo: PublicSuffix.Node = .label("daigo", next: [.termination])
  private static let _negative_jp_ibaraki_fujishiro: PublicSuffix.Node = .label("fujishiro", next: [.termination])
  private static let _negative_jp_ibaraki_hitachi: PublicSuffix.Node = .label("hitachi", next: [.termination])
  private static let _negative_jp_ibaraki_hitachinaka: PublicSuffix.Node = .label("hitachinaka", next: [.termination])
  private static let _negative_jp_ibaraki_hitachiomiya: PublicSuffix.Node = .label("hitachiomiya", next: [.termination])
  private static let _negative_jp_ibaraki_hitachiota: PublicSuffix.Node = .label("hitachiota", next: [.termination])
  private static let _negative_jp_ibaraki_ibaraki: PublicSuffix.Node = .label("ibaraki", next: [.termination])
  private static let _negative_jp_ibaraki_ina: PublicSuffix.Node = .label("ina", next: [.termination])
  private static let _negative_jp_ibaraki_inashiki: PublicSuffix.Node = .label("inashiki", next: [.termination])
  private static let _negative_jp_ibaraki_itako: PublicSuffix.Node = .label("itako", next: [.termination])
  private static let _negative_jp_ibaraki_iwama: PublicSuffix.Node = .label("iwama", next: [.termination])
  private static let _negative_jp_ibaraki_joso: PublicSuffix.Node = .label("joso", next: [.termination])
  private static let _negative_jp_ibaraki_kamisu: PublicSuffix.Node = .label("kamisu", next: [.termination])
  private static let _negative_jp_ibaraki_kasama: PublicSuffix.Node = .label("kasama", next: [.termination])
  private static let _negative_jp_ibaraki_kashima: PublicSuffix.Node = .label("kashima", next: [.termination])
  private static let _negative_jp_ibaraki_kasumigaura: PublicSuffix.Node = .label("kasumigaura", next: [.termination])
  private static let _negative_jp_ibaraki_koga: PublicSuffix.Node = .label("koga", next: [.termination])
  private static let _negative_jp_ibaraki_miho: PublicSuffix.Node = .label("miho", next: [.termination])
  private static let _negative_jp_ibaraki_mito: PublicSuffix.Node = .label("mito", next: [.termination])
  private static let _negative_jp_ibaraki_moriya: PublicSuffix.Node = .label("moriya", next: [.termination])
  private static let _negative_jp_ibaraki_naka: PublicSuffix.Node = .label("naka", next: [.termination])
  private static let _negative_jp_ibaraki_namegata: PublicSuffix.Node = .label("namegata", next: [.termination])
  private static let _negative_jp_ibaraki_oarai: PublicSuffix.Node = .label("oarai", next: [.termination])
  private static let _negative_jp_ibaraki_ogawa: PublicSuffix.Node = .label("ogawa", next: [.termination])
  private static let _negative_jp_ibaraki_omitama: PublicSuffix.Node = .label("omitama", next: [.termination])
  private static let _negative_jp_ibaraki_ryugasaki: PublicSuffix.Node = .label("ryugasaki", next: [.termination])
  private static let _negative_jp_ibaraki_sakai: PublicSuffix.Node = .label("sakai", next: [.termination])
  private static let _negative_jp_ibaraki_sakuragawa: PublicSuffix.Node = .label("sakuragawa", next: [.termination])
  private static let _negative_jp_ibaraki_shimodate: PublicSuffix.Node = .label("shimodate", next: [.termination])
  private static let _negative_jp_ibaraki_shimotsuma: PublicSuffix.Node = .label("shimotsuma", next: [.termination])
  private static let _negative_jp_ibaraki_shirosato: PublicSuffix.Node = .label("shirosato", next: [.termination])
  private static let _negative_jp_ibaraki_sowa: PublicSuffix.Node = .label("sowa", next: [.termination])
  private static let _negative_jp_ibaraki_suifu: PublicSuffix.Node = .label("suifu", next: [.termination])
  private static let _negative_jp_ibaraki_takahagi: PublicSuffix.Node = .label("takahagi", next: [.termination])
  private static let _negative_jp_ibaraki_tamatsukuri: PublicSuffix.Node = .label("tamatsukuri", next: [.termination])
  private static let _negative_jp_ibaraki_tokai: PublicSuffix.Node = .label("tokai", next: [.termination])
  private static let _negative_jp_ibaraki_tomobe: PublicSuffix.Node = .label("tomobe", next: [.termination])
  private static let _negative_jp_ibaraki_tone: PublicSuffix.Node = .label("tone", next: [.termination])
  private static let _negative_jp_ibaraki_toride: PublicSuffix.Node = .label("toride", next: [.termination])
  private static let _negative_jp_ibaraki_tsuchiura: PublicSuffix.Node = .label("tsuchiura", next: [.termination])
  private static let _negative_jp_ibaraki_tsukuba: PublicSuffix.Node = .label("tsukuba", next: [.termination])
  private static let _negative_jp_ibaraki_uchihara: PublicSuffix.Node = .label("uchihara", next: [.termination])
  private static let _negative_jp_ibaraki_ushiku: PublicSuffix.Node = .label("ushiku", next: [.termination])
  private static let _negative_jp_ibaraki_yachiyo: PublicSuffix.Node = .label("yachiyo", next: [.termination])
  private static let _negative_jp_ibaraki_yamagata: PublicSuffix.Node = .label("yamagata", next: [.termination])
  private static let _negative_jp_ibaraki_yawara: PublicSuffix.Node = .label("yawara", next: [.termination])
  private static let _negative_jp_ibaraki_yuki: PublicSuffix.Node = .label("yuki", next: [.termination])
  private static let _negative_jp_ibaraki: PublicSuffix.Node = .label("ibaraki", next: [.termination, _negative_jp_ibaraki_ami, _negative_jp_ibaraki_asahi, _negative_jp_ibaraki_bando, _negative_jp_ibaraki_chikusei, _negative_jp_ibaraki_daigo, _negative_jp_ibaraki_fujishiro, _negative_jp_ibaraki_hitachi, _negative_jp_ibaraki_hitachinaka, _negative_jp_ibaraki_hitachiomiya, _negative_jp_ibaraki_hitachiota, _negative_jp_ibaraki_ibaraki, _negative_jp_ibaraki_ina, _negative_jp_ibaraki_inashiki, _negative_jp_ibaraki_itako, _negative_jp_ibaraki_iwama, _negative_jp_ibaraki_joso, _negative_jp_ibaraki_kamisu, _negative_jp_ibaraki_kasama, _negative_jp_ibaraki_kashima, _negative_jp_ibaraki_kasumigaura, _negative_jp_ibaraki_koga, _negative_jp_ibaraki_miho, _negative_jp_ibaraki_mito, _negative_jp_ibaraki_moriya, _negative_jp_ibaraki_naka, _negative_jp_ibaraki_namegata, _negative_jp_ibaraki_oarai, _negative_jp_ibaraki_ogawa, _negative_jp_ibaraki_omitama, _negative_jp_ibaraki_ryugasaki, _negative_jp_ibaraki_sakai, _negative_jp_ibaraki_sakuragawa, _negative_jp_ibaraki_shimodate, _negative_jp_ibaraki_shimotsuma, _negative_jp_ibaraki_shirosato, _negative_jp_ibaraki_sowa, _negative_jp_ibaraki_suifu, _negative_jp_ibaraki_takahagi, _negative_jp_ibaraki_tamatsukuri, _negative_jp_ibaraki_tokai, _negative_jp_ibaraki_tomobe, _negative_jp_ibaraki_tone, _negative_jp_ibaraki_toride, _negative_jp_ibaraki_tsuchiura, _negative_jp_ibaraki_tsukuba, _negative_jp_ibaraki_uchihara, _negative_jp_ibaraki_ushiku, _negative_jp_ibaraki_yachiyo, _negative_jp_ibaraki_yamagata, _negative_jp_ibaraki_yawara, _negative_jp_ibaraki_yuki])
  private static let _negative_jp_icurus: PublicSuffix.Node = .label("icurus", next: [.termination])
  private static let _negative_jp_ishikawa_anamizu: PublicSuffix.Node = .label("anamizu", next: [.termination])
  private static let _negative_jp_ishikawa_hakui: PublicSuffix.Node = .label("hakui", next: [.termination])
  private static let _negative_jp_ishikawa_hakusan: PublicSuffix.Node = .label("hakusan", next: [.termination])
  private static let _negative_jp_ishikawa_kaga: PublicSuffix.Node = .label("kaga", next: [.termination])
  private static let _negative_jp_ishikawa_kahoku: PublicSuffix.Node = .label("kahoku", next: [.termination])
  private static let _negative_jp_ishikawa_kanazawa: PublicSuffix.Node = .label("kanazawa", next: [.termination])
  private static let _negative_jp_ishikawa_kawakita: PublicSuffix.Node = .label("kawakita", next: [.termination])
  private static let _negative_jp_ishikawa_komatsu: PublicSuffix.Node = .label("komatsu", next: [.termination])
  private static let _negative_jp_ishikawa_nakanoto: PublicSuffix.Node = .label("nakanoto", next: [.termination])
  private static let _negative_jp_ishikawa_nanao: PublicSuffix.Node = .label("nanao", next: [.termination])
  private static let _negative_jp_ishikawa_nomi: PublicSuffix.Node = .label("nomi", next: [.termination])
  private static let _negative_jp_ishikawa_nonoichi: PublicSuffix.Node = .label("nonoichi", next: [.termination])
  private static let _negative_jp_ishikawa_noto: PublicSuffix.Node = .label("noto", next: [.termination])
  private static let _negative_jp_ishikawa_shika: PublicSuffix.Node = .label("shika", next: [.termination])
  private static let _negative_jp_ishikawa_suzu: PublicSuffix.Node = .label("suzu", next: [.termination])
  private static let _negative_jp_ishikawa_tsubata: PublicSuffix.Node = .label("tsubata", next: [.termination])
  private static let _negative_jp_ishikawa_tsurugi: PublicSuffix.Node = .label("tsurugi", next: [.termination])
  private static let _negative_jp_ishikawa_uchinada: PublicSuffix.Node = .label("uchinada", next: [.termination])
  private static let _negative_jp_ishikawa_wajima: PublicSuffix.Node = .label("wajima", next: [.termination])
  private static let _negative_jp_ishikawa: PublicSuffix.Node = .label("ishikawa", next: [.termination, _negative_jp_ishikawa_anamizu, _negative_jp_ishikawa_hakui, _negative_jp_ishikawa_hakusan, _negative_jp_ishikawa_kaga, _negative_jp_ishikawa_kahoku, _negative_jp_ishikawa_kanazawa, _negative_jp_ishikawa_kawakita, _negative_jp_ishikawa_komatsu, _negative_jp_ishikawa_nakanoto, _negative_jp_ishikawa_nanao, _negative_jp_ishikawa_nomi, _negative_jp_ishikawa_nonoichi, _negative_jp_ishikawa_noto, _negative_jp_ishikawa_shika, _negative_jp_ishikawa_suzu, _negative_jp_ishikawa_tsubata, _negative_jp_ishikawa_tsurugi, _negative_jp_ishikawa_uchinada, _negative_jp_ishikawa_wajima])
  private static let _negative_jp_itigo: PublicSuffix.Node = .label("itigo", next: [.termination])
  private static let _negative_jp_iwate_fudai: PublicSuffix.Node = .label("fudai", next: [.termination])
  private static let _negative_jp_iwate_fujisawa: PublicSuffix.Node = .label("fujisawa", next: [.termination])
  private static let _negative_jp_iwate_hanamaki: PublicSuffix.Node = .label("hanamaki", next: [.termination])
  private static let _negative_jp_iwate_hiraizumi: PublicSuffix.Node = .label("hiraizumi", next: [.termination])
  private static let _negative_jp_iwate_hirono: PublicSuffix.Node = .label("hirono", next: [.termination])
  private static let _negative_jp_iwate_ichinohe: PublicSuffix.Node = .label("ichinohe", next: [.termination])
  private static let _negative_jp_iwate_ichinoseki: PublicSuffix.Node = .label("ichinoseki", next: [.termination])
  private static let _negative_jp_iwate_iwaizumi: PublicSuffix.Node = .label("iwaizumi", next: [.termination])
  private static let _negative_jp_iwate_iwate: PublicSuffix.Node = .label("iwate", next: [.termination])
  private static let _negative_jp_iwate_joboji: PublicSuffix.Node = .label("joboji", next: [.termination])
  private static let _negative_jp_iwate_kamaishi: PublicSuffix.Node = .label("kamaishi", next: [.termination])
  private static let _negative_jp_iwate_kanegasaki: PublicSuffix.Node = .label("kanegasaki", next: [.termination])
  private static let _negative_jp_iwate_karumai: PublicSuffix.Node = .label("karumai", next: [.termination])
  private static let _negative_jp_iwate_kawai: PublicSuffix.Node = .label("kawai", next: [.termination])
  private static let _negative_jp_iwate_kitakami: PublicSuffix.Node = .label("kitakami", next: [.termination])
  private static let _negative_jp_iwate_kuji: PublicSuffix.Node = .label("kuji", next: [.termination])
  private static let _negative_jp_iwate_kunohe: PublicSuffix.Node = .label("kunohe", next: [.termination])
  private static let _negative_jp_iwate_kuzumaki: PublicSuffix.Node = .label("kuzumaki", next: [.termination])
  private static let _negative_jp_iwate_miyako: PublicSuffix.Node = .label("miyako", next: [.termination])
  private static let _negative_jp_iwate_mizusawa: PublicSuffix.Node = .label("mizusawa", next: [.termination])
  private static let _negative_jp_iwate_morioka: PublicSuffix.Node = .label("morioka", next: [.termination])
  private static let _negative_jp_iwate_ninohe: PublicSuffix.Node = .label("ninohe", next: [.termination])
  private static let _negative_jp_iwate_noda: PublicSuffix.Node = .label("noda", next: [.termination])
  private static let _negative_jp_iwate_ofunato: PublicSuffix.Node = .label("ofunato", next: [.termination])
  private static let _negative_jp_iwate_oshu: PublicSuffix.Node = .label("oshu", next: [.termination])
  private static let _negative_jp_iwate_otsuchi: PublicSuffix.Node = .label("otsuchi", next: [.termination])
  private static let _negative_jp_iwate_rikuzentakata: PublicSuffix.Node = .label("rikuzentakata", next: [.termination])
  private static let _negative_jp_iwate_shiwa: PublicSuffix.Node = .label("shiwa", next: [.termination])
  private static let _negative_jp_iwate_shizukuishi: PublicSuffix.Node = .label("shizukuishi", next: [.termination])
  private static let _negative_jp_iwate_sumita: PublicSuffix.Node = .label("sumita", next: [.termination])
  private static let _negative_jp_iwate_tanohata: PublicSuffix.Node = .label("tanohata", next: [.termination])
  private static let _negative_jp_iwate_tono: PublicSuffix.Node = .label("tono", next: [.termination])
  private static let _negative_jp_iwate_yahaba: PublicSuffix.Node = .label("yahaba", next: [.termination])
  private static let _negative_jp_iwate_yamada: PublicSuffix.Node = .label("yamada", next: [.termination])
  private static let _negative_jp_iwate: PublicSuffix.Node = .label("iwate", next: [.termination, _negative_jp_iwate_fudai, _negative_jp_iwate_fujisawa, _negative_jp_iwate_hanamaki, _negative_jp_iwate_hiraizumi, _negative_jp_iwate_hirono, _negative_jp_iwate_ichinohe, _negative_jp_iwate_ichinoseki, _negative_jp_iwate_iwaizumi, _negative_jp_iwate_iwate, _negative_jp_iwate_joboji, _negative_jp_iwate_kamaishi, _negative_jp_iwate_kanegasaki, _negative_jp_iwate_karumai, _negative_jp_iwate_kawai, _negative_jp_iwate_kitakami, _negative_jp_iwate_kuji, _negative_jp_iwate_kunohe, _negative_jp_iwate_kuzumaki, _negative_jp_iwate_miyako, _negative_jp_iwate_mizusawa, _negative_jp_iwate_morioka, _negative_jp_iwate_ninohe, _negative_jp_iwate_noda, _negative_jp_iwate_ofunato, _negative_jp_iwate_oshu, _negative_jp_iwate_otsuchi, _negative_jp_iwate_rikuzentakata, _negative_jp_iwate_shiwa, _negative_jp_iwate_shizukuishi, _negative_jp_iwate_sumita, _negative_jp_iwate_tanohata, _negative_jp_iwate_tono, _negative_jp_iwate_yahaba, _negative_jp_iwate_yamada])
  private static let _negative_jp_jellybean: PublicSuffix.Node = .label("jellybean", next: [.termination])
  private static let _negative_jp_kagawa_ayagawa: PublicSuffix.Node = .label("ayagawa", next: [.termination])
  private static let _negative_jp_kagawa_higashikagawa: PublicSuffix.Node = .label("higashikagawa", next: [.termination])
  private static let _negative_jp_kagawa_kanonji: PublicSuffix.Node = .label("kanonji", next: [.termination])
  private static let _negative_jp_kagawa_kotohira: PublicSuffix.Node = .label("kotohira", next: [.termination])
  private static let _negative_jp_kagawa_manno: PublicSuffix.Node = .label("manno", next: [.termination])
  private static let _negative_jp_kagawa_marugame: PublicSuffix.Node = .label("marugame", next: [.termination])
  private static let _negative_jp_kagawa_mitoyo: PublicSuffix.Node = .label("mitoyo", next: [.termination])
  private static let _negative_jp_kagawa_naoshima: PublicSuffix.Node = .label("naoshima", next: [.termination])
  private static let _negative_jp_kagawa_sanuki: PublicSuffix.Node = .label("sanuki", next: [.termination])
  private static let _negative_jp_kagawa_tadotsu: PublicSuffix.Node = .label("tadotsu", next: [.termination])
  private static let _negative_jp_kagawa_takamatsu: PublicSuffix.Node = .label("takamatsu", next: [.termination])
  private static let _negative_jp_kagawa_tonosho: PublicSuffix.Node = .label("tonosho", next: [.termination])
  private static let _negative_jp_kagawa_uchinomi: PublicSuffix.Node = .label("uchinomi", next: [.termination])
  private static let _negative_jp_kagawa_utazu: PublicSuffix.Node = .label("utazu", next: [.termination])
  private static let _negative_jp_kagawa_zentsuji: PublicSuffix.Node = .label("zentsuji", next: [.termination])
  private static let _negative_jp_kagawa: PublicSuffix.Node = .label("kagawa", next: [.termination, _negative_jp_kagawa_ayagawa, _negative_jp_kagawa_higashikagawa, _negative_jp_kagawa_kanonji, _negative_jp_kagawa_kotohira, _negative_jp_kagawa_manno, _negative_jp_kagawa_marugame, _negative_jp_kagawa_mitoyo, _negative_jp_kagawa_naoshima, _negative_jp_kagawa_sanuki, _negative_jp_kagawa_tadotsu, _negative_jp_kagawa_takamatsu, _negative_jp_kagawa_tonosho, _negative_jp_kagawa_uchinomi, _negative_jp_kagawa_utazu, _negative_jp_kagawa_zentsuji])
  private static let _negative_jp_kagoshima_akune: PublicSuffix.Node = .label("akune", next: [.termination])
  private static let _negative_jp_kagoshima_amami: PublicSuffix.Node = .label("amami", next: [.termination])
  private static let _negative_jp_kagoshima_hioki: PublicSuffix.Node = .label("hioki", next: [.termination])
  private static let _negative_jp_kagoshima_isa: PublicSuffix.Node = .label("isa", next: [.termination])
  private static let _negative_jp_kagoshima_isen: PublicSuffix.Node = .label("isen", next: [.termination])
  private static let _negative_jp_kagoshima_izumi: PublicSuffix.Node = .label("izumi", next: [.termination])
  private static let _negative_jp_kagoshima_kagoshima: PublicSuffix.Node = .label("kagoshima", next: [.termination])
  private static let _negative_jp_kagoshima_kanoya: PublicSuffix.Node = .label("kanoya", next: [.termination])
  private static let _negative_jp_kagoshima_kawanabe: PublicSuffix.Node = .label("kawanabe", next: [.termination])
  private static let _negative_jp_kagoshima_kinko: PublicSuffix.Node = .label("kinko", next: [.termination])
  private static let _negative_jp_kagoshima_kouyama: PublicSuffix.Node = .label("kouyama", next: [.termination])
  private static let _negative_jp_kagoshima_makurazaki: PublicSuffix.Node = .label("makurazaki", next: [.termination])
  private static let _negative_jp_kagoshima_matsumoto: PublicSuffix.Node = .label("matsumoto", next: [.termination])
  private static let _negative_jp_kagoshima_minamitane: PublicSuffix.Node = .label("minamitane", next: [.termination])
  private static let _negative_jp_kagoshima_nakatane: PublicSuffix.Node = .label("nakatane", next: [.termination])
  private static let _negative_jp_kagoshima_nishinoomote: PublicSuffix.Node = .label("nishinoomote", next: [.termination])
  private static let _negative_jp_kagoshima_satsumasendai: PublicSuffix.Node = .label("satsumasendai", next: [.termination])
  private static let _negative_jp_kagoshima_soo: PublicSuffix.Node = .label("soo", next: [.termination])
  private static let _negative_jp_kagoshima_tarumizu: PublicSuffix.Node = .label("tarumizu", next: [.termination])
  private static let _negative_jp_kagoshima_yusui: PublicSuffix.Node = .label("yusui", next: [.termination])
  private static let _negative_jp_kagoshima: PublicSuffix.Node = .label("kagoshima", next: [.termination, _negative_jp_kagoshima_akune, _negative_jp_kagoshima_amami, _negative_jp_kagoshima_hioki, _negative_jp_kagoshima_isa, _negative_jp_kagoshima_isen, _negative_jp_kagoshima_izumi, _negative_jp_kagoshima_kagoshima, _negative_jp_kagoshima_kanoya, _negative_jp_kagoshima_kawanabe, _negative_jp_kagoshima_kinko, _negative_jp_kagoshima_kouyama, _negative_jp_kagoshima_makurazaki, _negative_jp_kagoshima_matsumoto, _negative_jp_kagoshima_minamitane, _negative_jp_kagoshima_nakatane, _negative_jp_kagoshima_nishinoomote, _negative_jp_kagoshima_satsumasendai, _negative_jp_kagoshima_soo, _negative_jp_kagoshima_tarumizu, _negative_jp_kagoshima_yusui])
  private static let _negative_jp_kanagawa_aikawa: PublicSuffix.Node = .label("aikawa", next: [.termination])
  private static let _negative_jp_kanagawa_atsugi: PublicSuffix.Node = .label("atsugi", next: [.termination])
  private static let _negative_jp_kanagawa_ayase: PublicSuffix.Node = .label("ayase", next: [.termination])
  private static let _negative_jp_kanagawa_chigasaki: PublicSuffix.Node = .label("chigasaki", next: [.termination])
  private static let _negative_jp_kanagawa_ebina: PublicSuffix.Node = .label("ebina", next: [.termination])
  private static let _negative_jp_kanagawa_fujisawa: PublicSuffix.Node = .label("fujisawa", next: [.termination])
  private static let _negative_jp_kanagawa_hadano: PublicSuffix.Node = .label("hadano", next: [.termination])
  private static let _negative_jp_kanagawa_hakone: PublicSuffix.Node = .label("hakone", next: [.termination])
  private static let _negative_jp_kanagawa_hiratsuka: PublicSuffix.Node = .label("hiratsuka", next: [.termination])
  private static let _negative_jp_kanagawa_isehara: PublicSuffix.Node = .label("isehara", next: [.termination])
  private static let _negative_jp_kanagawa_kaisei: PublicSuffix.Node = .label("kaisei", next: [.termination])
  private static let _negative_jp_kanagawa_kamakura: PublicSuffix.Node = .label("kamakura", next: [.termination])
  private static let _negative_jp_kanagawa_kiyokawa: PublicSuffix.Node = .label("kiyokawa", next: [.termination])
  private static let _negative_jp_kanagawa_matsuda: PublicSuffix.Node = .label("matsuda", next: [.termination])
  private static let _negative_jp_kanagawa_minamiashigara: PublicSuffix.Node = .label("minamiashigara", next: [.termination])
  private static let _negative_jp_kanagawa_miura: PublicSuffix.Node = .label("miura", next: [.termination])
  private static let _negative_jp_kanagawa_nakai: PublicSuffix.Node = .label("nakai", next: [.termination])
  private static let _negative_jp_kanagawa_ninomiya: PublicSuffix.Node = .label("ninomiya", next: [.termination])
  private static let _negative_jp_kanagawa_odawara: PublicSuffix.Node = .label("odawara", next: [.termination])
  private static let _negative_jp_kanagawa_oi: PublicSuffix.Node = .label("oi", next: [.termination])
  private static let _negative_jp_kanagawa_oiso: PublicSuffix.Node = .label("oiso", next: [.termination])
  private static let _negative_jp_kanagawa_sagamihara: PublicSuffix.Node = .label("sagamihara", next: [.termination])
  private static let _negative_jp_kanagawa_samukawa: PublicSuffix.Node = .label("samukawa", next: [.termination])
  private static let _negative_jp_kanagawa_tsukui: PublicSuffix.Node = .label("tsukui", next: [.termination])
  private static let _negative_jp_kanagawa_yamakita: PublicSuffix.Node = .label("yamakita", next: [.termination])
  private static let _negative_jp_kanagawa_yamato: PublicSuffix.Node = .label("yamato", next: [.termination])
  private static let _negative_jp_kanagawa_yokosuka: PublicSuffix.Node = .label("yokosuka", next: [.termination])
  private static let _negative_jp_kanagawa_yugawara: PublicSuffix.Node = .label("yugawara", next: [.termination])
  private static let _negative_jp_kanagawa_zama: PublicSuffix.Node = .label("zama", next: [.termination])
  private static let _negative_jp_kanagawa_zushi: PublicSuffix.Node = .label("zushi", next: [.termination])
  private static let _negative_jp_kanagawa: PublicSuffix.Node = .label("kanagawa", next: [.termination, _negative_jp_kanagawa_aikawa, _negative_jp_kanagawa_atsugi, _negative_jp_kanagawa_ayase, _negative_jp_kanagawa_chigasaki, _negative_jp_kanagawa_ebina, _negative_jp_kanagawa_fujisawa, _negative_jp_kanagawa_hadano, _negative_jp_kanagawa_hakone, _negative_jp_kanagawa_hiratsuka, _negative_jp_kanagawa_isehara, _negative_jp_kanagawa_kaisei, _negative_jp_kanagawa_kamakura, _negative_jp_kanagawa_kiyokawa, _negative_jp_kanagawa_matsuda, _negative_jp_kanagawa_minamiashigara, _negative_jp_kanagawa_miura, _negative_jp_kanagawa_nakai, _negative_jp_kanagawa_ninomiya, _negative_jp_kanagawa_odawara, _negative_jp_kanagawa_oi, _negative_jp_kanagawa_oiso, _negative_jp_kanagawa_sagamihara, _negative_jp_kanagawa_samukawa, _negative_jp_kanagawa_tsukui, _negative_jp_kanagawa_yamakita, _negative_jp_kanagawa_yamato, _negative_jp_kanagawa_yokosuka, _negative_jp_kanagawa_yugawara, _negative_jp_kanagawa_zama, _negative_jp_kanagawa_zushi])
  private static let _negative_jp_kawaiishop: PublicSuffix.Node = .label("kawaiishop", next: [.termination])
  private static let _negative_jp_kawasaki: PublicSuffix.Node = .label("kawasaki", next: [.any])
  private static let _negative_jp_kikirara: PublicSuffix.Node = .label("kikirara", next: [.termination])
  private static let _negative_jp_kill: PublicSuffix.Node = .label("kill", next: [.termination])
  private static let _negative_jp_kilo: PublicSuffix.Node = .label("kilo", next: [.termination])
  private static let _negative_jp_kitakyushu: PublicSuffix.Node = .label("kitakyushu", next: [.any])
  private static let _negative_jp_kobe: PublicSuffix.Node = .label("kobe", next: [.any])
  private static let _negative_jp_kochi_aki: PublicSuffix.Node = .label("aki", next: [.termination])
  private static let _negative_jp_kochi_geisei: PublicSuffix.Node = .label("geisei", next: [.termination])
  private static let _negative_jp_kochi_hidaka: PublicSuffix.Node = .label("hidaka", next: [.termination])
  private static let _negative_jp_kochi_higashitsuno: PublicSuffix.Node = .label("higashitsuno", next: [.termination])
  private static let _negative_jp_kochi_ino: PublicSuffix.Node = .label("ino", next: [.termination])
  private static let _negative_jp_kochi_kagami: PublicSuffix.Node = .label("kagami", next: [.termination])
  private static let _negative_jp_kochi_kami: PublicSuffix.Node = .label("kami", next: [.termination])
  private static let _negative_jp_kochi_kitagawa: PublicSuffix.Node = .label("kitagawa", next: [.termination])
  private static let _negative_jp_kochi_kochi: PublicSuffix.Node = .label("kochi", next: [.termination])
  private static let _negative_jp_kochi_mihara: PublicSuffix.Node = .label("mihara", next: [.termination])
  private static let _negative_jp_kochi_motoyama: PublicSuffix.Node = .label("motoyama", next: [.termination])
  private static let _negative_jp_kochi_muroto: PublicSuffix.Node = .label("muroto", next: [.termination])
  private static let _negative_jp_kochi_nahari: PublicSuffix.Node = .label("nahari", next: [.termination])
  private static let _negative_jp_kochi_nakamura: PublicSuffix.Node = .label("nakamura", next: [.termination])
  private static let _negative_jp_kochi_nankoku: PublicSuffix.Node = .label("nankoku", next: [.termination])
  private static let _negative_jp_kochi_nishitosa: PublicSuffix.Node = .label("nishitosa", next: [.termination])
  private static let _negative_jp_kochi_niyodogawa: PublicSuffix.Node = .label("niyodogawa", next: [.termination])
  private static let _negative_jp_kochi_ochi: PublicSuffix.Node = .label("ochi", next: [.termination])
  private static let _negative_jp_kochi_okawa: PublicSuffix.Node = .label("okawa", next: [.termination])
  private static let _negative_jp_kochi_otoyo: PublicSuffix.Node = .label("otoyo", next: [.termination])
  private static let _negative_jp_kochi_otsuki: PublicSuffix.Node = .label("otsuki", next: [.termination])
  private static let _negative_jp_kochi_sakawa: PublicSuffix.Node = .label("sakawa", next: [.termination])
  private static let _negative_jp_kochi_sukumo: PublicSuffix.Node = .label("sukumo", next: [.termination])
  private static let _negative_jp_kochi_susaki: PublicSuffix.Node = .label("susaki", next: [.termination])
  private static let _negative_jp_kochi_tosa: PublicSuffix.Node = .label("tosa", next: [.termination])
  private static let _negative_jp_kochi_tosashimizu: PublicSuffix.Node = .label("tosashimizu", next: [.termination])
  private static let _negative_jp_kochi_toyo: PublicSuffix.Node = .label("toyo", next: [.termination])
  private static let _negative_jp_kochi_tsuno: PublicSuffix.Node = .label("tsuno", next: [.termination])
  private static let _negative_jp_kochi_umaji: PublicSuffix.Node = .label("umaji", next: [.termination])
  private static let _negative_jp_kochi_yasuda: PublicSuffix.Node = .label("yasuda", next: [.termination])
  private static let _negative_jp_kochi_yusuhara: PublicSuffix.Node = .label("yusuhara", next: [.termination])
  private static let _negative_jp_kochi: PublicSuffix.Node = .label("kochi", next: [.termination, _negative_jp_kochi_aki, _negative_jp_kochi_geisei, _negative_jp_kochi_hidaka, _negative_jp_kochi_higashitsuno, _negative_jp_kochi_ino, _negative_jp_kochi_kagami, _negative_jp_kochi_kami, _negative_jp_kochi_kitagawa, _negative_jp_kochi_kochi, _negative_jp_kochi_mihara, _negative_jp_kochi_motoyama, _negative_jp_kochi_muroto, _negative_jp_kochi_nahari, _negative_jp_kochi_nakamura, _negative_jp_kochi_nankoku, _negative_jp_kochi_nishitosa, _negative_jp_kochi_niyodogawa, _negative_jp_kochi_ochi, _negative_jp_kochi_okawa, _negative_jp_kochi_otoyo, _negative_jp_kochi_otsuki, _negative_jp_kochi_sakawa, _negative_jp_kochi_sukumo, _negative_jp_kochi_susaki, _negative_jp_kochi_tosa, _negative_jp_kochi_tosashimizu, _negative_jp_kochi_toyo, _negative_jp_kochi_tsuno, _negative_jp_kochi_umaji, _negative_jp_kochi_yasuda, _negative_jp_kochi_yusuhara])
  private static let _negative_jp_kumamoto_amakusa: PublicSuffix.Node = .label("amakusa", next: [.termination])
  private static let _negative_jp_kumamoto_arao: PublicSuffix.Node = .label("arao", next: [.termination])
  private static let _negative_jp_kumamoto_aso: PublicSuffix.Node = .label("aso", next: [.termination])
  private static let _negative_jp_kumamoto_choyo: PublicSuffix.Node = .label("choyo", next: [.termination])
  private static let _negative_jp_kumamoto_gyokuto: PublicSuffix.Node = .label("gyokuto", next: [.termination])
  private static let _negative_jp_kumamoto_kamiamakusa: PublicSuffix.Node = .label("kamiamakusa", next: [.termination])
  private static let _negative_jp_kumamoto_kikuchi: PublicSuffix.Node = .label("kikuchi", next: [.termination])
  private static let _negative_jp_kumamoto_kumamoto: PublicSuffix.Node = .label("kumamoto", next: [.termination])
  private static let _negative_jp_kumamoto_mashiki: PublicSuffix.Node = .label("mashiki", next: [.termination])
  private static let _negative_jp_kumamoto_mifune: PublicSuffix.Node = .label("mifune", next: [.termination])
  private static let _negative_jp_kumamoto_minamata: PublicSuffix.Node = .label("minamata", next: [.termination])
  private static let _negative_jp_kumamoto_minamioguni: PublicSuffix.Node = .label("minamioguni", next: [.termination])
  private static let _negative_jp_kumamoto_nagasu: PublicSuffix.Node = .label("nagasu", next: [.termination])
  private static let _negative_jp_kumamoto_nishihara: PublicSuffix.Node = .label("nishihara", next: [.termination])
  private static let _negative_jp_kumamoto_oguni: PublicSuffix.Node = .label("oguni", next: [.termination])
  private static let _negative_jp_kumamoto_ozu: PublicSuffix.Node = .label("ozu", next: [.termination])
  private static let _negative_jp_kumamoto_sumoto: PublicSuffix.Node = .label("sumoto", next: [.termination])
  private static let _negative_jp_kumamoto_takamori: PublicSuffix.Node = .label("takamori", next: [.termination])
  private static let _negative_jp_kumamoto_uki: PublicSuffix.Node = .label("uki", next: [.termination])
  private static let _negative_jp_kumamoto_uto: PublicSuffix.Node = .label("uto", next: [.termination])
  private static let _negative_jp_kumamoto_yamaga: PublicSuffix.Node = .label("yamaga", next: [.termination])
  private static let _negative_jp_kumamoto_yamato: PublicSuffix.Node = .label("yamato", next: [.termination])
  private static let _negative_jp_kumamoto_yatsushiro: PublicSuffix.Node = .label("yatsushiro", next: [.termination])
  private static let _negative_jp_kumamoto: PublicSuffix.Node = .label("kumamoto", next: [.termination, _negative_jp_kumamoto_amakusa, _negative_jp_kumamoto_arao, _negative_jp_kumamoto_aso, _negative_jp_kumamoto_choyo, _negative_jp_kumamoto_gyokuto, _negative_jp_kumamoto_kamiamakusa, _negative_jp_kumamoto_kikuchi, _negative_jp_kumamoto_kumamoto, _negative_jp_kumamoto_mashiki, _negative_jp_kumamoto_mifune, _negative_jp_kumamoto_minamata, _negative_jp_kumamoto_minamioguni, _negative_jp_kumamoto_nagasu, _negative_jp_kumamoto_nishihara, _negative_jp_kumamoto_oguni, _negative_jp_kumamoto_ozu, _negative_jp_kumamoto_sumoto, _negative_jp_kumamoto_takamori, _negative_jp_kumamoto_uki, _negative_jp_kumamoto_uto, _negative_jp_kumamoto_yamaga, _negative_jp_kumamoto_yamato, _negative_jp_kumamoto_yatsushiro])
  private static let _negative_jp_kuron: PublicSuffix.Node = .label("kuron", next: [.termination])
  private static let _negative_jp_kyoto_ayabe: PublicSuffix.Node = .label("ayabe", next: [.termination])
  private static let _negative_jp_kyoto_fukuchiyama: PublicSuffix.Node = .label("fukuchiyama", next: [.termination])
  private static let _negative_jp_kyoto_higashiyama: PublicSuffix.Node = .label("higashiyama", next: [.termination])
  private static let _negative_jp_kyoto_ide: PublicSuffix.Node = .label("ide", next: [.termination])
  private static let _negative_jp_kyoto_ine: PublicSuffix.Node = .label("ine", next: [.termination])
  private static let _negative_jp_kyoto_joyo: PublicSuffix.Node = .label("joyo", next: [.termination])
  private static let _negative_jp_kyoto_kameoka: PublicSuffix.Node = .label("kameoka", next: [.termination])
  private static let _negative_jp_kyoto_kamo: PublicSuffix.Node = .label("kamo", next: [.termination])
  private static let _negative_jp_kyoto_kita: PublicSuffix.Node = .label("kita", next: [.termination])
  private static let _negative_jp_kyoto_kizu: PublicSuffix.Node = .label("kizu", next: [.termination])
  private static let _negative_jp_kyoto_kumiyama: PublicSuffix.Node = .label("kumiyama", next: [.termination])
  private static let _negative_jp_kyoto_kyotamba: PublicSuffix.Node = .label("kyotamba", next: [.termination])
  private static let _negative_jp_kyoto_kyotanabe: PublicSuffix.Node = .label("kyotanabe", next: [.termination])
  private static let _negative_jp_kyoto_kyotango: PublicSuffix.Node = .label("kyotango", next: [.termination])
  private static let _negative_jp_kyoto_maizuru: PublicSuffix.Node = .label("maizuru", next: [.termination])
  private static let _negative_jp_kyoto_minami: PublicSuffix.Node = .label("minami", next: [.termination])
  private static let _negative_jp_kyoto_minamiyamashiro: PublicSuffix.Node = .label("minamiyamashiro", next: [.termination])
  private static let _negative_jp_kyoto_miyazu: PublicSuffix.Node = .label("miyazu", next: [.termination])
  private static let _negative_jp_kyoto_muko: PublicSuffix.Node = .label("muko", next: [.termination])
  private static let _negative_jp_kyoto_nagaokakyo: PublicSuffix.Node = .label("nagaokakyo", next: [.termination])
  private static let _negative_jp_kyoto_nakagyo: PublicSuffix.Node = .label("nakagyo", next: [.termination])
  private static let _negative_jp_kyoto_nantan: PublicSuffix.Node = .label("nantan", next: [.termination])
  private static let _negative_jp_kyoto_oyamazaki: PublicSuffix.Node = .label("oyamazaki", next: [.termination])
  private static let _negative_jp_kyoto_sakyo: PublicSuffix.Node = .label("sakyo", next: [.termination])
  private static let _negative_jp_kyoto_seika: PublicSuffix.Node = .label("seika", next: [.termination])
  private static let _negative_jp_kyoto_tanabe: PublicSuffix.Node = .label("tanabe", next: [.termination])
  private static let _negative_jp_kyoto_uji: PublicSuffix.Node = .label("uji", next: [.termination])
  private static let _negative_jp_kyoto_ujitawara: PublicSuffix.Node = .label("ujitawara", next: [.termination])
  private static let _negative_jp_kyoto_wazuka: PublicSuffix.Node = .label("wazuka", next: [.termination])
  private static let _negative_jp_kyoto_yamashina: PublicSuffix.Node = .label("yamashina", next: [.termination])
  private static let _negative_jp_kyoto_yawata: PublicSuffix.Node = .label("yawata", next: [.termination])
  private static let _negative_jp_kyoto: PublicSuffix.Node = .label("kyoto", next: [.termination, _negative_jp_kyoto_ayabe, _negative_jp_kyoto_fukuchiyama, _negative_jp_kyoto_higashiyama, _negative_jp_kyoto_ide, _negative_jp_kyoto_ine, _negative_jp_kyoto_joyo, _negative_jp_kyoto_kameoka, _negative_jp_kyoto_kamo, _negative_jp_kyoto_kita, _negative_jp_kyoto_kizu, _negative_jp_kyoto_kumiyama, _negative_jp_kyoto_kyotamba, _negative_jp_kyoto_kyotanabe, _negative_jp_kyoto_kyotango, _negative_jp_kyoto_maizuru, _negative_jp_kyoto_minami, _negative_jp_kyoto_minamiyamashiro, _negative_jp_kyoto_miyazu, _negative_jp_kyoto_muko, _negative_jp_kyoto_nagaokakyo, _negative_jp_kyoto_nakagyo, _negative_jp_kyoto_nantan, _negative_jp_kyoto_oyamazaki, _negative_jp_kyoto_sakyo, _negative_jp_kyoto_seika, _negative_jp_kyoto_tanabe, _negative_jp_kyoto_uji, _negative_jp_kyoto_ujitawara, _negative_jp_kyoto_wazuka, _negative_jp_kyoto_yamashina, _negative_jp_kyoto_yawata])
  private static let _negative_jp_lg: PublicSuffix.Node = .label("lg", next: [.termination])
  private static let _negative_jp_littlestar: PublicSuffix.Node = .label("littlestar", next: [.termination])
  private static let _negative_jp_lolipopmc: PublicSuffix.Node = .label("lolipopmc", next: [.termination])
  private static let _negative_jp_lolitapunk: PublicSuffix.Node = .label("lolitapunk", next: [.termination])
  private static let _negative_jp_lomo: PublicSuffix.Node = .label("lomo", next: [.termination])
  private static let _negative_jp_lovepop: PublicSuffix.Node = .label("lovepop", next: [.termination])
  private static let _negative_jp_lovesick: PublicSuffix.Node = .label("lovesick", next: [.termination])
  private static let _negative_jp_main: PublicSuffix.Node = .label("main", next: [.termination])
  private static let _negative_jp_mie_asahi: PublicSuffix.Node = .label("asahi", next: [.termination])
  private static let _negative_jp_mie_inabe: PublicSuffix.Node = .label("inabe", next: [.termination])
  private static let _negative_jp_mie_ise: PublicSuffix.Node = .label("ise", next: [.termination])
  private static let _negative_jp_mie_kameyama: PublicSuffix.Node = .label("kameyama", next: [.termination])
  private static let _negative_jp_mie_kawagoe: PublicSuffix.Node = .label("kawagoe", next: [.termination])
  private static let _negative_jp_mie_kiho: PublicSuffix.Node = .label("kiho", next: [.termination])
  private static let _negative_jp_mie_kisosaki: PublicSuffix.Node = .label("kisosaki", next: [.termination])
  private static let _negative_jp_mie_kiwa: PublicSuffix.Node = .label("kiwa", next: [.termination])
  private static let _negative_jp_mie_komono: PublicSuffix.Node = .label("komono", next: [.termination])
  private static let _negative_jp_mie_kumano: PublicSuffix.Node = .label("kumano", next: [.termination])
  private static let _negative_jp_mie_kuwana: PublicSuffix.Node = .label("kuwana", next: [.termination])
  private static let _negative_jp_mie_matsusaka: PublicSuffix.Node = .label("matsusaka", next: [.termination])
  private static let _negative_jp_mie_meiwa: PublicSuffix.Node = .label("meiwa", next: [.termination])
  private static let _negative_jp_mie_mihama: PublicSuffix.Node = .label("mihama", next: [.termination])
  private static let _negative_jp_mie_minamiise: PublicSuffix.Node = .label("minamiise", next: [.termination])
  private static let _negative_jp_mie_misugi: PublicSuffix.Node = .label("misugi", next: [.termination])
  private static let _negative_jp_mie_miyama: PublicSuffix.Node = .label("miyama", next: [.termination])
  private static let _negative_jp_mie_nabari: PublicSuffix.Node = .label("nabari", next: [.termination])
  private static let _negative_jp_mie_shima: PublicSuffix.Node = .label("shima", next: [.termination])
  private static let _negative_jp_mie_suzuka: PublicSuffix.Node = .label("suzuka", next: [.termination])
  private static let _negative_jp_mie_tado: PublicSuffix.Node = .label("tado", next: [.termination])
  private static let _negative_jp_mie_taiki: PublicSuffix.Node = .label("taiki", next: [.termination])
  private static let _negative_jp_mie_taki: PublicSuffix.Node = .label("taki", next: [.termination])
  private static let _negative_jp_mie_tamaki: PublicSuffix.Node = .label("tamaki", next: [.termination])
  private static let _negative_jp_mie_toba: PublicSuffix.Node = .label("toba", next: [.termination])
  private static let _negative_jp_mie_tsu: PublicSuffix.Node = .label("tsu", next: [.termination])
  private static let _negative_jp_mie_udono: PublicSuffix.Node = .label("udono", next: [.termination])
  private static let _negative_jp_mie_ureshino: PublicSuffix.Node = .label("ureshino", next: [.termination])
  private static let _negative_jp_mie_watarai: PublicSuffix.Node = .label("watarai", next: [.termination])
  private static let _negative_jp_mie_yokkaichi: PublicSuffix.Node = .label("yokkaichi", next: [.termination])
  private static let _negative_jp_mie: PublicSuffix.Node = .label("mie", next: [.termination, _negative_jp_mie_asahi, _negative_jp_mie_inabe, _negative_jp_mie_ise, _negative_jp_mie_kameyama, _negative_jp_mie_kawagoe, _negative_jp_mie_kiho, _negative_jp_mie_kisosaki, _negative_jp_mie_kiwa, _negative_jp_mie_komono, _negative_jp_mie_kumano, _negative_jp_mie_kuwana, _negative_jp_mie_matsusaka, _negative_jp_mie_meiwa, _negative_jp_mie_mihama, _negative_jp_mie_minamiise, _negative_jp_mie_misugi, _negative_jp_mie_miyama, _negative_jp_mie_nabari, _negative_jp_mie_shima, _negative_jp_mie_suzuka, _negative_jp_mie_tado, _negative_jp_mie_taiki, _negative_jp_mie_taki, _negative_jp_mie_tamaki, _negative_jp_mie_toba, _negative_jp_mie_tsu, _negative_jp_mie_udono, _negative_jp_mie_ureshino, _negative_jp_mie_watarai, _negative_jp_mie_yokkaichi])
  private static let _negative_jp_miyagi_furukawa: PublicSuffix.Node = .label("furukawa", next: [.termination])
  private static let _negative_jp_miyagi_higashimatsushima: PublicSuffix.Node = .label("higashimatsushima", next: [.termination])
  private static let _negative_jp_miyagi_ishinomaki: PublicSuffix.Node = .label("ishinomaki", next: [.termination])
  private static let _negative_jp_miyagi_iwanuma: PublicSuffix.Node = .label("iwanuma", next: [.termination])
  private static let _negative_jp_miyagi_kakuda: PublicSuffix.Node = .label("kakuda", next: [.termination])
  private static let _negative_jp_miyagi_kami: PublicSuffix.Node = .label("kami", next: [.termination])
  private static let _negative_jp_miyagi_kawasaki: PublicSuffix.Node = .label("kawasaki", next: [.termination])
  private static let _negative_jp_miyagi_marumori: PublicSuffix.Node = .label("marumori", next: [.termination])
  private static let _negative_jp_miyagi_matsushima: PublicSuffix.Node = .label("matsushima", next: [.termination])
  private static let _negative_jp_miyagi_minamisanriku: PublicSuffix.Node = .label("minamisanriku", next: [.termination])
  private static let _negative_jp_miyagi_misato: PublicSuffix.Node = .label("misato", next: [.termination])
  private static let _negative_jp_miyagi_murata: PublicSuffix.Node = .label("murata", next: [.termination])
  private static let _negative_jp_miyagi_natori: PublicSuffix.Node = .label("natori", next: [.termination])
  private static let _negative_jp_miyagi_ogawara: PublicSuffix.Node = .label("ogawara", next: [.termination])
  private static let _negative_jp_miyagi_ohira: PublicSuffix.Node = .label("ohira", next: [.termination])
  private static let _negative_jp_miyagi_onagawa: PublicSuffix.Node = .label("onagawa", next: [.termination])
  private static let _negative_jp_miyagi_osaki: PublicSuffix.Node = .label("osaki", next: [.termination])
  private static let _negative_jp_miyagi_rifu: PublicSuffix.Node = .label("rifu", next: [.termination])
  private static let _negative_jp_miyagi_semine: PublicSuffix.Node = .label("semine", next: [.termination])
  private static let _negative_jp_miyagi_shibata: PublicSuffix.Node = .label("shibata", next: [.termination])
  private static let _negative_jp_miyagi_shichikashuku: PublicSuffix.Node = .label("shichikashuku", next: [.termination])
  private static let _negative_jp_miyagi_shikama: PublicSuffix.Node = .label("shikama", next: [.termination])
  private static let _negative_jp_miyagi_shiogama: PublicSuffix.Node = .label("shiogama", next: [.termination])
  private static let _negative_jp_miyagi_shiroishi: PublicSuffix.Node = .label("shiroishi", next: [.termination])
  private static let _negative_jp_miyagi_tagajo: PublicSuffix.Node = .label("tagajo", next: [.termination])
  private static let _negative_jp_miyagi_taiwa: PublicSuffix.Node = .label("taiwa", next: [.termination])
  private static let _negative_jp_miyagi_tome: PublicSuffix.Node = .label("tome", next: [.termination])
  private static let _negative_jp_miyagi_tomiya: PublicSuffix.Node = .label("tomiya", next: [.termination])
  private static let _negative_jp_miyagi_wakuya: PublicSuffix.Node = .label("wakuya", next: [.termination])
  private static let _negative_jp_miyagi_watari: PublicSuffix.Node = .label("watari", next: [.termination])
  private static let _negative_jp_miyagi_yamamoto: PublicSuffix.Node = .label("yamamoto", next: [.termination])
  private static let _negative_jp_miyagi_zao: PublicSuffix.Node = .label("zao", next: [.termination])
  private static let _negative_jp_miyagi: PublicSuffix.Node = .label("miyagi", next: [.termination, _negative_jp_miyagi_furukawa, _negative_jp_miyagi_higashimatsushima, _negative_jp_miyagi_ishinomaki, _negative_jp_miyagi_iwanuma, _negative_jp_miyagi_kakuda, _negative_jp_miyagi_kami, _negative_jp_miyagi_kawasaki, _negative_jp_miyagi_marumori, _negative_jp_miyagi_matsushima, _negative_jp_miyagi_minamisanriku, _negative_jp_miyagi_misato, _negative_jp_miyagi_murata, _negative_jp_miyagi_natori, _negative_jp_miyagi_ogawara, _negative_jp_miyagi_ohira, _negative_jp_miyagi_onagawa, _negative_jp_miyagi_osaki, _negative_jp_miyagi_rifu, _negative_jp_miyagi_semine, _negative_jp_miyagi_shibata, _negative_jp_miyagi_shichikashuku, _negative_jp_miyagi_shikama, _negative_jp_miyagi_shiogama, _negative_jp_miyagi_shiroishi, _negative_jp_miyagi_tagajo, _negative_jp_miyagi_taiwa, _negative_jp_miyagi_tome, _negative_jp_miyagi_tomiya, _negative_jp_miyagi_wakuya, _negative_jp_miyagi_watari, _negative_jp_miyagi_yamamoto, _negative_jp_miyagi_zao])
  private static let _negative_jp_miyazaki_aya: PublicSuffix.Node = .label("aya", next: [.termination])
  private static let _negative_jp_miyazaki_ebino: PublicSuffix.Node = .label("ebino", next: [.termination])
  private static let _negative_jp_miyazaki_gokase: PublicSuffix.Node = .label("gokase", next: [.termination])
  private static let _negative_jp_miyazaki_hyuga: PublicSuffix.Node = .label("hyuga", next: [.termination])
  private static let _negative_jp_miyazaki_kadogawa: PublicSuffix.Node = .label("kadogawa", next: [.termination])
  private static let _negative_jp_miyazaki_kawaminami: PublicSuffix.Node = .label("kawaminami", next: [.termination])
  private static let _negative_jp_miyazaki_kijo: PublicSuffix.Node = .label("kijo", next: [.termination])
  private static let _negative_jp_miyazaki_kitagawa: PublicSuffix.Node = .label("kitagawa", next: [.termination])
  private static let _negative_jp_miyazaki_kitakata: PublicSuffix.Node = .label("kitakata", next: [.termination])
  private static let _negative_jp_miyazaki_kitaura: PublicSuffix.Node = .label("kitaura", next: [.termination])
  private static let _negative_jp_miyazaki_kobayashi: PublicSuffix.Node = .label("kobayashi", next: [.termination])
  private static let _negative_jp_miyazaki_kunitomi: PublicSuffix.Node = .label("kunitomi", next: [.termination])
  private static let _negative_jp_miyazaki_kushima: PublicSuffix.Node = .label("kushima", next: [.termination])
  private static let _negative_jp_miyazaki_mimata: PublicSuffix.Node = .label("mimata", next: [.termination])
  private static let _negative_jp_miyazaki_miyakonojo: PublicSuffix.Node = .label("miyakonojo", next: [.termination])
  private static let _negative_jp_miyazaki_miyazaki: PublicSuffix.Node = .label("miyazaki", next: [.termination])
  private static let _negative_jp_miyazaki_morotsuka: PublicSuffix.Node = .label("morotsuka", next: [.termination])
  private static let _negative_jp_miyazaki_nichinan: PublicSuffix.Node = .label("nichinan", next: [.termination])
  private static let _negative_jp_miyazaki_nishimera: PublicSuffix.Node = .label("nishimera", next: [.termination])
  private static let _negative_jp_miyazaki_nobeoka: PublicSuffix.Node = .label("nobeoka", next: [.termination])
  private static let _negative_jp_miyazaki_saito: PublicSuffix.Node = .label("saito", next: [.termination])
  private static let _negative_jp_miyazaki_shiiba: PublicSuffix.Node = .label("shiiba", next: [.termination])
  private static let _negative_jp_miyazaki_shintomi: PublicSuffix.Node = .label("shintomi", next: [.termination])
  private static let _negative_jp_miyazaki_takaharu: PublicSuffix.Node = .label("takaharu", next: [.termination])
  private static let _negative_jp_miyazaki_takanabe: PublicSuffix.Node = .label("takanabe", next: [.termination])
  private static let _negative_jp_miyazaki_takazaki: PublicSuffix.Node = .label("takazaki", next: [.termination])
  private static let _negative_jp_miyazaki_tsuno: PublicSuffix.Node = .label("tsuno", next: [.termination])
  private static let _negative_jp_miyazaki: PublicSuffix.Node = .label("miyazaki", next: [.termination, _negative_jp_miyazaki_aya, _negative_jp_miyazaki_ebino, _negative_jp_miyazaki_gokase, _negative_jp_miyazaki_hyuga, _negative_jp_miyazaki_kadogawa, _negative_jp_miyazaki_kawaminami, _negative_jp_miyazaki_kijo, _negative_jp_miyazaki_kitagawa, _negative_jp_miyazaki_kitakata, _negative_jp_miyazaki_kitaura, _negative_jp_miyazaki_kobayashi, _negative_jp_miyazaki_kunitomi, _negative_jp_miyazaki_kushima, _negative_jp_miyazaki_mimata, _negative_jp_miyazaki_miyakonojo, _negative_jp_miyazaki_miyazaki, _negative_jp_miyazaki_morotsuka, _negative_jp_miyazaki_nichinan, _negative_jp_miyazaki_nishimera, _negative_jp_miyazaki_nobeoka, _negative_jp_miyazaki_saito, _negative_jp_miyazaki_shiiba, _negative_jp_miyazaki_shintomi, _negative_jp_miyazaki_takaharu, _negative_jp_miyazaki_takanabe, _negative_jp_miyazaki_takazaki, _negative_jp_miyazaki_tsuno])
  private static let _negative_jp_mods: PublicSuffix.Node = .label("mods", next: [.termination])
  private static let _negative_jp_mond: PublicSuffix.Node = .label("mond", next: [.termination])
  private static let _negative_jp_mongolian: PublicSuffix.Node = .label("mongolian", next: [.termination])
  private static let _negative_jp_moo: PublicSuffix.Node = .label("moo", next: [.termination])
  private static let _negative_jp_nagano_achi: PublicSuffix.Node = .label("achi", next: [.termination])
  private static let _negative_jp_nagano_agematsu: PublicSuffix.Node = .label("agematsu", next: [.termination])
  private static let _negative_jp_nagano_anan: PublicSuffix.Node = .label("anan", next: [.termination])
  private static let _negative_jp_nagano_aoki: PublicSuffix.Node = .label("aoki", next: [.termination])
  private static let _negative_jp_nagano_asahi: PublicSuffix.Node = .label("asahi", next: [.termination])
  private static let _negative_jp_nagano_azumino: PublicSuffix.Node = .label("azumino", next: [.termination])
  private static let _negative_jp_nagano_chikuhoku: PublicSuffix.Node = .label("chikuhoku", next: [.termination])
  private static let _negative_jp_nagano_chikuma: PublicSuffix.Node = .label("chikuma", next: [.termination])
  private static let _negative_jp_nagano_chino: PublicSuffix.Node = .label("chino", next: [.termination])
  private static let _negative_jp_nagano_fujimi: PublicSuffix.Node = .label("fujimi", next: [.termination])
  private static let _negative_jp_nagano_hakuba: PublicSuffix.Node = .label("hakuba", next: [.termination])
  private static let _negative_jp_nagano_hara: PublicSuffix.Node = .label("hara", next: [.termination])
  private static let _negative_jp_nagano_hiraya: PublicSuffix.Node = .label("hiraya", next: [.termination])
  private static let _negative_jp_nagano_iida: PublicSuffix.Node = .label("iida", next: [.termination])
  private static let _negative_jp_nagano_iijima: PublicSuffix.Node = .label("iijima", next: [.termination])
  private static let _negative_jp_nagano_iiyama: PublicSuffix.Node = .label("iiyama", next: [.termination])
  private static let _negative_jp_nagano_iizuna: PublicSuffix.Node = .label("iizuna", next: [.termination])
  private static let _negative_jp_nagano_ikeda: PublicSuffix.Node = .label("ikeda", next: [.termination])
  private static let _negative_jp_nagano_ikusaka: PublicSuffix.Node = .label("ikusaka", next: [.termination])
  private static let _negative_jp_nagano_ina: PublicSuffix.Node = .label("ina", next: [.termination])
  private static let _negative_jp_nagano_karuizawa: PublicSuffix.Node = .label("karuizawa", next: [.termination])
  private static let _negative_jp_nagano_kawakami: PublicSuffix.Node = .label("kawakami", next: [.termination])
  private static let _negative_jp_nagano_kiso: PublicSuffix.Node = .label("kiso", next: [.termination])
  private static let _negative_jp_nagano_kisofukushima: PublicSuffix.Node = .label("kisofukushima", next: [.termination])
  private static let _negative_jp_nagano_kitaaiki: PublicSuffix.Node = .label("kitaaiki", next: [.termination])
  private static let _negative_jp_nagano_komagane: PublicSuffix.Node = .label("komagane", next: [.termination])
  private static let _negative_jp_nagano_komoro: PublicSuffix.Node = .label("komoro", next: [.termination])
  private static let _negative_jp_nagano_matsukawa: PublicSuffix.Node = .label("matsukawa", next: [.termination])
  private static let _negative_jp_nagano_matsumoto: PublicSuffix.Node = .label("matsumoto", next: [.termination])
  private static let _negative_jp_nagano_miasa: PublicSuffix.Node = .label("miasa", next: [.termination])
  private static let _negative_jp_nagano_minamiaiki: PublicSuffix.Node = .label("minamiaiki", next: [.termination])
  private static let _negative_jp_nagano_minamimaki: PublicSuffix.Node = .label("minamimaki", next: [.termination])
  private static let _negative_jp_nagano_minamiminowa: PublicSuffix.Node = .label("minamiminowa", next: [.termination])
  private static let _negative_jp_nagano_minowa: PublicSuffix.Node = .label("minowa", next: [.termination])
  private static let _negative_jp_nagano_miyada: PublicSuffix.Node = .label("miyada", next: [.termination])
  private static let _negative_jp_nagano_miyota: PublicSuffix.Node = .label("miyota", next: [.termination])
  private static let _negative_jp_nagano_mochizuki: PublicSuffix.Node = .label("mochizuki", next: [.termination])
  private static let _negative_jp_nagano_nagano: PublicSuffix.Node = .label("nagano", next: [.termination])
  private static let _negative_jp_nagano_nagawa: PublicSuffix.Node = .label("nagawa", next: [.termination])
  private static let _negative_jp_nagano_nagiso: PublicSuffix.Node = .label("nagiso", next: [.termination])
  private static let _negative_jp_nagano_nakagawa: PublicSuffix.Node = .label("nakagawa", next: [.termination])
  private static let _negative_jp_nagano_nakano: PublicSuffix.Node = .label("nakano", next: [.termination])
  private static let _negative_jp_nagano_nozawaonsen: PublicSuffix.Node = .label("nozawaonsen", next: [.termination])
  private static let _negative_jp_nagano_obuse: PublicSuffix.Node = .label("obuse", next: [.termination])
  private static let _negative_jp_nagano_ogawa: PublicSuffix.Node = .label("ogawa", next: [.termination])
  private static let _negative_jp_nagano_okaya: PublicSuffix.Node = .label("okaya", next: [.termination])
  private static let _negative_jp_nagano_omachi: PublicSuffix.Node = .label("omachi", next: [.termination])
  private static let _negative_jp_nagano_omi: PublicSuffix.Node = .label("omi", next: [.termination])
  private static let _negative_jp_nagano_ookuwa: PublicSuffix.Node = .label("ookuwa", next: [.termination])
  private static let _negative_jp_nagano_ooshika: PublicSuffix.Node = .label("ooshika", next: [.termination])
  private static let _negative_jp_nagano_otaki: PublicSuffix.Node = .label("otaki", next: [.termination])
  private static let _negative_jp_nagano_otari: PublicSuffix.Node = .label("otari", next: [.termination])
  private static let _negative_jp_nagano_sakae: PublicSuffix.Node = .label("sakae", next: [.termination])
  private static let _negative_jp_nagano_sakaki: PublicSuffix.Node = .label("sakaki", next: [.termination])
  private static let _negative_jp_nagano_saku: PublicSuffix.Node = .label("saku", next: [.termination])
  private static let _negative_jp_nagano_sakuho: PublicSuffix.Node = .label("sakuho", next: [.termination])
  private static let _negative_jp_nagano_shimosuwa: PublicSuffix.Node = .label("shimosuwa", next: [.termination])
  private static let _negative_jp_nagano_shinanomachi: PublicSuffix.Node = .label("shinanomachi", next: [.termination])
  private static let _negative_jp_nagano_shiojiri: PublicSuffix.Node = .label("shiojiri", next: [.termination])
  private static let _negative_jp_nagano_suwa: PublicSuffix.Node = .label("suwa", next: [.termination])
  private static let _negative_jp_nagano_suzaka: PublicSuffix.Node = .label("suzaka", next: [.termination])
  private static let _negative_jp_nagano_takagi: PublicSuffix.Node = .label("takagi", next: [.termination])
  private static let _negative_jp_nagano_takamori: PublicSuffix.Node = .label("takamori", next: [.termination])
  private static let _negative_jp_nagano_takayama: PublicSuffix.Node = .label("takayama", next: [.termination])
  private static let _negative_jp_nagano_tateshina: PublicSuffix.Node = .label("tateshina", next: [.termination])
  private static let _negative_jp_nagano_tatsuno: PublicSuffix.Node = .label("tatsuno", next: [.termination])
  private static let _negative_jp_nagano_togakushi: PublicSuffix.Node = .label("togakushi", next: [.termination])
  private static let _negative_jp_nagano_togura: PublicSuffix.Node = .label("togura", next: [.termination])
  private static let _negative_jp_nagano_tomi: PublicSuffix.Node = .label("tomi", next: [.termination])
  private static let _negative_jp_nagano_ueda: PublicSuffix.Node = .label("ueda", next: [.termination])
  private static let _negative_jp_nagano_wada: PublicSuffix.Node = .label("wada", next: [.termination])
  private static let _negative_jp_nagano_yamagata: PublicSuffix.Node = .label("yamagata", next: [.termination])
  private static let _negative_jp_nagano_yamanouchi: PublicSuffix.Node = .label("yamanouchi", next: [.termination])
  private static let _negative_jp_nagano_yasaka: PublicSuffix.Node = .label("yasaka", next: [.termination])
  private static let _negative_jp_nagano_yasuoka: PublicSuffix.Node = .label("yasuoka", next: [.termination])
  private static let _negative_jp_nagano: PublicSuffix.Node = .label("nagano", next: [.termination, _negative_jp_nagano_achi, _negative_jp_nagano_agematsu, _negative_jp_nagano_anan, _negative_jp_nagano_aoki, _negative_jp_nagano_asahi, _negative_jp_nagano_azumino, _negative_jp_nagano_chikuhoku, _negative_jp_nagano_chikuma, _negative_jp_nagano_chino, _negative_jp_nagano_fujimi, _negative_jp_nagano_hakuba, _negative_jp_nagano_hara, _negative_jp_nagano_hiraya, _negative_jp_nagano_iida, _negative_jp_nagano_iijima, _negative_jp_nagano_iiyama, _negative_jp_nagano_iizuna, _negative_jp_nagano_ikeda, _negative_jp_nagano_ikusaka, _negative_jp_nagano_ina, _negative_jp_nagano_karuizawa, _negative_jp_nagano_kawakami, _negative_jp_nagano_kiso, _negative_jp_nagano_kisofukushima, _negative_jp_nagano_kitaaiki, _negative_jp_nagano_komagane, _negative_jp_nagano_komoro, _negative_jp_nagano_matsukawa, _negative_jp_nagano_matsumoto, _negative_jp_nagano_miasa, _negative_jp_nagano_minamiaiki, _negative_jp_nagano_minamimaki, _negative_jp_nagano_minamiminowa, _negative_jp_nagano_minowa, _negative_jp_nagano_miyada, _negative_jp_nagano_miyota, _negative_jp_nagano_mochizuki, _negative_jp_nagano_nagano, _negative_jp_nagano_nagawa, _negative_jp_nagano_nagiso, _negative_jp_nagano_nakagawa, _negative_jp_nagano_nakano, _negative_jp_nagano_nozawaonsen, _negative_jp_nagano_obuse, _negative_jp_nagano_ogawa, _negative_jp_nagano_okaya, _negative_jp_nagano_omachi, _negative_jp_nagano_omi, _negative_jp_nagano_ookuwa, _negative_jp_nagano_ooshika, _negative_jp_nagano_otaki, _negative_jp_nagano_otari, _negative_jp_nagano_sakae, _negative_jp_nagano_sakaki, _negative_jp_nagano_saku, _negative_jp_nagano_sakuho, _negative_jp_nagano_shimosuwa, _negative_jp_nagano_shinanomachi, _negative_jp_nagano_shiojiri, _negative_jp_nagano_suwa, _negative_jp_nagano_suzaka, _negative_jp_nagano_takagi, _negative_jp_nagano_takamori, _negative_jp_nagano_takayama, _negative_jp_nagano_tateshina, _negative_jp_nagano_tatsuno, _negative_jp_nagano_togakushi, _negative_jp_nagano_togura, _negative_jp_nagano_tomi, _negative_jp_nagano_ueda, _negative_jp_nagano_wada, _negative_jp_nagano_yamagata, _negative_jp_nagano_yamanouchi, _negative_jp_nagano_yasaka, _negative_jp_nagano_yasuoka])
  private static let _negative_jp_nagasaki_chijiwa: PublicSuffix.Node = .label("chijiwa", next: [.termination])
  private static let _negative_jp_nagasaki_futsu: PublicSuffix.Node = .label("futsu", next: [.termination])
  private static let _negative_jp_nagasaki_goto: PublicSuffix.Node = .label("goto", next: [.termination])
  private static let _negative_jp_nagasaki_hasami: PublicSuffix.Node = .label("hasami", next: [.termination])
  private static let _negative_jp_nagasaki_hirado: PublicSuffix.Node = .label("hirado", next: [.termination])
  private static let _negative_jp_nagasaki_iki: PublicSuffix.Node = .label("iki", next: [.termination])
  private static let _negative_jp_nagasaki_isahaya: PublicSuffix.Node = .label("isahaya", next: [.termination])
  private static let _negative_jp_nagasaki_kawatana: PublicSuffix.Node = .label("kawatana", next: [.termination])
  private static let _negative_jp_nagasaki_kuchinotsu: PublicSuffix.Node = .label("kuchinotsu", next: [.termination])
  private static let _negative_jp_nagasaki_matsuura: PublicSuffix.Node = .label("matsuura", next: [.termination])
  private static let _negative_jp_nagasaki_nagasaki: PublicSuffix.Node = .label("nagasaki", next: [.termination])
  private static let _negative_jp_nagasaki_obama: PublicSuffix.Node = .label("obama", next: [.termination])
  private static let _negative_jp_nagasaki_omura: PublicSuffix.Node = .label("omura", next: [.termination])
  private static let _negative_jp_nagasaki_oseto: PublicSuffix.Node = .label("oseto", next: [.termination])
  private static let _negative_jp_nagasaki_saikai: PublicSuffix.Node = .label("saikai", next: [.termination])
  private static let _negative_jp_nagasaki_sasebo: PublicSuffix.Node = .label("sasebo", next: [.termination])
  private static let _negative_jp_nagasaki_seihi: PublicSuffix.Node = .label("seihi", next: [.termination])
  private static let _negative_jp_nagasaki_shimabara: PublicSuffix.Node = .label("shimabara", next: [.termination])
  private static let _negative_jp_nagasaki_shinkamigoto: PublicSuffix.Node = .label("shinkamigoto", next: [.termination])
  private static let _negative_jp_nagasaki_togitsu: PublicSuffix.Node = .label("togitsu", next: [.termination])
  private static let _negative_jp_nagasaki_tsushima: PublicSuffix.Node = .label("tsushima", next: [.termination])
  private static let _negative_jp_nagasaki_unzen: PublicSuffix.Node = .label("unzen", next: [.termination])
  private static let _negative_jp_nagasaki: PublicSuffix.Node = .label("nagasaki", next: [.termination, _negative_jp_nagasaki_chijiwa, _negative_jp_nagasaki_futsu, _negative_jp_nagasaki_goto, _negative_jp_nagasaki_hasami, _negative_jp_nagasaki_hirado, _negative_jp_nagasaki_iki, _negative_jp_nagasaki_isahaya, _negative_jp_nagasaki_kawatana, _negative_jp_nagasaki_kuchinotsu, _negative_jp_nagasaki_matsuura, _negative_jp_nagasaki_nagasaki, _negative_jp_nagasaki_obama, _negative_jp_nagasaki_omura, _negative_jp_nagasaki_oseto, _negative_jp_nagasaki_saikai, _negative_jp_nagasaki_sasebo, _negative_jp_nagasaki_seihi, _negative_jp_nagasaki_shimabara, _negative_jp_nagasaki_shinkamigoto, _negative_jp_nagasaki_togitsu, _negative_jp_nagasaki_tsushima, _negative_jp_nagasaki_unzen])
  private static let _negative_jp_nagoya: PublicSuffix.Node = .label("nagoya", next: [.any])
  private static let _negative_jp_namaste: PublicSuffix.Node = .label("namaste", next: [.termination])
  private static let _negative_jp_nara_ando: PublicSuffix.Node = .label("ando", next: [.termination])
  private static let _negative_jp_nara_gose: PublicSuffix.Node = .label("gose", next: [.termination])
  private static let _negative_jp_nara_heguri: PublicSuffix.Node = .label("heguri", next: [.termination])
  private static let _negative_jp_nara_higashiyoshino: PublicSuffix.Node = .label("higashiyoshino", next: [.termination])
  private static let _negative_jp_nara_ikaruga: PublicSuffix.Node = .label("ikaruga", next: [.termination])
  private static let _negative_jp_nara_ikoma: PublicSuffix.Node = .label("ikoma", next: [.termination])
  private static let _negative_jp_nara_kamikitayama: PublicSuffix.Node = .label("kamikitayama", next: [.termination])
  private static let _negative_jp_nara_kanmaki: PublicSuffix.Node = .label("kanmaki", next: [.termination])
  private static let _negative_jp_nara_kashiba: PublicSuffix.Node = .label("kashiba", next: [.termination])
  private static let _negative_jp_nara_kashihara: PublicSuffix.Node = .label("kashihara", next: [.termination])
  private static let _negative_jp_nara_katsuragi: PublicSuffix.Node = .label("katsuragi", next: [.termination])
  private static let _negative_jp_nara_kawai: PublicSuffix.Node = .label("kawai", next: [.termination])
  private static let _negative_jp_nara_kawakami: PublicSuffix.Node = .label("kawakami", next: [.termination])
  private static let _negative_jp_nara_kawanishi: PublicSuffix.Node = .label("kawanishi", next: [.termination])
  private static let _negative_jp_nara_koryo: PublicSuffix.Node = .label("koryo", next: [.termination])
  private static let _negative_jp_nara_kurotaki: PublicSuffix.Node = .label("kurotaki", next: [.termination])
  private static let _negative_jp_nara_mitsue: PublicSuffix.Node = .label("mitsue", next: [.termination])
  private static let _negative_jp_nara_miyake: PublicSuffix.Node = .label("miyake", next: [.termination])
  private static let _negative_jp_nara_nara: PublicSuffix.Node = .label("nara", next: [.termination])
  private static let _negative_jp_nara_nosegawa: PublicSuffix.Node = .label("nosegawa", next: [.termination])
  private static let _negative_jp_nara_oji: PublicSuffix.Node = .label("oji", next: [.termination])
  private static let _negative_jp_nara_ouda: PublicSuffix.Node = .label("ouda", next: [.termination])
  private static let _negative_jp_nara_oyodo: PublicSuffix.Node = .label("oyodo", next: [.termination])
  private static let _negative_jp_nara_sakurai: PublicSuffix.Node = .label("sakurai", next: [.termination])
  private static let _negative_jp_nara_sango: PublicSuffix.Node = .label("sango", next: [.termination])
  private static let _negative_jp_nara_shimoichi: PublicSuffix.Node = .label("shimoichi", next: [.termination])
  private static let _negative_jp_nara_shimokitayama: PublicSuffix.Node = .label("shimokitayama", next: [.termination])
  private static let _negative_jp_nara_shinjo: PublicSuffix.Node = .label("shinjo", next: [.termination])
  private static let _negative_jp_nara_soni: PublicSuffix.Node = .label("soni", next: [.termination])
  private static let _negative_jp_nara_takatori: PublicSuffix.Node = .label("takatori", next: [.termination])
  private static let _negative_jp_nara_tawaramoto: PublicSuffix.Node = .label("tawaramoto", next: [.termination])
  private static let _negative_jp_nara_tenkawa: PublicSuffix.Node = .label("tenkawa", next: [.termination])
  private static let _negative_jp_nara_tenri: PublicSuffix.Node = .label("tenri", next: [.termination])
  private static let _negative_jp_nara_uda: PublicSuffix.Node = .label("uda", next: [.termination])
  private static let _negative_jp_nara_yamatokoriyama: PublicSuffix.Node = .label("yamatokoriyama", next: [.termination])
  private static let _negative_jp_nara_yamatotakada: PublicSuffix.Node = .label("yamatotakada", next: [.termination])
  private static let _negative_jp_nara_yamazoe: PublicSuffix.Node = .label("yamazoe", next: [.termination])
  private static let _negative_jp_nara_yoshino: PublicSuffix.Node = .label("yoshino", next: [.termination])
  private static let _negative_jp_nara: PublicSuffix.Node = .label("nara", next: [.termination, _negative_jp_nara_ando, _negative_jp_nara_gose, _negative_jp_nara_heguri, _negative_jp_nara_higashiyoshino, _negative_jp_nara_ikaruga, _negative_jp_nara_ikoma, _negative_jp_nara_kamikitayama, _negative_jp_nara_kanmaki, _negative_jp_nara_kashiba, _negative_jp_nara_kashihara, _negative_jp_nara_katsuragi, _negative_jp_nara_kawai, _negative_jp_nara_kawakami, _negative_jp_nara_kawanishi, _negative_jp_nara_koryo, _negative_jp_nara_kurotaki, _negative_jp_nara_mitsue, _negative_jp_nara_miyake, _negative_jp_nara_nara, _negative_jp_nara_nosegawa, _negative_jp_nara_oji, _negative_jp_nara_ouda, _negative_jp_nara_oyodo, _negative_jp_nara_sakurai, _negative_jp_nara_sango, _negative_jp_nara_shimoichi, _negative_jp_nara_shimokitayama, _negative_jp_nara_shinjo, _negative_jp_nara_soni, _negative_jp_nara_takatori, _negative_jp_nara_tawaramoto, _negative_jp_nara_tenkawa, _negative_jp_nara_tenri, _negative_jp_nara_uda, _negative_jp_nara_yamatokoriyama, _negative_jp_nara_yamatotakada, _negative_jp_nara_yamazoe, _negative_jp_nara_yoshino])
  private static let _negative_jp_ne_aseinet_user: PublicSuffix.Node = .label("user", next: [.termination])
  private static let _negative_jp_ne_aseinet: PublicSuffix.Node = .label("aseinet", next: [_negative_jp_ne_aseinet_user])
  private static let _negative_jp_ne_gehirn: PublicSuffix.Node = .label("gehirn", next: [.termination])
  private static let _negative_jp_ne: PublicSuffix.Node = .label("ne", next: [.termination, _negative_jp_ne_aseinet, _negative_jp_ne_gehirn])
  private static let _negative_jp_niigata_aga: PublicSuffix.Node = .label("aga", next: [.termination])
  private static let _negative_jp_niigata_agano: PublicSuffix.Node = .label("agano", next: [.termination])
  private static let _negative_jp_niigata_gosen: PublicSuffix.Node = .label("gosen", next: [.termination])
  private static let _negative_jp_niigata_itoigawa: PublicSuffix.Node = .label("itoigawa", next: [.termination])
  private static let _negative_jp_niigata_izumozaki: PublicSuffix.Node = .label("izumozaki", next: [.termination])
  private static let _negative_jp_niigata_joetsu: PublicSuffix.Node = .label("joetsu", next: [.termination])
  private static let _negative_jp_niigata_kamo: PublicSuffix.Node = .label("kamo", next: [.termination])
  private static let _negative_jp_niigata_kariwa: PublicSuffix.Node = .label("kariwa", next: [.termination])
  private static let _negative_jp_niigata_kashiwazaki: PublicSuffix.Node = .label("kashiwazaki", next: [.termination])
  private static let _negative_jp_niigata_minamiuonuma: PublicSuffix.Node = .label("minamiuonuma", next: [.termination])
  private static let _negative_jp_niigata_mitsuke: PublicSuffix.Node = .label("mitsuke", next: [.termination])
  private static let _negative_jp_niigata_muika: PublicSuffix.Node = .label("muika", next: [.termination])
  private static let _negative_jp_niigata_murakami: PublicSuffix.Node = .label("murakami", next: [.termination])
  private static let _negative_jp_niigata_myoko: PublicSuffix.Node = .label("myoko", next: [.termination])
  private static let _negative_jp_niigata_nagaoka: PublicSuffix.Node = .label("nagaoka", next: [.termination])
  private static let _negative_jp_niigata_niigata: PublicSuffix.Node = .label("niigata", next: [.termination])
  private static let _negative_jp_niigata_ojiya: PublicSuffix.Node = .label("ojiya", next: [.termination])
  private static let _negative_jp_niigata_omi: PublicSuffix.Node = .label("omi", next: [.termination])
  private static let _negative_jp_niigata_sado: PublicSuffix.Node = .label("sado", next: [.termination])
  private static let _negative_jp_niigata_sanjo: PublicSuffix.Node = .label("sanjo", next: [.termination])
  private static let _negative_jp_niigata_seiro: PublicSuffix.Node = .label("seiro", next: [.termination])
  private static let _negative_jp_niigata_seirou: PublicSuffix.Node = .label("seirou", next: [.termination])
  private static let _negative_jp_niigata_sekikawa: PublicSuffix.Node = .label("sekikawa", next: [.termination])
  private static let _negative_jp_niigata_shibata: PublicSuffix.Node = .label("shibata", next: [.termination])
  private static let _negative_jp_niigata_tagami: PublicSuffix.Node = .label("tagami", next: [.termination])
  private static let _negative_jp_niigata_tainai: PublicSuffix.Node = .label("tainai", next: [.termination])
  private static let _negative_jp_niigata_tochio: PublicSuffix.Node = .label("tochio", next: [.termination])
  private static let _negative_jp_niigata_tokamachi: PublicSuffix.Node = .label("tokamachi", next: [.termination])
  private static let _negative_jp_niigata_tsubame: PublicSuffix.Node = .label("tsubame", next: [.termination])
  private static let _negative_jp_niigata_tsunan: PublicSuffix.Node = .label("tsunan", next: [.termination])
  private static let _negative_jp_niigata_uonuma: PublicSuffix.Node = .label("uonuma", next: [.termination])
  private static let _negative_jp_niigata_yahiko: PublicSuffix.Node = .label("yahiko", next: [.termination])
  private static let _negative_jp_niigata_yoita: PublicSuffix.Node = .label("yoita", next: [.termination])
  private static let _negative_jp_niigata_yuzawa: PublicSuffix.Node = .label("yuzawa", next: [.termination])
  private static let _negative_jp_niigata: PublicSuffix.Node = .label("niigata", next: [.termination, _negative_jp_niigata_aga, _negative_jp_niigata_agano, _negative_jp_niigata_gosen, _negative_jp_niigata_itoigawa, _negative_jp_niigata_izumozaki, _negative_jp_niigata_joetsu, _negative_jp_niigata_kamo, _negative_jp_niigata_kariwa, _negative_jp_niigata_kashiwazaki, _negative_jp_niigata_minamiuonuma, _negative_jp_niigata_mitsuke, _negative_jp_niigata_muika, _negative_jp_niigata_murakami, _negative_jp_niigata_myoko, _negative_jp_niigata_nagaoka, _negative_jp_niigata_niigata, _negative_jp_niigata_ojiya, _negative_jp_niigata_omi, _negative_jp_niigata_sado, _negative_jp_niigata_sanjo, _negative_jp_niigata_seiro, _negative_jp_niigata_seirou, _negative_jp_niigata_sekikawa, _negative_jp_niigata_shibata, _negative_jp_niigata_tagami, _negative_jp_niigata_tainai, _negative_jp_niigata_tochio, _negative_jp_niigata_tokamachi, _negative_jp_niigata_tsubame, _negative_jp_niigata_tsunan, _negative_jp_niigata_uonuma, _negative_jp_niigata_yahiko, _negative_jp_niigata_yoita, _negative_jp_niigata_yuzawa])
  private static let _negative_jp_nikita: PublicSuffix.Node = .label("nikita", next: [.termination])
  private static let _negative_jp_nobushi: PublicSuffix.Node = .label("nobushi", next: [.termination])
  private static let _negative_jp_noor: PublicSuffix.Node = .label("noor", next: [.termination])
  private static let _negative_jp_oita_beppu: PublicSuffix.Node = .label("beppu", next: [.termination])
  private static let _negative_jp_oita_bungoono: PublicSuffix.Node = .label("bungoono", next: [.termination])
  private static let _negative_jp_oita_bungotakada: PublicSuffix.Node = .label("bungotakada", next: [.termination])
  private static let _negative_jp_oita_hasama: PublicSuffix.Node = .label("hasama", next: [.termination])
  private static let _negative_jp_oita_hiji: PublicSuffix.Node = .label("hiji", next: [.termination])
  private static let _negative_jp_oita_himeshima: PublicSuffix.Node = .label("himeshima", next: [.termination])
  private static let _negative_jp_oita_hita: PublicSuffix.Node = .label("hita", next: [.termination])
  private static let _negative_jp_oita_kamitsue: PublicSuffix.Node = .label("kamitsue", next: [.termination])
  private static let _negative_jp_oita_kokonoe: PublicSuffix.Node = .label("kokonoe", next: [.termination])
  private static let _negative_jp_oita_kuju: PublicSuffix.Node = .label("kuju", next: [.termination])
  private static let _negative_jp_oita_kunisaki: PublicSuffix.Node = .label("kunisaki", next: [.termination])
  private static let _negative_jp_oita_kusu: PublicSuffix.Node = .label("kusu", next: [.termination])
  private static let _negative_jp_oita_oita: PublicSuffix.Node = .label("oita", next: [.termination])
  private static let _negative_jp_oita_saiki: PublicSuffix.Node = .label("saiki", next: [.termination])
  private static let _negative_jp_oita_taketa: PublicSuffix.Node = .label("taketa", next: [.termination])
  private static let _negative_jp_oita_tsukumi: PublicSuffix.Node = .label("tsukumi", next: [.termination])
  private static let _negative_jp_oita_usa: PublicSuffix.Node = .label("usa", next: [.termination])
  private static let _negative_jp_oita_usuki: PublicSuffix.Node = .label("usuki", next: [.termination])
  private static let _negative_jp_oita_yufu: PublicSuffix.Node = .label("yufu", next: [.termination])
  private static let _negative_jp_oita: PublicSuffix.Node = .label("oita", next: [.termination, _negative_jp_oita_beppu, _negative_jp_oita_bungoono, _negative_jp_oita_bungotakada, _negative_jp_oita_hasama, _negative_jp_oita_hiji, _negative_jp_oita_himeshima, _negative_jp_oita_hita, _negative_jp_oita_kamitsue, _negative_jp_oita_kokonoe, _negative_jp_oita_kuju, _negative_jp_oita_kunisaki, _negative_jp_oita_kusu, _negative_jp_oita_oita, _negative_jp_oita_saiki, _negative_jp_oita_taketa, _negative_jp_oita_tsukumi, _negative_jp_oita_usa, _negative_jp_oita_usuki, _negative_jp_oita_yufu])
  private static let _negative_jp_okayama_akaiwa: PublicSuffix.Node = .label("akaiwa", next: [.termination])
  private static let _negative_jp_okayama_asakuchi: PublicSuffix.Node = .label("asakuchi", next: [.termination])
  private static let _negative_jp_okayama_bizen: PublicSuffix.Node = .label("bizen", next: [.termination])
  private static let _negative_jp_okayama_hayashima: PublicSuffix.Node = .label("hayashima", next: [.termination])
  private static let _negative_jp_okayama_ibara: PublicSuffix.Node = .label("ibara", next: [.termination])
  private static let _negative_jp_okayama_kagamino: PublicSuffix.Node = .label("kagamino", next: [.termination])
  private static let _negative_jp_okayama_kasaoka: PublicSuffix.Node = .label("kasaoka", next: [.termination])
  private static let _negative_jp_okayama_kibichuo: PublicSuffix.Node = .label("kibichuo", next: [.termination])
  private static let _negative_jp_okayama_kumenan: PublicSuffix.Node = .label("kumenan", next: [.termination])
  private static let _negative_jp_okayama_kurashiki: PublicSuffix.Node = .label("kurashiki", next: [.termination])
  private static let _negative_jp_okayama_maniwa: PublicSuffix.Node = .label("maniwa", next: [.termination])
  private static let _negative_jp_okayama_misaki: PublicSuffix.Node = .label("misaki", next: [.termination])
  private static let _negative_jp_okayama_nagi: PublicSuffix.Node = .label("nagi", next: [.termination])
  private static let _negative_jp_okayama_niimi: PublicSuffix.Node = .label("niimi", next: [.termination])
  private static let _negative_jp_okayama_nishiawakura: PublicSuffix.Node = .label("nishiawakura", next: [.termination])
  private static let _negative_jp_okayama_okayama: PublicSuffix.Node = .label("okayama", next: [.termination])
  private static let _negative_jp_okayama_satosho: PublicSuffix.Node = .label("satosho", next: [.termination])
  private static let _negative_jp_okayama_setouchi: PublicSuffix.Node = .label("setouchi", next: [.termination])
  private static let _negative_jp_okayama_shinjo: PublicSuffix.Node = .label("shinjo", next: [.termination])
  private static let _negative_jp_okayama_shoo: PublicSuffix.Node = .label("shoo", next: [.termination])
  private static let _negative_jp_okayama_soja: PublicSuffix.Node = .label("soja", next: [.termination])
  private static let _negative_jp_okayama_takahashi: PublicSuffix.Node = .label("takahashi", next: [.termination])
  private static let _negative_jp_okayama_tamano: PublicSuffix.Node = .label("tamano", next: [.termination])
  private static let _negative_jp_okayama_tsuyama: PublicSuffix.Node = .label("tsuyama", next: [.termination])
  private static let _negative_jp_okayama_wake: PublicSuffix.Node = .label("wake", next: [.termination])
  private static let _negative_jp_okayama_yakage: PublicSuffix.Node = .label("yakage", next: [.termination])
  private static let _negative_jp_okayama: PublicSuffix.Node = .label("okayama", next: [.termination, _negative_jp_okayama_akaiwa, _negative_jp_okayama_asakuchi, _negative_jp_okayama_bizen, _negative_jp_okayama_hayashima, _negative_jp_okayama_ibara, _negative_jp_okayama_kagamino, _negative_jp_okayama_kasaoka, _negative_jp_okayama_kibichuo, _negative_jp_okayama_kumenan, _negative_jp_okayama_kurashiki, _negative_jp_okayama_maniwa, _negative_jp_okayama_misaki, _negative_jp_okayama_nagi, _negative_jp_okayama_niimi, _negative_jp_okayama_nishiawakura, _negative_jp_okayama_okayama, _negative_jp_okayama_satosho, _negative_jp_okayama_setouchi, _negative_jp_okayama_shinjo, _negative_jp_okayama_shoo, _negative_jp_okayama_soja, _negative_jp_okayama_takahashi, _negative_jp_okayama_tamano, _negative_jp_okayama_tsuyama, _negative_jp_okayama_wake, _negative_jp_okayama_yakage])
  private static let _negative_jp_okinawa_aguni: PublicSuffix.Node = .label("aguni", next: [.termination])
  private static let _negative_jp_okinawa_ginowan: PublicSuffix.Node = .label("ginowan", next: [.termination])
  private static let _negative_jp_okinawa_ginoza: PublicSuffix.Node = .label("ginoza", next: [.termination])
  private static let _negative_jp_okinawa_gushikami: PublicSuffix.Node = .label("gushikami", next: [.termination])
  private static let _negative_jp_okinawa_haebaru: PublicSuffix.Node = .label("haebaru", next: [.termination])
  private static let _negative_jp_okinawa_higashi: PublicSuffix.Node = .label("higashi", next: [.termination])
  private static let _negative_jp_okinawa_hirara: PublicSuffix.Node = .label("hirara", next: [.termination])
  private static let _negative_jp_okinawa_iheya: PublicSuffix.Node = .label("iheya", next: [.termination])
  private static let _negative_jp_okinawa_ishigaki: PublicSuffix.Node = .label("ishigaki", next: [.termination])
  private static let _negative_jp_okinawa_ishikawa: PublicSuffix.Node = .label("ishikawa", next: [.termination])
  private static let _negative_jp_okinawa_itoman: PublicSuffix.Node = .label("itoman", next: [.termination])
  private static let _negative_jp_okinawa_izena: PublicSuffix.Node = .label("izena", next: [.termination])
  private static let _negative_jp_okinawa_kadena: PublicSuffix.Node = .label("kadena", next: [.termination])
  private static let _negative_jp_okinawa_kin: PublicSuffix.Node = .label("kin", next: [.termination])
  private static let _negative_jp_okinawa_kitadaito: PublicSuffix.Node = .label("kitadaito", next: [.termination])
  private static let _negative_jp_okinawa_kitanakagusuku: PublicSuffix.Node = .label("kitanakagusuku", next: [.termination])
  private static let _negative_jp_okinawa_kumejima: PublicSuffix.Node = .label("kumejima", next: [.termination])
  private static let _negative_jp_okinawa_kunigami: PublicSuffix.Node = .label("kunigami", next: [.termination])
  private static let _negative_jp_okinawa_minamidaito: PublicSuffix.Node = .label("minamidaito", next: [.termination])
  private static let _negative_jp_okinawa_motobu: PublicSuffix.Node = .label("motobu", next: [.termination])
  private static let _negative_jp_okinawa_nago: PublicSuffix.Node = .label("nago", next: [.termination])
  private static let _negative_jp_okinawa_naha: PublicSuffix.Node = .label("naha", next: [.termination])
  private static let _negative_jp_okinawa_nakagusuku: PublicSuffix.Node = .label("nakagusuku", next: [.termination])
  private static let _negative_jp_okinawa_nakijin: PublicSuffix.Node = .label("nakijin", next: [.termination])
  private static let _negative_jp_okinawa_nanjo: PublicSuffix.Node = .label("nanjo", next: [.termination])
  private static let _negative_jp_okinawa_nishihara: PublicSuffix.Node = .label("nishihara", next: [.termination])
  private static let _negative_jp_okinawa_ogimi: PublicSuffix.Node = .label("ogimi", next: [.termination])
  private static let _negative_jp_okinawa_okinawa: PublicSuffix.Node = .label("okinawa", next: [.termination])
  private static let _negative_jp_okinawa_onna: PublicSuffix.Node = .label("onna", next: [.termination])
  private static let _negative_jp_okinawa_shimoji: PublicSuffix.Node = .label("shimoji", next: [.termination])
  private static let _negative_jp_okinawa_taketomi: PublicSuffix.Node = .label("taketomi", next: [.termination])
  private static let _negative_jp_okinawa_tarama: PublicSuffix.Node = .label("tarama", next: [.termination])
  private static let _negative_jp_okinawa_tokashiki: PublicSuffix.Node = .label("tokashiki", next: [.termination])
  private static let _negative_jp_okinawa_tomigusuku: PublicSuffix.Node = .label("tomigusuku", next: [.termination])
  private static let _negative_jp_okinawa_tonaki: PublicSuffix.Node = .label("tonaki", next: [.termination])
  private static let _negative_jp_okinawa_urasoe: PublicSuffix.Node = .label("urasoe", next: [.termination])
  private static let _negative_jp_okinawa_uruma: PublicSuffix.Node = .label("uruma", next: [.termination])
  private static let _negative_jp_okinawa_yaese: PublicSuffix.Node = .label("yaese", next: [.termination])
  private static let _negative_jp_okinawa_yomitan: PublicSuffix.Node = .label("yomitan", next: [.termination])
  private static let _negative_jp_okinawa_yonabaru: PublicSuffix.Node = .label("yonabaru", next: [.termination])
  private static let _negative_jp_okinawa_yonaguni: PublicSuffix.Node = .label("yonaguni", next: [.termination])
  private static let _negative_jp_okinawa_zamami: PublicSuffix.Node = .label("zamami", next: [.termination])
  private static let _negative_jp_okinawa: PublicSuffix.Node = .label("okinawa", next: [.termination, _negative_jp_okinawa_aguni, _negative_jp_okinawa_ginowan, _negative_jp_okinawa_ginoza, _negative_jp_okinawa_gushikami, _negative_jp_okinawa_haebaru, _negative_jp_okinawa_higashi, _negative_jp_okinawa_hirara, _negative_jp_okinawa_iheya, _negative_jp_okinawa_ishigaki, _negative_jp_okinawa_ishikawa, _negative_jp_okinawa_itoman, _negative_jp_okinawa_izena, _negative_jp_okinawa_kadena, _negative_jp_okinawa_kin, _negative_jp_okinawa_kitadaito, _negative_jp_okinawa_kitanakagusuku, _negative_jp_okinawa_kumejima, _negative_jp_okinawa_kunigami, _negative_jp_okinawa_minamidaito, _negative_jp_okinawa_motobu, _negative_jp_okinawa_nago, _negative_jp_okinawa_naha, _negative_jp_okinawa_nakagusuku, _negative_jp_okinawa_nakijin, _negative_jp_okinawa_nanjo, _negative_jp_okinawa_nishihara, _negative_jp_okinawa_ogimi, _negative_jp_okinawa_okinawa, _negative_jp_okinawa_onna, _negative_jp_okinawa_shimoji, _negative_jp_okinawa_taketomi, _negative_jp_okinawa_tarama, _negative_jp_okinawa_tokashiki, _negative_jp_okinawa_tomigusuku, _negative_jp_okinawa_tonaki, _negative_jp_okinawa_urasoe, _negative_jp_okinawa_uruma, _negative_jp_okinawa_yaese, _negative_jp_okinawa_yomitan, _negative_jp_okinawa_yonabaru, _negative_jp_okinawa_yonaguni, _negative_jp_okinawa_zamami])
  private static let _negative_jp_oops: PublicSuffix.Node = .label("oops", next: [.termination])
  private static let _negative_jp_or: PublicSuffix.Node = .label("or", next: [.termination])
  private static let _negative_jp_osaka_abeno: PublicSuffix.Node = .label("abeno", next: [.termination])
  private static let _negative_jp_osaka_chihayaakasaka: PublicSuffix.Node = .label("chihayaakasaka", next: [.termination])
  private static let _negative_jp_osaka_chuo: PublicSuffix.Node = .label("chuo", next: [.termination])
  private static let _negative_jp_osaka_daito: PublicSuffix.Node = .label("daito", next: [.termination])
  private static let _negative_jp_osaka_fujiidera: PublicSuffix.Node = .label("fujiidera", next: [.termination])
  private static let _negative_jp_osaka_habikino: PublicSuffix.Node = .label("habikino", next: [.termination])
  private static let _negative_jp_osaka_hannan: PublicSuffix.Node = .label("hannan", next: [.termination])
  private static let _negative_jp_osaka_higashiosaka: PublicSuffix.Node = .label("higashiosaka", next: [.termination])
  private static let _negative_jp_osaka_higashisumiyoshi: PublicSuffix.Node = .label("higashisumiyoshi", next: [.termination])
  private static let _negative_jp_osaka_higashiyodogawa: PublicSuffix.Node = .label("higashiyodogawa", next: [.termination])
  private static let _negative_jp_osaka_hirakata: PublicSuffix.Node = .label("hirakata", next: [.termination])
  private static let _negative_jp_osaka_ibaraki: PublicSuffix.Node = .label("ibaraki", next: [.termination])
  private static let _negative_jp_osaka_ikeda: PublicSuffix.Node = .label("ikeda", next: [.termination])
  private static let _negative_jp_osaka_izumi: PublicSuffix.Node = .label("izumi", next: [.termination])
  private static let _negative_jp_osaka_izumiotsu: PublicSuffix.Node = .label("izumiotsu", next: [.termination])
  private static let _negative_jp_osaka_izumisano: PublicSuffix.Node = .label("izumisano", next: [.termination])
  private static let _negative_jp_osaka_kadoma: PublicSuffix.Node = .label("kadoma", next: [.termination])
  private static let _negative_jp_osaka_kaizuka: PublicSuffix.Node = .label("kaizuka", next: [.termination])
  private static let _negative_jp_osaka_kanan: PublicSuffix.Node = .label("kanan", next: [.termination])
  private static let _negative_jp_osaka_kashiwara: PublicSuffix.Node = .label("kashiwara", next: [.termination])
  private static let _negative_jp_osaka_katano: PublicSuffix.Node = .label("katano", next: [.termination])
  private static let _negative_jp_osaka_kawachinagano: PublicSuffix.Node = .label("kawachinagano", next: [.termination])
  private static let _negative_jp_osaka_kishiwada: PublicSuffix.Node = .label("kishiwada", next: [.termination])
  private static let _negative_jp_osaka_kita: PublicSuffix.Node = .label("kita", next: [.termination])
  private static let _negative_jp_osaka_kumatori: PublicSuffix.Node = .label("kumatori", next: [.termination])
  private static let _negative_jp_osaka_matsubara: PublicSuffix.Node = .label("matsubara", next: [.termination])
  private static let _negative_jp_osaka_minato: PublicSuffix.Node = .label("minato", next: [.termination])
  private static let _negative_jp_osaka_minoh: PublicSuffix.Node = .label("minoh", next: [.termination])
  private static let _negative_jp_osaka_misaki: PublicSuffix.Node = .label("misaki", next: [.termination])
  private static let _negative_jp_osaka_moriguchi: PublicSuffix.Node = .label("moriguchi", next: [.termination])
  private static let _negative_jp_osaka_neyagawa: PublicSuffix.Node = .label("neyagawa", next: [.termination])
  private static let _negative_jp_osaka_nishi: PublicSuffix.Node = .label("nishi", next: [.termination])
  private static let _negative_jp_osaka_nose: PublicSuffix.Node = .label("nose", next: [.termination])
  private static let _negative_jp_osaka_osakasayama: PublicSuffix.Node = .label("osakasayama", next: [.termination])
  private static let _negative_jp_osaka_sakai: PublicSuffix.Node = .label("sakai", next: [.termination])
  private static let _negative_jp_osaka_sayama: PublicSuffix.Node = .label("sayama", next: [.termination])
  private static let _negative_jp_osaka_sennan: PublicSuffix.Node = .label("sennan", next: [.termination])
  private static let _negative_jp_osaka_settsu: PublicSuffix.Node = .label("settsu", next: [.termination])
  private static let _negative_jp_osaka_shijonawate: PublicSuffix.Node = .label("shijonawate", next: [.termination])
  private static let _negative_jp_osaka_shimamoto: PublicSuffix.Node = .label("shimamoto", next: [.termination])
  private static let _negative_jp_osaka_suita: PublicSuffix.Node = .label("suita", next: [.termination])
  private static let _negative_jp_osaka_tadaoka: PublicSuffix.Node = .label("tadaoka", next: [.termination])
  private static let _negative_jp_osaka_taishi: PublicSuffix.Node = .label("taishi", next: [.termination])
  private static let _negative_jp_osaka_tajiri: PublicSuffix.Node = .label("tajiri", next: [.termination])
  private static let _negative_jp_osaka_takaishi: PublicSuffix.Node = .label("takaishi", next: [.termination])
  private static let _negative_jp_osaka_takatsuki: PublicSuffix.Node = .label("takatsuki", next: [.termination])
  private static let _negative_jp_osaka_tondabayashi: PublicSuffix.Node = .label("tondabayashi", next: [.termination])
  private static let _negative_jp_osaka_toyonaka: PublicSuffix.Node = .label("toyonaka", next: [.termination])
  private static let _negative_jp_osaka_toyono: PublicSuffix.Node = .label("toyono", next: [.termination])
  private static let _negative_jp_osaka_yao: PublicSuffix.Node = .label("yao", next: [.termination])
  private static let _negative_jp_osaka: PublicSuffix.Node = .label("osaka", next: [.termination, _negative_jp_osaka_abeno, _negative_jp_osaka_chihayaakasaka, _negative_jp_osaka_chuo, _negative_jp_osaka_daito, _negative_jp_osaka_fujiidera, _negative_jp_osaka_habikino, _negative_jp_osaka_hannan, _negative_jp_osaka_higashiosaka, _negative_jp_osaka_higashisumiyoshi, _negative_jp_osaka_higashiyodogawa, _negative_jp_osaka_hirakata, _negative_jp_osaka_ibaraki, _negative_jp_osaka_ikeda, _negative_jp_osaka_izumi, _negative_jp_osaka_izumiotsu, _negative_jp_osaka_izumisano, _negative_jp_osaka_kadoma, _negative_jp_osaka_kaizuka, _negative_jp_osaka_kanan, _negative_jp_osaka_kashiwara, _negative_jp_osaka_katano, _negative_jp_osaka_kawachinagano, _negative_jp_osaka_kishiwada, _negative_jp_osaka_kita, _negative_jp_osaka_kumatori, _negative_jp_osaka_matsubara, _negative_jp_osaka_minato, _negative_jp_osaka_minoh, _negative_jp_osaka_misaki, _negative_jp_osaka_moriguchi, _negative_jp_osaka_neyagawa, _negative_jp_osaka_nishi, _negative_jp_osaka_nose, _negative_jp_osaka_osakasayama, _negative_jp_osaka_sakai, _negative_jp_osaka_sayama, _negative_jp_osaka_sennan, _negative_jp_osaka_settsu, _negative_jp_osaka_shijonawate, _negative_jp_osaka_shimamoto, _negative_jp_osaka_suita, _negative_jp_osaka_tadaoka, _negative_jp_osaka_taishi, _negative_jp_osaka_tajiri, _negative_jp_osaka_takaishi, _negative_jp_osaka_takatsuki, _negative_jp_osaka_tondabayashi, _negative_jp_osaka_toyonaka, _negative_jp_osaka_toyono, _negative_jp_osaka_yao])
  private static let _negative_jp_parallel: PublicSuffix.Node = .label("parallel", next: [.termination])
  private static let _negative_jp_parasite: PublicSuffix.Node = .label("parasite", next: [.termination])
  private static let _negative_jp_pecori: PublicSuffix.Node = .label("pecori", next: [.termination])
  private static let _negative_jp_peewee: PublicSuffix.Node = .label("peewee", next: [.termination])
  private static let _negative_jp_penne: PublicSuffix.Node = .label("penne", next: [.termination])
  private static let _negative_jp_pepper: PublicSuffix.Node = .label("pepper", next: [.termination])
  private static let _negative_jp_perma: PublicSuffix.Node = .label("perma", next: [.termination])
  private static let _negative_jp_pigboat: PublicSuffix.Node = .label("pigboat", next: [.termination])
  private static let _negative_jp_pinoko: PublicSuffix.Node = .label("pinoko", next: [.termination])
  private static let _negative_jp_punyu: PublicSuffix.Node = .label("punyu", next: [.termination])
  private static let _negative_jp_pupu: PublicSuffix.Node = .label("pupu", next: [.termination])
  private static let _negative_jp_pussycat: PublicSuffix.Node = .label("pussycat", next: [.termination])
  private static let _negative_jp_pya: PublicSuffix.Node = .label("pya", next: [.termination])
  private static let _negative_jp_raindrop: PublicSuffix.Node = .label("raindrop", next: [.termination])
  private static let _negative_jp_readymade: PublicSuffix.Node = .label("readymade", next: [.termination])
  private static let _negative_jp_sadist: PublicSuffix.Node = .label("sadist", next: [.termination])
  private static let _negative_jp_saga_ariake: PublicSuffix.Node = .label("ariake", next: [.termination])
  private static let _negative_jp_saga_arita: PublicSuffix.Node = .label("arita", next: [.termination])
  private static let _negative_jp_saga_fukudomi: PublicSuffix.Node = .label("fukudomi", next: [.termination])
  private static let _negative_jp_saga_genkai: PublicSuffix.Node = .label("genkai", next: [.termination])
  private static let _negative_jp_saga_hamatama: PublicSuffix.Node = .label("hamatama", next: [.termination])
  private static let _negative_jp_saga_hizen: PublicSuffix.Node = .label("hizen", next: [.termination])
  private static let _negative_jp_saga_imari: PublicSuffix.Node = .label("imari", next: [.termination])
  private static let _negative_jp_saga_kamimine: PublicSuffix.Node = .label("kamimine", next: [.termination])
  private static let _negative_jp_saga_kanzaki: PublicSuffix.Node = .label("kanzaki", next: [.termination])
  private static let _negative_jp_saga_karatsu: PublicSuffix.Node = .label("karatsu", next: [.termination])
  private static let _negative_jp_saga_kashima: PublicSuffix.Node = .label("kashima", next: [.termination])
  private static let _negative_jp_saga_kitagata: PublicSuffix.Node = .label("kitagata", next: [.termination])
  private static let _negative_jp_saga_kitahata: PublicSuffix.Node = .label("kitahata", next: [.termination])
  private static let _negative_jp_saga_kiyama: PublicSuffix.Node = .label("kiyama", next: [.termination])
  private static let _negative_jp_saga_kouhoku: PublicSuffix.Node = .label("kouhoku", next: [.termination])
  private static let _negative_jp_saga_kyuragi: PublicSuffix.Node = .label("kyuragi", next: [.termination])
  private static let _negative_jp_saga_nishiarita: PublicSuffix.Node = .label("nishiarita", next: [.termination])
  private static let _negative_jp_saga_ogi: PublicSuffix.Node = .label("ogi", next: [.termination])
  private static let _negative_jp_saga_omachi: PublicSuffix.Node = .label("omachi", next: [.termination])
  private static let _negative_jp_saga_ouchi: PublicSuffix.Node = .label("ouchi", next: [.termination])
  private static let _negative_jp_saga_saga: PublicSuffix.Node = .label("saga", next: [.termination])
  private static let _negative_jp_saga_shiroishi: PublicSuffix.Node = .label("shiroishi", next: [.termination])
  private static let _negative_jp_saga_taku: PublicSuffix.Node = .label("taku", next: [.termination])
  private static let _negative_jp_saga_tara: PublicSuffix.Node = .label("tara", next: [.termination])
  private static let _negative_jp_saga_tosu: PublicSuffix.Node = .label("tosu", next: [.termination])
  private static let _negative_jp_saga_yoshinogari: PublicSuffix.Node = .label("yoshinogari", next: [.termination])
  private static let _negative_jp_saga: PublicSuffix.Node = .label("saga", next: [.termination, _negative_jp_saga_ariake, _negative_jp_saga_arita, _negative_jp_saga_fukudomi, _negative_jp_saga_genkai, _negative_jp_saga_hamatama, _negative_jp_saga_hizen, _negative_jp_saga_imari, _negative_jp_saga_kamimine, _negative_jp_saga_kanzaki, _negative_jp_saga_karatsu, _negative_jp_saga_kashima, _negative_jp_saga_kitagata, _negative_jp_saga_kitahata, _negative_jp_saga_kiyama, _negative_jp_saga_kouhoku, _negative_jp_saga_kyuragi, _negative_jp_saga_nishiarita, _negative_jp_saga_ogi, _negative_jp_saga_omachi, _negative_jp_saga_ouchi, _negative_jp_saga_saga, _negative_jp_saga_shiroishi, _negative_jp_saga_taku, _negative_jp_saga_tara, _negative_jp_saga_tosu, _negative_jp_saga_yoshinogari])
  private static let _negative_jp_saitama_arakawa: PublicSuffix.Node = .label("arakawa", next: [.termination])
  private static let _negative_jp_saitama_asaka: PublicSuffix.Node = .label("asaka", next: [.termination])
  private static let _negative_jp_saitama_chichibu: PublicSuffix.Node = .label("chichibu", next: [.termination])
  private static let _negative_jp_saitama_fujimi: PublicSuffix.Node = .label("fujimi", next: [.termination])
  private static let _negative_jp_saitama_fujimino: PublicSuffix.Node = .label("fujimino", next: [.termination])
  private static let _negative_jp_saitama_fukaya: PublicSuffix.Node = .label("fukaya", next: [.termination])
  private static let _negative_jp_saitama_hanno: PublicSuffix.Node = .label("hanno", next: [.termination])
  private static let _negative_jp_saitama_hanyu: PublicSuffix.Node = .label("hanyu", next: [.termination])
  private static let _negative_jp_saitama_hasuda: PublicSuffix.Node = .label("hasuda", next: [.termination])
  private static let _negative_jp_saitama_hatogaya: PublicSuffix.Node = .label("hatogaya", next: [.termination])
  private static let _negative_jp_saitama_hatoyama: PublicSuffix.Node = .label("hatoyama", next: [.termination])
  private static let _negative_jp_saitama_hidaka: PublicSuffix.Node = .label("hidaka", next: [.termination])
  private static let _negative_jp_saitama_higashichichibu: PublicSuffix.Node = .label("higashichichibu", next: [.termination])
  private static let _negative_jp_saitama_higashimatsuyama: PublicSuffix.Node = .label("higashimatsuyama", next: [.termination])
  private static let _negative_jp_saitama_honjo: PublicSuffix.Node = .label("honjo", next: [.termination])
  private static let _negative_jp_saitama_ina: PublicSuffix.Node = .label("ina", next: [.termination])
  private static let _negative_jp_saitama_iruma: PublicSuffix.Node = .label("iruma", next: [.termination])
  private static let _negative_jp_saitama_iwatsuki: PublicSuffix.Node = .label("iwatsuki", next: [.termination])
  private static let _negative_jp_saitama_kamiizumi: PublicSuffix.Node = .label("kamiizumi", next: [.termination])
  private static let _negative_jp_saitama_kamikawa: PublicSuffix.Node = .label("kamikawa", next: [.termination])
  private static let _negative_jp_saitama_kamisato: PublicSuffix.Node = .label("kamisato", next: [.termination])
  private static let _negative_jp_saitama_kasukabe: PublicSuffix.Node = .label("kasukabe", next: [.termination])
  private static let _negative_jp_saitama_kawagoe: PublicSuffix.Node = .label("kawagoe", next: [.termination])
  private static let _negative_jp_saitama_kawaguchi: PublicSuffix.Node = .label("kawaguchi", next: [.termination])
  private static let _negative_jp_saitama_kawajima: PublicSuffix.Node = .label("kawajima", next: [.termination])
  private static let _negative_jp_saitama_kazo: PublicSuffix.Node = .label("kazo", next: [.termination])
  private static let _negative_jp_saitama_kitamoto: PublicSuffix.Node = .label("kitamoto", next: [.termination])
  private static let _negative_jp_saitama_koshigaya: PublicSuffix.Node = .label("koshigaya", next: [.termination])
  private static let _negative_jp_saitama_kounosu: PublicSuffix.Node = .label("kounosu", next: [.termination])
  private static let _negative_jp_saitama_kuki: PublicSuffix.Node = .label("kuki", next: [.termination])
  private static let _negative_jp_saitama_kumagaya: PublicSuffix.Node = .label("kumagaya", next: [.termination])
  private static let _negative_jp_saitama_matsubushi: PublicSuffix.Node = .label("matsubushi", next: [.termination])
  private static let _negative_jp_saitama_minano: PublicSuffix.Node = .label("minano", next: [.termination])
  private static let _negative_jp_saitama_misato: PublicSuffix.Node = .label("misato", next: [.termination])
  private static let _negative_jp_saitama_miyashiro: PublicSuffix.Node = .label("miyashiro", next: [.termination])
  private static let _negative_jp_saitama_miyoshi: PublicSuffix.Node = .label("miyoshi", next: [.termination])
  private static let _negative_jp_saitama_moroyama: PublicSuffix.Node = .label("moroyama", next: [.termination])
  private static let _negative_jp_saitama_nagatoro: PublicSuffix.Node = .label("nagatoro", next: [.termination])
  private static let _negative_jp_saitama_namegawa: PublicSuffix.Node = .label("namegawa", next: [.termination])
  private static let _negative_jp_saitama_niiza: PublicSuffix.Node = .label("niiza", next: [.termination])
  private static let _negative_jp_saitama_ogano: PublicSuffix.Node = .label("ogano", next: [.termination])
  private static let _negative_jp_saitama_ogawa: PublicSuffix.Node = .label("ogawa", next: [.termination])
  private static let _negative_jp_saitama_ogose: PublicSuffix.Node = .label("ogose", next: [.termination])
  private static let _negative_jp_saitama_okegawa: PublicSuffix.Node = .label("okegawa", next: [.termination])
  private static let _negative_jp_saitama_omiya: PublicSuffix.Node = .label("omiya", next: [.termination])
  private static let _negative_jp_saitama_otaki: PublicSuffix.Node = .label("otaki", next: [.termination])
  private static let _negative_jp_saitama_ranzan: PublicSuffix.Node = .label("ranzan", next: [.termination])
  private static let _negative_jp_saitama_ryokami: PublicSuffix.Node = .label("ryokami", next: [.termination])
  private static let _negative_jp_saitama_saitama: PublicSuffix.Node = .label("saitama", next: [.termination])
  private static let _negative_jp_saitama_sakado: PublicSuffix.Node = .label("sakado", next: [.termination])
  private static let _negative_jp_saitama_satte: PublicSuffix.Node = .label("satte", next: [.termination])
  private static let _negative_jp_saitama_sayama: PublicSuffix.Node = .label("sayama", next: [.termination])
  private static let _negative_jp_saitama_shiki: PublicSuffix.Node = .label("shiki", next: [.termination])
  private static let _negative_jp_saitama_shiraoka: PublicSuffix.Node = .label("shiraoka", next: [.termination])
  private static let _negative_jp_saitama_soka: PublicSuffix.Node = .label("soka", next: [.termination])
  private static let _negative_jp_saitama_sugito: PublicSuffix.Node = .label("sugito", next: [.termination])
  private static let _negative_jp_saitama_toda: PublicSuffix.Node = .label("toda", next: [.termination])
  private static let _negative_jp_saitama_tokigawa: PublicSuffix.Node = .label("tokigawa", next: [.termination])
  private static let _negative_jp_saitama_tokorozawa: PublicSuffix.Node = .label("tokorozawa", next: [.termination])
  private static let _negative_jp_saitama_tsurugashima: PublicSuffix.Node = .label("tsurugashima", next: [.termination])
  private static let _negative_jp_saitama_urawa: PublicSuffix.Node = .label("urawa", next: [.termination])
  private static let _negative_jp_saitama_warabi: PublicSuffix.Node = .label("warabi", next: [.termination])
  private static let _negative_jp_saitama_yashio: PublicSuffix.Node = .label("yashio", next: [.termination])
  private static let _negative_jp_saitama_yokoze: PublicSuffix.Node = .label("yokoze", next: [.termination])
  private static let _negative_jp_saitama_yono: PublicSuffix.Node = .label("yono", next: [.termination])
  private static let _negative_jp_saitama_yorii: PublicSuffix.Node = .label("yorii", next: [.termination])
  private static let _negative_jp_saitama_yoshida: PublicSuffix.Node = .label("yoshida", next: [.termination])
  private static let _negative_jp_saitama_yoshikawa: PublicSuffix.Node = .label("yoshikawa", next: [.termination])
  private static let _negative_jp_saitama_yoshimi: PublicSuffix.Node = .label("yoshimi", next: [.termination])
  private static let _negative_jp_saitama: PublicSuffix.Node = .label("saitama", next: [.termination, _negative_jp_saitama_arakawa, _negative_jp_saitama_asaka, _negative_jp_saitama_chichibu, _negative_jp_saitama_fujimi, _negative_jp_saitama_fujimino, _negative_jp_saitama_fukaya, _negative_jp_saitama_hanno, _negative_jp_saitama_hanyu, _negative_jp_saitama_hasuda, _negative_jp_saitama_hatogaya, _negative_jp_saitama_hatoyama, _negative_jp_saitama_hidaka, _negative_jp_saitama_higashichichibu, _negative_jp_saitama_higashimatsuyama, _negative_jp_saitama_honjo, _negative_jp_saitama_ina, _negative_jp_saitama_iruma, _negative_jp_saitama_iwatsuki, _negative_jp_saitama_kamiizumi, _negative_jp_saitama_kamikawa, _negative_jp_saitama_kamisato, _negative_jp_saitama_kasukabe, _negative_jp_saitama_kawagoe, _negative_jp_saitama_kawaguchi, _negative_jp_saitama_kawajima, _negative_jp_saitama_kazo, _negative_jp_saitama_kitamoto, _negative_jp_saitama_koshigaya, _negative_jp_saitama_kounosu, _negative_jp_saitama_kuki, _negative_jp_saitama_kumagaya, _negative_jp_saitama_matsubushi, _negative_jp_saitama_minano, _negative_jp_saitama_misato, _negative_jp_saitama_miyashiro, _negative_jp_saitama_miyoshi, _negative_jp_saitama_moroyama, _negative_jp_saitama_nagatoro, _negative_jp_saitama_namegawa, _negative_jp_saitama_niiza, _negative_jp_saitama_ogano, _negative_jp_saitama_ogawa, _negative_jp_saitama_ogose, _negative_jp_saitama_okegawa, _negative_jp_saitama_omiya, _negative_jp_saitama_otaki, _negative_jp_saitama_ranzan, _negative_jp_saitama_ryokami, _negative_jp_saitama_saitama, _negative_jp_saitama_sakado, _negative_jp_saitama_satte, _negative_jp_saitama_sayama, _negative_jp_saitama_shiki, _negative_jp_saitama_shiraoka, _negative_jp_saitama_soka, _negative_jp_saitama_sugito, _negative_jp_saitama_toda, _negative_jp_saitama_tokigawa, _negative_jp_saitama_tokorozawa, _negative_jp_saitama_tsurugashima, _negative_jp_saitama_urawa, _negative_jp_saitama_warabi, _negative_jp_saitama_yashio, _negative_jp_saitama_yokoze, _negative_jp_saitama_yono, _negative_jp_saitama_yorii, _negative_jp_saitama_yoshida, _negative_jp_saitama_yoshikawa, _negative_jp_saitama_yoshimi])
  private static let _negative_jp_sapporo: PublicSuffix.Node = .label("sapporo", next: [.any])
  private static let _negative_jp_schoolbus: PublicSuffix.Node = .label("schoolbus", next: [.termination])
  private static let _negative_jp_secret: PublicSuffix.Node = .label("secret", next: [.termination])
  private static let _negative_jp_sendai: PublicSuffix.Node = .label("sendai", next: [.any])
  private static let _negative_jp_shiga_aisho: PublicSuffix.Node = .label("aisho", next: [.termination])
  private static let _negative_jp_shiga_gamo: PublicSuffix.Node = .label("gamo", next: [.termination])
  private static let _negative_jp_shiga_higashiomi: PublicSuffix.Node = .label("higashiomi", next: [.termination])
  private static let _negative_jp_shiga_hikone: PublicSuffix.Node = .label("hikone", next: [.termination])
  private static let _negative_jp_shiga_koka: PublicSuffix.Node = .label("koka", next: [.termination])
  private static let _negative_jp_shiga_konan: PublicSuffix.Node = .label("konan", next: [.termination])
  private static let _negative_jp_shiga_kosei: PublicSuffix.Node = .label("kosei", next: [.termination])
  private static let _negative_jp_shiga_koto: PublicSuffix.Node = .label("koto", next: [.termination])
  private static let _negative_jp_shiga_kusatsu: PublicSuffix.Node = .label("kusatsu", next: [.termination])
  private static let _negative_jp_shiga_maibara: PublicSuffix.Node = .label("maibara", next: [.termination])
  private static let _negative_jp_shiga_moriyama: PublicSuffix.Node = .label("moriyama", next: [.termination])
  private static let _negative_jp_shiga_nagahama: PublicSuffix.Node = .label("nagahama", next: [.termination])
  private static let _negative_jp_shiga_nishiazai: PublicSuffix.Node = .label("nishiazai", next: [.termination])
  private static let _negative_jp_shiga_notogawa: PublicSuffix.Node = .label("notogawa", next: [.termination])
  private static let _negative_jp_shiga_omihachiman: PublicSuffix.Node = .label("omihachiman", next: [.termination])
  private static let _negative_jp_shiga_otsu: PublicSuffix.Node = .label("otsu", next: [.termination])
  private static let _negative_jp_shiga_ritto: PublicSuffix.Node = .label("ritto", next: [.termination])
  private static let _negative_jp_shiga_ryuoh: PublicSuffix.Node = .label("ryuoh", next: [.termination])
  private static let _negative_jp_shiga_takashima: PublicSuffix.Node = .label("takashima", next: [.termination])
  private static let _negative_jp_shiga_takatsuki: PublicSuffix.Node = .label("takatsuki", next: [.termination])
  private static let _negative_jp_shiga_torahime: PublicSuffix.Node = .label("torahime", next: [.termination])
  private static let _negative_jp_shiga_toyosato: PublicSuffix.Node = .label("toyosato", next: [.termination])
  private static let _negative_jp_shiga_yasu: PublicSuffix.Node = .label("yasu", next: [.termination])
  private static let _negative_jp_shiga: PublicSuffix.Node = .label("shiga", next: [.termination, _negative_jp_shiga_aisho, _negative_jp_shiga_gamo, _negative_jp_shiga_higashiomi, _negative_jp_shiga_hikone, _negative_jp_shiga_koka, _negative_jp_shiga_konan, _negative_jp_shiga_kosei, _negative_jp_shiga_koto, _negative_jp_shiga_kusatsu, _negative_jp_shiga_maibara, _negative_jp_shiga_moriyama, _negative_jp_shiga_nagahama, _negative_jp_shiga_nishiazai, _negative_jp_shiga_notogawa, _negative_jp_shiga_omihachiman, _negative_jp_shiga_otsu, _negative_jp_shiga_ritto, _negative_jp_shiga_ryuoh, _negative_jp_shiga_takashima, _negative_jp_shiga_takatsuki, _negative_jp_shiga_torahime, _negative_jp_shiga_toyosato, _negative_jp_shiga_yasu])
  private static let _negative_jp_shimane_akagi: PublicSuffix.Node = .label("akagi", next: [.termination])
  private static let _negative_jp_shimane_ama: PublicSuffix.Node = .label("ama", next: [.termination])
  private static let _negative_jp_shimane_gotsu: PublicSuffix.Node = .label("gotsu", next: [.termination])
  private static let _negative_jp_shimane_hamada: PublicSuffix.Node = .label("hamada", next: [.termination])
  private static let _negative_jp_shimane_higashiizumo: PublicSuffix.Node = .label("higashiizumo", next: [.termination])
  private static let _negative_jp_shimane_hikawa: PublicSuffix.Node = .label("hikawa", next: [.termination])
  private static let _negative_jp_shimane_hikimi: PublicSuffix.Node = .label("hikimi", next: [.termination])
  private static let _negative_jp_shimane_izumo: PublicSuffix.Node = .label("izumo", next: [.termination])
  private static let _negative_jp_shimane_kakinoki: PublicSuffix.Node = .label("kakinoki", next: [.termination])
  private static let _negative_jp_shimane_masuda: PublicSuffix.Node = .label("masuda", next: [.termination])
  private static let _negative_jp_shimane_matsue: PublicSuffix.Node = .label("matsue", next: [.termination])
  private static let _negative_jp_shimane_misato: PublicSuffix.Node = .label("misato", next: [.termination])
  private static let _negative_jp_shimane_nishinoshima: PublicSuffix.Node = .label("nishinoshima", next: [.termination])
  private static let _negative_jp_shimane_ohda: PublicSuffix.Node = .label("ohda", next: [.termination])
  private static let _negative_jp_shimane_okinoshima: PublicSuffix.Node = .label("okinoshima", next: [.termination])
  private static let _negative_jp_shimane_okuizumo: PublicSuffix.Node = .label("okuizumo", next: [.termination])
  private static let _negative_jp_shimane_shimane: PublicSuffix.Node = .label("shimane", next: [.termination])
  private static let _negative_jp_shimane_tamayu: PublicSuffix.Node = .label("tamayu", next: [.termination])
  private static let _negative_jp_shimane_tsuwano: PublicSuffix.Node = .label("tsuwano", next: [.termination])
  private static let _negative_jp_shimane_unnan: PublicSuffix.Node = .label("unnan", next: [.termination])
  private static let _negative_jp_shimane_yakumo: PublicSuffix.Node = .label("yakumo", next: [.termination])
  private static let _negative_jp_shimane_yasugi: PublicSuffix.Node = .label("yasugi", next: [.termination])
  private static let _negative_jp_shimane_yatsuka: PublicSuffix.Node = .label("yatsuka", next: [.termination])
  private static let _negative_jp_shimane: PublicSuffix.Node = .label("shimane", next: [.termination, _negative_jp_shimane_akagi, _negative_jp_shimane_ama, _negative_jp_shimane_gotsu, _negative_jp_shimane_hamada, _negative_jp_shimane_higashiizumo, _negative_jp_shimane_hikawa, _negative_jp_shimane_hikimi, _negative_jp_shimane_izumo, _negative_jp_shimane_kakinoki, _negative_jp_shimane_masuda, _negative_jp_shimane_matsue, _negative_jp_shimane_misato, _negative_jp_shimane_nishinoshima, _negative_jp_shimane_ohda, _negative_jp_shimane_okinoshima, _negative_jp_shimane_okuizumo, _negative_jp_shimane_shimane, _negative_jp_shimane_tamayu, _negative_jp_shimane_tsuwano, _negative_jp_shimane_unnan, _negative_jp_shimane_yakumo, _negative_jp_shimane_yasugi, _negative_jp_shimane_yatsuka])
  private static let _negative_jp_shizuoka_arai: PublicSuffix.Node = .label("arai", next: [.termination])
  private static let _negative_jp_shizuoka_atami: PublicSuffix.Node = .label("atami", next: [.termination])
  private static let _negative_jp_shizuoka_fuji: PublicSuffix.Node = .label("fuji", next: [.termination])
  private static let _negative_jp_shizuoka_fujieda: PublicSuffix.Node = .label("fujieda", next: [.termination])
  private static let _negative_jp_shizuoka_fujikawa: PublicSuffix.Node = .label("fujikawa", next: [.termination])
  private static let _negative_jp_shizuoka_fujinomiya: PublicSuffix.Node = .label("fujinomiya", next: [.termination])
  private static let _negative_jp_shizuoka_fukuroi: PublicSuffix.Node = .label("fukuroi", next: [.termination])
  private static let _negative_jp_shizuoka_gotemba: PublicSuffix.Node = .label("gotemba", next: [.termination])
  private static let _negative_jp_shizuoka_haibara: PublicSuffix.Node = .label("haibara", next: [.termination])
  private static let _negative_jp_shizuoka_hamamatsu: PublicSuffix.Node = .label("hamamatsu", next: [.termination])
  private static let _negative_jp_shizuoka_higashiizu: PublicSuffix.Node = .label("higashiizu", next: [.termination])
  private static let _negative_jp_shizuoka_ito: PublicSuffix.Node = .label("ito", next: [.termination])
  private static let _negative_jp_shizuoka_iwata: PublicSuffix.Node = .label("iwata", next: [.termination])
  private static let _negative_jp_shizuoka_izu: PublicSuffix.Node = .label("izu", next: [.termination])
  private static let _negative_jp_shizuoka_izunokuni: PublicSuffix.Node = .label("izunokuni", next: [.termination])
  private static let _negative_jp_shizuoka_kakegawa: PublicSuffix.Node = .label("kakegawa", next: [.termination])
  private static let _negative_jp_shizuoka_kannami: PublicSuffix.Node = .label("kannami", next: [.termination])
  private static let _negative_jp_shizuoka_kawanehon: PublicSuffix.Node = .label("kawanehon", next: [.termination])
  private static let _negative_jp_shizuoka_kawazu: PublicSuffix.Node = .label("kawazu", next: [.termination])
  private static let _negative_jp_shizuoka_kikugawa: PublicSuffix.Node = .label("kikugawa", next: [.termination])
  private static let _negative_jp_shizuoka_kosai: PublicSuffix.Node = .label("kosai", next: [.termination])
  private static let _negative_jp_shizuoka_makinohara: PublicSuffix.Node = .label("makinohara", next: [.termination])
  private static let _negative_jp_shizuoka_matsuzaki: PublicSuffix.Node = .label("matsuzaki", next: [.termination])
  private static let _negative_jp_shizuoka_minamiizu: PublicSuffix.Node = .label("minamiizu", next: [.termination])
  private static let _negative_jp_shizuoka_mishima: PublicSuffix.Node = .label("mishima", next: [.termination])
  private static let _negative_jp_shizuoka_morimachi: PublicSuffix.Node = .label("morimachi", next: [.termination])
  private static let _negative_jp_shizuoka_nishiizu: PublicSuffix.Node = .label("nishiizu", next: [.termination])
  private static let _negative_jp_shizuoka_numazu: PublicSuffix.Node = .label("numazu", next: [.termination])
  private static let _negative_jp_shizuoka_omaezaki: PublicSuffix.Node = .label("omaezaki", next: [.termination])
  private static let _negative_jp_shizuoka_shimada: PublicSuffix.Node = .label("shimada", next: [.termination])
  private static let _negative_jp_shizuoka_shimizu: PublicSuffix.Node = .label("shimizu", next: [.termination])
  private static let _negative_jp_shizuoka_shimoda: PublicSuffix.Node = .label("shimoda", next: [.termination])
  private static let _negative_jp_shizuoka_shizuoka: PublicSuffix.Node = .label("shizuoka", next: [.termination])
  private static let _negative_jp_shizuoka_susono: PublicSuffix.Node = .label("susono", next: [.termination])
  private static let _negative_jp_shizuoka_yaizu: PublicSuffix.Node = .label("yaizu", next: [.termination])
  private static let _negative_jp_shizuoka_yoshida: PublicSuffix.Node = .label("yoshida", next: [.termination])
  private static let _negative_jp_shizuoka: PublicSuffix.Node = .label("shizuoka", next: [.termination, _negative_jp_shizuoka_arai, _negative_jp_shizuoka_atami, _negative_jp_shizuoka_fuji, _negative_jp_shizuoka_fujieda, _negative_jp_shizuoka_fujikawa, _negative_jp_shizuoka_fujinomiya, _negative_jp_shizuoka_fukuroi, _negative_jp_shizuoka_gotemba, _negative_jp_shizuoka_haibara, _negative_jp_shizuoka_hamamatsu, _negative_jp_shizuoka_higashiizu, _negative_jp_shizuoka_ito, _negative_jp_shizuoka_iwata, _negative_jp_shizuoka_izu, _negative_jp_shizuoka_izunokuni, _negative_jp_shizuoka_kakegawa, _negative_jp_shizuoka_kannami, _negative_jp_shizuoka_kawanehon, _negative_jp_shizuoka_kawazu, _negative_jp_shizuoka_kikugawa, _negative_jp_shizuoka_kosai, _negative_jp_shizuoka_makinohara, _negative_jp_shizuoka_matsuzaki, _negative_jp_shizuoka_minamiizu, _negative_jp_shizuoka_mishima, _negative_jp_shizuoka_morimachi, _negative_jp_shizuoka_nishiizu, _negative_jp_shizuoka_numazu, _negative_jp_shizuoka_omaezaki, _negative_jp_shizuoka_shimada, _negative_jp_shizuoka_shimizu, _negative_jp_shizuoka_shimoda, _negative_jp_shizuoka_shizuoka, _negative_jp_shizuoka_susono, _negative_jp_shizuoka_yaizu, _negative_jp_shizuoka_yoshida])
  private static let _negative_jp_staba: PublicSuffix.Node = .label("staba", next: [.termination])
  private static let _negative_jp_stripper: PublicSuffix.Node = .label("stripper", next: [.termination])
  private static let _negative_jp_sub: PublicSuffix.Node = .label("sub", next: [.termination])
  private static let _negative_jp_sunnyday: PublicSuffix.Node = .label("sunnyday", next: [.termination])
  private static let _negative_jp_supersale: PublicSuffix.Node = .label("supersale", next: [.termination])
  private static let _negative_jp_theshop: PublicSuffix.Node = .label("theshop", next: [.termination])
  private static let _negative_jp_thick: PublicSuffix.Node = .label("thick", next: [.termination])
  private static let _negative_jp_tochigi_ashikaga: PublicSuffix.Node = .label("ashikaga", next: [.termination])
  private static let _negative_jp_tochigi_bato: PublicSuffix.Node = .label("bato", next: [.termination])
  private static let _negative_jp_tochigi_haga: PublicSuffix.Node = .label("haga", next: [.termination])
  private static let _negative_jp_tochigi_ichikai: PublicSuffix.Node = .label("ichikai", next: [.termination])
  private static let _negative_jp_tochigi_iwafune: PublicSuffix.Node = .label("iwafune", next: [.termination])
  private static let _negative_jp_tochigi_kaminokawa: PublicSuffix.Node = .label("kaminokawa", next: [.termination])
  private static let _negative_jp_tochigi_kanuma: PublicSuffix.Node = .label("kanuma", next: [.termination])
  private static let _negative_jp_tochigi_karasuyama: PublicSuffix.Node = .label("karasuyama", next: [.termination])
  private static let _negative_jp_tochigi_kuroiso: PublicSuffix.Node = .label("kuroiso", next: [.termination])
  private static let _negative_jp_tochigi_mashiko: PublicSuffix.Node = .label("mashiko", next: [.termination])
  private static let _negative_jp_tochigi_mibu: PublicSuffix.Node = .label("mibu", next: [.termination])
  private static let _negative_jp_tochigi_moka: PublicSuffix.Node = .label("moka", next: [.termination])
  private static let _negative_jp_tochigi_motegi: PublicSuffix.Node = .label("motegi", next: [.termination])
  private static let _negative_jp_tochigi_nasu: PublicSuffix.Node = .label("nasu", next: [.termination])
  private static let _negative_jp_tochigi_nasushiobara: PublicSuffix.Node = .label("nasushiobara", next: [.termination])
  private static let _negative_jp_tochigi_nikko: PublicSuffix.Node = .label("nikko", next: [.termination])
  private static let _negative_jp_tochigi_nishikata: PublicSuffix.Node = .label("nishikata", next: [.termination])
  private static let _negative_jp_tochigi_nogi: PublicSuffix.Node = .label("nogi", next: [.termination])
  private static let _negative_jp_tochigi_ohira: PublicSuffix.Node = .label("ohira", next: [.termination])
  private static let _negative_jp_tochigi_ohtawara: PublicSuffix.Node = .label("ohtawara", next: [.termination])
  private static let _negative_jp_tochigi_oyama: PublicSuffix.Node = .label("oyama", next: [.termination])
  private static let _negative_jp_tochigi_sakura: PublicSuffix.Node = .label("sakura", next: [.termination])
  private static let _negative_jp_tochigi_sano: PublicSuffix.Node = .label("sano", next: [.termination])
  private static let _negative_jp_tochigi_shimotsuke: PublicSuffix.Node = .label("shimotsuke", next: [.termination])
  private static let _negative_jp_tochigi_shioya: PublicSuffix.Node = .label("shioya", next: [.termination])
  private static let _negative_jp_tochigi_takanezawa: PublicSuffix.Node = .label("takanezawa", next: [.termination])
  private static let _negative_jp_tochigi_tochigi: PublicSuffix.Node = .label("tochigi", next: [.termination])
  private static let _negative_jp_tochigi_tsuga: PublicSuffix.Node = .label("tsuga", next: [.termination])
  private static let _negative_jp_tochigi_ujiie: PublicSuffix.Node = .label("ujiie", next: [.termination])
  private static let _negative_jp_tochigi_utsunomiya: PublicSuffix.Node = .label("utsunomiya", next: [.termination])
  private static let _negative_jp_tochigi_yaita: PublicSuffix.Node = .label("yaita", next: [.termination])
  private static let _negative_jp_tochigi: PublicSuffix.Node = .label("tochigi", next: [.termination, _negative_jp_tochigi_ashikaga, _negative_jp_tochigi_bato, _negative_jp_tochigi_haga, _negative_jp_tochigi_ichikai, _negative_jp_tochigi_iwafune, _negative_jp_tochigi_kaminokawa, _negative_jp_tochigi_kanuma, _negative_jp_tochigi_karasuyama, _negative_jp_tochigi_kuroiso, _negative_jp_tochigi_mashiko, _negative_jp_tochigi_mibu, _negative_jp_tochigi_moka, _negative_jp_tochigi_motegi, _negative_jp_tochigi_nasu, _negative_jp_tochigi_nasushiobara, _negative_jp_tochigi_nikko, _negative_jp_tochigi_nishikata, _negative_jp_tochigi_nogi, _negative_jp_tochigi_ohira, _negative_jp_tochigi_ohtawara, _negative_jp_tochigi_oyama, _negative_jp_tochigi_sakura, _negative_jp_tochigi_sano, _negative_jp_tochigi_shimotsuke, _negative_jp_tochigi_shioya, _negative_jp_tochigi_takanezawa, _negative_jp_tochigi_tochigi, _negative_jp_tochigi_tsuga, _negative_jp_tochigi_ujiie, _negative_jp_tochigi_utsunomiya, _negative_jp_tochigi_yaita])
  private static let _negative_jp_tokushima_aizumi: PublicSuffix.Node = .label("aizumi", next: [.termination])
  private static let _negative_jp_tokushima_anan: PublicSuffix.Node = .label("anan", next: [.termination])
  private static let _negative_jp_tokushima_ichiba: PublicSuffix.Node = .label("ichiba", next: [.termination])
  private static let _negative_jp_tokushima_itano: PublicSuffix.Node = .label("itano", next: [.termination])
  private static let _negative_jp_tokushima_kainan: PublicSuffix.Node = .label("kainan", next: [.termination])
  private static let _negative_jp_tokushima_komatsushima: PublicSuffix.Node = .label("komatsushima", next: [.termination])
  private static let _negative_jp_tokushima_matsushige: PublicSuffix.Node = .label("matsushige", next: [.termination])
  private static let _negative_jp_tokushima_mima: PublicSuffix.Node = .label("mima", next: [.termination])
  private static let _negative_jp_tokushima_minami: PublicSuffix.Node = .label("minami", next: [.termination])
  private static let _negative_jp_tokushima_miyoshi: PublicSuffix.Node = .label("miyoshi", next: [.termination])
  private static let _negative_jp_tokushima_mugi: PublicSuffix.Node = .label("mugi", next: [.termination])
  private static let _negative_jp_tokushima_nakagawa: PublicSuffix.Node = .label("nakagawa", next: [.termination])
  private static let _negative_jp_tokushima_naruto: PublicSuffix.Node = .label("naruto", next: [.termination])
  private static let _negative_jp_tokushima_sanagochi: PublicSuffix.Node = .label("sanagochi", next: [.termination])
  private static let _negative_jp_tokushima_shishikui: PublicSuffix.Node = .label("shishikui", next: [.termination])
  private static let _negative_jp_tokushima_tokushima: PublicSuffix.Node = .label("tokushima", next: [.termination])
  private static let _negative_jp_tokushima_wajiki: PublicSuffix.Node = .label("wajiki", next: [.termination])
  private static let _negative_jp_tokushima: PublicSuffix.Node = .label("tokushima", next: [.termination, _negative_jp_tokushima_aizumi, _negative_jp_tokushima_anan, _negative_jp_tokushima_ichiba, _negative_jp_tokushima_itano, _negative_jp_tokushima_kainan, _negative_jp_tokushima_komatsushima, _negative_jp_tokushima_matsushige, _negative_jp_tokushima_mima, _negative_jp_tokushima_minami, _negative_jp_tokushima_miyoshi, _negative_jp_tokushima_mugi, _negative_jp_tokushima_nakagawa, _negative_jp_tokushima_naruto, _negative_jp_tokushima_sanagochi, _negative_jp_tokushima_shishikui, _negative_jp_tokushima_tokushima, _negative_jp_tokushima_wajiki])
  private static let _negative_jp_tokyo_adachi: PublicSuffix.Node = .label("adachi", next: [.termination])
  private static let _negative_jp_tokyo_akiruno: PublicSuffix.Node = .label("akiruno", next: [.termination])
  private static let _negative_jp_tokyo_akishima: PublicSuffix.Node = .label("akishima", next: [.termination])
  private static let _negative_jp_tokyo_aogashima: PublicSuffix.Node = .label("aogashima", next: [.termination])
  private static let _negative_jp_tokyo_arakawa: PublicSuffix.Node = .label("arakawa", next: [.termination])
  private static let _negative_jp_tokyo_bunkyo: PublicSuffix.Node = .label("bunkyo", next: [.termination])
  private static let _negative_jp_tokyo_chiyoda: PublicSuffix.Node = .label("chiyoda", next: [.termination])
  private static let _negative_jp_tokyo_chofu: PublicSuffix.Node = .label("chofu", next: [.termination])
  private static let _negative_jp_tokyo_chuo: PublicSuffix.Node = .label("chuo", next: [.termination])
  private static let _negative_jp_tokyo_edogawa: PublicSuffix.Node = .label("edogawa", next: [.termination])
  private static let _negative_jp_tokyo_fuchu: PublicSuffix.Node = .label("fuchu", next: [.termination])
  private static let _negative_jp_tokyo_fussa: PublicSuffix.Node = .label("fussa", next: [.termination])
  private static let _negative_jp_tokyo_hachijo: PublicSuffix.Node = .label("hachijo", next: [.termination])
  private static let _negative_jp_tokyo_hachioji: PublicSuffix.Node = .label("hachioji", next: [.termination])
  private static let _negative_jp_tokyo_hamura: PublicSuffix.Node = .label("hamura", next: [.termination])
  private static let _negative_jp_tokyo_higashikurume: PublicSuffix.Node = .label("higashikurume", next: [.termination])
  private static let _negative_jp_tokyo_higashimurayama: PublicSuffix.Node = .label("higashimurayama", next: [.termination])
  private static let _negative_jp_tokyo_higashiyamato: PublicSuffix.Node = .label("higashiyamato", next: [.termination])
  private static let _negative_jp_tokyo_hino: PublicSuffix.Node = .label("hino", next: [.termination])
  private static let _negative_jp_tokyo_hinode: PublicSuffix.Node = .label("hinode", next: [.termination])
  private static let _negative_jp_tokyo_hinohara: PublicSuffix.Node = .label("hinohara", next: [.termination])
  private static let _negative_jp_tokyo_inagi: PublicSuffix.Node = .label("inagi", next: [.termination])
  private static let _negative_jp_tokyo_itabashi: PublicSuffix.Node = .label("itabashi", next: [.termination])
  private static let _negative_jp_tokyo_katsushika: PublicSuffix.Node = .label("katsushika", next: [.termination])
  private static let _negative_jp_tokyo_kita: PublicSuffix.Node = .label("kita", next: [.termination])
  private static let _negative_jp_tokyo_kiyose: PublicSuffix.Node = .label("kiyose", next: [.termination])
  private static let _negative_jp_tokyo_kodaira: PublicSuffix.Node = .label("kodaira", next: [.termination])
  private static let _negative_jp_tokyo_koganei: PublicSuffix.Node = .label("koganei", next: [.termination])
  private static let _negative_jp_tokyo_kokubunji: PublicSuffix.Node = .label("kokubunji", next: [.termination])
  private static let _negative_jp_tokyo_komae: PublicSuffix.Node = .label("komae", next: [.termination])
  private static let _negative_jp_tokyo_koto: PublicSuffix.Node = .label("koto", next: [.termination])
  private static let _negative_jp_tokyo_kouzushima: PublicSuffix.Node = .label("kouzushima", next: [.termination])
  private static let _negative_jp_tokyo_kunitachi: PublicSuffix.Node = .label("kunitachi", next: [.termination])
  private static let _negative_jp_tokyo_machida: PublicSuffix.Node = .label("machida", next: [.termination])
  private static let _negative_jp_tokyo_meguro: PublicSuffix.Node = .label("meguro", next: [.termination])
  private static let _negative_jp_tokyo_minato: PublicSuffix.Node = .label("minato", next: [.termination])
  private static let _negative_jp_tokyo_mitaka: PublicSuffix.Node = .label("mitaka", next: [.termination])
  private static let _negative_jp_tokyo_mizuho: PublicSuffix.Node = .label("mizuho", next: [.termination])
  private static let _negative_jp_tokyo_musashimurayama: PublicSuffix.Node = .label("musashimurayama", next: [.termination])
  private static let _negative_jp_tokyo_musashino: PublicSuffix.Node = .label("musashino", next: [.termination])
  private static let _negative_jp_tokyo_nakano: PublicSuffix.Node = .label("nakano", next: [.termination])
  private static let _negative_jp_tokyo_nerima: PublicSuffix.Node = .label("nerima", next: [.termination])
  private static let _negative_jp_tokyo_ogasawara: PublicSuffix.Node = .label("ogasawara", next: [.termination])
  private static let _negative_jp_tokyo_okutama: PublicSuffix.Node = .label("okutama", next: [.termination])
  private static let _negative_jp_tokyo_ome: PublicSuffix.Node = .label("ome", next: [.termination])
  private static let _negative_jp_tokyo_oshima: PublicSuffix.Node = .label("oshima", next: [.termination])
  private static let _negative_jp_tokyo_ota: PublicSuffix.Node = .label("ota", next: [.termination])
  private static let _negative_jp_tokyo_setagaya: PublicSuffix.Node = .label("setagaya", next: [.termination])
  private static let _negative_jp_tokyo_shibuya: PublicSuffix.Node = .label("shibuya", next: [.termination])
  private static let _negative_jp_tokyo_shinagawa: PublicSuffix.Node = .label("shinagawa", next: [.termination])
  private static let _negative_jp_tokyo_shinjuku: PublicSuffix.Node = .label("shinjuku", next: [.termination])
  private static let _negative_jp_tokyo_suginami: PublicSuffix.Node = .label("suginami", next: [.termination])
  private static let _negative_jp_tokyo_sumida: PublicSuffix.Node = .label("sumida", next: [.termination])
  private static let _negative_jp_tokyo_tachikawa: PublicSuffix.Node = .label("tachikawa", next: [.termination])
  private static let _negative_jp_tokyo_taito: PublicSuffix.Node = .label("taito", next: [.termination])
  private static let _negative_jp_tokyo_tama: PublicSuffix.Node = .label("tama", next: [.termination])
  private static let _negative_jp_tokyo_toshima: PublicSuffix.Node = .label("toshima", next: [.termination])
  private static let _negative_jp_tokyo: PublicSuffix.Node = .label("tokyo", next: [.termination, _negative_jp_tokyo_adachi, _negative_jp_tokyo_akiruno, _negative_jp_tokyo_akishima, _negative_jp_tokyo_aogashima, _negative_jp_tokyo_arakawa, _negative_jp_tokyo_bunkyo, _negative_jp_tokyo_chiyoda, _negative_jp_tokyo_chofu, _negative_jp_tokyo_chuo, _negative_jp_tokyo_edogawa, _negative_jp_tokyo_fuchu, _negative_jp_tokyo_fussa, _negative_jp_tokyo_hachijo, _negative_jp_tokyo_hachioji, _negative_jp_tokyo_hamura, _negative_jp_tokyo_higashikurume, _negative_jp_tokyo_higashimurayama, _negative_jp_tokyo_higashiyamato, _negative_jp_tokyo_hino, _negative_jp_tokyo_hinode, _negative_jp_tokyo_hinohara, _negative_jp_tokyo_inagi, _negative_jp_tokyo_itabashi, _negative_jp_tokyo_katsushika, _negative_jp_tokyo_kita, _negative_jp_tokyo_kiyose, _negative_jp_tokyo_kodaira, _negative_jp_tokyo_koganei, _negative_jp_tokyo_kokubunji, _negative_jp_tokyo_komae, _negative_jp_tokyo_koto, _negative_jp_tokyo_kouzushima, _negative_jp_tokyo_kunitachi, _negative_jp_tokyo_machida, _negative_jp_tokyo_meguro, _negative_jp_tokyo_minato, _negative_jp_tokyo_mitaka, _negative_jp_tokyo_mizuho, _negative_jp_tokyo_musashimurayama, _negative_jp_tokyo_musashino, _negative_jp_tokyo_nakano, _negative_jp_tokyo_nerima, _negative_jp_tokyo_ogasawara, _negative_jp_tokyo_okutama, _negative_jp_tokyo_ome, _negative_jp_tokyo_oshima, _negative_jp_tokyo_ota, _negative_jp_tokyo_setagaya, _negative_jp_tokyo_shibuya, _negative_jp_tokyo_shinagawa, _negative_jp_tokyo_shinjuku, _negative_jp_tokyo_suginami, _negative_jp_tokyo_sumida, _negative_jp_tokyo_tachikawa, _negative_jp_tokyo_taito, _negative_jp_tokyo_tama, _negative_jp_tokyo_toshima])
  private static let _negative_jp_tonkotsu: PublicSuffix.Node = .label("tonkotsu", next: [.termination])
  private static let _negative_jp_tottori_chizu: PublicSuffix.Node = .label("chizu", next: [.termination])
  private static let _negative_jp_tottori_hino: PublicSuffix.Node = .label("hino", next: [.termination])
  private static let _negative_jp_tottori_kawahara: PublicSuffix.Node = .label("kawahara", next: [.termination])
  private static let _negative_jp_tottori_koge: PublicSuffix.Node = .label("koge", next: [.termination])
  private static let _negative_jp_tottori_kotoura: PublicSuffix.Node = .label("kotoura", next: [.termination])
  private static let _negative_jp_tottori_misasa: PublicSuffix.Node = .label("misasa", next: [.termination])
  private static let _negative_jp_tottori_nanbu: PublicSuffix.Node = .label("nanbu", next: [.termination])
  private static let _negative_jp_tottori_nichinan: PublicSuffix.Node = .label("nichinan", next: [.termination])
  private static let _negative_jp_tottori_sakaiminato: PublicSuffix.Node = .label("sakaiminato", next: [.termination])
  private static let _negative_jp_tottori_tottori: PublicSuffix.Node = .label("tottori", next: [.termination])
  private static let _negative_jp_tottori_wakasa: PublicSuffix.Node = .label("wakasa", next: [.termination])
  private static let _negative_jp_tottori_yazu: PublicSuffix.Node = .label("yazu", next: [.termination])
  private static let _negative_jp_tottori_yonago: PublicSuffix.Node = .label("yonago", next: [.termination])
  private static let _negative_jp_tottori: PublicSuffix.Node = .label("tottori", next: [.termination, _negative_jp_tottori_chizu, _negative_jp_tottori_hino, _negative_jp_tottori_kawahara, _negative_jp_tottori_koge, _negative_jp_tottori_kotoura, _negative_jp_tottori_misasa, _negative_jp_tottori_nanbu, _negative_jp_tottori_nichinan, _negative_jp_tottori_sakaiminato, _negative_jp_tottori_tottori, _negative_jp_tottori_wakasa, _negative_jp_tottori_yazu, _negative_jp_tottori_yonago])
  private static let _negative_jp_toyama_asahi: PublicSuffix.Node = .label("asahi", next: [.termination])
  private static let _negative_jp_toyama_fuchu: PublicSuffix.Node = .label("fuchu", next: [.termination])
  private static let _negative_jp_toyama_fukumitsu: PublicSuffix.Node = .label("fukumitsu", next: [.termination])
  private static let _negative_jp_toyama_funahashi: PublicSuffix.Node = .label("funahashi", next: [.termination])
  private static let _negative_jp_toyama_himi: PublicSuffix.Node = .label("himi", next: [.termination])
  private static let _negative_jp_toyama_imizu: PublicSuffix.Node = .label("imizu", next: [.termination])
  private static let _negative_jp_toyama_inami: PublicSuffix.Node = .label("inami", next: [.termination])
  private static let _negative_jp_toyama_johana: PublicSuffix.Node = .label("johana", next: [.termination])
  private static let _negative_jp_toyama_kamiichi: PublicSuffix.Node = .label("kamiichi", next: [.termination])
  private static let _negative_jp_toyama_kurobe: PublicSuffix.Node = .label("kurobe", next: [.termination])
  private static let _negative_jp_toyama_nakaniikawa: PublicSuffix.Node = .label("nakaniikawa", next: [.termination])
  private static let _negative_jp_toyama_namerikawa: PublicSuffix.Node = .label("namerikawa", next: [.termination])
  private static let _negative_jp_toyama_nanto: PublicSuffix.Node = .label("nanto", next: [.termination])
  private static let _negative_jp_toyama_nyuzen: PublicSuffix.Node = .label("nyuzen", next: [.termination])
  private static let _negative_jp_toyama_oyabe: PublicSuffix.Node = .label("oyabe", next: [.termination])
  private static let _negative_jp_toyama_taira: PublicSuffix.Node = .label("taira", next: [.termination])
  private static let _negative_jp_toyama_takaoka: PublicSuffix.Node = .label("takaoka", next: [.termination])
  private static let _negative_jp_toyama_tateyama: PublicSuffix.Node = .label("tateyama", next: [.termination])
  private static let _negative_jp_toyama_toga: PublicSuffix.Node = .label("toga", next: [.termination])
  private static let _negative_jp_toyama_tonami: PublicSuffix.Node = .label("tonami", next: [.termination])
  private static let _negative_jp_toyama_toyama: PublicSuffix.Node = .label("toyama", next: [.termination])
  private static let _negative_jp_toyama_unazuki: PublicSuffix.Node = .label("unazuki", next: [.termination])
  private static let _negative_jp_toyama_uozu: PublicSuffix.Node = .label("uozu", next: [.termination])
  private static let _negative_jp_toyama_yamada: PublicSuffix.Node = .label("yamada", next: [.termination])
  private static let _negative_jp_toyama: PublicSuffix.Node = .label("toyama", next: [.termination, _negative_jp_toyama_asahi, _negative_jp_toyama_fuchu, _negative_jp_toyama_fukumitsu, _negative_jp_toyama_funahashi, _negative_jp_toyama_himi, _negative_jp_toyama_imizu, _negative_jp_toyama_inami, _negative_jp_toyama_johana, _negative_jp_toyama_kamiichi, _negative_jp_toyama_kurobe, _negative_jp_toyama_nakaniikawa, _negative_jp_toyama_namerikawa, _negative_jp_toyama_nanto, _negative_jp_toyama_nyuzen, _negative_jp_toyama_oyabe, _negative_jp_toyama_taira, _negative_jp_toyama_takaoka, _negative_jp_toyama_tateyama, _negative_jp_toyama_toga, _negative_jp_toyama_tonami, _negative_jp_toyama_toyama, _negative_jp_toyama_unazuki, _negative_jp_toyama_uozu, _negative_jp_toyama_yamada])
  private static let _negative_jp_under: PublicSuffix.Node = .label("under", next: [.termination])
  private static let _negative_jp_upper: PublicSuffix.Node = .label("upper", next: [.termination])
  private static let _negative_jp_usercontent: PublicSuffix.Node = .label("usercontent", next: [.termination])
  private static let _negative_jp_velvet: PublicSuffix.Node = .label("velvet", next: [.termination])
  private static let _negative_jp_verse: PublicSuffix.Node = .label("verse", next: [.termination])
  private static let _negative_jp_versus: PublicSuffix.Node = .label("versus", next: [.termination])
  private static let _negative_jp_vivian: PublicSuffix.Node = .label("vivian", next: [.termination])
  private static let _negative_jp_wakayama_arida: PublicSuffix.Node = .label("arida", next: [.termination])
  private static let _negative_jp_wakayama_aridagawa: PublicSuffix.Node = .label("aridagawa", next: [.termination])
  private static let _negative_jp_wakayama_gobo: PublicSuffix.Node = .label("gobo", next: [.termination])
  private static let _negative_jp_wakayama_hashimoto: PublicSuffix.Node = .label("hashimoto", next: [.termination])
  private static let _negative_jp_wakayama_hidaka: PublicSuffix.Node = .label("hidaka", next: [.termination])
  private static let _negative_jp_wakayama_hirogawa: PublicSuffix.Node = .label("hirogawa", next: [.termination])
  private static let _negative_jp_wakayama_inami: PublicSuffix.Node = .label("inami", next: [.termination])
  private static let _negative_jp_wakayama_iwade: PublicSuffix.Node = .label("iwade", next: [.termination])
  private static let _negative_jp_wakayama_kainan: PublicSuffix.Node = .label("kainan", next: [.termination])
  private static let _negative_jp_wakayama_kamitonda: PublicSuffix.Node = .label("kamitonda", next: [.termination])
  private static let _negative_jp_wakayama_katsuragi: PublicSuffix.Node = .label("katsuragi", next: [.termination])
  private static let _negative_jp_wakayama_kimino: PublicSuffix.Node = .label("kimino", next: [.termination])
  private static let _negative_jp_wakayama_kinokawa: PublicSuffix.Node = .label("kinokawa", next: [.termination])
  private static let _negative_jp_wakayama_kitayama: PublicSuffix.Node = .label("kitayama", next: [.termination])
  private static let _negative_jp_wakayama_koya: PublicSuffix.Node = .label("koya", next: [.termination])
  private static let _negative_jp_wakayama_koza: PublicSuffix.Node = .label("koza", next: [.termination])
  private static let _negative_jp_wakayama_kozagawa: PublicSuffix.Node = .label("kozagawa", next: [.termination])
  private static let _negative_jp_wakayama_kudoyama: PublicSuffix.Node = .label("kudoyama", next: [.termination])
  private static let _negative_jp_wakayama_kushimoto: PublicSuffix.Node = .label("kushimoto", next: [.termination])
  private static let _negative_jp_wakayama_mihama: PublicSuffix.Node = .label("mihama", next: [.termination])
  private static let _negative_jp_wakayama_misato: PublicSuffix.Node = .label("misato", next: [.termination])
  private static let _negative_jp_wakayama_nachikatsuura: PublicSuffix.Node = .label("nachikatsuura", next: [.termination])
  private static let _negative_jp_wakayama_shingu: PublicSuffix.Node = .label("shingu", next: [.termination])
  private static let _negative_jp_wakayama_shirahama: PublicSuffix.Node = .label("shirahama", next: [.termination])
  private static let _negative_jp_wakayama_taiji: PublicSuffix.Node = .label("taiji", next: [.termination])
  private static let _negative_jp_wakayama_tanabe: PublicSuffix.Node = .label("tanabe", next: [.termination])
  private static let _negative_jp_wakayama_wakayama: PublicSuffix.Node = .label("wakayama", next: [.termination])
  private static let _negative_jp_wakayama_yuasa: PublicSuffix.Node = .label("yuasa", next: [.termination])
  private static let _negative_jp_wakayama_yura: PublicSuffix.Node = .label("yura", next: [.termination])
  private static let _negative_jp_wakayama: PublicSuffix.Node = .label("wakayama", next: [.termination, _negative_jp_wakayama_arida, _negative_jp_wakayama_aridagawa, _negative_jp_wakayama_gobo, _negative_jp_wakayama_hashimoto, _negative_jp_wakayama_hidaka, _negative_jp_wakayama_hirogawa, _negative_jp_wakayama_inami, _negative_jp_wakayama_iwade, _negative_jp_wakayama_kainan, _negative_jp_wakayama_kamitonda, _negative_jp_wakayama_katsuragi, _negative_jp_wakayama_kimino, _negative_jp_wakayama_kinokawa, _negative_jp_wakayama_kitayama, _negative_jp_wakayama_koya, _negative_jp_wakayama_koza, _negative_jp_wakayama_kozagawa, _negative_jp_wakayama_kudoyama, _negative_jp_wakayama_kushimoto, _negative_jp_wakayama_mihama, _negative_jp_wakayama_misato, _negative_jp_wakayama_nachikatsuura, _negative_jp_wakayama_shingu, _negative_jp_wakayama_shirahama, _negative_jp_wakayama_taiji, _negative_jp_wakayama_tanabe, _negative_jp_wakayama_wakayama, _negative_jp_wakayama_yuasa, _negative_jp_wakayama_yura])
  private static let _negative_jp_watson: PublicSuffix.Node = .label("watson", next: [.termination])
  private static let _negative_jp_weblike: PublicSuffix.Node = .label("weblike", next: [.termination])
  private static let _negative_jp_whitesnow: PublicSuffix.Node = .label("whitesnow", next: [.termination])
  private static let _negative_jp_yamagata_asahi: PublicSuffix.Node = .label("asahi", next: [.termination])
  private static let _negative_jp_yamagata_funagata: PublicSuffix.Node = .label("funagata", next: [.termination])
  private static let _negative_jp_yamagata_higashine: PublicSuffix.Node = .label("higashine", next: [.termination])
  private static let _negative_jp_yamagata_iide: PublicSuffix.Node = .label("iide", next: [.termination])
  private static let _negative_jp_yamagata_kahoku: PublicSuffix.Node = .label("kahoku", next: [.termination])
  private static let _negative_jp_yamagata_kaminoyama: PublicSuffix.Node = .label("kaminoyama", next: [.termination])
  private static let _negative_jp_yamagata_kaneyama: PublicSuffix.Node = .label("kaneyama", next: [.termination])
  private static let _negative_jp_yamagata_kawanishi: PublicSuffix.Node = .label("kawanishi", next: [.termination])
  private static let _negative_jp_yamagata_mamurogawa: PublicSuffix.Node = .label("mamurogawa", next: [.termination])
  private static let _negative_jp_yamagata_mikawa: PublicSuffix.Node = .label("mikawa", next: [.termination])
  private static let _negative_jp_yamagata_murayama: PublicSuffix.Node = .label("murayama", next: [.termination])
  private static let _negative_jp_yamagata_nagai: PublicSuffix.Node = .label("nagai", next: [.termination])
  private static let _negative_jp_yamagata_nakayama: PublicSuffix.Node = .label("nakayama", next: [.termination])
  private static let _negative_jp_yamagata_nanyo: PublicSuffix.Node = .label("nanyo", next: [.termination])
  private static let _negative_jp_yamagata_nishikawa: PublicSuffix.Node = .label("nishikawa", next: [.termination])
  private static let _negative_jp_yamagata_obanazawa: PublicSuffix.Node = .label("obanazawa", next: [.termination])
  private static let _negative_jp_yamagata_oe: PublicSuffix.Node = .label("oe", next: [.termination])
  private static let _negative_jp_yamagata_oguni: PublicSuffix.Node = .label("oguni", next: [.termination])
  private static let _negative_jp_yamagata_ohkura: PublicSuffix.Node = .label("ohkura", next: [.termination])
  private static let _negative_jp_yamagata_oishida: PublicSuffix.Node = .label("oishida", next: [.termination])
  private static let _negative_jp_yamagata_sagae: PublicSuffix.Node = .label("sagae", next: [.termination])
  private static let _negative_jp_yamagata_sakata: PublicSuffix.Node = .label("sakata", next: [.termination])
  private static let _negative_jp_yamagata_sakegawa: PublicSuffix.Node = .label("sakegawa", next: [.termination])
  private static let _negative_jp_yamagata_shinjo: PublicSuffix.Node = .label("shinjo", next: [.termination])
  private static let _negative_jp_yamagata_shirataka: PublicSuffix.Node = .label("shirataka", next: [.termination])
  private static let _negative_jp_yamagata_shonai: PublicSuffix.Node = .label("shonai", next: [.termination])
  private static let _negative_jp_yamagata_takahata: PublicSuffix.Node = .label("takahata", next: [.termination])
  private static let _negative_jp_yamagata_tendo: PublicSuffix.Node = .label("tendo", next: [.termination])
  private static let _negative_jp_yamagata_tozawa: PublicSuffix.Node = .label("tozawa", next: [.termination])
  private static let _negative_jp_yamagata_tsuruoka: PublicSuffix.Node = .label("tsuruoka", next: [.termination])
  private static let _negative_jp_yamagata_yamagata: PublicSuffix.Node = .label("yamagata", next: [.termination])
  private static let _negative_jp_yamagata_yamanobe: PublicSuffix.Node = .label("yamanobe", next: [.termination])
  private static let _negative_jp_yamagata_yonezawa: PublicSuffix.Node = .label("yonezawa", next: [.termination])
  private static let _negative_jp_yamagata_yuza: PublicSuffix.Node = .label("yuza", next: [.termination])
  private static let _negative_jp_yamagata: PublicSuffix.Node = .label("yamagata", next: [.termination, _negative_jp_yamagata_asahi, _negative_jp_yamagata_funagata, _negative_jp_yamagata_higashine, _negative_jp_yamagata_iide, _negative_jp_yamagata_kahoku, _negative_jp_yamagata_kaminoyama, _negative_jp_yamagata_kaneyama, _negative_jp_yamagata_kawanishi, _negative_jp_yamagata_mamurogawa, _negative_jp_yamagata_mikawa, _negative_jp_yamagata_murayama, _negative_jp_yamagata_nagai, _negative_jp_yamagata_nakayama, _negative_jp_yamagata_nanyo, _negative_jp_yamagata_nishikawa, _negative_jp_yamagata_obanazawa, _negative_jp_yamagata_oe, _negative_jp_yamagata_oguni, _negative_jp_yamagata_ohkura, _negative_jp_yamagata_oishida, _negative_jp_yamagata_sagae, _negative_jp_yamagata_sakata, _negative_jp_yamagata_sakegawa, _negative_jp_yamagata_shinjo, _negative_jp_yamagata_shirataka, _negative_jp_yamagata_shonai, _negative_jp_yamagata_takahata, _negative_jp_yamagata_tendo, _negative_jp_yamagata_tozawa, _negative_jp_yamagata_tsuruoka, _negative_jp_yamagata_yamagata, _negative_jp_yamagata_yamanobe, _negative_jp_yamagata_yonezawa, _negative_jp_yamagata_yuza])
  private static let _negative_jp_yamaguchi_abu: PublicSuffix.Node = .label("abu", next: [.termination])
  private static let _negative_jp_yamaguchi_hagi: PublicSuffix.Node = .label("hagi", next: [.termination])
  private static let _negative_jp_yamaguchi_hikari: PublicSuffix.Node = .label("hikari", next: [.termination])
  private static let _negative_jp_yamaguchi_hofu: PublicSuffix.Node = .label("hofu", next: [.termination])
  private static let _negative_jp_yamaguchi_iwakuni: PublicSuffix.Node = .label("iwakuni", next: [.termination])
  private static let _negative_jp_yamaguchi_kudamatsu: PublicSuffix.Node = .label("kudamatsu", next: [.termination])
  private static let _negative_jp_yamaguchi_mitou: PublicSuffix.Node = .label("mitou", next: [.termination])
  private static let _negative_jp_yamaguchi_nagato: PublicSuffix.Node = .label("nagato", next: [.termination])
  private static let _negative_jp_yamaguchi_oshima: PublicSuffix.Node = .label("oshima", next: [.termination])
  private static let _negative_jp_yamaguchi_shimonoseki: PublicSuffix.Node = .label("shimonoseki", next: [.termination])
  private static let _negative_jp_yamaguchi_shunan: PublicSuffix.Node = .label("shunan", next: [.termination])
  private static let _negative_jp_yamaguchi_tabuse: PublicSuffix.Node = .label("tabuse", next: [.termination])
  private static let _negative_jp_yamaguchi_tokuyama: PublicSuffix.Node = .label("tokuyama", next: [.termination])
  private static let _negative_jp_yamaguchi_toyota: PublicSuffix.Node = .label("toyota", next: [.termination])
  private static let _negative_jp_yamaguchi_ube: PublicSuffix.Node = .label("ube", next: [.termination])
  private static let _negative_jp_yamaguchi_yuu: PublicSuffix.Node = .label("yuu", next: [.termination])
  private static let _negative_jp_yamaguchi: PublicSuffix.Node = .label("yamaguchi", next: [.termination, _negative_jp_yamaguchi_abu, _negative_jp_yamaguchi_hagi, _negative_jp_yamaguchi_hikari, _negative_jp_yamaguchi_hofu, _negative_jp_yamaguchi_iwakuni, _negative_jp_yamaguchi_kudamatsu, _negative_jp_yamaguchi_mitou, _negative_jp_yamaguchi_nagato, _negative_jp_yamaguchi_oshima, _negative_jp_yamaguchi_shimonoseki, _negative_jp_yamaguchi_shunan, _negative_jp_yamaguchi_tabuse, _negative_jp_yamaguchi_tokuyama, _negative_jp_yamaguchi_toyota, _negative_jp_yamaguchi_ube, _negative_jp_yamaguchi_yuu])
  private static let _negative_jp_yamanashi_chuo: PublicSuffix.Node = .label("chuo", next: [.termination])
  private static let _negative_jp_yamanashi_doshi: PublicSuffix.Node = .label("doshi", next: [.termination])
  private static let _negative_jp_yamanashi_fuefuki: PublicSuffix.Node = .label("fuefuki", next: [.termination])
  private static let _negative_jp_yamanashi_fujikawa: PublicSuffix.Node = .label("fujikawa", next: [.termination])
  private static let _negative_jp_yamanashi_fujikawaguchiko: PublicSuffix.Node = .label("fujikawaguchiko", next: [.termination])
  private static let _negative_jp_yamanashi_fujiyoshida: PublicSuffix.Node = .label("fujiyoshida", next: [.termination])
  private static let _negative_jp_yamanashi_hayakawa: PublicSuffix.Node = .label("hayakawa", next: [.termination])
  private static let _negative_jp_yamanashi_hokuto: PublicSuffix.Node = .label("hokuto", next: [.termination])
  private static let _negative_jp_yamanashi_ichikawamisato: PublicSuffix.Node = .label("ichikawamisato", next: [.termination])
  private static let _negative_jp_yamanashi_kai: PublicSuffix.Node = .label("kai", next: [.termination])
  private static let _negative_jp_yamanashi_kofu: PublicSuffix.Node = .label("kofu", next: [.termination])
  private static let _negative_jp_yamanashi_koshu: PublicSuffix.Node = .label("koshu", next: [.termination])
  private static let _negative_jp_yamanashi_kosuge: PublicSuffix.Node = .label("kosuge", next: [.termination])
  private static let _negative_jp_yamanashi_minamiHalps: PublicSuffix.Node = .label("minami-alps", next: [.termination])
  private static let _negative_jp_yamanashi_minobu: PublicSuffix.Node = .label("minobu", next: [.termination])
  private static let _negative_jp_yamanashi_nakamichi: PublicSuffix.Node = .label("nakamichi", next: [.termination])
  private static let _negative_jp_yamanashi_nanbu: PublicSuffix.Node = .label("nanbu", next: [.termination])
  private static let _negative_jp_yamanashi_narusawa: PublicSuffix.Node = .label("narusawa", next: [.termination])
  private static let _negative_jp_yamanashi_nirasaki: PublicSuffix.Node = .label("nirasaki", next: [.termination])
  private static let _negative_jp_yamanashi_nishikatsura: PublicSuffix.Node = .label("nishikatsura", next: [.termination])
  private static let _negative_jp_yamanashi_oshino: PublicSuffix.Node = .label("oshino", next: [.termination])
  private static let _negative_jp_yamanashi_otsuki: PublicSuffix.Node = .label("otsuki", next: [.termination])
  private static let _negative_jp_yamanashi_showa: PublicSuffix.Node = .label("showa", next: [.termination])
  private static let _negative_jp_yamanashi_tabayama: PublicSuffix.Node = .label("tabayama", next: [.termination])
  private static let _negative_jp_yamanashi_tsuru: PublicSuffix.Node = .label("tsuru", next: [.termination])
  private static let _negative_jp_yamanashi_uenohara: PublicSuffix.Node = .label("uenohara", next: [.termination])
  private static let _negative_jp_yamanashi_yamanakako: PublicSuffix.Node = .label("yamanakako", next: [.termination])
  private static let _negative_jp_yamanashi_yamanashi: PublicSuffix.Node = .label("yamanashi", next: [.termination])
  private static let _negative_jp_yamanashi: PublicSuffix.Node = .label("yamanashi", next: [.termination, _negative_jp_yamanashi_chuo, _negative_jp_yamanashi_doshi, _negative_jp_yamanashi_fuefuki, _negative_jp_yamanashi_fujikawa, _negative_jp_yamanashi_fujikawaguchiko, _negative_jp_yamanashi_fujiyoshida, _negative_jp_yamanashi_hayakawa, _negative_jp_yamanashi_hokuto, _negative_jp_yamanashi_ichikawamisato, _negative_jp_yamanashi_kai, _negative_jp_yamanashi_kofu, _negative_jp_yamanashi_koshu, _negative_jp_yamanashi_kosuge, _negative_jp_yamanashi_minamiHalps, _negative_jp_yamanashi_minobu, _negative_jp_yamanashi_nakamichi, _negative_jp_yamanashi_nanbu, _negative_jp_yamanashi_narusawa, _negative_jp_yamanashi_nirasaki, _negative_jp_yamanashi_nishikatsura, _negative_jp_yamanashi_oshino, _negative_jp_yamanashi_otsuki, _negative_jp_yamanashi_showa, _negative_jp_yamanashi_tabayama, _negative_jp_yamanashi_tsuru, _negative_jp_yamanashi_uenohara, _negative_jp_yamanashi_yamanakako, _negative_jp_yamanashi_yamanashi])
  private static let _negative_jp_yokohama: PublicSuffix.Node = .label("yokohama", next: [.any])
  private static let _negative_jp_zombie: PublicSuffix.Node = .label("zombie", next: [.termination])
  private static let _negative_jp_三重: PublicSuffix.Node = .label("三重", next: [.termination])
  private static let _negative_jp_京都: PublicSuffix.Node = .label("京都", next: [.termination])
  private static let _negative_jp_佐賀: PublicSuffix.Node = .label("佐賀", next: [.termination])
  private static let _negative_jp_兵庫: PublicSuffix.Node = .label("兵庫", next: [.termination])
  private static let _negative_jp_北海道: PublicSuffix.Node = .label("北海道", next: [.termination])
  private static let _negative_jp_千葉: PublicSuffix.Node = .label("千葉", next: [.termination])
  private static let _negative_jp_和歌山: PublicSuffix.Node = .label("和歌山", next: [.termination])
  private static let _negative_jp_埼玉: PublicSuffix.Node = .label("埼玉", next: [.termination])
  private static let _negative_jp_大分: PublicSuffix.Node = .label("大分", next: [.termination])
  private static let _negative_jp_大阪: PublicSuffix.Node = .label("大阪", next: [.termination])
  private static let _negative_jp_奈良: PublicSuffix.Node = .label("奈良", next: [.termination])
  private static let _negative_jp_宮城: PublicSuffix.Node = .label("宮城", next: [.termination])
  private static let _negative_jp_宮崎: PublicSuffix.Node = .label("宮崎", next: [.termination])
  private static let _negative_jp_富山: PublicSuffix.Node = .label("富山", next: [.termination])
  private static let _negative_jp_山口: PublicSuffix.Node = .label("山口", next: [.termination])
  private static let _negative_jp_山形: PublicSuffix.Node = .label("山形", next: [.termination])
  private static let _negative_jp_山梨: PublicSuffix.Node = .label("山梨", next: [.termination])
  private static let _negative_jp_岐阜: PublicSuffix.Node = .label("岐阜", next: [.termination])
  private static let _negative_jp_岡山: PublicSuffix.Node = .label("岡山", next: [.termination])
  private static let _negative_jp_岩手: PublicSuffix.Node = .label("岩手", next: [.termination])
  private static let _negative_jp_島根: PublicSuffix.Node = .label("島根", next: [.termination])
  private static let _negative_jp_広島: PublicSuffix.Node = .label("広島", next: [.termination])
  private static let _negative_jp_徳島: PublicSuffix.Node = .label("徳島", next: [.termination])
  private static let _negative_jp_愛媛: PublicSuffix.Node = .label("愛媛", next: [.termination])
  private static let _negative_jp_愛知: PublicSuffix.Node = .label("愛知", next: [.termination])
  private static let _negative_jp_新潟: PublicSuffix.Node = .label("新潟", next: [.termination])
  private static let _negative_jp_東京: PublicSuffix.Node = .label("東京", next: [.termination])
  private static let _negative_jp_栃木: PublicSuffix.Node = .label("栃木", next: [.termination])
  private static let _negative_jp_沖縄: PublicSuffix.Node = .label("沖縄", next: [.termination])
  private static let _negative_jp_滋賀: PublicSuffix.Node = .label("滋賀", next: [.termination])
  private static let _negative_jp_熊本: PublicSuffix.Node = .label("熊本", next: [.termination])
  private static let _negative_jp_石川: PublicSuffix.Node = .label("石川", next: [.termination])
  private static let _negative_jp_神奈川: PublicSuffix.Node = .label("神奈川", next: [.termination])
  private static let _negative_jp_福井: PublicSuffix.Node = .label("福井", next: [.termination])
  private static let _negative_jp_福岡: PublicSuffix.Node = .label("福岡", next: [.termination])
  private static let _negative_jp_福島: PublicSuffix.Node = .label("福島", next: [.termination])
  private static let _negative_jp_秋田: PublicSuffix.Node = .label("秋田", next: [.termination])
  private static let _negative_jp_群馬: PublicSuffix.Node = .label("群馬", next: [.termination])
  private static let _negative_jp_茨城: PublicSuffix.Node = .label("茨城", next: [.termination])
  private static let _negative_jp_長崎: PublicSuffix.Node = .label("長崎", next: [.termination])
  private static let _negative_jp_長野: PublicSuffix.Node = .label("長野", next: [.termination])
  private static let _negative_jp_青森: PublicSuffix.Node = .label("青森", next: [.termination])
  private static let _negative_jp_静岡: PublicSuffix.Node = .label("静岡", next: [.termination])
  private static let _negative_jp_香川: PublicSuffix.Node = .label("香川", next: [.termination])
  private static let _negative_jp_高知: PublicSuffix.Node = .label("高知", next: [.termination])
  private static let _negative_jp_鳥取: PublicSuffix.Node = .label("鳥取", next: [.termination])
  private static let _negative_jp_鹿児島: PublicSuffix.Node = .label("鹿児島", next: [.termination])
  private static let _negative_jp: PublicSuffix.Node = .label("jp", next: [.termination, _negative_jp_ac, _negative_jp_ad, _negative_jp_aichi, _negative_jp_akita, _negative_jp_angry, _negative_jp_aomori, _negative_jp_babyblue, _negative_jp_babymilk, _negative_jp_backdrop, _negative_jp_bambina, _negative_jp_bitter, _negative_jp_blogspot, _negative_jp_blush, _negative_jp_boo, _negative_jp_boy, _negative_jp_boyfriend, _negative_jp_but, _negative_jp_buyshop, _negative_jp_candypop, _negative_jp_capoo, _negative_jp_catfood, _negative_jp_cheap, _negative_jp_chiba, _negative_jp_chicappa, _negative_jp_chillout, _negative_jp_chips, _negative_jp_chowder, _negative_jp_chu, _negative_jp_ciao, _negative_jp_co, _negative_jp_cocotte, _negative_jp_coolblog, _negative_jp_cranky, _negative_jp_cutegirl, _negative_jp_daa, _negative_jp_deca, _negative_jp_deci, _negative_jp_digick, _negative_jp_ed, _negative_jp_egoism, _negative_jp_ehime, _negative_jp_fakefur, _negative_jp_fashionstore, _negative_jp_fem, _negative_jp_flier, _negative_jp_floppy, _negative_jp_fool, _negative_jp_frenchkiss, _negative_jp_fukui, _negative_jp_fukuoka, _negative_jp_fukushima, _negative_jp_gifu, _negative_jp_girlfriend, _negative_jp_girly, _negative_jp_gloomy, _negative_jp_go, _negative_jp_gonna, _negative_jp_gr, _negative_jp_greater, _negative_jp_gunma, _negative_jp_hacca, _negative_jp_handcrafted, _negative_jp_heavy, _negative_jp_her, _negative_jp_hiho, _negative_jp_hippy, _negative_jp_hiroshima, _negative_jp_hokkaido, _negative_jp_holy, _negative_jp_hungry, _negative_jp_hyogo, _negative_jp_ibaraki, _negative_jp_icurus, _negative_jp_ishikawa, _negative_jp_itigo, _negative_jp_iwate, _negative_jp_jellybean, _negative_jp_kagawa, _negative_jp_kagoshima, _negative_jp_kanagawa, _negative_jp_kawaiishop, _negative_jp_kawasaki, _negative_jp_kikirara, _negative_jp_kill, _negative_jp_kilo, _negative_jp_kitakyushu, _negative_jp_kobe, _negative_jp_kochi, _negative_jp_kumamoto, _negative_jp_kuron, _negative_jp_kyoto, _negative_jp_lg, _negative_jp_littlestar, _negative_jp_lolipopmc, _negative_jp_lolitapunk, _negative_jp_lomo, _negative_jp_lovepop, _negative_jp_lovesick, _negative_jp_main, _negative_jp_mie, _negative_jp_miyagi, _negative_jp_miyazaki, _negative_jp_mods, _negative_jp_mond, _negative_jp_mongolian, _negative_jp_moo, _negative_jp_nagano, _negative_jp_nagasaki, _negative_jp_nagoya, _negative_jp_namaste, _negative_jp_nara, _negative_jp_ne, _negative_jp_niigata, _negative_jp_nikita, _negative_jp_nobushi, _negative_jp_noor, _negative_jp_oita, _negative_jp_okayama, _negative_jp_okinawa, _negative_jp_oops, _negative_jp_or, _negative_jp_osaka, _negative_jp_parallel, _negative_jp_parasite, _negative_jp_pecori, _negative_jp_peewee, _negative_jp_penne, _negative_jp_pepper, _negative_jp_perma, _negative_jp_pigboat, _negative_jp_pinoko, _negative_jp_punyu, _negative_jp_pupu, _negative_jp_pussycat, _negative_jp_pya, _negative_jp_raindrop, _negative_jp_readymade, _negative_jp_sadist, _negative_jp_saga, _negative_jp_saitama, _negative_jp_sapporo, _negative_jp_schoolbus, _negative_jp_secret, _negative_jp_sendai, _negative_jp_shiga, _negative_jp_shimane, _negative_jp_shizuoka, _negative_jp_staba, _negative_jp_stripper, _negative_jp_sub, _negative_jp_sunnyday, _negative_jp_supersale, _negative_jp_theshop, _negative_jp_thick, _negative_jp_tochigi, _negative_jp_tokushima, _negative_jp_tokyo, _negative_jp_tonkotsu, _negative_jp_tottori, _negative_jp_toyama, _negative_jp_under, _negative_jp_upper, _negative_jp_usercontent, _negative_jp_velvet, _negative_jp_verse, _negative_jp_versus, _negative_jp_vivian, _negative_jp_wakayama, _negative_jp_watson, _negative_jp_weblike, _negative_jp_whitesnow, _negative_jp_yamagata, _negative_jp_yamaguchi, _negative_jp_yamanashi, _negative_jp_yokohama, _negative_jp_zombie, _negative_jp_三重, _negative_jp_京都, _negative_jp_佐賀, _negative_jp_兵庫, _negative_jp_北海道, _negative_jp_千葉, _negative_jp_和歌山, _negative_jp_埼玉, _negative_jp_大分, _negative_jp_大阪, _negative_jp_奈良, _negative_jp_宮城, _negative_jp_宮崎, _negative_jp_富山, _negative_jp_山口, _negative_jp_山形, _negative_jp_山梨, _negative_jp_岐阜, _negative_jp_岡山, _negative_jp_岩手, _negative_jp_島根, _negative_jp_広島, _negative_jp_徳島, _negative_jp_愛媛, _negative_jp_愛知, _negative_jp_新潟, _negative_jp_東京, _negative_jp_栃木, _negative_jp_沖縄, _negative_jp_滋賀, _negative_jp_熊本, _negative_jp_石川, _negative_jp_神奈川, _negative_jp_福井, _negative_jp_福岡, _negative_jp_福島, _negative_jp_秋田, _negative_jp_群馬, _negative_jp_茨城, _negative_jp_長崎, _negative_jp_長野, _negative_jp_青森, _negative_jp_静岡, _negative_jp_香川, _negative_jp_高知, _negative_jp_鳥取, _negative_jp_鹿児島])
  private static let _negative_jpmorgan: PublicSuffix.Node = .label("jpmorgan", next: [.termination])
  private static let _negative_jprs: PublicSuffix.Node = .label("jprs", next: [.termination])
  private static let _negative_juegos: PublicSuffix.Node = .label("juegos", next: [.termination])
  private static let _negative_juniper: PublicSuffix.Node = .label("juniper", next: [.termination])
  private static let _negative_kaufen: PublicSuffix.Node = .label("kaufen", next: [.termination])
  private static let _negative_kddi: PublicSuffix.Node = .label("kddi", next: [.termination])
  private static let _negative_ke_ac: PublicSuffix.Node = .label("ac", next: [.termination])
  private static let _negative_ke_co_blogspot: PublicSuffix.Node = .label("blogspot", next: [.termination])
  private static let _negative_ke_co: PublicSuffix.Node = .label("co", next: [.termination, _negative_ke_co_blogspot])
  private static let _negative_ke_go: PublicSuffix.Node = .label("go", next: [.termination])
  private static let _negative_ke_info: PublicSuffix.Node = .label("info", next: [.termination])
  private static let _negative_ke_me: PublicSuffix.Node = .label("me", next: [.termination])
  private static let _negative_ke_mobi: PublicSuffix.Node = .label("mobi", next: [.termination])
  private static let _negative_ke_ne: PublicSuffix.Node = .label("ne", next: [.termination])
  private static let _negative_ke_or: PublicSuffix.Node = .label("or", next: [.termination])
  private static let _negative_ke_sc: PublicSuffix.Node = .label("sc", next: [.termination])
  private static let _negative_ke: PublicSuffix.Node = .label("ke", next: [.termination, _negative_ke_ac, _negative_ke_co, _negative_ke_go, _negative_ke_info, _negative_ke_me, _negative_ke_mobi, _negative_ke_ne, _negative_ke_or, _negative_ke_sc])
  private static let _negative_kerryhotels: PublicSuffix.Node = .label("kerryhotels", next: [.termination])
  private static let _negative_kerrylogistics: PublicSuffix.Node = .label("kerrylogistics", next: [.termination])
  private static let _negative_kerryproperties: PublicSuffix.Node = .label("kerryproperties", next: [.termination])
  private static let _negative_kfh: PublicSuffix.Node = .label("kfh", next: [.termination])
  private static let _negative_kg_blog: PublicSuffix.Node = .label("blog", next: [.termination])
  private static let _negative_kg_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_kg_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_kg_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_kg_io: PublicSuffix.Node = .label("io", next: [.termination])
  private static let _negative_kg_jp: PublicSuffix.Node = .label("jp", next: [.termination])
  private static let _negative_kg_mil: PublicSuffix.Node = .label("mil", next: [.termination])
  private static let _negative_kg_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_kg_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_kg_tv: PublicSuffix.Node = .label("tv", next: [.termination])
  private static let _negative_kg_uk: PublicSuffix.Node = .label("uk", next: [.termination])
  private static let _negative_kg_us: PublicSuffix.Node = .label("us", next: [.termination])
  private static let _negative_kg: PublicSuffix.Node = .label("kg", next: [.termination, _negative_kg_blog, _negative_kg_com, _negative_kg_edu, _negative_kg_gov, _negative_kg_io, _negative_kg_jp, _negative_kg_mil, _negative_kg_net, _negative_kg_org, _negative_kg_tv, _negative_kg_uk, _negative_kg_us])
  private static let _negative_kh: PublicSuffix.Node = .label("kh", next: [.any])
  private static let _negative_ki_biz: PublicSuffix.Node = .label("biz", next: [.termination])
  private static let _negative_ki_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_ki_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_ki_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_ki_info: PublicSuffix.Node = .label("info", next: [.termination])
  private static let _negative_ki_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_ki_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_ki: PublicSuffix.Node = .label("ki", next: [.termination, _negative_ki_biz, _negative_ki_com, _negative_ki_edu, _negative_ki_gov, _negative_ki_info, _negative_ki_net, _negative_ki_org])
  private static let _negative_kia: PublicSuffix.Node = .label("kia", next: [.termination])
  private static let _negative_kids: PublicSuffix.Node = .label("kids", next: [.termination])
  private static let _negative_kim: PublicSuffix.Node = .label("kim", next: [.termination])
  private static let _negative_kinder: PublicSuffix.Node = .label("kinder", next: [.termination])
  private static let _negative_kindle: PublicSuffix.Node = .label("kindle", next: [.termination])
  private static let _negative_kitchen: PublicSuffix.Node = .label("kitchen", next: [.termination])
  private static let _negative_kiwi: PublicSuffix.Node = .label("kiwi", next: [.termination])
  private static let _negative_km_ass: PublicSuffix.Node = .label("ass", next: [.termination])
  private static let _negative_km_asso: PublicSuffix.Node = .label("asso", next: [.termination])
  private static let _negative_km_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_km_coop: PublicSuffix.Node = .label("coop", next: [.termination])
  private static let _negative_km_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_km_gouv: PublicSuffix.Node = .label("gouv", next: [.termination])
  private static let _negative_km_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_km_medecin: PublicSuffix.Node = .label("medecin", next: [.termination])
  private static let _negative_km_mil: PublicSuffix.Node = .label("mil", next: [.termination])
  private static let _negative_km_nom: PublicSuffix.Node = .label("nom", next: [.termination])
  private static let _negative_km_notaires: PublicSuffix.Node = .label("notaires", next: [.termination])
  private static let _negative_km_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_km_pharmaciens: PublicSuffix.Node = .label("pharmaciens", next: [.termination])
  private static let _negative_km_prd: PublicSuffix.Node = .label("prd", next: [.termination])
  private static let _negative_km_presse: PublicSuffix.Node = .label("presse", next: [.termination])
  private static let _negative_km_tm: PublicSuffix.Node = .label("tm", next: [.termination])
  private static let _negative_km_veterinaire: PublicSuffix.Node = .label("veterinaire", next: [.termination])
  private static let _negative_km: PublicSuffix.Node = .label("km", next: [.termination, _negative_km_ass, _negative_km_asso, _negative_km_com, _negative_km_coop, _negative_km_edu, _negative_km_gouv, _negative_km_gov, _negative_km_medecin, _negative_km_mil, _negative_km_nom, _negative_km_notaires, _negative_km_org, _negative_km_pharmaciens, _negative_km_prd, _negative_km_presse, _negative_km_tm, _negative_km_veterinaire])
  private static let _negative_kn_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_kn_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_kn_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_kn_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_kn: PublicSuffix.Node = .label("kn", next: [.termination, _negative_kn_edu, _negative_kn_gov, _negative_kn_net, _negative_kn_org])
  private static let _negative_koeln: PublicSuffix.Node = .label("koeln", next: [.termination])
  private static let _negative_komatsu: PublicSuffix.Node = .label("komatsu", next: [.termination])
  private static let _negative_kosher: PublicSuffix.Node = .label("kosher", next: [.termination])
  private static let _negative_kp_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_kp_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_kp_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_kp_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_kp_rep: PublicSuffix.Node = .label("rep", next: [.termination])
  private static let _negative_kp_tra: PublicSuffix.Node = .label("tra", next: [.termination])
  private static let _negative_kp: PublicSuffix.Node = .label("kp", next: [.termination, _negative_kp_com, _negative_kp_edu, _negative_kp_gov, _negative_kp_org, _negative_kp_rep, _negative_kp_tra])
  private static let _negative_kpmg: PublicSuffix.Node = .label("kpmg", next: [.termination])
  private static let _negative_kpn: PublicSuffix.Node = .label("kpn", next: [.termination])
  private static let _negative_kr_ac: PublicSuffix.Node = .label("ac", next: [.termination])
  private static let _negative_kr_blogspot: PublicSuffix.Node = .label("blogspot", next: [.termination])
  private static let _negative_kr_busan: PublicSuffix.Node = .label("busan", next: [.termination])
  private static let _negative_kr_chungbuk: PublicSuffix.Node = .label("chungbuk", next: [.termination])
  private static let _negative_kr_chungnam: PublicSuffix.Node = .label("chungnam", next: [.termination])
  private static let _negative_kr_co: PublicSuffix.Node = .label("co", next: [.termination])
  private static let _negative_kr_daegu: PublicSuffix.Node = .label("daegu", next: [.termination])
  private static let _negative_kr_daejeon: PublicSuffix.Node = .label("daejeon", next: [.termination])
  private static let _negative_kr_es: PublicSuffix.Node = .label("es", next: [.termination])
  private static let _negative_kr_gangwon: PublicSuffix.Node = .label("gangwon", next: [.termination])
  private static let _negative_kr_go: PublicSuffix.Node = .label("go", next: [.termination])
  private static let _negative_kr_gwangju: PublicSuffix.Node = .label("gwangju", next: [.termination])
  private static let _negative_kr_gyeongbuk: PublicSuffix.Node = .label("gyeongbuk", next: [.termination])
  private static let _negative_kr_gyeonggi: PublicSuffix.Node = .label("gyeonggi", next: [.termination])
  private static let _negative_kr_gyeongnam: PublicSuffix.Node = .label("gyeongnam", next: [.termination])
  private static let _negative_kr_hs: PublicSuffix.Node = .label("hs", next: [.termination])
  private static let _negative_kr_incheon: PublicSuffix.Node = .label("incheon", next: [.termination])
  private static let _negative_kr_jeju: PublicSuffix.Node = .label("jeju", next: [.termination])
  private static let _negative_kr_jeonbuk: PublicSuffix.Node = .label("jeonbuk", next: [.termination])
  private static let _negative_kr_jeonnam: PublicSuffix.Node = .label("jeonnam", next: [.termination])
  private static let _negative_kr_kg: PublicSuffix.Node = .label("kg", next: [.termination])
  private static let _negative_kr_mil: PublicSuffix.Node = .label("mil", next: [.termination])
  private static let _negative_kr_ms: PublicSuffix.Node = .label("ms", next: [.termination])
  private static let _negative_kr_ne: PublicSuffix.Node = .label("ne", next: [.termination])
  private static let _negative_kr_or: PublicSuffix.Node = .label("or", next: [.termination])
  private static let _negative_kr_pe: PublicSuffix.Node = .label("pe", next: [.termination])
  private static let _negative_kr_re: PublicSuffix.Node = .label("re", next: [.termination])
  private static let _negative_kr_sc: PublicSuffix.Node = .label("sc", next: [.termination])
  private static let _negative_kr_seoul: PublicSuffix.Node = .label("seoul", next: [.termination])
  private static let _negative_kr_ulsan: PublicSuffix.Node = .label("ulsan", next: [.termination])
  private static let _negative_kr: PublicSuffix.Node = .label("kr", next: [.termination, _negative_kr_ac, _negative_kr_blogspot, _negative_kr_busan, _negative_kr_chungbuk, _negative_kr_chungnam, _negative_kr_co, _negative_kr_daegu, _negative_kr_daejeon, _negative_kr_es, _negative_kr_gangwon, _negative_kr_go, _negative_kr_gwangju, _negative_kr_gyeongbuk, _negative_kr_gyeonggi, _negative_kr_gyeongnam, _negative_kr_hs, _negative_kr_incheon, _negative_kr_jeju, _negative_kr_jeonbuk, _negative_kr_jeonnam, _negative_kr_kg, _negative_kr_mil, _negative_kr_ms, _negative_kr_ne, _negative_kr_or, _negative_kr_pe, _negative_kr_re, _negative_kr_sc, _negative_kr_seoul, _negative_kr_ulsan])
  private static let _negative_krd_co: PublicSuffix.Node = .label("co", next: [.termination])
  private static let _negative_krd_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_krd: PublicSuffix.Node = .label("krd", next: [.termination, _negative_krd_co, _negative_krd_edu])
  private static let _negative_kred: PublicSuffix.Node = .label("kred", next: [.termination])
  private static let _negative_kuokgroup: PublicSuffix.Node = .label("kuokgroup", next: [.termination])
  private static let _negative_kw_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_kw_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_kw_emb: PublicSuffix.Node = .label("emb", next: [.termination])
  private static let _negative_kw_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_kw_ind: PublicSuffix.Node = .label("ind", next: [.termination])
  private static let _negative_kw_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_kw_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_kw: PublicSuffix.Node = .label("kw", next: [.termination, _negative_kw_com, _negative_kw_edu, _negative_kw_emb, _negative_kw_gov, _negative_kw_ind, _negative_kw_net, _negative_kw_org])
  private static let _negative_ky_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_ky_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_ky_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_ky_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_ky: PublicSuffix.Node = .label("ky", next: [.termination, _negative_ky_com, _negative_ky_edu, _negative_ky_net, _negative_ky_org])
  private static let _negative_kyoto: PublicSuffix.Node = .label("kyoto", next: [.termination])
  private static let _negative_kz_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_kz_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_kz_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_kz_jcloud: PublicSuffix.Node = .label("jcloud", next: [.termination])
  private static let _negative_kz_kazteleport_upaas: PublicSuffix.Node = .label("upaas", next: [.termination])
  private static let _negative_kz_kazteleport: PublicSuffix.Node = .label("kazteleport", next: [_negative_kz_kazteleport_upaas])
  private static let _negative_kz_mil: PublicSuffix.Node = .label("mil", next: [.termination])
  private static let _negative_kz_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_kz_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_kz: PublicSuffix.Node = .label("kz", next: [.termination, _negative_kz_com, _negative_kz_edu, _negative_kz_gov, _negative_kz_jcloud, _negative_kz_kazteleport, _negative_kz_mil, _negative_kz_net, _negative_kz_org])
  private static let _negative_la_bnr: PublicSuffix.Node = .label("bnr", next: [.termination])
  private static let _negative_la_c: PublicSuffix.Node = .label("c", next: [.termination])
  private static let _negative_la_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_la_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_la_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_la_info: PublicSuffix.Node = .label("info", next: [.termination])
  private static let _negative_la_int: PublicSuffix.Node = .label("int", next: [.termination])
  private static let _negative_la_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_la_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_la_per: PublicSuffix.Node = .label("per", next: [.termination])
  private static let _negative_la: PublicSuffix.Node = .label("la", next: [.termination, _negative_la_bnr, _negative_la_c, _negative_la_com, _negative_la_edu, _negative_la_gov, _negative_la_info, _negative_la_int, _negative_la_net, _negative_la_org, _negative_la_per])
  private static let _negative_lacaixa: PublicSuffix.Node = .label("lacaixa", next: [.termination])
  private static let _negative_lamborghini: PublicSuffix.Node = .label("lamborghini", next: [.termination])
  private static let _negative_lamer: PublicSuffix.Node = .label("lamer", next: [.termination])
  private static let _negative_lancaster: PublicSuffix.Node = .label("lancaster", next: [.termination])
  private static let _negative_lancia: PublicSuffix.Node = .label("lancia", next: [.termination])
  private static let _negative_land_static_dev: PublicSuffix.Node = .label("dev", next: [.termination])
  private static let _negative_land_static_sites: PublicSuffix.Node = .label("sites", next: [.termination])
  private static let _negative_land_static: PublicSuffix.Node = .label("static", next: [.termination, _negative_land_static_dev, _negative_land_static_sites])
  private static let _negative_land: PublicSuffix.Node = .label("land", next: [.termination, _negative_land_static])
  private static let _negative_landrover: PublicSuffix.Node = .label("landrover", next: [.termination])
  private static let _negative_lanxess: PublicSuffix.Node = .label("lanxess", next: [.termination])
  private static let _negative_lasalle: PublicSuffix.Node = .label("lasalle", next: [.termination])
  private static let _negative_lat: PublicSuffix.Node = .label("lat", next: [.termination])
  private static let _negative_latino: PublicSuffix.Node = .label("latino", next: [.termination])
  private static let _negative_latrobe: PublicSuffix.Node = .label("latrobe", next: [.termination])
  private static let _negative_law: PublicSuffix.Node = .label("law", next: [.termination])
  private static let _negative_lawyer: PublicSuffix.Node = .label("lawyer", next: [.termination])
  private static let _negative_lb_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_lb_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_lb_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_lb_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_lb_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_lb: PublicSuffix.Node = .label("lb", next: [.termination, _negative_lb_com, _negative_lb_edu, _negative_lb_gov, _negative_lb_net, _negative_lb_org])
  private static let _negative_lc_co: PublicSuffix.Node = .label("co", next: [.termination])
  private static let _negative_lc_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_lc_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_lc_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_lc_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_lc_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_lc_oy: PublicSuffix.Node = .label("oy", next: [.termination])
  private static let _negative_lc: PublicSuffix.Node = .label("lc", next: [.termination, _negative_lc_co, _negative_lc_com, _negative_lc_edu, _negative_lc_gov, _negative_lc_net, _negative_lc_org, _negative_lc_oy])
  private static let _negative_lds: PublicSuffix.Node = .label("lds", next: [.termination])
  private static let _negative_lease: PublicSuffix.Node = .label("lease", next: [.termination])
  private static let _negative_leclerc: PublicSuffix.Node = .label("leclerc", next: [.termination])
  private static let _negative_lefrak: PublicSuffix.Node = .label("lefrak", next: [.termination])
  private static let _negative_legal: PublicSuffix.Node = .label("legal", next: [.termination])
  private static let _negative_lego: PublicSuffix.Node = .label("lego", next: [.termination])
  private static let _negative_lexus: PublicSuffix.Node = .label("lexus", next: [.termination])
  private static let _negative_lgbt: PublicSuffix.Node = .label("lgbt", next: [.termination])
  private static let _negative_li_blogspot: PublicSuffix.Node = .label("blogspot", next: [.termination])
  private static let _negative_li_caa: PublicSuffix.Node = .label("caa", next: [.termination])
  private static let _negative_li: PublicSuffix.Node = .label("li", next: [.termination, _negative_li_blogspot, _negative_li_caa])
  private static let _negative_lidl: PublicSuffix.Node = .label("lidl", next: [.termination])
  private static let _negative_life: PublicSuffix.Node = .label("life", next: [.termination])
  private static let _negative_lifeinsurance: PublicSuffix.Node = .label("lifeinsurance", next: [.termination])
  private static let _negative_lifestyle: PublicSuffix.Node = .label("lifestyle", next: [.termination])
  private static let _negative_lighting: PublicSuffix.Node = .label("lighting", next: [.termination])
  private static let _negative_like: PublicSuffix.Node = .label("like", next: [.termination])
  private static let _negative_lilly: PublicSuffix.Node = .label("lilly", next: [.termination])
  private static let _negative_limited: PublicSuffix.Node = .label("limited", next: [.termination])
  private static let _negative_limo: PublicSuffix.Node = .label("limo", next: [.termination])
  private static let _negative_lincoln: PublicSuffix.Node = .label("lincoln", next: [.termination])
  private static let _negative_linde: PublicSuffix.Node = .label("linde", next: [.termination])
  private static let _negative_link_cyon: PublicSuffix.Node = .label("cyon", next: [.termination])
  private static let _negative_link_dweb: PublicSuffix.Node = .label("dweb", next: [.any])
  private static let _negative_link_mypep: PublicSuffix.Node = .label("mypep", next: [.termination])
  private static let _negative_link: PublicSuffix.Node = .label("link", next: [.termination, _negative_link_cyon, _negative_link_dweb, _negative_link_mypep])
  private static let _negative_lipsy: PublicSuffix.Node = .label("lipsy", next: [.termination])
  private static let _negative_live_hlx: PublicSuffix.Node = .label("hlx", next: [.termination])
  private static let _negative_live: PublicSuffix.Node = .label("live", next: [.termination, _negative_live_hlx])
  private static let _negative_living: PublicSuffix.Node = .label("living", next: [.termination])
  private static let _negative_lk_ac: PublicSuffix.Node = .label("ac", next: [.termination])
  private static let _negative_lk_assn: PublicSuffix.Node = .label("assn", next: [.termination])
  private static let _negative_lk_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_lk_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_lk_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_lk_grp: PublicSuffix.Node = .label("grp", next: [.termination])
  private static let _negative_lk_hotel: PublicSuffix.Node = .label("hotel", next: [.termination])
  private static let _negative_lk_int: PublicSuffix.Node = .label("int", next: [.termination])
  private static let _negative_lk_ltd: PublicSuffix.Node = .label("ltd", next: [.termination])
  private static let _negative_lk_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_lk_ngo: PublicSuffix.Node = .label("ngo", next: [.termination])
  private static let _negative_lk_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_lk_sch: PublicSuffix.Node = .label("sch", next: [.termination])
  private static let _negative_lk_soc: PublicSuffix.Node = .label("soc", next: [.termination])
  private static let _negative_lk_web: PublicSuffix.Node = .label("web", next: [.termination])
  private static let _negative_lk: PublicSuffix.Node = .label("lk", next: [.termination, _negative_lk_ac, _negative_lk_assn, _negative_lk_com, _negative_lk_edu, _negative_lk_gov, _negative_lk_grp, _negative_lk_hotel, _negative_lk_int, _negative_lk_ltd, _negative_lk_net, _negative_lk_ngo, _negative_lk_org, _negative_lk_sch, _negative_lk_soc, _negative_lk_web])
  private static let _negative_llc: PublicSuffix.Node = .label("llc", next: [.termination])
  private static let _negative_llp: PublicSuffix.Node = .label("llp", next: [.termination])
  private static let _negative_loan: PublicSuffix.Node = .label("loan", next: [.termination])
  private static let _negative_loans: PublicSuffix.Node = .label("loans", next: [.termination])
  private static let _negative_locker: PublicSuffix.Node = .label("locker", next: [.termination])
  private static let _negative_locus: PublicSuffix.Node = .label("locus", next: [.termination])
  private static let _negative_loft: PublicSuffix.Node = .label("loft", next: [.termination])
  private static let _negative_lol_omg: PublicSuffix.Node = .label("omg", next: [.termination])
  private static let _negative_lol: PublicSuffix.Node = .label("lol", next: [.termination, _negative_lol_omg])
  private static let _negative_london_in: PublicSuffix.Node = .label("in", next: [.termination])
  private static let _negative_london_of: PublicSuffix.Node = .label("of", next: [.termination])
  private static let _negative_london: PublicSuffix.Node = .label("london", next: [.termination, _negative_london_in, _negative_london_of])
  private static let _negative_lotte: PublicSuffix.Node = .label("lotte", next: [.termination])
  private static let _negative_lotto: PublicSuffix.Node = .label("lotto", next: [.termination])
  private static let _negative_love: PublicSuffix.Node = .label("love", next: [.termination])
  private static let _negative_lpl: PublicSuffix.Node = .label("lpl", next: [.termination])
  private static let _negative_lplfinancial: PublicSuffix.Node = .label("lplfinancial", next: [.termination])
  private static let _negative_lr_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_lr_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_lr_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_lr_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_lr_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_lr: PublicSuffix.Node = .label("lr", next: [.termination, _negative_lr_com, _negative_lr_edu, _negative_lr_gov, _negative_lr_net, _negative_lr_org])
  private static let _negative_ls_ac: PublicSuffix.Node = .label("ac", next: [.termination])
  private static let _negative_ls_biz: PublicSuffix.Node = .label("biz", next: [.termination])
  private static let _negative_ls_co: PublicSuffix.Node = .label("co", next: [.termination])
  private static let _negative_ls_de: PublicSuffix.Node = .label("de", next: [.termination])
  private static let _negative_ls_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_ls_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_ls_info: PublicSuffix.Node = .label("info", next: [.termination])
  private static let _negative_ls_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_ls_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_ls_sc: PublicSuffix.Node = .label("sc", next: [.termination])
  private static let _negative_ls: PublicSuffix.Node = .label("ls", next: [.termination, _negative_ls_ac, _negative_ls_biz, _negative_ls_co, _negative_ls_de, _negative_ls_edu, _negative_ls_gov, _negative_ls_info, _negative_ls_net, _negative_ls_org, _negative_ls_sc])
  private static let _negative_lt_blogspot: PublicSuffix.Node = .label("blogspot", next: [.termination])
  private static let _negative_lt_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_lt: PublicSuffix.Node = .label("lt", next: [.termination, _negative_lt_blogspot, _negative_lt_gov])
  private static let _negative_ltd: PublicSuffix.Node = .label("ltd", next: [.termination])
  private static let _negative_ltda: PublicSuffix.Node = .label("ltda", next: [.termination])
  private static let _negative_lu_blogspot: PublicSuffix.Node = .label("blogspot", next: [.termination])
  private static let _negative_lu: PublicSuffix.Node = .label("lu", next: [.termination, _negative_lu_blogspot])
  private static let _negative_lundbeck: PublicSuffix.Node = .label("lundbeck", next: [.termination])
  private static let _negative_luxe: PublicSuffix.Node = .label("luxe", next: [.termination])
  private static let _negative_luxury: PublicSuffix.Node = .label("luxury", next: [.termination])
  private static let _negative_lv_asn: PublicSuffix.Node = .label("asn", next: [.termination])
  private static let _negative_lv_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_lv_conf: PublicSuffix.Node = .label("conf", next: [.termination])
  private static let _negative_lv_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_lv_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_lv_id: PublicSuffix.Node = .label("id", next: [.termination])
  private static let _negative_lv_mil: PublicSuffix.Node = .label("mil", next: [.termination])
  private static let _negative_lv_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_lv_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_lv: PublicSuffix.Node = .label("lv", next: [.termination, _negative_lv_asn, _negative_lv_com, _negative_lv_conf, _negative_lv_edu, _negative_lv_gov, _negative_lv_id, _negative_lv_mil, _negative_lv_net, _negative_lv_org])
  private static let _negative_ly_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_ly_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_ly_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_ly_id: PublicSuffix.Node = .label("id", next: [.termination])
  private static let _negative_ly_med: PublicSuffix.Node = .label("med", next: [.termination])
  private static let _negative_ly_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_ly_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_ly_plc: PublicSuffix.Node = .label("plc", next: [.termination])
  private static let _negative_ly_sch: PublicSuffix.Node = .label("sch", next: [.termination])
  private static let _negative_ly: PublicSuffix.Node = .label("ly", next: [.termination, _negative_ly_com, _negative_ly_edu, _negative_ly_gov, _negative_ly_id, _negative_ly_med, _negative_ly_net, _negative_ly_org, _negative_ly_plc, _negative_ly_sch])
  private static let _negative_ma_ac: PublicSuffix.Node = .label("ac", next: [.termination])
  private static let _negative_ma_co: PublicSuffix.Node = .label("co", next: [.termination])
  private static let _negative_ma_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_ma_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_ma_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_ma_press: PublicSuffix.Node = .label("press", next: [.termination])
  private static let _negative_ma: PublicSuffix.Node = .label("ma", next: [.termination, _negative_ma_ac, _negative_ma_co, _negative_ma_gov, _negative_ma_net, _negative_ma_org, _negative_ma_press])
  private static let _negative_macys: PublicSuffix.Node = .label("macys", next: [.termination])
  private static let _negative_madrid: PublicSuffix.Node = .label("madrid", next: [.termination])
  private static let _negative_maif: PublicSuffix.Node = .label("maif", next: [.termination])
  private static let _negative_maison: PublicSuffix.Node = .label("maison", next: [.termination])
  private static let _negative_makeup: PublicSuffix.Node = .label("makeup", next: [.termination])
  private static let _negative_man: PublicSuffix.Node = .label("man", next: [.termination])
  private static let _negative_management_router: PublicSuffix.Node = .label("router", next: [.termination])
  private static let _negative_management: PublicSuffix.Node = .label("management", next: [.termination, _negative_management_router])
  private static let _negative_mango: PublicSuffix.Node = .label("mango", next: [.termination])
  private static let _negative_map: PublicSuffix.Node = .label("map", next: [.termination])
  private static let _negative_market: PublicSuffix.Node = .label("market", next: [.termination])
  private static let _negative_marketing_from: PublicSuffix.Node = .label("from", next: [.termination])
  private static let _negative_marketing_with: PublicSuffix.Node = .label("with", next: [.termination])
  private static let _negative_marketing: PublicSuffix.Node = .label("marketing", next: [.termination, _negative_marketing_from, _negative_marketing_with])
  private static let _negative_markets: PublicSuffix.Node = .label("markets", next: [.termination])
  private static let _negative_marriott: PublicSuffix.Node = .label("marriott", next: [.termination])
  private static let _negative_marshalls: PublicSuffix.Node = .label("marshalls", next: [.termination])
  private static let _negative_maserati: PublicSuffix.Node = .label("maserati", next: [.termination])
  private static let _negative_mattel: PublicSuffix.Node = .label("mattel", next: [.termination])
  private static let _negative_mba: PublicSuffix.Node = .label("mba", next: [.termination])
  private static let _negative_mc_asso: PublicSuffix.Node = .label("asso", next: [.termination])
  private static let _negative_mc_tm: PublicSuffix.Node = .label("tm", next: [.termination])
  private static let _negative_mc: PublicSuffix.Node = .label("mc", next: [.termination, _negative_mc_asso, _negative_mc_tm])
  private static let _negative_mckinsey: PublicSuffix.Node = .label("mckinsey", next: [.termination])
  private static let _negative_md_at: PublicSuffix.Node = .label("at", next: [.termination])
  private static let _negative_md_blogspot: PublicSuffix.Node = .label("blogspot", next: [.termination])
  private static let _negative_md_de: PublicSuffix.Node = .label("de", next: [.termination])
  private static let _negative_md_jp: PublicSuffix.Node = .label("jp", next: [.termination])
  private static let _negative_md_to: PublicSuffix.Node = .label("to", next: [.termination])
  private static let _negative_md: PublicSuffix.Node = .label("md", next: [.termination, _negative_md_at, _negative_md_blogspot, _negative_md_de, _negative_md_jp, _negative_md_to])
  private static let _negative_me_ac: PublicSuffix.Node = .label("ac", next: [.termination])
  private static let _negative_me_barsy: PublicSuffix.Node = .label("barsy", next: [.termination])
  private static let _negative_me_brasilia: PublicSuffix.Node = .label("brasilia", next: [.termination])
  private static let _negative_me_c66: PublicSuffix.Node = .label("c66", next: [.termination])
  private static let _negative_me_co: PublicSuffix.Node = .label("co", next: [.termination])
  private static let _negative_me_daplie_localhost: PublicSuffix.Node = .label("localhost", next: [.termination])
  private static let _negative_me_daplie: PublicSuffix.Node = .label("daplie", next: [.termination, _negative_me_daplie_localhost])
  private static let _negative_me_ddns: PublicSuffix.Node = .label("ddns", next: [.termination])
  private static let _negative_me_diskstation: PublicSuffix.Node = .label("diskstation", next: [.termination])
  private static let _negative_me_dnsfor: PublicSuffix.Node = .label("dnsfor", next: [.termination])
  private static let _negative_me_dscloud: PublicSuffix.Node = .label("dscloud", next: [.termination])
  private static let _negative_me_edgestack: PublicSuffix.Node = .label("edgestack", next: [.termination])
  private static let _negative_me_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_me_filegear: PublicSuffix.Node = .label("filegear", next: [.termination])
  private static let _negative_me_filegearHau: PublicSuffix.Node = .label("filegear-au", next: [.termination])
  private static let _negative_me_filegearHde: PublicSuffix.Node = .label("filegear-de", next: [.termination])
  private static let _negative_me_filegearHgb: PublicSuffix.Node = .label("filegear-gb", next: [.termination])
  private static let _negative_me_filegearHie: PublicSuffix.Node = .label("filegear-ie", next: [.termination])
  private static let _negative_me_filegearHjp: PublicSuffix.Node = .label("filegear-jp", next: [.termination])
  private static let _negative_me_filegearHsg: PublicSuffix.Node = .label("filegear-sg", next: [.termination])
  private static let _negative_me_glitch: PublicSuffix.Node = .label("glitch", next: [.termination])
  private static let _negative_me_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_me_hopto: PublicSuffix.Node = .label("hopto", next: [.termination])
  private static let _negative_me_i234: PublicSuffix.Node = .label("i234", next: [.termination])
  private static let _negative_me_its: PublicSuffix.Node = .label("its", next: [.termination])
  private static let _negative_me_loginto: PublicSuffix.Node = .label("loginto", next: [.termination])
  private static let _negative_me_lohmus: PublicSuffix.Node = .label("lohmus", next: [.termination])
  private static let _negative_me_mcdir: PublicSuffix.Node = .label("mcdir", next: [.termination])
  private static let _negative_me_mcpe: PublicSuffix.Node = .label("mcpe", next: [.termination])
  private static let _negative_me_myds: PublicSuffix.Node = .label("myds", next: [.termination])
  private static let _negative_me_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_me_nohost: PublicSuffix.Node = .label("nohost", next: [.termination])
  private static let _negative_me_noip: PublicSuffix.Node = .label("noip", next: [.termination])
  private static let _negative_me_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_me_priv: PublicSuffix.Node = .label("priv", next: [.termination])
  private static let _negative_me_ravendb: PublicSuffix.Node = .label("ravendb", next: [.termination])
  private static let _negative_me_soundcast: PublicSuffix.Node = .label("soundcast", next: [.termination])
  private static let _negative_me_synology: PublicSuffix.Node = .label("synology", next: [.termination])
  private static let _negative_me_tbits: PublicSuffix.Node = .label("tbits", next: [.termination])
  private static let _negative_me_tcp4: PublicSuffix.Node = .label("tcp4", next: [.termination])
  private static let _negative_me_transip_site: PublicSuffix.Node = .label("site", next: [.termination])
  private static let _negative_me_transip: PublicSuffix.Node = .label("transip", next: [_negative_me_transip_site])
  private static let _negative_me_vp4: PublicSuffix.Node = .label("vp4", next: [.termination])
  private static let _negative_me_webhop: PublicSuffix.Node = .label("webhop", next: [.termination])
  private static let _negative_me_wedeploy: PublicSuffix.Node = .label("wedeploy", next: [.termination])
  private static let _negative_me_yombo: PublicSuffix.Node = .label("yombo", next: [.termination])
  private static let _negative_me: PublicSuffix.Node = .label("me", next: [.termination, _negative_me_ac, _negative_me_barsy, _negative_me_brasilia, _negative_me_c66, _negative_me_co, _negative_me_daplie, _negative_me_ddns, _negative_me_diskstation, _negative_me_dnsfor, _negative_me_dscloud, _negative_me_edgestack, _negative_me_edu, _negative_me_filegear, _negative_me_filegearHau, _negative_me_filegearHde, _negative_me_filegearHgb, _negative_me_filegearHie, _negative_me_filegearHjp, _negative_me_filegearHsg, _negative_me_glitch, _negative_me_gov, _negative_me_hopto, _negative_me_i234, _negative_me_its, _negative_me_loginto, _negative_me_lohmus, _negative_me_mcdir, _negative_me_mcpe, _negative_me_myds, _negative_me_net, _negative_me_nohost, _negative_me_noip, _negative_me_org, _negative_me_priv, _negative_me_ravendb, _negative_me_soundcast, _negative_me_synology, _negative_me_tbits, _negative_me_tcp4, _negative_me_transip, _negative_me_vp4, _negative_me_webhop, _negative_me_wedeploy, _negative_me_yombo])
  private static let _negative_med: PublicSuffix.Node = .label("med", next: [.termination])
  private static let _negative_media_framer: PublicSuffix.Node = .label("framer", next: [.termination])
  private static let _negative_media: PublicSuffix.Node = .label("media", next: [.termination, _negative_media_framer])
  private static let _negative_meet: PublicSuffix.Node = .label("meet", next: [.termination])
  private static let _negative_melbourne: PublicSuffix.Node = .label("melbourne", next: [.termination])
  private static let _negative_meme: PublicSuffix.Node = .label("meme", next: [.termination])
  private static let _negative_memorial: PublicSuffix.Node = .label("memorial", next: [.termination])
  private static let _negative_men_for: PublicSuffix.Node = .label("for", next: [.termination])
  private static let _negative_men_repair: PublicSuffix.Node = .label("repair", next: [.termination])
  private static let _negative_men: PublicSuffix.Node = .label("men", next: [.termination, _negative_men_for, _negative_men_repair])
  private static let _negative_menu_barsy: PublicSuffix.Node = .label("barsy", next: [.termination])
  private static let _negative_menu: PublicSuffix.Node = .label("menu", next: [.termination, _negative_menu_barsy])
  private static let _negative_merckmsd: PublicSuffix.Node = .label("merckmsd", next: [.termination])
  private static let _negative_mg_co: PublicSuffix.Node = .label("co", next: [.termination])
  private static let _negative_mg_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_mg_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_mg_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_mg_mil: PublicSuffix.Node = .label("mil", next: [.termination])
  private static let _negative_mg_nom: PublicSuffix.Node = .label("nom", next: [.termination])
  private static let _negative_mg_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_mg_prd: PublicSuffix.Node = .label("prd", next: [.termination])
  private static let _negative_mg_tm: PublicSuffix.Node = .label("tm", next: [.termination])
  private static let _negative_mg: PublicSuffix.Node = .label("mg", next: [.termination, _negative_mg_co, _negative_mg_com, _negative_mg_edu, _negative_mg_gov, _negative_mg_mil, _negative_mg_nom, _negative_mg_org, _negative_mg_prd, _negative_mg_tm])
  private static let _negative_mh: PublicSuffix.Node = .label("mh", next: [.termination])
  private static let _negative_miami: PublicSuffix.Node = .label("miami", next: [.termination])
  private static let _negative_microsoft: PublicSuffix.Node = .label("microsoft", next: [.termination])
  private static let _negative_mil: PublicSuffix.Node = .label("mil", next: [.termination])
  private static let _negative_mini: PublicSuffix.Node = .label("mini", next: [.termination])
  private static let _negative_mint: PublicSuffix.Node = .label("mint", next: [.termination])
  private static let _negative_mit: PublicSuffix.Node = .label("mit", next: [.termination])
  private static let _negative_mitsubishi: PublicSuffix.Node = .label("mitsubishi", next: [.termination])
  private static let _negative_mk_blogspot: PublicSuffix.Node = .label("blogspot", next: [.termination])
  private static let _negative_mk_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_mk_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_mk_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_mk_inf: PublicSuffix.Node = .label("inf", next: [.termination])
  private static let _negative_mk_name: PublicSuffix.Node = .label("name", next: [.termination])
  private static let _negative_mk_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_mk_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_mk: PublicSuffix.Node = .label("mk", next: [.termination, _negative_mk_blogspot, _negative_mk_com, _negative_mk_edu, _negative_mk_gov, _negative_mk_inf, _negative_mk_name, _negative_mk_net, _negative_mk_org])
  private static let _negative_ml_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_ml_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_ml_gouv: PublicSuffix.Node = .label("gouv", next: [.termination])
  private static let _negative_ml_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_ml_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_ml_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_ml_presse: PublicSuffix.Node = .label("presse", next: [.termination])
  private static let _negative_ml: PublicSuffix.Node = .label("ml", next: [.termination, _negative_ml_com, _negative_ml_edu, _negative_ml_gouv, _negative_ml_gov, _negative_ml_net, _negative_ml_org, _negative_ml_presse])
  private static let _negative_mlb: PublicSuffix.Node = .label("mlb", next: [.termination])
  private static let _negative_mls: PublicSuffix.Node = .label("mls", next: [.termination])
  private static let _negative_mm: PublicSuffix.Node = .label("mm", next: [.any])
  private static let _negative_mma: PublicSuffix.Node = .label("mma", next: [.termination])
  private static let _negative_mn_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_mn_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_mn_nyc: PublicSuffix.Node = .label("nyc", next: [.termination])
  private static let _negative_mn_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_mn: PublicSuffix.Node = .label("mn", next: [.termination, _negative_mn_edu, _negative_mn_gov, _negative_mn_nyc, _negative_mn_org])
  private static let _negative_mo_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_mo_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_mo_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_mo_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_mo_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_mo: PublicSuffix.Node = .label("mo", next: [.termination, _negative_mo_com, _negative_mo_edu, _negative_mo_gov, _negative_mo_net, _negative_mo_org])
  private static let _negative_mobi_barsy: PublicSuffix.Node = .label("barsy", next: [.termination])
  private static let _negative_mobi_dscloud: PublicSuffix.Node = .label("dscloud", next: [.termination])
  private static let _negative_mobi: PublicSuffix.Node = .label("mobi", next: [.termination, _negative_mobi_barsy, _negative_mobi_dscloud])
  private static let _negative_mobile: PublicSuffix.Node = .label("mobile", next: [.termination])
  private static let _negative_moda: PublicSuffix.Node = .label("moda", next: [.termination])
  private static let _negative_moe: PublicSuffix.Node = .label("moe", next: [.termination])
  private static let _negative_moi: PublicSuffix.Node = .label("moi", next: [.termination])
  private static let _negative_mom_and: PublicSuffix.Node = .label("and", next: [.termination])
  private static let _negative_mom_for: PublicSuffix.Node = .label("for", next: [.termination])
  private static let _negative_mom: PublicSuffix.Node = .label("mom", next: [.termination, _negative_mom_and, _negative_mom_for])
  private static let _negative_monash: PublicSuffix.Node = .label("monash", next: [.termination])
  private static let _negative_money: PublicSuffix.Node = .label("money", next: [.termination])
  private static let _negative_monster: PublicSuffix.Node = .label("monster", next: [.termination])
  private static let _negative_mormon: PublicSuffix.Node = .label("mormon", next: [.termination])
  private static let _negative_mortgage: PublicSuffix.Node = .label("mortgage", next: [.termination])
  private static let _negative_moscow: PublicSuffix.Node = .label("moscow", next: [.termination])
  private static let _negative_moto: PublicSuffix.Node = .label("moto", next: [.termination])
  private static let _negative_motorcycles: PublicSuffix.Node = .label("motorcycles", next: [.termination])
  private static let _negative_mov: PublicSuffix.Node = .label("mov", next: [.termination])
  private static let _negative_movie: PublicSuffix.Node = .label("movie", next: [.termination])
  private static let _negative_mp_ju: PublicSuffix.Node = .label("ju", next: [.termination])
  private static let _negative_mp: PublicSuffix.Node = .label("mp", next: [.termination, _negative_mp_ju])
  private static let _negative_mq: PublicSuffix.Node = .label("mq", next: [.termination])
  private static let _negative_mr_blogspot: PublicSuffix.Node = .label("blogspot", next: [.termination])
  private static let _negative_mr_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_mr: PublicSuffix.Node = .label("mr", next: [.termination, _negative_mr_blogspot, _negative_mr_gov])
  private static let _negative_ms_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_ms_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_ms_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_ms_lab: PublicSuffix.Node = .label("lab", next: [.termination])
  private static let _negative_ms_minisite: PublicSuffix.Node = .label("minisite", next: [.termination])
  private static let _negative_ms_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_ms_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_ms: PublicSuffix.Node = .label("ms", next: [.termination, _negative_ms_com, _negative_ms_edu, _negative_ms_gov, _negative_ms_lab, _negative_ms_minisite, _negative_ms_net, _negative_ms_org])
  private static let _negative_msd: PublicSuffix.Node = .label("msd", next: [.termination])
  private static let _negative_mt_com_blogspot: PublicSuffix.Node = .label("blogspot", next: [.termination])
  private static let _negative_mt_com: PublicSuffix.Node = .label("com", next: [.termination, _negative_mt_com_blogspot])
  private static let _negative_mt_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_mt_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_mt_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_mt: PublicSuffix.Node = .label("mt", next: [.termination, _negative_mt_com, _negative_mt_edu, _negative_mt_net, _negative_mt_org])
  private static let _negative_mtn: PublicSuffix.Node = .label("mtn", next: [.termination])
  private static let _negative_mtr: PublicSuffix.Node = .label("mtr", next: [.termination])
  private static let _negative_mu_ac: PublicSuffix.Node = .label("ac", next: [.termination])
  private static let _negative_mu_co: PublicSuffix.Node = .label("co", next: [.termination])
  private static let _negative_mu_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_mu_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_mu_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_mu_or: PublicSuffix.Node = .label("or", next: [.termination])
  private static let _negative_mu_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_mu: PublicSuffix.Node = .label("mu", next: [.termination, _negative_mu_ac, _negative_mu_co, _negative_mu_com, _negative_mu_gov, _negative_mu_net, _negative_mu_or, _negative_mu_org])
  private static let _negative_museum_academy: PublicSuffix.Node = .label("academy", next: [.termination])
  private static let _negative_museum_agriculture: PublicSuffix.Node = .label("agriculture", next: [.termination])
  private static let _negative_museum_air: PublicSuffix.Node = .label("air", next: [.termination])
  private static let _negative_museum_airguard: PublicSuffix.Node = .label("airguard", next: [.termination])
  private static let _negative_museum_alabama: PublicSuffix.Node = .label("alabama", next: [.termination])
  private static let _negative_museum_alaska: PublicSuffix.Node = .label("alaska", next: [.termination])
  private static let _negative_museum_amber: PublicSuffix.Node = .label("amber", next: [.termination])
  private static let _negative_museum_ambulance: PublicSuffix.Node = .label("ambulance", next: [.termination])
  private static let _negative_museum_american: PublicSuffix.Node = .label("american", next: [.termination])
  private static let _negative_museum_americana: PublicSuffix.Node = .label("americana", next: [.termination])
  private static let _negative_museum_americanantiques: PublicSuffix.Node = .label("americanantiques", next: [.termination])
  private static let _negative_museum_americanart: PublicSuffix.Node = .label("americanart", next: [.termination])
  private static let _negative_museum_amsterdam: PublicSuffix.Node = .label("amsterdam", next: [.termination])
  private static let _negative_museum_and: PublicSuffix.Node = .label("and", next: [.termination])
  private static let _negative_museum_annefrank: PublicSuffix.Node = .label("annefrank", next: [.termination])
  private static let _negative_museum_anthro: PublicSuffix.Node = .label("anthro", next: [.termination])
  private static let _negative_museum_anthropology: PublicSuffix.Node = .label("anthropology", next: [.termination])
  private static let _negative_museum_antiques: PublicSuffix.Node = .label("antiques", next: [.termination])
  private static let _negative_museum_aquarium: PublicSuffix.Node = .label("aquarium", next: [.termination])
  private static let _negative_museum_arboretum: PublicSuffix.Node = .label("arboretum", next: [.termination])
  private static let _negative_museum_archaeological: PublicSuffix.Node = .label("archaeological", next: [.termination])
  private static let _negative_museum_archaeology: PublicSuffix.Node = .label("archaeology", next: [.termination])
  private static let _negative_museum_architecture: PublicSuffix.Node = .label("architecture", next: [.termination])
  private static let _negative_museum_art: PublicSuffix.Node = .label("art", next: [.termination])
  private static let _negative_museum_artanddesign: PublicSuffix.Node = .label("artanddesign", next: [.termination])
  private static let _negative_museum_artcenter: PublicSuffix.Node = .label("artcenter", next: [.termination])
  private static let _negative_museum_artdeco: PublicSuffix.Node = .label("artdeco", next: [.termination])
  private static let _negative_museum_arteducation: PublicSuffix.Node = .label("arteducation", next: [.termination])
  private static let _negative_museum_artgallery: PublicSuffix.Node = .label("artgallery", next: [.termination])
  private static let _negative_museum_arts: PublicSuffix.Node = .label("arts", next: [.termination])
  private static let _negative_museum_artsandcrafts: PublicSuffix.Node = .label("artsandcrafts", next: [.termination])
  private static let _negative_museum_asmatart: PublicSuffix.Node = .label("asmatart", next: [.termination])
  private static let _negative_museum_assassination: PublicSuffix.Node = .label("assassination", next: [.termination])
  private static let _negative_museum_assisi: PublicSuffix.Node = .label("assisi", next: [.termination])
  private static let _negative_museum_association: PublicSuffix.Node = .label("association", next: [.termination])
  private static let _negative_museum_astronomy: PublicSuffix.Node = .label("astronomy", next: [.termination])
  private static let _negative_museum_atlanta: PublicSuffix.Node = .label("atlanta", next: [.termination])
  private static let _negative_museum_austin: PublicSuffix.Node = .label("austin", next: [.termination])
  private static let _negative_museum_australia: PublicSuffix.Node = .label("australia", next: [.termination])
  private static let _negative_museum_automotive: PublicSuffix.Node = .label("automotive", next: [.termination])
  private static let _negative_museum_aviation: PublicSuffix.Node = .label("aviation", next: [.termination])
  private static let _negative_museum_axis: PublicSuffix.Node = .label("axis", next: [.termination])
  private static let _negative_museum_badajoz: PublicSuffix.Node = .label("badajoz", next: [.termination])
  private static let _negative_museum_baghdad: PublicSuffix.Node = .label("baghdad", next: [.termination])
  private static let _negative_museum_bahn: PublicSuffix.Node = .label("bahn", next: [.termination])
  private static let _negative_museum_bale: PublicSuffix.Node = .label("bale", next: [.termination])
  private static let _negative_museum_baltimore: PublicSuffix.Node = .label("baltimore", next: [.termination])
  private static let _negative_museum_barcelona: PublicSuffix.Node = .label("barcelona", next: [.termination])
  private static let _negative_museum_baseball: PublicSuffix.Node = .label("baseball", next: [.termination])
  private static let _negative_museum_basel: PublicSuffix.Node = .label("basel", next: [.termination])
  private static let _negative_museum_baths: PublicSuffix.Node = .label("baths", next: [.termination])
  private static let _negative_museum_bauern: PublicSuffix.Node = .label("bauern", next: [.termination])
  private static let _negative_museum_beauxarts: PublicSuffix.Node = .label("beauxarts", next: [.termination])
  private static let _negative_museum_beeldengeluid: PublicSuffix.Node = .label("beeldengeluid", next: [.termination])
  private static let _negative_museum_bellevue: PublicSuffix.Node = .label("bellevue", next: [.termination])
  private static let _negative_museum_bergbau: PublicSuffix.Node = .label("bergbau", next: [.termination])
  private static let _negative_museum_berkeley: PublicSuffix.Node = .label("berkeley", next: [.termination])
  private static let _negative_museum_berlin: PublicSuffix.Node = .label("berlin", next: [.termination])
  private static let _negative_museum_bern: PublicSuffix.Node = .label("bern", next: [.termination])
  private static let _negative_museum_bible: PublicSuffix.Node = .label("bible", next: [.termination])
  private static let _negative_museum_bilbao: PublicSuffix.Node = .label("bilbao", next: [.termination])
  private static let _negative_museum_bill: PublicSuffix.Node = .label("bill", next: [.termination])
  private static let _negative_museum_birdart: PublicSuffix.Node = .label("birdart", next: [.termination])
  private static let _negative_museum_birthplace: PublicSuffix.Node = .label("birthplace", next: [.termination])
  private static let _negative_museum_bonn: PublicSuffix.Node = .label("bonn", next: [.termination])
  private static let _negative_museum_boston: PublicSuffix.Node = .label("boston", next: [.termination])
  private static let _negative_museum_botanical: PublicSuffix.Node = .label("botanical", next: [.termination])
  private static let _negative_museum_botanicalgarden: PublicSuffix.Node = .label("botanicalgarden", next: [.termination])
  private static let _negative_museum_botanicgarden: PublicSuffix.Node = .label("botanicgarden", next: [.termination])
  private static let _negative_museum_botany: PublicSuffix.Node = .label("botany", next: [.termination])
  private static let _negative_museum_brandywinevalley: PublicSuffix.Node = .label("brandywinevalley", next: [.termination])
  private static let _negative_museum_brasil: PublicSuffix.Node = .label("brasil", next: [.termination])
  private static let _negative_museum_bristol: PublicSuffix.Node = .label("bristol", next: [.termination])
  private static let _negative_museum_british: PublicSuffix.Node = .label("british", next: [.termination])
  private static let _negative_museum_britishcolumbia: PublicSuffix.Node = .label("britishcolumbia", next: [.termination])
  private static let _negative_museum_broadcast: PublicSuffix.Node = .label("broadcast", next: [.termination])
  private static let _negative_museum_brunel: PublicSuffix.Node = .label("brunel", next: [.termination])
  private static let _negative_museum_brussel: PublicSuffix.Node = .label("brussel", next: [.termination])
  private static let _negative_museum_brussels: PublicSuffix.Node = .label("brussels", next: [.termination])
  private static let _negative_museum_bruxelles: PublicSuffix.Node = .label("bruxelles", next: [.termination])
  private static let _negative_museum_building: PublicSuffix.Node = .label("building", next: [.termination])
  private static let _negative_museum_burghof: PublicSuffix.Node = .label("burghof", next: [.termination])
  private static let _negative_museum_bus: PublicSuffix.Node = .label("bus", next: [.termination])
  private static let _negative_museum_bushey: PublicSuffix.Node = .label("bushey", next: [.termination])
  private static let _negative_museum_cadaques: PublicSuffix.Node = .label("cadaques", next: [.termination])
  private static let _negative_museum_california: PublicSuffix.Node = .label("california", next: [.termination])
  private static let _negative_museum_cambridge: PublicSuffix.Node = .label("cambridge", next: [.termination])
  private static let _negative_museum_can: PublicSuffix.Node = .label("can", next: [.termination])
  private static let _negative_museum_canada: PublicSuffix.Node = .label("canada", next: [.termination])
  private static let _negative_museum_capebreton: PublicSuffix.Node = .label("capebreton", next: [.termination])
  private static let _negative_museum_carrier: PublicSuffix.Node = .label("carrier", next: [.termination])
  private static let _negative_museum_cartoonart: PublicSuffix.Node = .label("cartoonart", next: [.termination])
  private static let _negative_museum_casadelamoneda: PublicSuffix.Node = .label("casadelamoneda", next: [.termination])
  private static let _negative_museum_castle: PublicSuffix.Node = .label("castle", next: [.termination])
  private static let _negative_museum_castres: PublicSuffix.Node = .label("castres", next: [.termination])
  private static let _negative_museum_celtic: PublicSuffix.Node = .label("celtic", next: [.termination])
  private static let _negative_museum_center: PublicSuffix.Node = .label("center", next: [.termination])
  private static let _negative_museum_chattanooga: PublicSuffix.Node = .label("chattanooga", next: [.termination])
  private static let _negative_museum_cheltenham: PublicSuffix.Node = .label("cheltenham", next: [.termination])
  private static let _negative_museum_chesapeakebay: PublicSuffix.Node = .label("chesapeakebay", next: [.termination])
  private static let _negative_museum_chicago: PublicSuffix.Node = .label("chicago", next: [.termination])
  private static let _negative_museum_children: PublicSuffix.Node = .label("children", next: [.termination])
  private static let _negative_museum_childrens: PublicSuffix.Node = .label("childrens", next: [.termination])
  private static let _negative_museum_childrensgarden: PublicSuffix.Node = .label("childrensgarden", next: [.termination])
  private static let _negative_museum_chiropractic: PublicSuffix.Node = .label("chiropractic", next: [.termination])
  private static let _negative_museum_chocolate: PublicSuffix.Node = .label("chocolate", next: [.termination])
  private static let _negative_museum_christiansburg: PublicSuffix.Node = .label("christiansburg", next: [.termination])
  private static let _negative_museum_cincinnati: PublicSuffix.Node = .label("cincinnati", next: [.termination])
  private static let _negative_museum_cinema: PublicSuffix.Node = .label("cinema", next: [.termination])
  private static let _negative_museum_circus: PublicSuffix.Node = .label("circus", next: [.termination])
  private static let _negative_museum_civilisation: PublicSuffix.Node = .label("civilisation", next: [.termination])
  private static let _negative_museum_civilization: PublicSuffix.Node = .label("civilization", next: [.termination])
  private static let _negative_museum_civilwar: PublicSuffix.Node = .label("civilwar", next: [.termination])
  private static let _negative_museum_clinton: PublicSuffix.Node = .label("clinton", next: [.termination])
  private static let _negative_museum_clock: PublicSuffix.Node = .label("clock", next: [.termination])
  private static let _negative_museum_coal: PublicSuffix.Node = .label("coal", next: [.termination])
  private static let _negative_museum_coastaldefence: PublicSuffix.Node = .label("coastaldefence", next: [.termination])
  private static let _negative_museum_cody: PublicSuffix.Node = .label("cody", next: [.termination])
  private static let _negative_museum_coldwar: PublicSuffix.Node = .label("coldwar", next: [.termination])
  private static let _negative_museum_collection: PublicSuffix.Node = .label("collection", next: [.termination])
  private static let _negative_museum_colonialwilliamsburg: PublicSuffix.Node = .label("colonialwilliamsburg", next: [.termination])
  private static let _negative_museum_coloradoplateau: PublicSuffix.Node = .label("coloradoplateau", next: [.termination])
  private static let _negative_museum_columbia: PublicSuffix.Node = .label("columbia", next: [.termination])
  private static let _negative_museum_columbus: PublicSuffix.Node = .label("columbus", next: [.termination])
  private static let _negative_museum_communication: PublicSuffix.Node = .label("communication", next: [.termination])
  private static let _negative_museum_communications: PublicSuffix.Node = .label("communications", next: [.termination])
  private static let _negative_museum_community: PublicSuffix.Node = .label("community", next: [.termination])
  private static let _negative_museum_computer: PublicSuffix.Node = .label("computer", next: [.termination])
  private static let _negative_museum_computerhistory: PublicSuffix.Node = .label("computerhistory", next: [.termination])
  private static let _negative_museum_comunicações: PublicSuffix.Node = .label("comunicações", next: [.termination])
  private static let _negative_museum_contemporary: PublicSuffix.Node = .label("contemporary", next: [.termination])
  private static let _negative_museum_contemporaryart: PublicSuffix.Node = .label("contemporaryart", next: [.termination])
  private static let _negative_museum_convent: PublicSuffix.Node = .label("convent", next: [.termination])
  private static let _negative_museum_copenhagen: PublicSuffix.Node = .label("copenhagen", next: [.termination])
  private static let _negative_museum_corporation: PublicSuffix.Node = .label("corporation", next: [.termination])
  private static let _negative_museum_correiosHeHtelecomunicações: PublicSuffix.Node = .label("correios-e-telecomunicações", next: [.termination])
  private static let _negative_museum_corvette: PublicSuffix.Node = .label("corvette", next: [.termination])
  private static let _negative_museum_costume: PublicSuffix.Node = .label("costume", next: [.termination])
  private static let _negative_museum_countryestate: PublicSuffix.Node = .label("countryestate", next: [.termination])
  private static let _negative_museum_county: PublicSuffix.Node = .label("county", next: [.termination])
  private static let _negative_museum_crafts: PublicSuffix.Node = .label("crafts", next: [.termination])
  private static let _negative_museum_cranbrook: PublicSuffix.Node = .label("cranbrook", next: [.termination])
  private static let _negative_museum_creation: PublicSuffix.Node = .label("creation", next: [.termination])
  private static let _negative_museum_cultural: PublicSuffix.Node = .label("cultural", next: [.termination])
  private static let _negative_museum_culturalcenter: PublicSuffix.Node = .label("culturalcenter", next: [.termination])
  private static let _negative_museum_culture: PublicSuffix.Node = .label("culture", next: [.termination])
  private static let _negative_museum_cyber: PublicSuffix.Node = .label("cyber", next: [.termination])
  private static let _negative_museum_cymru: PublicSuffix.Node = .label("cymru", next: [.termination])
  private static let _negative_museum_dali: PublicSuffix.Node = .label("dali", next: [.termination])
  private static let _negative_museum_dallas: PublicSuffix.Node = .label("dallas", next: [.termination])
  private static let _negative_museum_database: PublicSuffix.Node = .label("database", next: [.termination])
  private static let _negative_museum_ddr: PublicSuffix.Node = .label("ddr", next: [.termination])
  private static let _negative_museum_decorativearts: PublicSuffix.Node = .label("decorativearts", next: [.termination])
  private static let _negative_museum_delaware: PublicSuffix.Node = .label("delaware", next: [.termination])
  private static let _negative_museum_delmenhorst: PublicSuffix.Node = .label("delmenhorst", next: [.termination])
  private static let _negative_museum_denmark: PublicSuffix.Node = .label("denmark", next: [.termination])
  private static let _negative_museum_depot: PublicSuffix.Node = .label("depot", next: [.termination])
  private static let _negative_museum_design: PublicSuffix.Node = .label("design", next: [.termination])
  private static let _negative_museum_detroit: PublicSuffix.Node = .label("detroit", next: [.termination])
  private static let _negative_museum_dinosaur: PublicSuffix.Node = .label("dinosaur", next: [.termination])
  private static let _negative_museum_discovery: PublicSuffix.Node = .label("discovery", next: [.termination])
  private static let _negative_museum_dolls: PublicSuffix.Node = .label("dolls", next: [.termination])
  private static let _negative_museum_donostia: PublicSuffix.Node = .label("donostia", next: [.termination])
  private static let _negative_museum_durham: PublicSuffix.Node = .label("durham", next: [.termination])
  private static let _negative_museum_eastafrica: PublicSuffix.Node = .label("eastafrica", next: [.termination])
  private static let _negative_museum_eastcoast: PublicSuffix.Node = .label("eastcoast", next: [.termination])
  private static let _negative_museum_education: PublicSuffix.Node = .label("education", next: [.termination])
  private static let _negative_museum_educational: PublicSuffix.Node = .label("educational", next: [.termination])
  private static let _negative_museum_egyptian: PublicSuffix.Node = .label("egyptian", next: [.termination])
  private static let _negative_museum_eisenbahn: PublicSuffix.Node = .label("eisenbahn", next: [.termination])
  private static let _negative_museum_elburg: PublicSuffix.Node = .label("elburg", next: [.termination])
  private static let _negative_museum_elvendrell: PublicSuffix.Node = .label("elvendrell", next: [.termination])
  private static let _negative_museum_embroidery: PublicSuffix.Node = .label("embroidery", next: [.termination])
  private static let _negative_museum_encyclopedic: PublicSuffix.Node = .label("encyclopedic", next: [.termination])
  private static let _negative_museum_england: PublicSuffix.Node = .label("england", next: [.termination])
  private static let _negative_museum_entomology: PublicSuffix.Node = .label("entomology", next: [.termination])
  private static let _negative_museum_environment: PublicSuffix.Node = .label("environment", next: [.termination])
  private static let _negative_museum_environmentalconservation: PublicSuffix.Node = .label("environmentalconservation", next: [.termination])
  private static let _negative_museum_epilepsy: PublicSuffix.Node = .label("epilepsy", next: [.termination])
  private static let _negative_museum_essex: PublicSuffix.Node = .label("essex", next: [.termination])
  private static let _negative_museum_estate: PublicSuffix.Node = .label("estate", next: [.termination])
  private static let _negative_museum_ethnology: PublicSuffix.Node = .label("ethnology", next: [.termination])
  private static let _negative_museum_exeter: PublicSuffix.Node = .label("exeter", next: [.termination])
  private static let _negative_museum_exhibition: PublicSuffix.Node = .label("exhibition", next: [.termination])
  private static let _negative_museum_family: PublicSuffix.Node = .label("family", next: [.termination])
  private static let _negative_museum_farm: PublicSuffix.Node = .label("farm", next: [.termination])
  private static let _negative_museum_farmequipment: PublicSuffix.Node = .label("farmequipment", next: [.termination])
  private static let _negative_museum_farmers: PublicSuffix.Node = .label("farmers", next: [.termination])
  private static let _negative_museum_farmstead: PublicSuffix.Node = .label("farmstead", next: [.termination])
  private static let _negative_museum_field: PublicSuffix.Node = .label("field", next: [.termination])
  private static let _negative_museum_figueres: PublicSuffix.Node = .label("figueres", next: [.termination])
  private static let _negative_museum_filatelia: PublicSuffix.Node = .label("filatelia", next: [.termination])
  private static let _negative_museum_film: PublicSuffix.Node = .label("film", next: [.termination])
  private static let _negative_museum_fineart: PublicSuffix.Node = .label("fineart", next: [.termination])
  private static let _negative_museum_finearts: PublicSuffix.Node = .label("finearts", next: [.termination])
  private static let _negative_museum_finland: PublicSuffix.Node = .label("finland", next: [.termination])
  private static let _negative_museum_flanders: PublicSuffix.Node = .label("flanders", next: [.termination])
  private static let _negative_museum_florida: PublicSuffix.Node = .label("florida", next: [.termination])
  private static let _negative_museum_force: PublicSuffix.Node = .label("force", next: [.termination])
  private static let _negative_museum_fortmissoula: PublicSuffix.Node = .label("fortmissoula", next: [.termination])
  private static let _negative_museum_fortworth: PublicSuffix.Node = .label("fortworth", next: [.termination])
  private static let _negative_museum_foundation: PublicSuffix.Node = .label("foundation", next: [.termination])
  private static let _negative_museum_francaise: PublicSuffix.Node = .label("francaise", next: [.termination])
  private static let _negative_museum_frankfurt: PublicSuffix.Node = .label("frankfurt", next: [.termination])
  private static let _negative_museum_franziskaner: PublicSuffix.Node = .label("franziskaner", next: [.termination])
  private static let _negative_museum_freemasonry: PublicSuffix.Node = .label("freemasonry", next: [.termination])
  private static let _negative_museum_freiburg: PublicSuffix.Node = .label("freiburg", next: [.termination])
  private static let _negative_museum_fribourg: PublicSuffix.Node = .label("fribourg", next: [.termination])
  private static let _negative_museum_frog: PublicSuffix.Node = .label("frog", next: [.termination])
  private static let _negative_museum_fundacio: PublicSuffix.Node = .label("fundacio", next: [.termination])
  private static let _negative_museum_furniture: PublicSuffix.Node = .label("furniture", next: [.termination])
  private static let _negative_museum_gallery: PublicSuffix.Node = .label("gallery", next: [.termination])
  private static let _negative_museum_garden: PublicSuffix.Node = .label("garden", next: [.termination])
  private static let _negative_museum_gateway: PublicSuffix.Node = .label("gateway", next: [.termination])
  private static let _negative_museum_geelvinck: PublicSuffix.Node = .label("geelvinck", next: [.termination])
  private static let _negative_museum_gemological: PublicSuffix.Node = .label("gemological", next: [.termination])
  private static let _negative_museum_geology: PublicSuffix.Node = .label("geology", next: [.termination])
  private static let _negative_museum_georgia: PublicSuffix.Node = .label("georgia", next: [.termination])
  private static let _negative_museum_giessen: PublicSuffix.Node = .label("giessen", next: [.termination])
  private static let _negative_museum_glas: PublicSuffix.Node = .label("glas", next: [.termination])
  private static let _negative_museum_glass: PublicSuffix.Node = .label("glass", next: [.termination])
  private static let _negative_museum_gorge: PublicSuffix.Node = .label("gorge", next: [.termination])
  private static let _negative_museum_grandrapids: PublicSuffix.Node = .label("grandrapids", next: [.termination])
  private static let _negative_museum_graz: PublicSuffix.Node = .label("graz", next: [.termination])
  private static let _negative_museum_guernsey: PublicSuffix.Node = .label("guernsey", next: [.termination])
  private static let _negative_museum_halloffame: PublicSuffix.Node = .label("halloffame", next: [.termination])
  private static let _negative_museum_hamburg: PublicSuffix.Node = .label("hamburg", next: [.termination])
  private static let _negative_museum_handson: PublicSuffix.Node = .label("handson", next: [.termination])
  private static let _negative_museum_harvestcelebration: PublicSuffix.Node = .label("harvestcelebration", next: [.termination])
  private static let _negative_museum_hawaii: PublicSuffix.Node = .label("hawaii", next: [.termination])
  private static let _negative_museum_health: PublicSuffix.Node = .label("health", next: [.termination])
  private static let _negative_museum_heimatunduhren: PublicSuffix.Node = .label("heimatunduhren", next: [.termination])
  private static let _negative_museum_hellas: PublicSuffix.Node = .label("hellas", next: [.termination])
  private static let _negative_museum_helsinki: PublicSuffix.Node = .label("helsinki", next: [.termination])
  private static let _negative_museum_hembygdsforbund: PublicSuffix.Node = .label("hembygdsforbund", next: [.termination])
  private static let _negative_museum_heritage: PublicSuffix.Node = .label("heritage", next: [.termination])
  private static let _negative_museum_histoire: PublicSuffix.Node = .label("histoire", next: [.termination])
  private static let _negative_museum_historical: PublicSuffix.Node = .label("historical", next: [.termination])
  private static let _negative_museum_historicalsociety: PublicSuffix.Node = .label("historicalsociety", next: [.termination])
  private static let _negative_museum_historichouses: PublicSuffix.Node = .label("historichouses", next: [.termination])
  private static let _negative_museum_historisch: PublicSuffix.Node = .label("historisch", next: [.termination])
  private static let _negative_museum_historisches: PublicSuffix.Node = .label("historisches", next: [.termination])
  private static let _negative_museum_history: PublicSuffix.Node = .label("history", next: [.termination])
  private static let _negative_museum_historyofscience: PublicSuffix.Node = .label("historyofscience", next: [.termination])
  private static let _negative_museum_horology: PublicSuffix.Node = .label("horology", next: [.termination])
  private static let _negative_museum_house: PublicSuffix.Node = .label("house", next: [.termination])
  private static let _negative_museum_humanities: PublicSuffix.Node = .label("humanities", next: [.termination])
  private static let _negative_museum_illustration: PublicSuffix.Node = .label("illustration", next: [.termination])
  private static let _negative_museum_imageandsound: PublicSuffix.Node = .label("imageandsound", next: [.termination])
  private static let _negative_museum_indian: PublicSuffix.Node = .label("indian", next: [.termination])
  private static let _negative_museum_indiana: PublicSuffix.Node = .label("indiana", next: [.termination])
  private static let _negative_museum_indianapolis: PublicSuffix.Node = .label("indianapolis", next: [.termination])
  private static let _negative_museum_indianmarket: PublicSuffix.Node = .label("indianmarket", next: [.termination])
  private static let _negative_museum_intelligence: PublicSuffix.Node = .label("intelligence", next: [.termination])
  private static let _negative_museum_interactive: PublicSuffix.Node = .label("interactive", next: [.termination])
  private static let _negative_museum_iraq: PublicSuffix.Node = .label("iraq", next: [.termination])
  private static let _negative_museum_iron: PublicSuffix.Node = .label("iron", next: [.termination])
  private static let _negative_museum_isleofman: PublicSuffix.Node = .label("isleofman", next: [.termination])
  private static let _negative_museum_jamison: PublicSuffix.Node = .label("jamison", next: [.termination])
  private static let _negative_museum_jefferson: PublicSuffix.Node = .label("jefferson", next: [.termination])
  private static let _negative_museum_jerusalem: PublicSuffix.Node = .label("jerusalem", next: [.termination])
  private static let _negative_museum_jewelry: PublicSuffix.Node = .label("jewelry", next: [.termination])
  private static let _negative_museum_jewish: PublicSuffix.Node = .label("jewish", next: [.termination])
  private static let _negative_museum_jewishart: PublicSuffix.Node = .label("jewishart", next: [.termination])
  private static let _negative_museum_jfk: PublicSuffix.Node = .label("jfk", next: [.termination])
  private static let _negative_museum_journalism: PublicSuffix.Node = .label("journalism", next: [.termination])
  private static let _negative_museum_judaica: PublicSuffix.Node = .label("judaica", next: [.termination])
  private static let _negative_museum_judygarland: PublicSuffix.Node = .label("judygarland", next: [.termination])
  private static let _negative_museum_juedisches: PublicSuffix.Node = .label("juedisches", next: [.termination])
  private static let _negative_museum_juif: PublicSuffix.Node = .label("juif", next: [.termination])
  private static let _negative_museum_karate: PublicSuffix.Node = .label("karate", next: [.termination])
  private static let _negative_museum_karikatur: PublicSuffix.Node = .label("karikatur", next: [.termination])
  private static let _negative_museum_kids: PublicSuffix.Node = .label("kids", next: [.termination])
  private static let _negative_museum_koebenhavn: PublicSuffix.Node = .label("koebenhavn", next: [.termination])
  private static let _negative_museum_koeln: PublicSuffix.Node = .label("koeln", next: [.termination])
  private static let _negative_museum_kunst: PublicSuffix.Node = .label("kunst", next: [.termination])
  private static let _negative_museum_kunstsammlung: PublicSuffix.Node = .label("kunstsammlung", next: [.termination])
  private static let _negative_museum_kunstunddesign: PublicSuffix.Node = .label("kunstunddesign", next: [.termination])
  private static let _negative_museum_labor: PublicSuffix.Node = .label("labor", next: [.termination])
  private static let _negative_museum_labour: PublicSuffix.Node = .label("labour", next: [.termination])
  private static let _negative_museum_lajolla: PublicSuffix.Node = .label("lajolla", next: [.termination])
  private static let _negative_museum_lancashire: PublicSuffix.Node = .label("lancashire", next: [.termination])
  private static let _negative_museum_landes: PublicSuffix.Node = .label("landes", next: [.termination])
  private static let _negative_museum_lans: PublicSuffix.Node = .label("lans", next: [.termination])
  private static let _negative_museum_larsson: PublicSuffix.Node = .label("larsson", next: [.termination])
  private static let _negative_museum_lewismiller: PublicSuffix.Node = .label("lewismiller", next: [.termination])
  private static let _negative_museum_lincoln: PublicSuffix.Node = .label("lincoln", next: [.termination])
  private static let _negative_museum_linz: PublicSuffix.Node = .label("linz", next: [.termination])
  private static let _negative_museum_living: PublicSuffix.Node = .label("living", next: [.termination])
  private static let _negative_museum_livinghistory: PublicSuffix.Node = .label("livinghistory", next: [.termination])
  private static let _negative_museum_localhistory: PublicSuffix.Node = .label("localhistory", next: [.termination])
  private static let _negative_museum_london: PublicSuffix.Node = .label("london", next: [.termination])
  private static let _negative_museum_losangeles: PublicSuffix.Node = .label("losangeles", next: [.termination])
  private static let _negative_museum_louvre: PublicSuffix.Node = .label("louvre", next: [.termination])
  private static let _negative_museum_loyalist: PublicSuffix.Node = .label("loyalist", next: [.termination])
  private static let _negative_museum_lucerne: PublicSuffix.Node = .label("lucerne", next: [.termination])
  private static let _negative_museum_luxembourg: PublicSuffix.Node = .label("luxembourg", next: [.termination])
  private static let _negative_museum_luzern: PublicSuffix.Node = .label("luzern", next: [.termination])
  private static let _negative_museum_läns: PublicSuffix.Node = .label("läns", next: [.termination])
  private static let _negative_museum_mad: PublicSuffix.Node = .label("mad", next: [.termination])
  private static let _negative_museum_madrid: PublicSuffix.Node = .label("madrid", next: [.termination])
  private static let _negative_museum_mallorca: PublicSuffix.Node = .label("mallorca", next: [.termination])
  private static let _negative_museum_manchester: PublicSuffix.Node = .label("manchester", next: [.termination])
  private static let _negative_museum_mansion: PublicSuffix.Node = .label("mansion", next: [.termination])
  private static let _negative_museum_mansions: PublicSuffix.Node = .label("mansions", next: [.termination])
  private static let _negative_museum_manx: PublicSuffix.Node = .label("manx", next: [.termination])
  private static let _negative_museum_marburg: PublicSuffix.Node = .label("marburg", next: [.termination])
  private static let _negative_museum_maritime: PublicSuffix.Node = .label("maritime", next: [.termination])
  private static let _negative_museum_maritimo: PublicSuffix.Node = .label("maritimo", next: [.termination])
  private static let _negative_museum_maryland: PublicSuffix.Node = .label("maryland", next: [.termination])
  private static let _negative_museum_marylhurst: PublicSuffix.Node = .label("marylhurst", next: [.termination])
  private static let _negative_museum_media: PublicSuffix.Node = .label("media", next: [.termination])
  private static let _negative_museum_medical: PublicSuffix.Node = .label("medical", next: [.termination])
  private static let _negative_museum_medizinhistorisches: PublicSuffix.Node = .label("medizinhistorisches", next: [.termination])
  private static let _negative_museum_meeres: PublicSuffix.Node = .label("meeres", next: [.termination])
  private static let _negative_museum_memorial: PublicSuffix.Node = .label("memorial", next: [.termination])
  private static let _negative_museum_mesaverde: PublicSuffix.Node = .label("mesaverde", next: [.termination])
  private static let _negative_museum_michigan: PublicSuffix.Node = .label("michigan", next: [.termination])
  private static let _negative_museum_midatlantic: PublicSuffix.Node = .label("midatlantic", next: [.termination])
  private static let _negative_museum_military: PublicSuffix.Node = .label("military", next: [.termination])
  private static let _negative_museum_mill: PublicSuffix.Node = .label("mill", next: [.termination])
  private static let _negative_museum_miners: PublicSuffix.Node = .label("miners", next: [.termination])
  private static let _negative_museum_mining: PublicSuffix.Node = .label("mining", next: [.termination])
  private static let _negative_museum_minnesota: PublicSuffix.Node = .label("minnesota", next: [.termination])
  private static let _negative_museum_missile: PublicSuffix.Node = .label("missile", next: [.termination])
  private static let _negative_museum_missoula: PublicSuffix.Node = .label("missoula", next: [.termination])
  private static let _negative_museum_modern: PublicSuffix.Node = .label("modern", next: [.termination])
  private static let _negative_museum_moma: PublicSuffix.Node = .label("moma", next: [.termination])
  private static let _negative_museum_money: PublicSuffix.Node = .label("money", next: [.termination])
  private static let _negative_museum_monmouth: PublicSuffix.Node = .label("monmouth", next: [.termination])
  private static let _negative_museum_monticello: PublicSuffix.Node = .label("monticello", next: [.termination])
  private static let _negative_museum_montreal: PublicSuffix.Node = .label("montreal", next: [.termination])
  private static let _negative_museum_moscow: PublicSuffix.Node = .label("moscow", next: [.termination])
  private static let _negative_museum_motorcycle: PublicSuffix.Node = .label("motorcycle", next: [.termination])
  private static let _negative_museum_muenchen: PublicSuffix.Node = .label("muenchen", next: [.termination])
  private static let _negative_museum_muenster: PublicSuffix.Node = .label("muenster", next: [.termination])
  private static let _negative_museum_mulhouse: PublicSuffix.Node = .label("mulhouse", next: [.termination])
  private static let _negative_museum_muncie: PublicSuffix.Node = .label("muncie", next: [.termination])
  private static let _negative_museum_museet: PublicSuffix.Node = .label("museet", next: [.termination])
  private static let _negative_museum_museumcenter: PublicSuffix.Node = .label("museumcenter", next: [.termination])
  private static let _negative_museum_museumvereniging: PublicSuffix.Node = .label("museumvereniging", next: [.termination])
  private static let _negative_museum_music: PublicSuffix.Node = .label("music", next: [.termination])
  private static let _negative_museum_national: PublicSuffix.Node = .label("national", next: [.termination])
  private static let _negative_museum_nationalfirearms: PublicSuffix.Node = .label("nationalfirearms", next: [.termination])
  private static let _negative_museum_nationalheritage: PublicSuffix.Node = .label("nationalheritage", next: [.termination])
  private static let _negative_museum_nativeamerican: PublicSuffix.Node = .label("nativeamerican", next: [.termination])
  private static let _negative_museum_naturalhistory: PublicSuffix.Node = .label("naturalhistory", next: [.termination])
  private static let _negative_museum_naturalhistorymuseum: PublicSuffix.Node = .label("naturalhistorymuseum", next: [.termination])
  private static let _negative_museum_naturalsciences: PublicSuffix.Node = .label("naturalsciences", next: [.termination])
  private static let _negative_museum_nature: PublicSuffix.Node = .label("nature", next: [.termination])
  private static let _negative_museum_naturhistorisches: PublicSuffix.Node = .label("naturhistorisches", next: [.termination])
  private static let _negative_museum_natuurwetenschappen: PublicSuffix.Node = .label("natuurwetenschappen", next: [.termination])
  private static let _negative_museum_naumburg: PublicSuffix.Node = .label("naumburg", next: [.termination])
  private static let _negative_museum_naval: PublicSuffix.Node = .label("naval", next: [.termination])
  private static let _negative_museum_nebraska: PublicSuffix.Node = .label("nebraska", next: [.termination])
  private static let _negative_museum_neues: PublicSuffix.Node = .label("neues", next: [.termination])
  private static let _negative_museum_newhampshire: PublicSuffix.Node = .label("newhampshire", next: [.termination])
  private static let _negative_museum_newjersey: PublicSuffix.Node = .label("newjersey", next: [.termination])
  private static let _negative_museum_newmexico: PublicSuffix.Node = .label("newmexico", next: [.termination])
  private static let _negative_museum_newport: PublicSuffix.Node = .label("newport", next: [.termination])
  private static let _negative_museum_newspaper: PublicSuffix.Node = .label("newspaper", next: [.termination])
  private static let _negative_museum_newyork: PublicSuffix.Node = .label("newyork", next: [.termination])
  private static let _negative_museum_niepce: PublicSuffix.Node = .label("niepce", next: [.termination])
  private static let _negative_museum_norfolk: PublicSuffix.Node = .label("norfolk", next: [.termination])
  private static let _negative_museum_north: PublicSuffix.Node = .label("north", next: [.termination])
  private static let _negative_museum_nrw: PublicSuffix.Node = .label("nrw", next: [.termination])
  private static let _negative_museum_nyc: PublicSuffix.Node = .label("nyc", next: [.termination])
  private static let _negative_museum_nyny: PublicSuffix.Node = .label("nyny", next: [.termination])
  private static let _negative_museum_oceanographic: PublicSuffix.Node = .label("oceanographic", next: [.termination])
  private static let _negative_museum_oceanographique: PublicSuffix.Node = .label("oceanographique", next: [.termination])
  private static let _negative_museum_omaha: PublicSuffix.Node = .label("omaha", next: [.termination])
  private static let _negative_museum_online: PublicSuffix.Node = .label("online", next: [.termination])
  private static let _negative_museum_ontario: PublicSuffix.Node = .label("ontario", next: [.termination])
  private static let _negative_museum_openair: PublicSuffix.Node = .label("openair", next: [.termination])
  private static let _negative_museum_oregon: PublicSuffix.Node = .label("oregon", next: [.termination])
  private static let _negative_museum_oregontrail: PublicSuffix.Node = .label("oregontrail", next: [.termination])
  private static let _negative_museum_otago: PublicSuffix.Node = .label("otago", next: [.termination])
  private static let _negative_museum_oxford: PublicSuffix.Node = .label("oxford", next: [.termination])
  private static let _negative_museum_pacific: PublicSuffix.Node = .label("pacific", next: [.termination])
  private static let _negative_museum_paderborn: PublicSuffix.Node = .label("paderborn", next: [.termination])
  private static let _negative_museum_palace: PublicSuffix.Node = .label("palace", next: [.termination])
  private static let _negative_museum_paleo: PublicSuffix.Node = .label("paleo", next: [.termination])
  private static let _negative_museum_palmsprings: PublicSuffix.Node = .label("palmsprings", next: [.termination])
  private static let _negative_museum_panama: PublicSuffix.Node = .label("panama", next: [.termination])
  private static let _negative_museum_paris: PublicSuffix.Node = .label("paris", next: [.termination])
  private static let _negative_museum_pasadena: PublicSuffix.Node = .label("pasadena", next: [.termination])
  private static let _negative_museum_pharmacy: PublicSuffix.Node = .label("pharmacy", next: [.termination])
  private static let _negative_museum_philadelphia: PublicSuffix.Node = .label("philadelphia", next: [.termination])
  private static let _negative_museum_philadelphiaarea: PublicSuffix.Node = .label("philadelphiaarea", next: [.termination])
  private static let _negative_museum_philately: PublicSuffix.Node = .label("philately", next: [.termination])
  private static let _negative_museum_phoenix: PublicSuffix.Node = .label("phoenix", next: [.termination])
  private static let _negative_museum_photography: PublicSuffix.Node = .label("photography", next: [.termination])
  private static let _negative_museum_pilots: PublicSuffix.Node = .label("pilots", next: [.termination])
  private static let _negative_museum_pittsburgh: PublicSuffix.Node = .label("pittsburgh", next: [.termination])
  private static let _negative_museum_planetarium: PublicSuffix.Node = .label("planetarium", next: [.termination])
  private static let _negative_museum_plantation: PublicSuffix.Node = .label("plantation", next: [.termination])
  private static let _negative_museum_plants: PublicSuffix.Node = .label("plants", next: [.termination])
  private static let _negative_museum_plaza: PublicSuffix.Node = .label("plaza", next: [.termination])
  private static let _negative_museum_portal: PublicSuffix.Node = .label("portal", next: [.termination])
  private static let _negative_museum_portland: PublicSuffix.Node = .label("portland", next: [.termination])
  private static let _negative_museum_portlligat: PublicSuffix.Node = .label("portlligat", next: [.termination])
  private static let _negative_museum_postsHandHtelecommunications: PublicSuffix.Node = .label("posts-and-telecommunications", next: [.termination])
  private static let _negative_museum_preservation: PublicSuffix.Node = .label("preservation", next: [.termination])
  private static let _negative_museum_presidio: PublicSuffix.Node = .label("presidio", next: [.termination])
  private static let _negative_museum_press: PublicSuffix.Node = .label("press", next: [.termination])
  private static let _negative_museum_project: PublicSuffix.Node = .label("project", next: [.termination])
  private static let _negative_museum_public: PublicSuffix.Node = .label("public", next: [.termination])
  private static let _negative_museum_pubol: PublicSuffix.Node = .label("pubol", next: [.termination])
  private static let _negative_museum_quebec: PublicSuffix.Node = .label("quebec", next: [.termination])
  private static let _negative_museum_railroad: PublicSuffix.Node = .label("railroad", next: [.termination])
  private static let _negative_museum_railway: PublicSuffix.Node = .label("railway", next: [.termination])
  private static let _negative_museum_research: PublicSuffix.Node = .label("research", next: [.termination])
  private static let _negative_museum_resistance: PublicSuffix.Node = .label("resistance", next: [.termination])
  private static let _negative_museum_riodejaneiro: PublicSuffix.Node = .label("riodejaneiro", next: [.termination])
  private static let _negative_museum_rochester: PublicSuffix.Node = .label("rochester", next: [.termination])
  private static let _negative_museum_rockart: PublicSuffix.Node = .label("rockart", next: [.termination])
  private static let _negative_museum_roma: PublicSuffix.Node = .label("roma", next: [.termination])
  private static let _negative_museum_russia: PublicSuffix.Node = .label("russia", next: [.termination])
  private static let _negative_museum_saintlouis: PublicSuffix.Node = .label("saintlouis", next: [.termination])
  private static let _negative_museum_salem: PublicSuffix.Node = .label("salem", next: [.termination])
  private static let _negative_museum_salvadordali: PublicSuffix.Node = .label("salvadordali", next: [.termination])
  private static let _negative_museum_salzburg: PublicSuffix.Node = .label("salzburg", next: [.termination])
  private static let _negative_museum_sandiego: PublicSuffix.Node = .label("sandiego", next: [.termination])
  private static let _negative_museum_sanfrancisco: PublicSuffix.Node = .label("sanfrancisco", next: [.termination])
  private static let _negative_museum_santabarbara: PublicSuffix.Node = .label("santabarbara", next: [.termination])
  private static let _negative_museum_santacruz: PublicSuffix.Node = .label("santacruz", next: [.termination])
  private static let _negative_museum_santafe: PublicSuffix.Node = .label("santafe", next: [.termination])
  private static let _negative_museum_saskatchewan: PublicSuffix.Node = .label("saskatchewan", next: [.termination])
  private static let _negative_museum_satx: PublicSuffix.Node = .label("satx", next: [.termination])
  private static let _negative_museum_savannahga: PublicSuffix.Node = .label("savannahga", next: [.termination])
  private static let _negative_museum_schlesisches: PublicSuffix.Node = .label("schlesisches", next: [.termination])
  private static let _negative_museum_schoenbrunn: PublicSuffix.Node = .label("schoenbrunn", next: [.termination])
  private static let _negative_museum_schokoladen: PublicSuffix.Node = .label("schokoladen", next: [.termination])
  private static let _negative_museum_school: PublicSuffix.Node = .label("school", next: [.termination])
  private static let _negative_museum_schweiz: PublicSuffix.Node = .label("schweiz", next: [.termination])
  private static let _negative_museum_science: PublicSuffix.Node = .label("science", next: [.termination])
  private static let _negative_museum_scienceHfiction: PublicSuffix.Node = .label("science-fiction", next: [.termination])
  private static let _negative_museum_scienceandhistory: PublicSuffix.Node = .label("scienceandhistory", next: [.termination])
  private static let _negative_museum_scienceandindustry: PublicSuffix.Node = .label("scienceandindustry", next: [.termination])
  private static let _negative_museum_sciencecenter: PublicSuffix.Node = .label("sciencecenter", next: [.termination])
  private static let _negative_museum_sciencecenters: PublicSuffix.Node = .label("sciencecenters", next: [.termination])
  private static let _negative_museum_sciencehistory: PublicSuffix.Node = .label("sciencehistory", next: [.termination])
  private static let _negative_museum_sciences: PublicSuffix.Node = .label("sciences", next: [.termination])
  private static let _negative_museum_sciencesnaturelles: PublicSuffix.Node = .label("sciencesnaturelles", next: [.termination])
  private static let _negative_museum_scotland: PublicSuffix.Node = .label("scotland", next: [.termination])
  private static let _negative_museum_seaport: PublicSuffix.Node = .label("seaport", next: [.termination])
  private static let _negative_museum_settlement: PublicSuffix.Node = .label("settlement", next: [.termination])
  private static let _negative_museum_settlers: PublicSuffix.Node = .label("settlers", next: [.termination])
  private static let _negative_museum_shell: PublicSuffix.Node = .label("shell", next: [.termination])
  private static let _negative_museum_sherbrooke: PublicSuffix.Node = .label("sherbrooke", next: [.termination])
  private static let _negative_museum_sibenik: PublicSuffix.Node = .label("sibenik", next: [.termination])
  private static let _negative_museum_silk: PublicSuffix.Node = .label("silk", next: [.termination])
  private static let _negative_museum_ski: PublicSuffix.Node = .label("ski", next: [.termination])
  private static let _negative_museum_skole: PublicSuffix.Node = .label("skole", next: [.termination])
  private static let _negative_museum_society: PublicSuffix.Node = .label("society", next: [.termination])
  private static let _negative_museum_sologne: PublicSuffix.Node = .label("sologne", next: [.termination])
  private static let _negative_museum_soundandvision: PublicSuffix.Node = .label("soundandvision", next: [.termination])
  private static let _negative_museum_southcarolina: PublicSuffix.Node = .label("southcarolina", next: [.termination])
  private static let _negative_museum_southwest: PublicSuffix.Node = .label("southwest", next: [.termination])
  private static let _negative_museum_space: PublicSuffix.Node = .label("space", next: [.termination])
  private static let _negative_museum_spy: PublicSuffix.Node = .label("spy", next: [.termination])
  private static let _negative_museum_square: PublicSuffix.Node = .label("square", next: [.termination])
  private static let _negative_museum_stadt: PublicSuffix.Node = .label("stadt", next: [.termination])
  private static let _negative_museum_stalbans: PublicSuffix.Node = .label("stalbans", next: [.termination])
  private static let _negative_museum_starnberg: PublicSuffix.Node = .label("starnberg", next: [.termination])
  private static let _negative_museum_state: PublicSuffix.Node = .label("state", next: [.termination])
  private static let _negative_museum_stateofdelaware: PublicSuffix.Node = .label("stateofdelaware", next: [.termination])
  private static let _negative_museum_station: PublicSuffix.Node = .label("station", next: [.termination])
  private static let _negative_museum_steam: PublicSuffix.Node = .label("steam", next: [.termination])
  private static let _negative_museum_steiermark: PublicSuffix.Node = .label("steiermark", next: [.termination])
  private static let _negative_museum_stjohn: PublicSuffix.Node = .label("stjohn", next: [.termination])
  private static let _negative_museum_stockholm: PublicSuffix.Node = .label("stockholm", next: [.termination])
  private static let _negative_museum_stpetersburg: PublicSuffix.Node = .label("stpetersburg", next: [.termination])
  private static let _negative_museum_stuttgart: PublicSuffix.Node = .label("stuttgart", next: [.termination])
  private static let _negative_museum_suisse: PublicSuffix.Node = .label("suisse", next: [.termination])
  private static let _negative_museum_surgeonshall: PublicSuffix.Node = .label("surgeonshall", next: [.termination])
  private static let _negative_museum_surrey: PublicSuffix.Node = .label("surrey", next: [.termination])
  private static let _negative_museum_svizzera: PublicSuffix.Node = .label("svizzera", next: [.termination])
  private static let _negative_museum_sweden: PublicSuffix.Node = .label("sweden", next: [.termination])
  private static let _negative_museum_sydney: PublicSuffix.Node = .label("sydney", next: [.termination])
  private static let _negative_museum_tank: PublicSuffix.Node = .label("tank", next: [.termination])
  private static let _negative_museum_tcm: PublicSuffix.Node = .label("tcm", next: [.termination])
  private static let _negative_museum_technology: PublicSuffix.Node = .label("technology", next: [.termination])
  private static let _negative_museum_telekommunikation: PublicSuffix.Node = .label("telekommunikation", next: [.termination])
  private static let _negative_museum_television: PublicSuffix.Node = .label("television", next: [.termination])
  private static let _negative_museum_texas: PublicSuffix.Node = .label("texas", next: [.termination])
  private static let _negative_museum_textile: PublicSuffix.Node = .label("textile", next: [.termination])
  private static let _negative_museum_theater: PublicSuffix.Node = .label("theater", next: [.termination])
  private static let _negative_museum_time: PublicSuffix.Node = .label("time", next: [.termination])
  private static let _negative_museum_timekeeping: PublicSuffix.Node = .label("timekeeping", next: [.termination])
  private static let _negative_museum_topology: PublicSuffix.Node = .label("topology", next: [.termination])
  private static let _negative_museum_torino: PublicSuffix.Node = .label("torino", next: [.termination])
  private static let _negative_museum_touch: PublicSuffix.Node = .label("touch", next: [.termination])
  private static let _negative_museum_town: PublicSuffix.Node = .label("town", next: [.termination])
  private static let _negative_museum_transport: PublicSuffix.Node = .label("transport", next: [.termination])
  private static let _negative_museum_tree: PublicSuffix.Node = .label("tree", next: [.termination])
  private static let _negative_museum_trolley: PublicSuffix.Node = .label("trolley", next: [.termination])
  private static let _negative_museum_trust: PublicSuffix.Node = .label("trust", next: [.termination])
  private static let _negative_museum_trustee: PublicSuffix.Node = .label("trustee", next: [.termination])
  private static let _negative_museum_uhren: PublicSuffix.Node = .label("uhren", next: [.termination])
  private static let _negative_museum_ulm: PublicSuffix.Node = .label("ulm", next: [.termination])
  private static let _negative_museum_undersea: PublicSuffix.Node = .label("undersea", next: [.termination])
  private static let _negative_museum_university: PublicSuffix.Node = .label("university", next: [.termination])
  private static let _negative_museum_usa: PublicSuffix.Node = .label("usa", next: [.termination])
  private static let _negative_museum_usantiques: PublicSuffix.Node = .label("usantiques", next: [.termination])
  private static let _negative_museum_usarts: PublicSuffix.Node = .label("usarts", next: [.termination])
  private static let _negative_museum_uscountryestate: PublicSuffix.Node = .label("uscountryestate", next: [.termination])
  private static let _negative_museum_usculture: PublicSuffix.Node = .label("usculture", next: [.termination])
  private static let _negative_museum_usdecorativearts: PublicSuffix.Node = .label("usdecorativearts", next: [.termination])
  private static let _negative_museum_usgarden: PublicSuffix.Node = .label("usgarden", next: [.termination])
  private static let _negative_museum_ushistory: PublicSuffix.Node = .label("ushistory", next: [.termination])
  private static let _negative_museum_ushuaia: PublicSuffix.Node = .label("ushuaia", next: [.termination])
  private static let _negative_museum_uslivinghistory: PublicSuffix.Node = .label("uslivinghistory", next: [.termination])
  private static let _negative_museum_utah: PublicSuffix.Node = .label("utah", next: [.termination])
  private static let _negative_museum_uvic: PublicSuffix.Node = .label("uvic", next: [.termination])
  private static let _negative_museum_valley: PublicSuffix.Node = .label("valley", next: [.termination])
  private static let _negative_museum_vantaa: PublicSuffix.Node = .label("vantaa", next: [.termination])
  private static let _negative_museum_versailles: PublicSuffix.Node = .label("versailles", next: [.termination])
  private static let _negative_museum_viking: PublicSuffix.Node = .label("viking", next: [.termination])
  private static let _negative_museum_village: PublicSuffix.Node = .label("village", next: [.termination])
  private static let _negative_museum_virginia: PublicSuffix.Node = .label("virginia", next: [.termination])
  private static let _negative_museum_virtual: PublicSuffix.Node = .label("virtual", next: [.termination])
  private static let _negative_museum_virtuel: PublicSuffix.Node = .label("virtuel", next: [.termination])
  private static let _negative_museum_vlaanderen: PublicSuffix.Node = .label("vlaanderen", next: [.termination])
  private static let _negative_museum_volkenkunde: PublicSuffix.Node = .label("volkenkunde", next: [.termination])
  private static let _negative_museum_wales: PublicSuffix.Node = .label("wales", next: [.termination])
  private static let _negative_museum_wallonie: PublicSuffix.Node = .label("wallonie", next: [.termination])
  private static let _negative_museum_war: PublicSuffix.Node = .label("war", next: [.termination])
  private static let _negative_museum_washingtondc: PublicSuffix.Node = .label("washingtondc", next: [.termination])
  private static let _negative_museum_watchHandHclock: PublicSuffix.Node = .label("watch-and-clock", next: [.termination])
  private static let _negative_museum_watchandclock: PublicSuffix.Node = .label("watchandclock", next: [.termination])
  private static let _negative_museum_western: PublicSuffix.Node = .label("western", next: [.termination])
  private static let _negative_museum_westfalen: PublicSuffix.Node = .label("westfalen", next: [.termination])
  private static let _negative_museum_whaling: PublicSuffix.Node = .label("whaling", next: [.termination])
  private static let _negative_museum_wildlife: PublicSuffix.Node = .label("wildlife", next: [.termination])
  private static let _negative_museum_williamsburg: PublicSuffix.Node = .label("williamsburg", next: [.termination])
  private static let _negative_museum_windmill: PublicSuffix.Node = .label("windmill", next: [.termination])
  private static let _negative_museum_workshop: PublicSuffix.Node = .label("workshop", next: [.termination])
  private static let _negative_museum_york: PublicSuffix.Node = .label("york", next: [.termination])
  private static let _negative_museum_yorkshire: PublicSuffix.Node = .label("yorkshire", next: [.termination])
  private static let _negative_museum_yosemite: PublicSuffix.Node = .label("yosemite", next: [.termination])
  private static let _negative_museum_youth: PublicSuffix.Node = .label("youth", next: [.termination])
  private static let _negative_museum_zoological: PublicSuffix.Node = .label("zoological", next: [.termination])
  private static let _negative_museum_zoology: PublicSuffix.Node = .label("zoology", next: [.termination])
  private static let _negative_museum_иком: PublicSuffix.Node = .label("иком", next: [.termination])
  private static let _negative_museum_ירושלים: PublicSuffix.Node = .label("ירושלים", next: [.termination])
  private static let _negative_museum: PublicSuffix.Node = .label("museum", next: [.termination, _negative_museum_academy, _negative_museum_agriculture, _negative_museum_air, _negative_museum_airguard, _negative_museum_alabama, _negative_museum_alaska, _negative_museum_amber, _negative_museum_ambulance, _negative_museum_american, _negative_museum_americana, _negative_museum_americanantiques, _negative_museum_americanart, _negative_museum_amsterdam, _negative_museum_and, _negative_museum_annefrank, _negative_museum_anthro, _negative_museum_anthropology, _negative_museum_antiques, _negative_museum_aquarium, _negative_museum_arboretum, _negative_museum_archaeological, _negative_museum_archaeology, _negative_museum_architecture, _negative_museum_art, _negative_museum_artanddesign, _negative_museum_artcenter, _negative_museum_artdeco, _negative_museum_arteducation, _negative_museum_artgallery, _negative_museum_arts, _negative_museum_artsandcrafts, _negative_museum_asmatart, _negative_museum_assassination, _negative_museum_assisi, _negative_museum_association, _negative_museum_astronomy, _negative_museum_atlanta, _negative_museum_austin, _negative_museum_australia, _negative_museum_automotive, _negative_museum_aviation, _negative_museum_axis, _negative_museum_badajoz, _negative_museum_baghdad, _negative_museum_bahn, _negative_museum_bale, _negative_museum_baltimore, _negative_museum_barcelona, _negative_museum_baseball, _negative_museum_basel, _negative_museum_baths, _negative_museum_bauern, _negative_museum_beauxarts, _negative_museum_beeldengeluid, _negative_museum_bellevue, _negative_museum_bergbau, _negative_museum_berkeley, _negative_museum_berlin, _negative_museum_bern, _negative_museum_bible, _negative_museum_bilbao, _negative_museum_bill, _negative_museum_birdart, _negative_museum_birthplace, _negative_museum_bonn, _negative_museum_boston, _negative_museum_botanical, _negative_museum_botanicalgarden, _negative_museum_botanicgarden, _negative_museum_botany, _negative_museum_brandywinevalley, _negative_museum_brasil, _negative_museum_bristol, _negative_museum_british, _negative_museum_britishcolumbia, _negative_museum_broadcast, _negative_museum_brunel, _negative_museum_brussel, _negative_museum_brussels, _negative_museum_bruxelles, _negative_museum_building, _negative_museum_burghof, _negative_museum_bus, _negative_museum_bushey, _negative_museum_cadaques, _negative_museum_california, _negative_museum_cambridge, _negative_museum_can, _negative_museum_canada, _negative_museum_capebreton, _negative_museum_carrier, _negative_museum_cartoonart, _negative_museum_casadelamoneda, _negative_museum_castle, _negative_museum_castres, _negative_museum_celtic, _negative_museum_center, _negative_museum_chattanooga, _negative_museum_cheltenham, _negative_museum_chesapeakebay, _negative_museum_chicago, _negative_museum_children, _negative_museum_childrens, _negative_museum_childrensgarden, _negative_museum_chiropractic, _negative_museum_chocolate, _negative_museum_christiansburg, _negative_museum_cincinnati, _negative_museum_cinema, _negative_museum_circus, _negative_museum_civilisation, _negative_museum_civilization, _negative_museum_civilwar, _negative_museum_clinton, _negative_museum_clock, _negative_museum_coal, _negative_museum_coastaldefence, _negative_museum_cody, _negative_museum_coldwar, _negative_museum_collection, _negative_museum_colonialwilliamsburg, _negative_museum_coloradoplateau, _negative_museum_columbia, _negative_museum_columbus, _negative_museum_communication, _negative_museum_communications, _negative_museum_community, _negative_museum_computer, _negative_museum_computerhistory, _negative_museum_comunicações, _negative_museum_contemporary, _negative_museum_contemporaryart, _negative_museum_convent, _negative_museum_copenhagen, _negative_museum_corporation, _negative_museum_correiosHeHtelecomunicações, _negative_museum_corvette, _negative_museum_costume, _negative_museum_countryestate, _negative_museum_county, _negative_museum_crafts, _negative_museum_cranbrook, _negative_museum_creation, _negative_museum_cultural, _negative_museum_culturalcenter, _negative_museum_culture, _negative_museum_cyber, _negative_museum_cymru, _negative_museum_dali, _negative_museum_dallas, _negative_museum_database, _negative_museum_ddr, _negative_museum_decorativearts, _negative_museum_delaware, _negative_museum_delmenhorst, _negative_museum_denmark, _negative_museum_depot, _negative_museum_design, _negative_museum_detroit, _negative_museum_dinosaur, _negative_museum_discovery, _negative_museum_dolls, _negative_museum_donostia, _negative_museum_durham, _negative_museum_eastafrica, _negative_museum_eastcoast, _negative_museum_education, _negative_museum_educational, _negative_museum_egyptian, _negative_museum_eisenbahn, _negative_museum_elburg, _negative_museum_elvendrell, _negative_museum_embroidery, _negative_museum_encyclopedic, _negative_museum_england, _negative_museum_entomology, _negative_museum_environment, _negative_museum_environmentalconservation, _negative_museum_epilepsy, _negative_museum_essex, _negative_museum_estate, _negative_museum_ethnology, _negative_museum_exeter, _negative_museum_exhibition, _negative_museum_family, _negative_museum_farm, _negative_museum_farmequipment, _negative_museum_farmers, _negative_museum_farmstead, _negative_museum_field, _negative_museum_figueres, _negative_museum_filatelia, _negative_museum_film, _negative_museum_fineart, _negative_museum_finearts, _negative_museum_finland, _negative_museum_flanders, _negative_museum_florida, _negative_museum_force, _negative_museum_fortmissoula, _negative_museum_fortworth, _negative_museum_foundation, _negative_museum_francaise, _negative_museum_frankfurt, _negative_museum_franziskaner, _negative_museum_freemasonry, _negative_museum_freiburg, _negative_museum_fribourg, _negative_museum_frog, _negative_museum_fundacio, _negative_museum_furniture, _negative_museum_gallery, _negative_museum_garden, _negative_museum_gateway, _negative_museum_geelvinck, _negative_museum_gemological, _negative_museum_geology, _negative_museum_georgia, _negative_museum_giessen, _negative_museum_glas, _negative_museum_glass, _negative_museum_gorge, _negative_museum_grandrapids, _negative_museum_graz, _negative_museum_guernsey, _negative_museum_halloffame, _negative_museum_hamburg, _negative_museum_handson, _negative_museum_harvestcelebration, _negative_museum_hawaii, _negative_museum_health, _negative_museum_heimatunduhren, _negative_museum_hellas, _negative_museum_helsinki, _negative_museum_hembygdsforbund, _negative_museum_heritage, _negative_museum_histoire, _negative_museum_historical, _negative_museum_historicalsociety, _negative_museum_historichouses, _negative_museum_historisch, _negative_museum_historisches, _negative_museum_history, _negative_museum_historyofscience, _negative_museum_horology, _negative_museum_house, _negative_museum_humanities, _negative_museum_illustration, _negative_museum_imageandsound, _negative_museum_indian, _negative_museum_indiana, _negative_museum_indianapolis, _negative_museum_indianmarket, _negative_museum_intelligence, _negative_museum_interactive, _negative_museum_iraq, _negative_museum_iron, _negative_museum_isleofman, _negative_museum_jamison, _negative_museum_jefferson, _negative_museum_jerusalem, _negative_museum_jewelry, _negative_museum_jewish, _negative_museum_jewishart, _negative_museum_jfk, _negative_museum_journalism, _negative_museum_judaica, _negative_museum_judygarland, _negative_museum_juedisches, _negative_museum_juif, _negative_museum_karate, _negative_museum_karikatur, _negative_museum_kids, _negative_museum_koebenhavn, _negative_museum_koeln, _negative_museum_kunst, _negative_museum_kunstsammlung, _negative_museum_kunstunddesign, _negative_museum_labor, _negative_museum_labour, _negative_museum_lajolla, _negative_museum_lancashire, _negative_museum_landes, _negative_museum_lans, _negative_museum_larsson, _negative_museum_lewismiller, _negative_museum_lincoln, _negative_museum_linz, _negative_museum_living, _negative_museum_livinghistory, _negative_museum_localhistory, _negative_museum_london, _negative_museum_losangeles, _negative_museum_louvre, _negative_museum_loyalist, _negative_museum_lucerne, _negative_museum_luxembourg, _negative_museum_luzern, _negative_museum_läns, _negative_museum_mad, _negative_museum_madrid, _negative_museum_mallorca, _negative_museum_manchester, _negative_museum_mansion, _negative_museum_mansions, _negative_museum_manx, _negative_museum_marburg, _negative_museum_maritime, _negative_museum_maritimo, _negative_museum_maryland, _negative_museum_marylhurst, _negative_museum_media, _negative_museum_medical, _negative_museum_medizinhistorisches, _negative_museum_meeres, _negative_museum_memorial, _negative_museum_mesaverde, _negative_museum_michigan, _negative_museum_midatlantic, _negative_museum_military, _negative_museum_mill, _negative_museum_miners, _negative_museum_mining, _negative_museum_minnesota, _negative_museum_missile, _negative_museum_missoula, _negative_museum_modern, _negative_museum_moma, _negative_museum_money, _negative_museum_monmouth, _negative_museum_monticello, _negative_museum_montreal, _negative_museum_moscow, _negative_museum_motorcycle, _negative_museum_muenchen, _negative_museum_muenster, _negative_museum_mulhouse, _negative_museum_muncie, _negative_museum_museet, _negative_museum_museumcenter, _negative_museum_museumvereniging, _negative_museum_music, _negative_museum_national, _negative_museum_nationalfirearms, _negative_museum_nationalheritage, _negative_museum_nativeamerican, _negative_museum_naturalhistory, _negative_museum_naturalhistorymuseum, _negative_museum_naturalsciences, _negative_museum_nature, _negative_museum_naturhistorisches, _negative_museum_natuurwetenschappen, _negative_museum_naumburg, _negative_museum_naval, _negative_museum_nebraska, _negative_museum_neues, _negative_museum_newhampshire, _negative_museum_newjersey, _negative_museum_newmexico, _negative_museum_newport, _negative_museum_newspaper, _negative_museum_newyork, _negative_museum_niepce, _negative_museum_norfolk, _negative_museum_north, _negative_museum_nrw, _negative_museum_nyc, _negative_museum_nyny, _negative_museum_oceanographic, _negative_museum_oceanographique, _negative_museum_omaha, _negative_museum_online, _negative_museum_ontario, _negative_museum_openair, _negative_museum_oregon, _negative_museum_oregontrail, _negative_museum_otago, _negative_museum_oxford, _negative_museum_pacific, _negative_museum_paderborn, _negative_museum_palace, _negative_museum_paleo, _negative_museum_palmsprings, _negative_museum_panama, _negative_museum_paris, _negative_museum_pasadena, _negative_museum_pharmacy, _negative_museum_philadelphia, _negative_museum_philadelphiaarea, _negative_museum_philately, _negative_museum_phoenix, _negative_museum_photography, _negative_museum_pilots, _negative_museum_pittsburgh, _negative_museum_planetarium, _negative_museum_plantation, _negative_museum_plants, _negative_museum_plaza, _negative_museum_portal, _negative_museum_portland, _negative_museum_portlligat, _negative_museum_postsHandHtelecommunications, _negative_museum_preservation, _negative_museum_presidio, _negative_museum_press, _negative_museum_project, _negative_museum_public, _negative_museum_pubol, _negative_museum_quebec, _negative_museum_railroad, _negative_museum_railway, _negative_museum_research, _negative_museum_resistance, _negative_museum_riodejaneiro, _negative_museum_rochester, _negative_museum_rockart, _negative_museum_roma, _negative_museum_russia, _negative_museum_saintlouis, _negative_museum_salem, _negative_museum_salvadordali, _negative_museum_salzburg, _negative_museum_sandiego, _negative_museum_sanfrancisco, _negative_museum_santabarbara, _negative_museum_santacruz, _negative_museum_santafe, _negative_museum_saskatchewan, _negative_museum_satx, _negative_museum_savannahga, _negative_museum_schlesisches, _negative_museum_schoenbrunn, _negative_museum_schokoladen, _negative_museum_school, _negative_museum_schweiz, _negative_museum_science, _negative_museum_scienceHfiction, _negative_museum_scienceandhistory, _negative_museum_scienceandindustry, _negative_museum_sciencecenter, _negative_museum_sciencecenters, _negative_museum_sciencehistory, _negative_museum_sciences, _negative_museum_sciencesnaturelles, _negative_museum_scotland, _negative_museum_seaport, _negative_museum_settlement, _negative_museum_settlers, _negative_museum_shell, _negative_museum_sherbrooke, _negative_museum_sibenik, _negative_museum_silk, _negative_museum_ski, _negative_museum_skole, _negative_museum_society, _negative_museum_sologne, _negative_museum_soundandvision, _negative_museum_southcarolina, _negative_museum_southwest, _negative_museum_space, _negative_museum_spy, _negative_museum_square, _negative_museum_stadt, _negative_museum_stalbans, _negative_museum_starnberg, _negative_museum_state, _negative_museum_stateofdelaware, _negative_museum_station, _negative_museum_steam, _negative_museum_steiermark, _negative_museum_stjohn, _negative_museum_stockholm, _negative_museum_stpetersburg, _negative_museum_stuttgart, _negative_museum_suisse, _negative_museum_surgeonshall, _negative_museum_surrey, _negative_museum_svizzera, _negative_museum_sweden, _negative_museum_sydney, _negative_museum_tank, _negative_museum_tcm, _negative_museum_technology, _negative_museum_telekommunikation, _negative_museum_television, _negative_museum_texas, _negative_museum_textile, _negative_museum_theater, _negative_museum_time, _negative_museum_timekeeping, _negative_museum_topology, _negative_museum_torino, _negative_museum_touch, _negative_museum_town, _negative_museum_transport, _negative_museum_tree, _negative_museum_trolley, _negative_museum_trust, _negative_museum_trustee, _negative_museum_uhren, _negative_museum_ulm, _negative_museum_undersea, _negative_museum_university, _negative_museum_usa, _negative_museum_usantiques, _negative_museum_usarts, _negative_museum_uscountryestate, _negative_museum_usculture, _negative_museum_usdecorativearts, _negative_museum_usgarden, _negative_museum_ushistory, _negative_museum_ushuaia, _negative_museum_uslivinghistory, _negative_museum_utah, _negative_museum_uvic, _negative_museum_valley, _negative_museum_vantaa, _negative_museum_versailles, _negative_museum_viking, _negative_museum_village, _negative_museum_virginia, _negative_museum_virtual, _negative_museum_virtuel, _negative_museum_vlaanderen, _negative_museum_volkenkunde, _negative_museum_wales, _negative_museum_wallonie, _negative_museum_war, _negative_museum_washingtondc, _negative_museum_watchHandHclock, _negative_museum_watchandclock, _negative_museum_western, _negative_museum_westfalen, _negative_museum_whaling, _negative_museum_wildlife, _negative_museum_williamsburg, _negative_museum_windmill, _negative_museum_workshop, _negative_museum_york, _negative_museum_yorkshire, _negative_museum_yosemite, _negative_museum_youth, _negative_museum_zoological, _negative_museum_zoology, _negative_museum_иком, _negative_museum_ירושלים])
  private static let _negative_music: PublicSuffix.Node = .label("music", next: [.termination])
  private static let _negative_mutual: PublicSuffix.Node = .label("mutual", next: [.termination])
  private static let _negative_mv_aero: PublicSuffix.Node = .label("aero", next: [.termination])
  private static let _negative_mv_biz: PublicSuffix.Node = .label("biz", next: [.termination])
  private static let _negative_mv_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_mv_coop: PublicSuffix.Node = .label("coop", next: [.termination])
  private static let _negative_mv_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_mv_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_mv_info: PublicSuffix.Node = .label("info", next: [.termination])
  private static let _negative_mv_int: PublicSuffix.Node = .label("int", next: [.termination])
  private static let _negative_mv_mil: PublicSuffix.Node = .label("mil", next: [.termination])
  private static let _negative_mv_museum: PublicSuffix.Node = .label("museum", next: [.termination])
  private static let _negative_mv_name: PublicSuffix.Node = .label("name", next: [.termination])
  private static let _negative_mv_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_mv_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_mv_pro: PublicSuffix.Node = .label("pro", next: [.termination])
  private static let _negative_mv: PublicSuffix.Node = .label("mv", next: [.termination, _negative_mv_aero, _negative_mv_biz, _negative_mv_com, _negative_mv_coop, _negative_mv_edu, _negative_mv_gov, _negative_mv_info, _negative_mv_int, _negative_mv_mil, _negative_mv_museum, _negative_mv_name, _negative_mv_net, _negative_mv_org, _negative_mv_pro])
  private static let _negative_mw_ac: PublicSuffix.Node = .label("ac", next: [.termination])
  private static let _negative_mw_biz: PublicSuffix.Node = .label("biz", next: [.termination])
  private static let _negative_mw_co: PublicSuffix.Node = .label("co", next: [.termination])
  private static let _negative_mw_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_mw_coop: PublicSuffix.Node = .label("coop", next: [.termination])
  private static let _negative_mw_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_mw_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_mw_int: PublicSuffix.Node = .label("int", next: [.termination])
  private static let _negative_mw_museum: PublicSuffix.Node = .label("museum", next: [.termination])
  private static let _negative_mw_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_mw_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_mw: PublicSuffix.Node = .label("mw", next: [.termination, _negative_mw_ac, _negative_mw_biz, _negative_mw_co, _negative_mw_com, _negative_mw_coop, _negative_mw_edu, _negative_mw_gov, _negative_mw_int, _negative_mw_museum, _negative_mw_net, _negative_mw_org])
  private static let _negative_mx_blogspot: PublicSuffix.Node = .label("blogspot", next: [.termination])
  private static let _negative_mx_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_mx_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_mx_gob: PublicSuffix.Node = .label("gob", next: [.termination])
  private static let _negative_mx_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_mx_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_mx: PublicSuffix.Node = .label("mx", next: [.termination, _negative_mx_blogspot, _negative_mx_com, _negative_mx_edu, _negative_mx_gob, _negative_mx_net, _negative_mx_org])
  private static let _negative_my_biz: PublicSuffix.Node = .label("biz", next: [.termination])
  private static let _negative_my_blogspot: PublicSuffix.Node = .label("blogspot", next: [.termination])
  private static let _negative_my_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_my_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_my_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_my_mil: PublicSuffix.Node = .label("mil", next: [.termination])
  private static let _negative_my_name: PublicSuffix.Node = .label("name", next: [.termination])
  private static let _negative_my_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_my_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_my: PublicSuffix.Node = .label("my", next: [.termination, _negative_my_biz, _negative_my_blogspot, _negative_my_com, _negative_my_edu, _negative_my_gov, _negative_my_mil, _negative_my_name, _negative_my_net, _negative_my_org])
  private static let _negative_mz_ac: PublicSuffix.Node = .label("ac", next: [.termination])
  private static let _negative_mz_adv: PublicSuffix.Node = .label("adv", next: [.termination])
  private static let _negative_mz_co: PublicSuffix.Node = .label("co", next: [.termination])
  private static let _negative_mz_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_mz_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_mz_mil: PublicSuffix.Node = .label("mil", next: [.termination])
  private static let _negative_mz_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_mz_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_mz: PublicSuffix.Node = .label("mz", next: [.termination, _negative_mz_ac, _negative_mz_adv, _negative_mz_co, _negative_mz_edu, _negative_mz_gov, _negative_mz_mil, _negative_mz_net, _negative_mz_org])
  private static let _negative_na_ca: PublicSuffix.Node = .label("ca", next: [.termination])
  private static let _negative_na_cc: PublicSuffix.Node = .label("cc", next: [.termination])
  private static let _negative_na_co: PublicSuffix.Node = .label("co", next: [.termination])
  private static let _negative_na_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_na_dr: PublicSuffix.Node = .label("dr", next: [.termination])
  private static let _negative_na_in: PublicSuffix.Node = .label("in", next: [.termination])
  private static let _negative_na_info: PublicSuffix.Node = .label("info", next: [.termination])
  private static let _negative_na_mobi: PublicSuffix.Node = .label("mobi", next: [.termination])
  private static let _negative_na_mx: PublicSuffix.Node = .label("mx", next: [.termination])
  private static let _negative_na_name: PublicSuffix.Node = .label("name", next: [.termination])
  private static let _negative_na_or: PublicSuffix.Node = .label("or", next: [.termination])
  private static let _negative_na_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_na_pro: PublicSuffix.Node = .label("pro", next: [.termination])
  private static let _negative_na_school: PublicSuffix.Node = .label("school", next: [.termination])
  private static let _negative_na_tv: PublicSuffix.Node = .label("tv", next: [.termination])
  private static let _negative_na_us: PublicSuffix.Node = .label("us", next: [.termination])
  private static let _negative_na_ws: PublicSuffix.Node = .label("ws", next: [.termination])
  private static let _negative_na: PublicSuffix.Node = .label("na", next: [.termination, _negative_na_ca, _negative_na_cc, _negative_na_co, _negative_na_com, _negative_na_dr, _negative_na_in, _negative_na_info, _negative_na_mobi, _negative_na_mx, _negative_na_name, _negative_na_or, _negative_na_org, _negative_na_pro, _negative_na_school, _negative_na_tv, _negative_na_us, _negative_na_ws])
  private static let _negative_nab: PublicSuffix.Node = .label("nab", next: [.termination])
  private static let _negative_nagoya: PublicSuffix.Node = .label("nagoya", next: [.termination])
  private static let _negative_name_her_forgot: PublicSuffix.Node = .label("forgot", next: [.termination])
  private static let _negative_name_her: PublicSuffix.Node = .label("her", next: [_negative_name_her_forgot])
  private static let _negative_name_his_forgot: PublicSuffix.Node = .label("forgot", next: [.termination])
  private static let _negative_name_his: PublicSuffix.Node = .label("his", next: [_negative_name_his_forgot])
  private static let _negative_name: PublicSuffix.Node = .label("name", next: [.termination, _negative_name_her, _negative_name_his])
  private static let _negative_natura: PublicSuffix.Node = .label("natura", next: [.termination])
  private static let _negative_navy: PublicSuffix.Node = .label("navy", next: [.termination])
  private static let _negative_nba: PublicSuffix.Node = .label("nba", next: [.termination])
  private static let _negative_nc_asso: PublicSuffix.Node = .label("asso", next: [.termination])
  private static let _negative_nc_nom: PublicSuffix.Node = .label("nom", next: [.termination])
  private static let _negative_nc: PublicSuffix.Node = .label("nc", next: [.termination, _negative_nc_asso, _negative_nc_nom])
  private static let _negative_ne: PublicSuffix.Node = .label("ne", next: [.termination])
  private static let _negative_nec: PublicSuffix.Node = .label("nec", next: [.termination])
  private static let _negative_net_adobeaemcloud: PublicSuffix.Node = .label("adobeaemcloud", next: [.termination])
  private static let _negative_net_alwaysdata: PublicSuffix.Node = .label("alwaysdata", next: [.termination])
  private static let _negative_net_appudo: PublicSuffix.Node = .label("appudo", next: [.termination])
  private static let _negative_net_atHbandHcamp: PublicSuffix.Node = .label("at-band-camp", next: [.termination])
  private static let _negative_net_atlassianHdev_prod_cdn: PublicSuffix.Node = .label("cdn", next: [.termination])
  private static let _negative_net_atlassianHdev_prod: PublicSuffix.Node = .label("prod", next: [_negative_net_atlassianHdev_prod_cdn])
  private static let _negative_net_atlassianHdev: PublicSuffix.Node = .label("atlassian-dev", next: [_negative_net_atlassianHdev_prod])
  private static let _negative_net_azureHmobile: PublicSuffix.Node = .label("azure-mobile", next: [.termination])
  private static let _negative_net_azurestaticapps_1: PublicSuffix.Node = .label("1", next: [.termination])
  private static let _negative_net_azurestaticapps_centralus: PublicSuffix.Node = .label("centralus", next: [.termination])
  private static let _negative_net_azurestaticapps_eastasia: PublicSuffix.Node = .label("eastasia", next: [.termination])
  private static let _negative_net_azurestaticapps_eastus2: PublicSuffix.Node = .label("eastus2", next: [.termination])
  private static let _negative_net_azurestaticapps_westeurope: PublicSuffix.Node = .label("westeurope", next: [.termination])
  private static let _negative_net_azurestaticapps_westus2: PublicSuffix.Node = .label("westus2", next: [.termination])
  private static let _negative_net_azurestaticapps: PublicSuffix.Node = .label("azurestaticapps", next: [.termination, _negative_net_azurestaticapps_1, _negative_net_azurestaticapps_centralus, _negative_net_azurestaticapps_eastasia, _negative_net_azurestaticapps_eastus2, _negative_net_azurestaticapps_westeurope, _negative_net_azurestaticapps_westus2])
  private static let _negative_net_azurewebsites: PublicSuffix.Node = .label("azurewebsites", next: [.termination])
  private static let _negative_net_bar0: PublicSuffix.Node = .label("bar0", next: [.termination])
  private static let _negative_net_bar1: PublicSuffix.Node = .label("bar1", next: [.termination])
  private static let _negative_net_bar2: PublicSuffix.Node = .label("bar2", next: [.termination])
  private static let _negative_net_barsy: PublicSuffix.Node = .label("barsy", next: [.termination])
  private static let _negative_net_bitbridge: PublicSuffix.Node = .label("bitbridge", next: [.termination])
  private static let _negative_net_blackbaudcdn: PublicSuffix.Node = .label("blackbaudcdn", next: [.termination])
  private static let _negative_net_blogdns: PublicSuffix.Node = .label("blogdns", next: [.termination])
  private static let _negative_net_boomla: PublicSuffix.Node = .label("boomla", next: [.termination])
  private static let _negative_net_bounceme: PublicSuffix.Node = .label("bounceme", next: [.termination])
  private static let _negative_net_bplaced: PublicSuffix.Node = .label("bplaced", next: [.termination])
  private static let _negative_net_brokeHit: PublicSuffix.Node = .label("broke-it", next: [.termination])
  private static let _negative_net_buyshouses: PublicSuffix.Node = .label("buyshouses", next: [.termination])
  private static let _negative_net_casacam: PublicSuffix.Node = .label("casacam", next: [.termination])
  private static let _negative_net_cdnHedges: PublicSuffix.Node = .label("cdn-edges", next: [.termination])
  private static let _negative_net_cdn77_r: PublicSuffix.Node = .label("r", next: [.termination])
  private static let _negative_net_cdn77: PublicSuffix.Node = .label("cdn77", next: [_negative_net_cdn77_r])
  private static let _negative_net_cdn77Hssl: PublicSuffix.Node = .label("cdn77-ssl", next: [.termination])
  private static let _negative_net_channelsdvr_u: PublicSuffix.Node = .label("u", next: [.termination])
  private static let _negative_net_channelsdvr: PublicSuffix.Node = .label("channelsdvr", next: [.termination, _negative_net_channelsdvr_u])
  private static let _negative_net_clickrising: PublicSuffix.Node = .label("clickrising", next: [.termination])
  private static let _negative_net_cloudaccess: PublicSuffix.Node = .label("cloudaccess", next: [.termination])
  private static let _negative_net_cloudapp: PublicSuffix.Node = .label("cloudapp", next: [.termination])
  private static let _negative_net_cloudfront: PublicSuffix.Node = .label("cloudfront", next: [.termination])
  private static let _negative_net_cloudfunctions: PublicSuffix.Node = .label("cloudfunctions", next: [.termination])
  private static let _negative_net_cloudjiffy_fra1Hde: PublicSuffix.Node = .label("fra1-de", next: [.termination])
  private static let _negative_net_cloudjiffy_west1Hus: PublicSuffix.Node = .label("west1-us", next: [.termination])
  private static let _negative_net_cloudjiffy: PublicSuffix.Node = .label("cloudjiffy", next: [.termination, _negative_net_cloudjiffy_fra1Hde, _negative_net_cloudjiffy_west1Hus])
  private static let _negative_net_cloudycluster: PublicSuffix.Node = .label("cloudycluster", next: [.termination])
  private static let _negative_net_communityHpro: PublicSuffix.Node = .label("community-pro", next: [.termination])
  private static let _negative_net_cryptonomic: PublicSuffix.Node = .label("cryptonomic", next: [.any])
  private static let _negative_net_dattolocal: PublicSuffix.Node = .label("dattolocal", next: [.termination])
  private static let _negative_net_ddns: PublicSuffix.Node = .label("ddns", next: [.termination])
  private static let _negative_net_debian: PublicSuffix.Node = .label("debian", next: [.termination])
  private static let _negative_net_definima: PublicSuffix.Node = .label("definima", next: [.termination])
  private static let _negative_net_dnsalias: PublicSuffix.Node = .label("dnsalias", next: [.termination])
  private static let _negative_net_dnsdojo: PublicSuffix.Node = .label("dnsdojo", next: [.termination])
  private static let _negative_net_dnsup: PublicSuffix.Node = .label("dnsup", next: [.termination])
  private static let _negative_net_doesHit: PublicSuffix.Node = .label("does-it", next: [.termination])
  private static let _negative_net_dontexist: PublicSuffix.Node = .label("dontexist", next: [.termination])
  private static let _negative_net_dsmynas: PublicSuffix.Node = .label("dsmynas", next: [.termination])
  private static let _negative_net_dynalias: PublicSuffix.Node = .label("dynalias", next: [.termination])
  private static let _negative_net_dynathome: PublicSuffix.Node = .label("dynathome", next: [.termination])
  private static let _negative_net_dynu: PublicSuffix.Node = .label("dynu", next: [.termination])
  private static let _negative_net_dynv6: PublicSuffix.Node = .label("dynv6", next: [.termination])
  private static let _negative_net_eatingHorganic: PublicSuffix.Node = .label("eating-organic", next: [.termination])
  private static let _negative_net_edgeapp: PublicSuffix.Node = .label("edgeapp", next: [.termination])
  private static let _negative_net_elastx_jlsHsto1: PublicSuffix.Node = .label("jls-sto1", next: [.termination])
  private static let _negative_net_elastx_jlsHsto2: PublicSuffix.Node = .label("jls-sto2", next: [.termination])
  private static let _negative_net_elastx_jlsHsto3: PublicSuffix.Node = .label("jls-sto3", next: [.termination])
  private static let _negative_net_elastx: PublicSuffix.Node = .label("elastx", next: [_negative_net_elastx_jlsHsto1, _negative_net_elastx_jlsHsto2, _negative_net_elastx_jlsHsto3])
  private static let _negative_net_endofinternet: PublicSuffix.Node = .label("endofinternet", next: [.termination])
  private static let _negative_net_familyds: PublicSuffix.Node = .label("familyds", next: [.termination])
  private static let _negative_net_fastly_freetls: PublicSuffix.Node = .label("freetls", next: [.termination])
  private static let _negative_net_fastly_map: PublicSuffix.Node = .label("map", next: [.termination])
  private static let _negative_net_fastly_prod_a: PublicSuffix.Node = .label("a", next: [.termination])
  private static let _negative_net_fastly_prod_global: PublicSuffix.Node = .label("global", next: [.termination])
  private static let _negative_net_fastly_prod: PublicSuffix.Node = .label("prod", next: [_negative_net_fastly_prod_a, _negative_net_fastly_prod_global])
  private static let _negative_net_fastly_ssl_a: PublicSuffix.Node = .label("a", next: [.termination])
  private static let _negative_net_fastly_ssl_b: PublicSuffix.Node = .label("b", next: [.termination])
  private static let _negative_net_fastly_ssl_global: PublicSuffix.Node = .label("global", next: [.termination])
  private static let _negative_net_fastly_ssl: PublicSuffix.Node = .label("ssl", next: [_negative_net_fastly_ssl_a, _negative_net_fastly_ssl_b, _negative_net_fastly_ssl_global])
  private static let _negative_net_fastly: PublicSuffix.Node = .label("fastly", next: [_negative_net_fastly_freetls, _negative_net_fastly_map, _negative_net_fastly_prod, _negative_net_fastly_ssl])
  private static let _negative_net_fastlylb_map: PublicSuffix.Node = .label("map", next: [.termination])
  private static let _negative_net_fastlylb: PublicSuffix.Node = .label("fastlylb", next: [.termination, _negative_net_fastlylb_map])
  private static let _negative_net_faststacks: PublicSuffix.Node = .label("faststacks", next: [.termination])
  private static let _negative_net_festeHip: PublicSuffix.Node = .label("feste-ip", next: [.termination])
  private static let _negative_net_firewallHgateway: PublicSuffix.Node = .label("firewall-gateway", next: [.termination])
  private static let _negative_net_flynnhosting: PublicSuffix.Node = .label("flynnhosting", next: [.termination])
  private static let _negative_net_fromHaz: PublicSuffix.Node = .label("from-az", next: [.termination])
  private static let _negative_net_fromHco: PublicSuffix.Node = .label("from-co", next: [.termination])
  private static let _negative_net_fromHla: PublicSuffix.Node = .label("from-la", next: [.termination])
  private static let _negative_net_fromHny: PublicSuffix.Node = .label("from-ny", next: [.termination])
  private static let _negative_net_gb: PublicSuffix.Node = .label("gb", next: [.termination])
  private static let _negative_net_getsHit: PublicSuffix.Node = .label("gets-it", next: [.termination])
  private static let _negative_net_hamHradioHop: PublicSuffix.Node = .label("ham-radio-op", next: [.termination])
  private static let _negative_net_heteml: PublicSuffix.Node = .label("heteml", next: [.termination])
  private static let _negative_net_hicam: PublicSuffix.Node = .label("hicam", next: [.termination])
  private static let _negative_net_homeftp: PublicSuffix.Node = .label("homeftp", next: [.termination])
  private static let _negative_net_homeip: PublicSuffix.Node = .label("homeip", next: [.termination])
  private static let _negative_net_homelinux: PublicSuffix.Node = .label("homelinux", next: [.termination])
  private static let _negative_net_homeunix: PublicSuffix.Node = .label("homeunix", next: [.termination])
  private static let _negative_net_hu: PublicSuffix.Node = .label("hu", next: [.termination])
  private static let _negative_net_in: PublicSuffix.Node = .label("in", next: [.termination])
  private static let _negative_net_inHdsl: PublicSuffix.Node = .label("in-dsl", next: [.termination])
  private static let _negative_net_inHtheHband: PublicSuffix.Node = .label("in-the-band", next: [.termination])
  private static let _negative_net_inHvpn: PublicSuffix.Node = .label("in-vpn", next: [.termination])
  private static let _negative_net_iobb: PublicSuffix.Node = .label("iobb", next: [.termination])
  private static let _negative_net_ipifony: PublicSuffix.Node = .label("ipifony", next: [.termination])
  private static let _negative_net_isHaHchef: PublicSuffix.Node = .label("is-a-chef", next: [.termination])
  private static let _negative_net_isHaHgeek: PublicSuffix.Node = .label("is-a-geek", next: [.termination])
  private static let _negative_net_isaHgeek: PublicSuffix.Node = .label("isa-geek", next: [.termination])
  private static let _negative_net_jp: PublicSuffix.Node = .label("jp", next: [.termination])
  private static let _negative_net_kicksHass: PublicSuffix.Node = .label("kicks-ass", next: [.termination])
  private static let _negative_net_kinghost: PublicSuffix.Node = .label("kinghost", next: [.termination])
  private static let _negative_net_knxHserver: PublicSuffix.Node = .label("knx-server", next: [.termination])
  private static let _negative_net_krellian: PublicSuffix.Node = .label("krellian", next: [.termination])
  private static let _negative_net_massivegrid_paas_frH1: PublicSuffix.Node = .label("fr-1", next: [.termination])
  private static let _negative_net_massivegrid_paas_lonH1: PublicSuffix.Node = .label("lon-1", next: [.termination])
  private static let _negative_net_massivegrid_paas_lonH2: PublicSuffix.Node = .label("lon-2", next: [.termination])
  private static let _negative_net_massivegrid_paas_nyH1: PublicSuffix.Node = .label("ny-1", next: [.termination])
  private static let _negative_net_massivegrid_paas_nyH2: PublicSuffix.Node = .label("ny-2", next: [.termination])
  private static let _negative_net_massivegrid_paas_sgH1: PublicSuffix.Node = .label("sg-1", next: [.termination])
  private static let _negative_net_massivegrid_paas: PublicSuffix.Node = .label("paas", next: [_negative_net_massivegrid_paas_frH1, _negative_net_massivegrid_paas_lonH1, _negative_net_massivegrid_paas_lonH2, _negative_net_massivegrid_paas_nyH1, _negative_net_massivegrid_paas_nyH2, _negative_net_massivegrid_paas_sgH1])
  private static let _negative_net_massivegrid: PublicSuffix.Node = .label("massivegrid", next: [_negative_net_massivegrid_paas])
  private static let _negative_net_meinforum: PublicSuffix.Node = .label("meinforum", next: [.termination])
  private static let _negative_net_memset: PublicSuffix.Node = .label("memset", next: [.termination])
  private static let _negative_net_moonscale: PublicSuffix.Node = .label("moonscale", next: [.termination])
  private static let _negative_net_mydatto: PublicSuffix.Node = .label("mydatto", next: [.termination])
  private static let _negative_net_mydissent: PublicSuffix.Node = .label("mydissent", next: [.termination])
  private static let _negative_net_myeffect: PublicSuffix.Node = .label("myeffect", next: [.termination])
  private static let _negative_net_myfritz: PublicSuffix.Node = .label("myfritz", next: [.termination])
  private static let _negative_net_mymediapc: PublicSuffix.Node = .label("mymediapc", next: [.termination])
  private static let _negative_net_mypsx: PublicSuffix.Node = .label("mypsx", next: [.termination])
  private static let _negative_net_mysecuritycamera: PublicSuffix.Node = .label("mysecuritycamera", next: [.termination])
  private static let _negative_net_myspreadshop: PublicSuffix.Node = .label("myspreadshop", next: [.termination])
  private static let _negative_net_nhlfan: PublicSuffix.Node = .label("nhlfan", next: [.termination])
  private static let _negative_net_noHip: PublicSuffix.Node = .label("no-ip", next: [.termination])
  private static let _negative_net_nowHdns: PublicSuffix.Node = .label("now-dns", next: [.termination])
  private static let _negative_net_officeHonHthe: PublicSuffix.Node = .label("office-on-the", next: [.termination])
  private static let _negative_net_onavstack: PublicSuffix.Node = .label("onavstack", next: [.termination])
  private static let _negative_net_ovh_hosting: PublicSuffix.Node = .label("hosting", next: [.any])
  private static let _negative_net_ovh_webpaas: PublicSuffix.Node = .label("webpaas", next: [.any])
  private static let _negative_net_ovh: PublicSuffix.Node = .label("ovh", next: [_negative_net_ovh_hosting, _negative_net_ovh_webpaas])
  private static let _negative_net_ownip: PublicSuffix.Node = .label("ownip", next: [.termination])
  private static let _negative_net_pgafan: PublicSuffix.Node = .label("pgafan", next: [.termination])
  private static let _negative_net_podzone: PublicSuffix.Node = .label("podzone", next: [.termination])
  private static let _negative_net_privatizehealthinsurance: PublicSuffix.Node = .label("privatizehealthinsurance", next: [.termination])
  private static let _negative_net_rackmaze: PublicSuffix.Node = .label("rackmaze", next: [.termination])
  private static let _negative_net_redirectme: PublicSuffix.Node = .label("redirectme", next: [.termination])
  private static let _negative_net_reserveHonline: PublicSuffix.Node = .label("reserve-online", next: [.termination])
  private static let _negative_net_ru: PublicSuffix.Node = .label("ru", next: [.termination])
  private static let _negative_net_saveincloud_jelastic: PublicSuffix.Node = .label("jelastic", next: [.termination])
  private static let _negative_net_saveincloud_nordesteHidc: PublicSuffix.Node = .label("nordeste-idc", next: [.termination])
  private static let _negative_net_saveincloud: PublicSuffix.Node = .label("saveincloud", next: [_negative_net_saveincloud_jelastic, _negative_net_saveincloud_nordesteHidc])
  private static let _negative_net_scaleforce_j: PublicSuffix.Node = .label("j", next: [.termination])
  private static let _negative_net_scaleforce: PublicSuffix.Node = .label("scaleforce", next: [_negative_net_scaleforce_j])
  private static let _negative_net_schokokeks: PublicSuffix.Node = .label("schokokeks", next: [.termination])
  private static let _negative_net_scrapperHsite: PublicSuffix.Node = .label("scrapper-site", next: [.termination])
  private static let _negative_net_se: PublicSuffix.Node = .label("se", next: [.termination])
  private static let _negative_net_seidat: PublicSuffix.Node = .label("seidat", next: [.termination])
  private static let _negative_net_selfip: PublicSuffix.Node = .label("selfip", next: [.termination])
  private static let _negative_net_sellsHit: PublicSuffix.Node = .label("sells-it", next: [.termination])
  private static let _negative_net_senseering: PublicSuffix.Node = .label("senseering", next: [.termination])
  private static let _negative_net_servebbs: PublicSuffix.Node = .label("servebbs", next: [.termination])
  private static let _negative_net_serveblog: PublicSuffix.Node = .label("serveblog", next: [.termination])
  private static let _negative_net_serveftp: PublicSuffix.Node = .label("serveftp", next: [.termination])
  private static let _negative_net_serveminecraft: PublicSuffix.Node = .label("serveminecraft", next: [.termination])
  private static let _negative_net_shopselect: PublicSuffix.Node = .label("shopselect", next: [.termination])
  private static let _negative_net_siteleaf: PublicSuffix.Node = .label("siteleaf", next: [.termination])
  private static let _negative_net_square7: PublicSuffix.Node = .label("square7", next: [.termination])
  private static let _negative_net_srcf_soc: PublicSuffix.Node = .label("soc", next: [.termination])
  private static let _negative_net_srcf_user: PublicSuffix.Node = .label("user", next: [.termination])
  private static let _negative_net_srcf: PublicSuffix.Node = .label("srcf", next: [_negative_net_srcf_soc, _negative_net_srcf_user])
  private static let _negative_net_staticHaccess: PublicSuffix.Node = .label("static-access", next: [.termination])
  private static let _negative_net_supabase: PublicSuffix.Node = .label("supabase", next: [.termination])
  private static let _negative_net_sytes: PublicSuffix.Node = .label("sytes", next: [.termination])
  private static let _negative_net_t3l3p0rt: PublicSuffix.Node = .label("t3l3p0rt", next: [.termination])
  private static let _negative_net_tailscale_beta: PublicSuffix.Node = .label("beta", next: [.termination])
  private static let _negative_net_tailscale: PublicSuffix.Node = .label("tailscale", next: [_negative_net_tailscale_beta])
  private static let _negative_net_thruhere: PublicSuffix.Node = .label("thruhere", next: [.termination])
  private static let _negative_net_torproject_pages: PublicSuffix.Node = .label("pages", next: [.termination])
  private static let _negative_net_torproject: PublicSuffix.Node = .label("torproject", next: [.termination, _negative_net_torproject_pages])
  private static let _negative_net_ts: PublicSuffix.Node = .label("ts", next: [.termination])
  private static let _negative_net_tsukaeru_jelastic: PublicSuffix.Node = .label("jelastic", next: [.termination])
  private static let _negative_net_tsukaeru: PublicSuffix.Node = .label("tsukaeru", next: [_negative_net_tsukaeru_jelastic])
  private static let _negative_net_twmail: PublicSuffix.Node = .label("twmail", next: [.termination])
  private static let _negative_net_uk: PublicSuffix.Node = .label("uk", next: [.termination])
  private static let _negative_net_uni5: PublicSuffix.Node = .label("uni5", next: [.termination])
  private static let _negative_net_vpndns: PublicSuffix.Node = .label("vpndns", next: [.termination])
  private static let _negative_net_vpsHhost_jelastic_atl: PublicSuffix.Node = .label("atl", next: [.termination])
  private static let _negative_net_vpsHhost_jelastic_njs: PublicSuffix.Node = .label("njs", next: [.termination])
  private static let _negative_net_vpsHhost_jelastic_ric: PublicSuffix.Node = .label("ric", next: [.termination])
  private static let _negative_net_vpsHhost_jelastic: PublicSuffix.Node = .label("jelastic", next: [_negative_net_vpsHhost_jelastic_atl, _negative_net_vpsHhost_jelastic_njs, _negative_net_vpsHhost_jelastic_ric])
  private static let _negative_net_vpsHhost: PublicSuffix.Node = .label("vps-host", next: [.termination, _negative_net_vpsHhost_jelastic])
  private static let _negative_net_webhop: PublicSuffix.Node = .label("webhop", next: [.termination])
  private static let _negative_net_yandexcloud_storage: PublicSuffix.Node = .label("storage", next: [.termination])
  private static let _negative_net_yandexcloud_website: PublicSuffix.Node = .label("website", next: [.termination])
  private static let _negative_net_yandexcloud: PublicSuffix.Node = .label("yandexcloud", next: [.termination, _negative_net_yandexcloud_storage, _negative_net_yandexcloud_website])
  private static let _negative_net_za: PublicSuffix.Node = .label("za", next: [.termination])
  private static let _negative_net: PublicSuffix.Node = .label("net", next: [.termination, _negative_net_adobeaemcloud, _negative_net_alwaysdata, _negative_net_appudo, _negative_net_atHbandHcamp, _negative_net_atlassianHdev, _negative_net_azureHmobile, _negative_net_azurestaticapps, _negative_net_azurewebsites, _negative_net_bar0, _negative_net_bar1, _negative_net_bar2, _negative_net_barsy, _negative_net_bitbridge, _negative_net_blackbaudcdn, _negative_net_blogdns, _negative_net_boomla, _negative_net_bounceme, _negative_net_bplaced, _negative_net_brokeHit, _negative_net_buyshouses, _negative_net_casacam, _negative_net_cdnHedges, _negative_net_cdn77, _negative_net_cdn77Hssl, _negative_net_channelsdvr, _negative_net_clickrising, _negative_net_cloudaccess, _negative_net_cloudapp, _negative_net_cloudfront, _negative_net_cloudfunctions, _negative_net_cloudjiffy, _negative_net_cloudycluster, _negative_net_communityHpro, _negative_net_cryptonomic, _negative_net_dattolocal, _negative_net_ddns, _negative_net_debian, _negative_net_definima, _negative_net_dnsalias, _negative_net_dnsdojo, _negative_net_dnsup, _negative_net_doesHit, _negative_net_dontexist, _negative_net_dsmynas, _negative_net_dynalias, _negative_net_dynathome, _negative_net_dynu, _negative_net_dynv6, _negative_net_eatingHorganic, _negative_net_edgeapp, _negative_net_elastx, _negative_net_endofinternet, _negative_net_familyds, _negative_net_fastly, _negative_net_fastlylb, _negative_net_faststacks, _negative_net_festeHip, _negative_net_firewallHgateway, _negative_net_flynnhosting, _negative_net_fromHaz, _negative_net_fromHco, _negative_net_fromHla, _negative_net_fromHny, _negative_net_gb, _negative_net_getsHit, _negative_net_hamHradioHop, _negative_net_heteml, _negative_net_hicam, _negative_net_homeftp, _negative_net_homeip, _negative_net_homelinux, _negative_net_homeunix, _negative_net_hu, _negative_net_in, _negative_net_inHdsl, _negative_net_inHtheHband, _negative_net_inHvpn, _negative_net_iobb, _negative_net_ipifony, _negative_net_isHaHchef, _negative_net_isHaHgeek, _negative_net_isaHgeek, _negative_net_jp, _negative_net_kicksHass, _negative_net_kinghost, _negative_net_knxHserver, _negative_net_krellian, _negative_net_massivegrid, _negative_net_meinforum, _negative_net_memset, _negative_net_moonscale, _negative_net_mydatto, _negative_net_mydissent, _negative_net_myeffect, _negative_net_myfritz, _negative_net_mymediapc, _negative_net_mypsx, _negative_net_mysecuritycamera, _negative_net_myspreadshop, _negative_net_nhlfan, _negative_net_noHip, _negative_net_nowHdns, _negative_net_officeHonHthe, _negative_net_onavstack, _negative_net_ovh, _negative_net_ownip, _negative_net_pgafan, _negative_net_podzone, _negative_net_privatizehealthinsurance, _negative_net_rackmaze, _negative_net_redirectme, _negative_net_reserveHonline, _negative_net_ru, _negative_net_saveincloud, _negative_net_scaleforce, _negative_net_schokokeks, _negative_net_scrapperHsite, _negative_net_se, _negative_net_seidat, _negative_net_selfip, _negative_net_sellsHit, _negative_net_senseering, _negative_net_servebbs, _negative_net_serveblog, _negative_net_serveftp, _negative_net_serveminecraft, _negative_net_shopselect, _negative_net_siteleaf, _negative_net_square7, _negative_net_srcf, _negative_net_staticHaccess, _negative_net_supabase, _negative_net_sytes, _negative_net_t3l3p0rt, _negative_net_tailscale, _negative_net_thruhere, _negative_net_torproject, _negative_net_ts, _negative_net_tsukaeru, _negative_net_twmail, _negative_net_uk, _negative_net_uni5, _negative_net_vpndns, _negative_net_vpsHhost, _negative_net_webhop, _negative_net_yandexcloud, _negative_net_za])
  private static let _negative_netbank: PublicSuffix.Node = .label("netbank", next: [.termination])
  private static let _negative_netflix: PublicSuffix.Node = .label("netflix", next: [.termination])
  private static let _negative_network_alces: PublicSuffix.Node = .label("alces", next: [.any])
  private static let _negative_network_arvo: PublicSuffix.Node = .label("arvo", next: [.termination])
  private static let _negative_network_azimuth: PublicSuffix.Node = .label("azimuth", next: [.termination])
  private static let _negative_network_co: PublicSuffix.Node = .label("co", next: [.termination])
  private static let _negative_network_tlon: PublicSuffix.Node = .label("tlon", next: [.termination])
  private static let _negative_network: PublicSuffix.Node = .label("network", next: [.termination, _negative_network_alces, _negative_network_arvo, _negative_network_azimuth, _negative_network_co, _negative_network_tlon])
  private static let _negative_neustar: PublicSuffix.Node = .label("neustar", next: [.termination])
  private static let _negative_new: PublicSuffix.Node = .label("new", next: [.termination])
  private static let _negative_news_noticeable: PublicSuffix.Node = .label("noticeable", next: [.termination])
  private static let _negative_news: PublicSuffix.Node = .label("news", next: [.termination, _negative_news_noticeable])
  private static let _negative_next: PublicSuffix.Node = .label("next", next: [.termination])
  private static let _negative_nextdirect: PublicSuffix.Node = .label("nextdirect", next: [.termination])
  private static let _negative_nexus: PublicSuffix.Node = .label("nexus", next: [.termination])
  private static let _negative_nf_arts: PublicSuffix.Node = .label("arts", next: [.termination])
  private static let _negative_nf_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_nf_firm: PublicSuffix.Node = .label("firm", next: [.termination])
  private static let _negative_nf_info: PublicSuffix.Node = .label("info", next: [.termination])
  private static let _negative_nf_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_nf_other: PublicSuffix.Node = .label("other", next: [.termination])
  private static let _negative_nf_per: PublicSuffix.Node = .label("per", next: [.termination])
  private static let _negative_nf_rec: PublicSuffix.Node = .label("rec", next: [.termination])
  private static let _negative_nf_store: PublicSuffix.Node = .label("store", next: [.termination])
  private static let _negative_nf_web: PublicSuffix.Node = .label("web", next: [.termination])
  private static let _negative_nf: PublicSuffix.Node = .label("nf", next: [.termination, _negative_nf_arts, _negative_nf_com, _negative_nf_firm, _negative_nf_info, _negative_nf_net, _negative_nf_other, _negative_nf_per, _negative_nf_rec, _negative_nf_store, _negative_nf_web])
  private static let _negative_nfl: PublicSuffix.Node = .label("nfl", next: [.termination])
  private static let _negative_ng_col: PublicSuffix.Node = .label("col", next: [.termination])
  private static let _negative_ng_com_blogspot: PublicSuffix.Node = .label("blogspot", next: [.termination])
  private static let _negative_ng_com: PublicSuffix.Node = .label("com", next: [.termination, _negative_ng_com_blogspot])
  private static let _negative_ng_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_ng_firm: PublicSuffix.Node = .label("firm", next: [.termination])
  private static let _negative_ng_gen: PublicSuffix.Node = .label("gen", next: [.termination])
  private static let _negative_ng_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_ng_i: PublicSuffix.Node = .label("i", next: [.termination])
  private static let _negative_ng_ltd: PublicSuffix.Node = .label("ltd", next: [.termination])
  private static let _negative_ng_mil: PublicSuffix.Node = .label("mil", next: [.termination])
  private static let _negative_ng_mobi: PublicSuffix.Node = .label("mobi", next: [.termination])
  private static let _negative_ng_name: PublicSuffix.Node = .label("name", next: [.termination])
  private static let _negative_ng_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_ng_ngo: PublicSuffix.Node = .label("ngo", next: [.termination])
  private static let _negative_ng_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_ng_sch: PublicSuffix.Node = .label("sch", next: [.termination])
  private static let _negative_ng: PublicSuffix.Node = .label("ng", next: [.termination, _negative_ng_col, _negative_ng_com, _negative_ng_edu, _negative_ng_firm, _negative_ng_gen, _negative_ng_gov, _negative_ng_i, _negative_ng_ltd, _negative_ng_mil, _negative_ng_mobi, _negative_ng_name, _negative_ng_net, _negative_ng_ngo, _negative_ng_org, _negative_ng_sch])
  private static let _negative_ngo: PublicSuffix.Node = .label("ngo", next: [.termination])
  private static let _negative_nhk: PublicSuffix.Node = .label("nhk", next: [.termination])
  private static let _negative_ni_ac: PublicSuffix.Node = .label("ac", next: [.termination])
  private static let _negative_ni_biz: PublicSuffix.Node = .label("biz", next: [.termination])
  private static let _negative_ni_co: PublicSuffix.Node = .label("co", next: [.termination])
  private static let _negative_ni_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_ni_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_ni_gob: PublicSuffix.Node = .label("gob", next: [.termination])
  private static let _negative_ni_in: PublicSuffix.Node = .label("in", next: [.termination])
  private static let _negative_ni_info: PublicSuffix.Node = .label("info", next: [.termination])
  private static let _negative_ni_int: PublicSuffix.Node = .label("int", next: [.termination])
  private static let _negative_ni_mil: PublicSuffix.Node = .label("mil", next: [.termination])
  private static let _negative_ni_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_ni_nom: PublicSuffix.Node = .label("nom", next: [.termination])
  private static let _negative_ni_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_ni_web: PublicSuffix.Node = .label("web", next: [.termination])
  private static let _negative_ni: PublicSuffix.Node = .label("ni", next: [.termination, _negative_ni_ac, _negative_ni_biz, _negative_ni_co, _negative_ni_com, _negative_ni_edu, _negative_ni_gob, _negative_ni_in, _negative_ni_info, _negative_ni_int, _negative_ni_mil, _negative_ni_net, _negative_ni_nom, _negative_ni_org, _negative_ni_web])
  private static let _negative_nico: PublicSuffix.Node = .label("nico", next: [.termination])
  private static let _negative_nike: PublicSuffix.Node = .label("nike", next: [.termination])
  private static let _negative_nikon: PublicSuffix.Node = .label("nikon", next: [.termination])
  private static let _negative_ninja: PublicSuffix.Node = .label("ninja", next: [.termination])
  private static let _negative_nissan: PublicSuffix.Node = .label("nissan", next: [.termination])
  private static let _negative_nissay: PublicSuffix.Node = .label("nissay", next: [.termination])
  private static let _negative_nl_blogspot: PublicSuffix.Node = .label("blogspot", next: [.termination])
  private static let _negative_nl_cistron: PublicSuffix.Node = .label("cistron", next: [.termination])
  private static let _negative_nl_co: PublicSuffix.Node = .label("co", next: [.termination])
  private static let _negative_nl_demon: PublicSuffix.Node = .label("demon", next: [.termination])
  private static let _negative_nl_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_nl_hostingHcluster: PublicSuffix.Node = .label("hosting-cluster", next: [.termination])
  private static let _negative_nl_khplay: PublicSuffix.Node = .label("khplay", next: [.termination])
  private static let _negative_nl_myspreadshop: PublicSuffix.Node = .label("myspreadshop", next: [.termination])
  private static let _negative_nl_transurl: PublicSuffix.Node = .label("transurl", next: [.any])
  private static let _negative_nl: PublicSuffix.Node = .label("nl", next: [.termination, _negative_nl_blogspot, _negative_nl_cistron, _negative_nl_co, _negative_nl_demon, _negative_nl_gov, _negative_nl_hostingHcluster, _negative_nl_khplay, _negative_nl_myspreadshop, _negative_nl_transurl])
  private static let _negative_no_aa_gs: PublicSuffix.Node = .label("gs", next: [.termination])
  private static let _negative_no_aa: PublicSuffix.Node = .label("aa", next: [.termination, _negative_no_aa_gs])
  private static let _negative_no_aarborte: PublicSuffix.Node = .label("aarborte", next: [.termination])
  private static let _negative_no_aejrie: PublicSuffix.Node = .label("aejrie", next: [.termination])
  private static let _negative_no_afjord: PublicSuffix.Node = .label("afjord", next: [.termination])
  private static let _negative_no_agdenes: PublicSuffix.Node = .label("agdenes", next: [.termination])
  private static let _negative_no_ah_gs: PublicSuffix.Node = .label("gs", next: [.termination])
  private static let _negative_no_ah: PublicSuffix.Node = .label("ah", next: [.termination, _negative_no_ah_gs])
  private static let _negative_no_akershus_nes: PublicSuffix.Node = .label("nes", next: [.termination])
  private static let _negative_no_akershus: PublicSuffix.Node = .label("akershus", next: [_negative_no_akershus_nes])
  private static let _negative_no_aknoluokta: PublicSuffix.Node = .label("aknoluokta", next: [.termination])
  private static let _negative_no_akrehamn: PublicSuffix.Node = .label("akrehamn", next: [.termination])
  private static let _negative_no_al: PublicSuffix.Node = .label("al", next: [.termination])
  private static let _negative_no_alaheadju: PublicSuffix.Node = .label("alaheadju", next: [.termination])
  private static let _negative_no_alesund: PublicSuffix.Node = .label("alesund", next: [.termination])
  private static let _negative_no_algard: PublicSuffix.Node = .label("algard", next: [.termination])
  private static let _negative_no_alstahaug: PublicSuffix.Node = .label("alstahaug", next: [.termination])
  private static let _negative_no_alta: PublicSuffix.Node = .label("alta", next: [.termination])
  private static let _negative_no_alvdal: PublicSuffix.Node = .label("alvdal", next: [.termination])
  private static let _negative_no_amli: PublicSuffix.Node = .label("amli", next: [.termination])
  private static let _negative_no_amot: PublicSuffix.Node = .label("amot", next: [.termination])
  private static let _negative_no_andasuolo: PublicSuffix.Node = .label("andasuolo", next: [.termination])
  private static let _negative_no_andebu: PublicSuffix.Node = .label("andebu", next: [.termination])
  private static let _negative_no_andoy: PublicSuffix.Node = .label("andoy", next: [.termination])
  private static let _negative_no_andøy: PublicSuffix.Node = .label("andøy", next: [.termination])
  private static let _negative_no_ardal: PublicSuffix.Node = .label("ardal", next: [.termination])
  private static let _negative_no_aremark: PublicSuffix.Node = .label("aremark", next: [.termination])
  private static let _negative_no_arendal: PublicSuffix.Node = .label("arendal", next: [.termination])
  private static let _negative_no_arna: PublicSuffix.Node = .label("arna", next: [.termination])
  private static let _negative_no_aseral: PublicSuffix.Node = .label("aseral", next: [.termination])
  private static let _negative_no_asker: PublicSuffix.Node = .label("asker", next: [.termination])
  private static let _negative_no_askim: PublicSuffix.Node = .label("askim", next: [.termination])
  private static let _negative_no_askoy: PublicSuffix.Node = .label("askoy", next: [.termination])
  private static let _negative_no_askvoll: PublicSuffix.Node = .label("askvoll", next: [.termination])
  private static let _negative_no_askøy: PublicSuffix.Node = .label("askøy", next: [.termination])
  private static let _negative_no_asnes: PublicSuffix.Node = .label("asnes", next: [.termination])
  private static let _negative_no_audnedaln: PublicSuffix.Node = .label("audnedaln", next: [.termination])
  private static let _negative_no_aukra: PublicSuffix.Node = .label("aukra", next: [.termination])
  private static let _negative_no_aure: PublicSuffix.Node = .label("aure", next: [.termination])
  private static let _negative_no_aurland: PublicSuffix.Node = .label("aurland", next: [.termination])
  private static let _negative_no_aurskogHholand: PublicSuffix.Node = .label("aurskog-holand", next: [.termination])
  private static let _negative_no_aurskogHhøland: PublicSuffix.Node = .label("aurskog-høland", next: [.termination])
  private static let _negative_no_austevoll: PublicSuffix.Node = .label("austevoll", next: [.termination])
  private static let _negative_no_austrheim: PublicSuffix.Node = .label("austrheim", next: [.termination])
  private static let _negative_no_averoy: PublicSuffix.Node = .label("averoy", next: [.termination])
  private static let _negative_no_averøy: PublicSuffix.Node = .label("averøy", next: [.termination])
  private static let _negative_no_badaddja: PublicSuffix.Node = .label("badaddja", next: [.termination])
  private static let _negative_no_bahcavuotna: PublicSuffix.Node = .label("bahcavuotna", next: [.termination])
  private static let _negative_no_bahccavuotna: PublicSuffix.Node = .label("bahccavuotna", next: [.termination])
  private static let _negative_no_baidar: PublicSuffix.Node = .label("baidar", next: [.termination])
  private static let _negative_no_bajddar: PublicSuffix.Node = .label("bajddar", next: [.termination])
  private static let _negative_no_balat: PublicSuffix.Node = .label("balat", next: [.termination])
  private static let _negative_no_balestrand: PublicSuffix.Node = .label("balestrand", next: [.termination])
  private static let _negative_no_ballangen: PublicSuffix.Node = .label("ballangen", next: [.termination])
  private static let _negative_no_balsfjord: PublicSuffix.Node = .label("balsfjord", next: [.termination])
  private static let _negative_no_bamble: PublicSuffix.Node = .label("bamble", next: [.termination])
  private static let _negative_no_bardu: PublicSuffix.Node = .label("bardu", next: [.termination])
  private static let _negative_no_barum: PublicSuffix.Node = .label("barum", next: [.termination])
  private static let _negative_no_batsfjord: PublicSuffix.Node = .label("batsfjord", next: [.termination])
  private static let _negative_no_bearalvahki: PublicSuffix.Node = .label("bearalvahki", next: [.termination])
  private static let _negative_no_bearalváhki: PublicSuffix.Node = .label("bearalváhki", next: [.termination])
  private static let _negative_no_beardu: PublicSuffix.Node = .label("beardu", next: [.termination])
  private static let _negative_no_beiarn: PublicSuffix.Node = .label("beiarn", next: [.termination])
  private static let _negative_no_berg: PublicSuffix.Node = .label("berg", next: [.termination])
  private static let _negative_no_bergen: PublicSuffix.Node = .label("bergen", next: [.termination])
  private static let _negative_no_berlevag: PublicSuffix.Node = .label("berlevag", next: [.termination])
  private static let _negative_no_berlevåg: PublicSuffix.Node = .label("berlevåg", next: [.termination])
  private static let _negative_no_bievat: PublicSuffix.Node = .label("bievat", next: [.termination])
  private static let _negative_no_bievát: PublicSuffix.Node = .label("bievát", next: [.termination])
  private static let _negative_no_bindal: PublicSuffix.Node = .label("bindal", next: [.termination])
  private static let _negative_no_birkenes: PublicSuffix.Node = .label("birkenes", next: [.termination])
  private static let _negative_no_bjarkoy: PublicSuffix.Node = .label("bjarkoy", next: [.termination])
  private static let _negative_no_bjarkøy: PublicSuffix.Node = .label("bjarkøy", next: [.termination])
  private static let _negative_no_bjerkreim: PublicSuffix.Node = .label("bjerkreim", next: [.termination])
  private static let _negative_no_bjugn: PublicSuffix.Node = .label("bjugn", next: [.termination])
  private static let _negative_no_blogspot: PublicSuffix.Node = .label("blogspot", next: [.termination])
  private static let _negative_no_bodo: PublicSuffix.Node = .label("bodo", next: [.termination])
  private static let _negative_no_bodø: PublicSuffix.Node = .label("bodø", next: [.termination])
  private static let _negative_no_bokn: PublicSuffix.Node = .label("bokn", next: [.termination])
  private static let _negative_no_bomlo: PublicSuffix.Node = .label("bomlo", next: [.termination])
  private static let _negative_no_bremanger: PublicSuffix.Node = .label("bremanger", next: [.termination])
  private static let _negative_no_bronnoy: PublicSuffix.Node = .label("bronnoy", next: [.termination])
  private static let _negative_no_bronnoysund: PublicSuffix.Node = .label("bronnoysund", next: [.termination])
  private static let _negative_no_brumunddal: PublicSuffix.Node = .label("brumunddal", next: [.termination])
  private static let _negative_no_bryne: PublicSuffix.Node = .label("bryne", next: [.termination])
  private static let _negative_no_brønnøy: PublicSuffix.Node = .label("brønnøy", next: [.termination])
  private static let _negative_no_brønnøysund: PublicSuffix.Node = .label("brønnøysund", next: [.termination])
  private static let _negative_no_bu_gs: PublicSuffix.Node = .label("gs", next: [.termination])
  private static let _negative_no_bu: PublicSuffix.Node = .label("bu", next: [.termination, _negative_no_bu_gs])
  private static let _negative_no_budejju: PublicSuffix.Node = .label("budejju", next: [.termination])
  private static let _negative_no_buskerud_nes: PublicSuffix.Node = .label("nes", next: [.termination])
  private static let _negative_no_buskerud: PublicSuffix.Node = .label("buskerud", next: [_negative_no_buskerud_nes])
  private static let _negative_no_bygland: PublicSuffix.Node = .label("bygland", next: [.termination])
  private static let _negative_no_bykle: PublicSuffix.Node = .label("bykle", next: [.termination])
  private static let _negative_no_báhcavuotna: PublicSuffix.Node = .label("báhcavuotna", next: [.termination])
  private static let _negative_no_báhccavuotna: PublicSuffix.Node = .label("báhccavuotna", next: [.termination])
  private static let _negative_no_báidár: PublicSuffix.Node = .label("báidár", next: [.termination])
  private static let _negative_no_bájddar: PublicSuffix.Node = .label("bájddar", next: [.termination])
  private static let _negative_no_bálát: PublicSuffix.Node = .label("bálát", next: [.termination])
  private static let _negative_no_bådåddjå: PublicSuffix.Node = .label("bådåddjå", next: [.termination])
  private static let _negative_no_båtsfjord: PublicSuffix.Node = .label("båtsfjord", next: [.termination])
  private static let _negative_no_bærum: PublicSuffix.Node = .label("bærum", next: [.termination])
  private static let _negative_no_bømlo: PublicSuffix.Node = .label("bømlo", next: [.termination])
  private static let _negative_no_cahcesuolo: PublicSuffix.Node = .label("cahcesuolo", next: [.termination])
  private static let _negative_no_co: PublicSuffix.Node = .label("co", next: [.termination])
  private static let _negative_no_davvenjarga: PublicSuffix.Node = .label("davvenjarga", next: [.termination])
  private static let _negative_no_davvenjárga: PublicSuffix.Node = .label("davvenjárga", next: [.termination])
  private static let _negative_no_davvesiida: PublicSuffix.Node = .label("davvesiida", next: [.termination])
  private static let _negative_no_deatnu: PublicSuffix.Node = .label("deatnu", next: [.termination])
  private static let _negative_no_dep: PublicSuffix.Node = .label("dep", next: [.termination])
  private static let _negative_no_dielddanuorri: PublicSuffix.Node = .label("dielddanuorri", next: [.termination])
  private static let _negative_no_divtasvuodna: PublicSuffix.Node = .label("divtasvuodna", next: [.termination])
  private static let _negative_no_divttasvuotna: PublicSuffix.Node = .label("divttasvuotna", next: [.termination])
  private static let _negative_no_donna: PublicSuffix.Node = .label("donna", next: [.termination])
  private static let _negative_no_dovre: PublicSuffix.Node = .label("dovre", next: [.termination])
  private static let _negative_no_drammen: PublicSuffix.Node = .label("drammen", next: [.termination])
  private static let _negative_no_drangedal: PublicSuffix.Node = .label("drangedal", next: [.termination])
  private static let _negative_no_drobak: PublicSuffix.Node = .label("drobak", next: [.termination])
  private static let _negative_no_drøbak: PublicSuffix.Node = .label("drøbak", next: [.termination])
  private static let _negative_no_dyroy: PublicSuffix.Node = .label("dyroy", next: [.termination])
  private static let _negative_no_dyrøy: PublicSuffix.Node = .label("dyrøy", next: [.termination])
  private static let _negative_no_dønna: PublicSuffix.Node = .label("dønna", next: [.termination])
  private static let _negative_no_egersund: PublicSuffix.Node = .label("egersund", next: [.termination])
  private static let _negative_no_eid: PublicSuffix.Node = .label("eid", next: [.termination])
  private static let _negative_no_eidfjord: PublicSuffix.Node = .label("eidfjord", next: [.termination])
  private static let _negative_no_eidsberg: PublicSuffix.Node = .label("eidsberg", next: [.termination])
  private static let _negative_no_eidskog: PublicSuffix.Node = .label("eidskog", next: [.termination])
  private static let _negative_no_eidsvoll: PublicSuffix.Node = .label("eidsvoll", next: [.termination])
  private static let _negative_no_eigersund: PublicSuffix.Node = .label("eigersund", next: [.termination])
  private static let _negative_no_elverum: PublicSuffix.Node = .label("elverum", next: [.termination])
  private static let _negative_no_enebakk: PublicSuffix.Node = .label("enebakk", next: [.termination])
  private static let _negative_no_engerdal: PublicSuffix.Node = .label("engerdal", next: [.termination])
  private static let _negative_no_etne: PublicSuffix.Node = .label("etne", next: [.termination])
  private static let _negative_no_etnedal: PublicSuffix.Node = .label("etnedal", next: [.termination])
  private static let _negative_no_evenassi: PublicSuffix.Node = .label("evenassi", next: [.termination])
  private static let _negative_no_evenes: PublicSuffix.Node = .label("evenes", next: [.termination])
  private static let _negative_no_evenášši: PublicSuffix.Node = .label("evenášši", next: [.termination])
  private static let _negative_no_evjeHogHhornnes: PublicSuffix.Node = .label("evje-og-hornnes", next: [.termination])
  private static let _negative_no_farsund: PublicSuffix.Node = .label("farsund", next: [.termination])
  private static let _negative_no_fauske: PublicSuffix.Node = .label("fauske", next: [.termination])
  private static let _negative_no_fedje: PublicSuffix.Node = .label("fedje", next: [.termination])
  private static let _negative_no_fet: PublicSuffix.Node = .label("fet", next: [.termination])
  private static let _negative_no_fetsund: PublicSuffix.Node = .label("fetsund", next: [.termination])
  private static let _negative_no_fhs: PublicSuffix.Node = .label("fhs", next: [.termination])
  private static let _negative_no_finnoy: PublicSuffix.Node = .label("finnoy", next: [.termination])
  private static let _negative_no_finnøy: PublicSuffix.Node = .label("finnøy", next: [.termination])
  private static let _negative_no_fitjar: PublicSuffix.Node = .label("fitjar", next: [.termination])
  private static let _negative_no_fjaler: PublicSuffix.Node = .label("fjaler", next: [.termination])
  private static let _negative_no_fjell: PublicSuffix.Node = .label("fjell", next: [.termination])
  private static let _negative_no_fla: PublicSuffix.Node = .label("fla", next: [.termination])
  private static let _negative_no_flakstad: PublicSuffix.Node = .label("flakstad", next: [.termination])
  private static let _negative_no_flatanger: PublicSuffix.Node = .label("flatanger", next: [.termination])
  private static let _negative_no_flekkefjord: PublicSuffix.Node = .label("flekkefjord", next: [.termination])
  private static let _negative_no_flesberg: PublicSuffix.Node = .label("flesberg", next: [.termination])
  private static let _negative_no_flora: PublicSuffix.Node = .label("flora", next: [.termination])
  private static let _negative_no_floro: PublicSuffix.Node = .label("floro", next: [.termination])
  private static let _negative_no_florø: PublicSuffix.Node = .label("florø", next: [.termination])
  private static let _negative_no_flå: PublicSuffix.Node = .label("flå", next: [.termination])
  private static let _negative_no_fm_gs: PublicSuffix.Node = .label("gs", next: [.termination])
  private static let _negative_no_fm: PublicSuffix.Node = .label("fm", next: [.termination, _negative_no_fm_gs])
  private static let _negative_no_folkebibl: PublicSuffix.Node = .label("folkebibl", next: [.termination])
  private static let _negative_no_folldal: PublicSuffix.Node = .label("folldal", next: [.termination])
  private static let _negative_no_forde: PublicSuffix.Node = .label("forde", next: [.termination])
  private static let _negative_no_forsand: PublicSuffix.Node = .label("forsand", next: [.termination])
  private static let _negative_no_fosnes: PublicSuffix.Node = .label("fosnes", next: [.termination])
  private static let _negative_no_frana: PublicSuffix.Node = .label("frana", next: [.termination])
  private static let _negative_no_fredrikstad: PublicSuffix.Node = .label("fredrikstad", next: [.termination])
  private static let _negative_no_frei: PublicSuffix.Node = .label("frei", next: [.termination])
  private static let _negative_no_frogn: PublicSuffix.Node = .label("frogn", next: [.termination])
  private static let _negative_no_froland: PublicSuffix.Node = .label("froland", next: [.termination])
  private static let _negative_no_frosta: PublicSuffix.Node = .label("frosta", next: [.termination])
  private static let _negative_no_froya: PublicSuffix.Node = .label("froya", next: [.termination])
  private static let _negative_no_fræna: PublicSuffix.Node = .label("fræna", next: [.termination])
  private static let _negative_no_frøya: PublicSuffix.Node = .label("frøya", next: [.termination])
  private static let _negative_no_fuoisku: PublicSuffix.Node = .label("fuoisku", next: [.termination])
  private static let _negative_no_fuossko: PublicSuffix.Node = .label("fuossko", next: [.termination])
  private static let _negative_no_fusa: PublicSuffix.Node = .label("fusa", next: [.termination])
  private static let _negative_no_fylkesbibl: PublicSuffix.Node = .label("fylkesbibl", next: [.termination])
  private static let _negative_no_fyresdal: PublicSuffix.Node = .label("fyresdal", next: [.termination])
  private static let _negative_no_førde: PublicSuffix.Node = .label("førde", next: [.termination])
  private static let _negative_no_gaivuotna: PublicSuffix.Node = .label("gaivuotna", next: [.termination])
  private static let _negative_no_galsa: PublicSuffix.Node = .label("galsa", next: [.termination])
  private static let _negative_no_gamvik: PublicSuffix.Node = .label("gamvik", next: [.termination])
  private static let _negative_no_gangaviika: PublicSuffix.Node = .label("gangaviika", next: [.termination])
  private static let _negative_no_gaular: PublicSuffix.Node = .label("gaular", next: [.termination])
  private static let _negative_no_gausdal: PublicSuffix.Node = .label("gausdal", next: [.termination])
  private static let _negative_no_giehtavuoatna: PublicSuffix.Node = .label("giehtavuoatna", next: [.termination])
  private static let _negative_no_gildeskal: PublicSuffix.Node = .label("gildeskal", next: [.termination])
  private static let _negative_no_gildeskål: PublicSuffix.Node = .label("gildeskål", next: [.termination])
  private static let _negative_no_giske: PublicSuffix.Node = .label("giske", next: [.termination])
  private static let _negative_no_gjemnes: PublicSuffix.Node = .label("gjemnes", next: [.termination])
  private static let _negative_no_gjerdrum: PublicSuffix.Node = .label("gjerdrum", next: [.termination])
  private static let _negative_no_gjerstad: PublicSuffix.Node = .label("gjerstad", next: [.termination])
  private static let _negative_no_gjesdal: PublicSuffix.Node = .label("gjesdal", next: [.termination])
  private static let _negative_no_gjovik: PublicSuffix.Node = .label("gjovik", next: [.termination])
  private static let _negative_no_gjøvik: PublicSuffix.Node = .label("gjøvik", next: [.termination])
  private static let _negative_no_gloppen: PublicSuffix.Node = .label("gloppen", next: [.termination])
  private static let _negative_no_gol: PublicSuffix.Node = .label("gol", next: [.termination])
  private static let _negative_no_gran: PublicSuffix.Node = .label("gran", next: [.termination])
  private static let _negative_no_grane: PublicSuffix.Node = .label("grane", next: [.termination])
  private static let _negative_no_granvin: PublicSuffix.Node = .label("granvin", next: [.termination])
  private static let _negative_no_gratangen: PublicSuffix.Node = .label("gratangen", next: [.termination])
  private static let _negative_no_grimstad: PublicSuffix.Node = .label("grimstad", next: [.termination])
  private static let _negative_no_grong: PublicSuffix.Node = .label("grong", next: [.termination])
  private static let _negative_no_grue: PublicSuffix.Node = .label("grue", next: [.termination])
  private static let _negative_no_gulen: PublicSuffix.Node = .label("gulen", next: [.termination])
  private static let _negative_no_guovdageaidnu: PublicSuffix.Node = .label("guovdageaidnu", next: [.termination])
  private static let _negative_no_gáivuotna: PublicSuffix.Node = .label("gáivuotna", next: [.termination])
  private static let _negative_no_gálsá: PublicSuffix.Node = .label("gálsá", next: [.termination])
  private static let _negative_no_gáŋgaviika: PublicSuffix.Node = .label("gáŋgaviika", next: [.termination])
  private static let _negative_no_ha: PublicSuffix.Node = .label("ha", next: [.termination])
  private static let _negative_no_habmer: PublicSuffix.Node = .label("habmer", next: [.termination])
  private static let _negative_no_hadsel: PublicSuffix.Node = .label("hadsel", next: [.termination])
  private static let _negative_no_hagebostad: PublicSuffix.Node = .label("hagebostad", next: [.termination])
  private static let _negative_no_halden: PublicSuffix.Node = .label("halden", next: [.termination])
  private static let _negative_no_halsa: PublicSuffix.Node = .label("halsa", next: [.termination])
  private static let _negative_no_hamar: PublicSuffix.Node = .label("hamar", next: [.termination])
  private static let _negative_no_hamaroy: PublicSuffix.Node = .label("hamaroy", next: [.termination])
  private static let _negative_no_hammarfeasta: PublicSuffix.Node = .label("hammarfeasta", next: [.termination])
  private static let _negative_no_hammerfest: PublicSuffix.Node = .label("hammerfest", next: [.termination])
  private static let _negative_no_hapmir: PublicSuffix.Node = .label("hapmir", next: [.termination])
  private static let _negative_no_haram: PublicSuffix.Node = .label("haram", next: [.termination])
  private static let _negative_no_hareid: PublicSuffix.Node = .label("hareid", next: [.termination])
  private static let _negative_no_harstad: PublicSuffix.Node = .label("harstad", next: [.termination])
  private static let _negative_no_hasvik: PublicSuffix.Node = .label("hasvik", next: [.termination])
  private static let _negative_no_hattfjelldal: PublicSuffix.Node = .label("hattfjelldal", next: [.termination])
  private static let _negative_no_haugesund: PublicSuffix.Node = .label("haugesund", next: [.termination])
  private static let _negative_no_hedmark_os: PublicSuffix.Node = .label("os", next: [.termination])
  private static let _negative_no_hedmark_valer: PublicSuffix.Node = .label("valer", next: [.termination])
  private static let _negative_no_hedmark_våler: PublicSuffix.Node = .label("våler", next: [.termination])
  private static let _negative_no_hedmark: PublicSuffix.Node = .label("hedmark", next: [_negative_no_hedmark_os, _negative_no_hedmark_valer, _negative_no_hedmark_våler])
  private static let _negative_no_hemne: PublicSuffix.Node = .label("hemne", next: [.termination])
  private static let _negative_no_hemnes: PublicSuffix.Node = .label("hemnes", next: [.termination])
  private static let _negative_no_hemsedal: PublicSuffix.Node = .label("hemsedal", next: [.termination])
  private static let _negative_no_herad: PublicSuffix.Node = .label("herad", next: [.termination])
  private static let _negative_no_hitra: PublicSuffix.Node = .label("hitra", next: [.termination])
  private static let _negative_no_hjartdal: PublicSuffix.Node = .label("hjartdal", next: [.termination])
  private static let _negative_no_hjelmeland: PublicSuffix.Node = .label("hjelmeland", next: [.termination])
  private static let _negative_no_hl_gs: PublicSuffix.Node = .label("gs", next: [.termination])
  private static let _negative_no_hl: PublicSuffix.Node = .label("hl", next: [.termination, _negative_no_hl_gs])
  private static let _negative_no_hm_gs: PublicSuffix.Node = .label("gs", next: [.termination])
  private static let _negative_no_hm: PublicSuffix.Node = .label("hm", next: [.termination, _negative_no_hm_gs])
  private static let _negative_no_hobol: PublicSuffix.Node = .label("hobol", next: [.termination])
  private static let _negative_no_hobøl: PublicSuffix.Node = .label("hobøl", next: [.termination])
  private static let _negative_no_hof: PublicSuffix.Node = .label("hof", next: [.termination])
  private static let _negative_no_hokksund: PublicSuffix.Node = .label("hokksund", next: [.termination])
  private static let _negative_no_hol: PublicSuffix.Node = .label("hol", next: [.termination])
  private static let _negative_no_hole: PublicSuffix.Node = .label("hole", next: [.termination])
  private static let _negative_no_holmestrand: PublicSuffix.Node = .label("holmestrand", next: [.termination])
  private static let _negative_no_holtalen: PublicSuffix.Node = .label("holtalen", next: [.termination])
  private static let _negative_no_holtålen: PublicSuffix.Node = .label("holtålen", next: [.termination])
  private static let _negative_no_honefoss: PublicSuffix.Node = .label("honefoss", next: [.termination])
  private static let _negative_no_hordaland_os: PublicSuffix.Node = .label("os", next: [.termination])
  private static let _negative_no_hordaland: PublicSuffix.Node = .label("hordaland", next: [_negative_no_hordaland_os])
  private static let _negative_no_hornindal: PublicSuffix.Node = .label("hornindal", next: [.termination])
  private static let _negative_no_horten: PublicSuffix.Node = .label("horten", next: [.termination])
  private static let _negative_no_hoyanger: PublicSuffix.Node = .label("hoyanger", next: [.termination])
  private static let _negative_no_hoylandet: PublicSuffix.Node = .label("hoylandet", next: [.termination])
  private static let _negative_no_hurdal: PublicSuffix.Node = .label("hurdal", next: [.termination])
  private static let _negative_no_hurum: PublicSuffix.Node = .label("hurum", next: [.termination])
  private static let _negative_no_hvaler: PublicSuffix.Node = .label("hvaler", next: [.termination])
  private static let _negative_no_hyllestad: PublicSuffix.Node = .label("hyllestad", next: [.termination])
  private static let _negative_no_hábmer: PublicSuffix.Node = .label("hábmer", next: [.termination])
  private static let _negative_no_hámmárfeasta: PublicSuffix.Node = .label("hámmárfeasta", next: [.termination])
  private static let _negative_no_hápmir: PublicSuffix.Node = .label("hápmir", next: [.termination])
  private static let _negative_no_hå: PublicSuffix.Node = .label("hå", next: [.termination])
  private static let _negative_no_hægebostad: PublicSuffix.Node = .label("hægebostad", next: [.termination])
  private static let _negative_no_hønefoss: PublicSuffix.Node = .label("hønefoss", next: [.termination])
  private static let _negative_no_høyanger: PublicSuffix.Node = .label("høyanger", next: [.termination])
  private static let _negative_no_høylandet: PublicSuffix.Node = .label("høylandet", next: [.termination])
  private static let _negative_no_ibestad: PublicSuffix.Node = .label("ibestad", next: [.termination])
  private static let _negative_no_idrett: PublicSuffix.Node = .label("idrett", next: [.termination])
  private static let _negative_no_inderoy: PublicSuffix.Node = .label("inderoy", next: [.termination])
  private static let _negative_no_inderøy: PublicSuffix.Node = .label("inderøy", next: [.termination])
  private static let _negative_no_iveland: PublicSuffix.Node = .label("iveland", next: [.termination])
  private static let _negative_no_ivgu: PublicSuffix.Node = .label("ivgu", next: [.termination])
  private static let _negative_no_janHmayen_gs: PublicSuffix.Node = .label("gs", next: [.termination])
  private static let _negative_no_janHmayen: PublicSuffix.Node = .label("jan-mayen", next: [.termination, _negative_no_janHmayen_gs])
  private static let _negative_no_jessheim: PublicSuffix.Node = .label("jessheim", next: [.termination])
  private static let _negative_no_jevnaker: PublicSuffix.Node = .label("jevnaker", next: [.termination])
  private static let _negative_no_jolster: PublicSuffix.Node = .label("jolster", next: [.termination])
  private static let _negative_no_jondal: PublicSuffix.Node = .label("jondal", next: [.termination])
  private static let _negative_no_jorpeland: PublicSuffix.Node = .label("jorpeland", next: [.termination])
  private static let _negative_no_jølster: PublicSuffix.Node = .label("jølster", next: [.termination])
  private static let _negative_no_jørpeland: PublicSuffix.Node = .label("jørpeland", next: [.termination])
  private static let _negative_no_kafjord: PublicSuffix.Node = .label("kafjord", next: [.termination])
  private static let _negative_no_karasjohka: PublicSuffix.Node = .label("karasjohka", next: [.termination])
  private static let _negative_no_karasjok: PublicSuffix.Node = .label("karasjok", next: [.termination])
  private static let _negative_no_karlsoy: PublicSuffix.Node = .label("karlsoy", next: [.termination])
  private static let _negative_no_karmoy: PublicSuffix.Node = .label("karmoy", next: [.termination])
  private static let _negative_no_karmøy: PublicSuffix.Node = .label("karmøy", next: [.termination])
  private static let _negative_no_kautokeino: PublicSuffix.Node = .label("kautokeino", next: [.termination])
  private static let _negative_no_kirkenes: PublicSuffix.Node = .label("kirkenes", next: [.termination])
  private static let _negative_no_klabu: PublicSuffix.Node = .label("klabu", next: [.termination])
  private static let _negative_no_klepp: PublicSuffix.Node = .label("klepp", next: [.termination])
  private static let _negative_no_klæbu: PublicSuffix.Node = .label("klæbu", next: [.termination])
  private static let _negative_no_kommune: PublicSuffix.Node = .label("kommune", next: [.termination])
  private static let _negative_no_kongsberg: PublicSuffix.Node = .label("kongsberg", next: [.termination])
  private static let _negative_no_kongsvinger: PublicSuffix.Node = .label("kongsvinger", next: [.termination])
  private static let _negative_no_kopervik: PublicSuffix.Node = .label("kopervik", next: [.termination])
  private static let _negative_no_kraanghke: PublicSuffix.Node = .label("kraanghke", next: [.termination])
  private static let _negative_no_kragero: PublicSuffix.Node = .label("kragero", next: [.termination])
  private static let _negative_no_kragerø: PublicSuffix.Node = .label("kragerø", next: [.termination])
  private static let _negative_no_kristiansand: PublicSuffix.Node = .label("kristiansand", next: [.termination])
  private static let _negative_no_kristiansund: PublicSuffix.Node = .label("kristiansund", next: [.termination])
  private static let _negative_no_krodsherad: PublicSuffix.Node = .label("krodsherad", next: [.termination])
  private static let _negative_no_krokstadelva: PublicSuffix.Node = .label("krokstadelva", next: [.termination])
  private static let _negative_no_kråanghke: PublicSuffix.Node = .label("kråanghke", next: [.termination])
  private static let _negative_no_krødsherad: PublicSuffix.Node = .label("krødsherad", next: [.termination])
  private static let _negative_no_kvafjord: PublicSuffix.Node = .label("kvafjord", next: [.termination])
  private static let _negative_no_kvalsund: PublicSuffix.Node = .label("kvalsund", next: [.termination])
  private static let _negative_no_kvam: PublicSuffix.Node = .label("kvam", next: [.termination])
  private static let _negative_no_kvanangen: PublicSuffix.Node = .label("kvanangen", next: [.termination])
  private static let _negative_no_kvinesdal: PublicSuffix.Node = .label("kvinesdal", next: [.termination])
  private static let _negative_no_kvinnherad: PublicSuffix.Node = .label("kvinnherad", next: [.termination])
  private static let _negative_no_kviteseid: PublicSuffix.Node = .label("kviteseid", next: [.termination])
  private static let _negative_no_kvitsoy: PublicSuffix.Node = .label("kvitsoy", next: [.termination])
  private static let _negative_no_kvitsøy: PublicSuffix.Node = .label("kvitsøy", next: [.termination])
  private static let _negative_no_kvæfjord: PublicSuffix.Node = .label("kvæfjord", next: [.termination])
  private static let _negative_no_kvænangen: PublicSuffix.Node = .label("kvænangen", next: [.termination])
  private static let _negative_no_kárášjohka: PublicSuffix.Node = .label("kárášjohka", next: [.termination])
  private static let _negative_no_kåfjord: PublicSuffix.Node = .label("kåfjord", next: [.termination])
  private static let _negative_no_laakesvuemie: PublicSuffix.Node = .label("laakesvuemie", next: [.termination])
  private static let _negative_no_lahppi: PublicSuffix.Node = .label("lahppi", next: [.termination])
  private static let _negative_no_langevag: PublicSuffix.Node = .label("langevag", next: [.termination])
  private static let _negative_no_langevåg: PublicSuffix.Node = .label("langevåg", next: [.termination])
  private static let _negative_no_lardal: PublicSuffix.Node = .label("lardal", next: [.termination])
  private static let _negative_no_larvik: PublicSuffix.Node = .label("larvik", next: [.termination])
  private static let _negative_no_lavagis: PublicSuffix.Node = .label("lavagis", next: [.termination])
  private static let _negative_no_lavangen: PublicSuffix.Node = .label("lavangen", next: [.termination])
  private static let _negative_no_leangaviika: PublicSuffix.Node = .label("leangaviika", next: [.termination])
  private static let _negative_no_leaŋgaviika: PublicSuffix.Node = .label("leaŋgaviika", next: [.termination])
  private static let _negative_no_lebesby: PublicSuffix.Node = .label("lebesby", next: [.termination])
  private static let _negative_no_leikanger: PublicSuffix.Node = .label("leikanger", next: [.termination])
  private static let _negative_no_leirfjord: PublicSuffix.Node = .label("leirfjord", next: [.termination])
  private static let _negative_no_leirvik: PublicSuffix.Node = .label("leirvik", next: [.termination])
  private static let _negative_no_leka: PublicSuffix.Node = .label("leka", next: [.termination])
  private static let _negative_no_leksvik: PublicSuffix.Node = .label("leksvik", next: [.termination])
  private static let _negative_no_lenvik: PublicSuffix.Node = .label("lenvik", next: [.termination])
  private static let _negative_no_lerdal: PublicSuffix.Node = .label("lerdal", next: [.termination])
  private static let _negative_no_lesja: PublicSuffix.Node = .label("lesja", next: [.termination])
  private static let _negative_no_levanger: PublicSuffix.Node = .label("levanger", next: [.termination])
  private static let _negative_no_lier: PublicSuffix.Node = .label("lier", next: [.termination])
  private static let _negative_no_lierne: PublicSuffix.Node = .label("lierne", next: [.termination])
  private static let _negative_no_lillehammer: PublicSuffix.Node = .label("lillehammer", next: [.termination])
  private static let _negative_no_lillesand: PublicSuffix.Node = .label("lillesand", next: [.termination])
  private static let _negative_no_lindas: PublicSuffix.Node = .label("lindas", next: [.termination])
  private static let _negative_no_lindesnes: PublicSuffix.Node = .label("lindesnes", next: [.termination])
  private static let _negative_no_lindås: PublicSuffix.Node = .label("lindås", next: [.termination])
  private static let _negative_no_loabat: PublicSuffix.Node = .label("loabat", next: [.termination])
  private static let _negative_no_loabát: PublicSuffix.Node = .label("loabát", next: [.termination])
  private static let _negative_no_lodingen: PublicSuffix.Node = .label("lodingen", next: [.termination])
  private static let _negative_no_lom: PublicSuffix.Node = .label("lom", next: [.termination])
  private static let _negative_no_loppa: PublicSuffix.Node = .label("loppa", next: [.termination])
  private static let _negative_no_lorenskog: PublicSuffix.Node = .label("lorenskog", next: [.termination])
  private static let _negative_no_loten: PublicSuffix.Node = .label("loten", next: [.termination])
  private static let _negative_no_lund: PublicSuffix.Node = .label("lund", next: [.termination])
  private static let _negative_no_lunner: PublicSuffix.Node = .label("lunner", next: [.termination])
  private static let _negative_no_luroy: PublicSuffix.Node = .label("luroy", next: [.termination])
  private static let _negative_no_lurøy: PublicSuffix.Node = .label("lurøy", next: [.termination])
  private static let _negative_no_luster: PublicSuffix.Node = .label("luster", next: [.termination])
  private static let _negative_no_lyngdal: PublicSuffix.Node = .label("lyngdal", next: [.termination])
  private static let _negative_no_lyngen: PublicSuffix.Node = .label("lyngen", next: [.termination])
  private static let _negative_no_láhppi: PublicSuffix.Node = .label("láhppi", next: [.termination])
  private static let _negative_no_lærdal: PublicSuffix.Node = .label("lærdal", next: [.termination])
  private static let _negative_no_lødingen: PublicSuffix.Node = .label("lødingen", next: [.termination])
  private static let _negative_no_lørenskog: PublicSuffix.Node = .label("lørenskog", next: [.termination])
  private static let _negative_no_løten: PublicSuffix.Node = .label("løten", next: [.termination])
  private static let _negative_no_malatvuopmi: PublicSuffix.Node = .label("malatvuopmi", next: [.termination])
  private static let _negative_no_malselv: PublicSuffix.Node = .label("malselv", next: [.termination])
  private static let _negative_no_malvik: PublicSuffix.Node = .label("malvik", next: [.termination])
  private static let _negative_no_mandal: PublicSuffix.Node = .label("mandal", next: [.termination])
  private static let _negative_no_marker: PublicSuffix.Node = .label("marker", next: [.termination])
  private static let _negative_no_marnardal: PublicSuffix.Node = .label("marnardal", next: [.termination])
  private static let _negative_no_masfjorden: PublicSuffix.Node = .label("masfjorden", next: [.termination])
  private static let _negative_no_masoy: PublicSuffix.Node = .label("masoy", next: [.termination])
  private static let _negative_no_mattaHvarjjat: PublicSuffix.Node = .label("matta-varjjat", next: [.termination])
  private static let _negative_no_meland: PublicSuffix.Node = .label("meland", next: [.termination])
  private static let _negative_no_meldal: PublicSuffix.Node = .label("meldal", next: [.termination])
  private static let _negative_no_melhus: PublicSuffix.Node = .label("melhus", next: [.termination])
  private static let _negative_no_meloy: PublicSuffix.Node = .label("meloy", next: [.termination])
  private static let _negative_no_meløy: PublicSuffix.Node = .label("meløy", next: [.termination])
  private static let _negative_no_meraker: PublicSuffix.Node = .label("meraker", next: [.termination])
  private static let _negative_no_meråker: PublicSuffix.Node = .label("meråker", next: [.termination])
  private static let _negative_no_midsund: PublicSuffix.Node = .label("midsund", next: [.termination])
  private static let _negative_no_midtreHgauldal: PublicSuffix.Node = .label("midtre-gauldal", next: [.termination])
  private static let _negative_no_mil: PublicSuffix.Node = .label("mil", next: [.termination])
  private static let _negative_no_mjondalen: PublicSuffix.Node = .label("mjondalen", next: [.termination])
  private static let _negative_no_mjøndalen: PublicSuffix.Node = .label("mjøndalen", next: [.termination])
  private static let _negative_no_moHiHrana: PublicSuffix.Node = .label("mo-i-rana", next: [.termination])
  private static let _negative_no_moareke: PublicSuffix.Node = .label("moareke", next: [.termination])
  private static let _negative_no_modalen: PublicSuffix.Node = .label("modalen", next: [.termination])
  private static let _negative_no_modum: PublicSuffix.Node = .label("modum", next: [.termination])
  private static let _negative_no_molde: PublicSuffix.Node = .label("molde", next: [.termination])
  private static let _negative_no_moreHogHromsdal_heroy: PublicSuffix.Node = .label("heroy", next: [.termination])
  private static let _negative_no_moreHogHromsdal_sande: PublicSuffix.Node = .label("sande", next: [.termination])
  private static let _negative_no_moreHogHromsdal: PublicSuffix.Node = .label("more-og-romsdal", next: [_negative_no_moreHogHromsdal_heroy, _negative_no_moreHogHromsdal_sande])
  private static let _negative_no_mosjoen: PublicSuffix.Node = .label("mosjoen", next: [.termination])
  private static let _negative_no_mosjøen: PublicSuffix.Node = .label("mosjøen", next: [.termination])
  private static let _negative_no_moskenes: PublicSuffix.Node = .label("moskenes", next: [.termination])
  private static let _negative_no_moss: PublicSuffix.Node = .label("moss", next: [.termination])
  private static let _negative_no_mosvik: PublicSuffix.Node = .label("mosvik", next: [.termination])
  private static let _negative_no_moåreke: PublicSuffix.Node = .label("moåreke", next: [.termination])
  private static let _negative_no_mr_gs: PublicSuffix.Node = .label("gs", next: [.termination])
  private static let _negative_no_mr: PublicSuffix.Node = .label("mr", next: [.termination, _negative_no_mr_gs])
  private static let _negative_no_muosat: PublicSuffix.Node = .label("muosat", next: [.termination])
  private static let _negative_no_muosát: PublicSuffix.Node = .label("muosát", next: [.termination])
  private static let _negative_no_museum: PublicSuffix.Node = .label("museum", next: [.termination])
  private static let _negative_no_myspreadshop: PublicSuffix.Node = .label("myspreadshop", next: [.termination])
  private static let _negative_no_málatvuopmi: PublicSuffix.Node = .label("málatvuopmi", next: [.termination])
  private static let _negative_no_máttaHvárjjat: PublicSuffix.Node = .label("mátta-várjjat", next: [.termination])
  private static let _negative_no_målselv: PublicSuffix.Node = .label("målselv", next: [.termination])
  private static let _negative_no_måsøy: PublicSuffix.Node = .label("måsøy", next: [.termination])
  private static let _negative_no_møreHogHromsdal_herøy: PublicSuffix.Node = .label("herøy", next: [.termination])
  private static let _negative_no_møreHogHromsdal_sande: PublicSuffix.Node = .label("sande", next: [.termination])
  private static let _negative_no_møreHogHromsdal: PublicSuffix.Node = .label("møre-og-romsdal", next: [_negative_no_møreHogHromsdal_herøy, _negative_no_møreHogHromsdal_sande])
  private static let _negative_no_naamesjevuemie: PublicSuffix.Node = .label("naamesjevuemie", next: [.termination])
  private static let _negative_no_namdalseid: PublicSuffix.Node = .label("namdalseid", next: [.termination])
  private static let _negative_no_namsos: PublicSuffix.Node = .label("namsos", next: [.termination])
  private static let _negative_no_namsskogan: PublicSuffix.Node = .label("namsskogan", next: [.termination])
  private static let _negative_no_nannestad: PublicSuffix.Node = .label("nannestad", next: [.termination])
  private static let _negative_no_naroy: PublicSuffix.Node = .label("naroy", next: [.termination])
  private static let _negative_no_narviika: PublicSuffix.Node = .label("narviika", next: [.termination])
  private static let _negative_no_narvik: PublicSuffix.Node = .label("narvik", next: [.termination])
  private static let _negative_no_naustdal: PublicSuffix.Node = .label("naustdal", next: [.termination])
  private static let _negative_no_navuotna: PublicSuffix.Node = .label("navuotna", next: [.termination])
  private static let _negative_no_nedreHeiker: PublicSuffix.Node = .label("nedre-eiker", next: [.termination])
  private static let _negative_no_nesna: PublicSuffix.Node = .label("nesna", next: [.termination])
  private static let _negative_no_nesodden: PublicSuffix.Node = .label("nesodden", next: [.termination])
  private static let _negative_no_nesoddtangen: PublicSuffix.Node = .label("nesoddtangen", next: [.termination])
  private static let _negative_no_nesseby: PublicSuffix.Node = .label("nesseby", next: [.termination])
  private static let _negative_no_nesset: PublicSuffix.Node = .label("nesset", next: [.termination])
  private static let _negative_no_nissedal: PublicSuffix.Node = .label("nissedal", next: [.termination])
  private static let _negative_no_nittedal: PublicSuffix.Node = .label("nittedal", next: [.termination])
  private static let _negative_no_nl_gs: PublicSuffix.Node = .label("gs", next: [.termination])
  private static let _negative_no_nl: PublicSuffix.Node = .label("nl", next: [.termination, _negative_no_nl_gs])
  private static let _negative_no_nordHaurdal: PublicSuffix.Node = .label("nord-aurdal", next: [.termination])
  private static let _negative_no_nordHfron: PublicSuffix.Node = .label("nord-fron", next: [.termination])
  private static let _negative_no_nordHodal: PublicSuffix.Node = .label("nord-odal", next: [.termination])
  private static let _negative_no_norddal: PublicSuffix.Node = .label("norddal", next: [.termination])
  private static let _negative_no_nordkapp: PublicSuffix.Node = .label("nordkapp", next: [.termination])
  private static let _negative_no_nordland_bo: PublicSuffix.Node = .label("bo", next: [.termination])
  private static let _negative_no_nordland_bø: PublicSuffix.Node = .label("bø", next: [.termination])
  private static let _negative_no_nordland_heroy: PublicSuffix.Node = .label("heroy", next: [.termination])
  private static let _negative_no_nordland_herøy: PublicSuffix.Node = .label("herøy", next: [.termination])
  private static let _negative_no_nordland: PublicSuffix.Node = .label("nordland", next: [_negative_no_nordland_bo, _negative_no_nordland_bø, _negative_no_nordland_heroy, _negative_no_nordland_herøy])
  private static let _negative_no_nordreHland: PublicSuffix.Node = .label("nordre-land", next: [.termination])
  private static let _negative_no_nordreisa: PublicSuffix.Node = .label("nordreisa", next: [.termination])
  private static let _negative_no_noreHogHuvdal: PublicSuffix.Node = .label("nore-og-uvdal", next: [.termination])
  private static let _negative_no_notodden: PublicSuffix.Node = .label("notodden", next: [.termination])
  private static let _negative_no_notteroy: PublicSuffix.Node = .label("notteroy", next: [.termination])
  private static let _negative_no_nt_gs: PublicSuffix.Node = .label("gs", next: [.termination])
  private static let _negative_no_nt: PublicSuffix.Node = .label("nt", next: [.termination, _negative_no_nt_gs])
  private static let _negative_no_návuotna: PublicSuffix.Node = .label("návuotna", next: [.termination])
  private static let _negative_no_nååmesjevuemie: PublicSuffix.Node = .label("nååmesjevuemie", next: [.termination])
  private static let _negative_no_nærøy: PublicSuffix.Node = .label("nærøy", next: [.termination])
  private static let _negative_no_nøtterøy: PublicSuffix.Node = .label("nøtterøy", next: [.termination])
  private static let _negative_no_odda: PublicSuffix.Node = .label("odda", next: [.termination])
  private static let _negative_no_of_gs: PublicSuffix.Node = .label("gs", next: [.termination])
  private static let _negative_no_of: PublicSuffix.Node = .label("of", next: [.termination, _negative_no_of_gs])
  private static let _negative_no_oksnes: PublicSuffix.Node = .label("oksnes", next: [.termination])
  private static let _negative_no_ol_gs: PublicSuffix.Node = .label("gs", next: [.termination])
  private static let _negative_no_ol: PublicSuffix.Node = .label("ol", next: [.termination, _negative_no_ol_gs])
  private static let _negative_no_omasvuotna: PublicSuffix.Node = .label("omasvuotna", next: [.termination])
  private static let _negative_no_oppdal: PublicSuffix.Node = .label("oppdal", next: [.termination])
  private static let _negative_no_oppegard: PublicSuffix.Node = .label("oppegard", next: [.termination])
  private static let _negative_no_oppegård: PublicSuffix.Node = .label("oppegård", next: [.termination])
  private static let _negative_no_orkanger: PublicSuffix.Node = .label("orkanger", next: [.termination])
  private static let _negative_no_orkdal: PublicSuffix.Node = .label("orkdal", next: [.termination])
  private static let _negative_no_orland: PublicSuffix.Node = .label("orland", next: [.termination])
  private static let _negative_no_orskog: PublicSuffix.Node = .label("orskog", next: [.termination])
  private static let _negative_no_orsta: PublicSuffix.Node = .label("orsta", next: [.termination])
  private static let _negative_no_osen: PublicSuffix.Node = .label("osen", next: [.termination])
  private static let _negative_no_oslo_gs: PublicSuffix.Node = .label("gs", next: [.termination])
  private static let _negative_no_oslo: PublicSuffix.Node = .label("oslo", next: [.termination, _negative_no_oslo_gs])
  private static let _negative_no_osoyro: PublicSuffix.Node = .label("osoyro", next: [.termination])
  private static let _negative_no_osteroy: PublicSuffix.Node = .label("osteroy", next: [.termination])
  private static let _negative_no_osterøy: PublicSuffix.Node = .label("osterøy", next: [.termination])
  private static let _negative_no_ostfold_valer: PublicSuffix.Node = .label("valer", next: [.termination])
  private static let _negative_no_ostfold: PublicSuffix.Node = .label("ostfold", next: [_negative_no_ostfold_valer])
  private static let _negative_no_ostreHtoten: PublicSuffix.Node = .label("ostre-toten", next: [.termination])
  private static let _negative_no_osøyro: PublicSuffix.Node = .label("osøyro", next: [.termination])
  private static let _negative_no_overhalla: PublicSuffix.Node = .label("overhalla", next: [.termination])
  private static let _negative_no_ovreHeiker: PublicSuffix.Node = .label("ovre-eiker", next: [.termination])
  private static let _negative_no_oyer: PublicSuffix.Node = .label("oyer", next: [.termination])
  private static let _negative_no_oygarden: PublicSuffix.Node = .label("oygarden", next: [.termination])
  private static let _negative_no_oystreHslidre: PublicSuffix.Node = .label("oystre-slidre", next: [.termination])
  private static let _negative_no_porsanger: PublicSuffix.Node = .label("porsanger", next: [.termination])
  private static let _negative_no_porsangu: PublicSuffix.Node = .label("porsangu", next: [.termination])
  private static let _negative_no_porsgrunn: PublicSuffix.Node = .label("porsgrunn", next: [.termination])
  private static let _negative_no_porsáŋgu: PublicSuffix.Node = .label("porsáŋgu", next: [.termination])
  private static let _negative_no_priv: PublicSuffix.Node = .label("priv", next: [.termination])
  private static let _negative_no_rade: PublicSuffix.Node = .label("rade", next: [.termination])
  private static let _negative_no_radoy: PublicSuffix.Node = .label("radoy", next: [.termination])
  private static let _negative_no_radøy: PublicSuffix.Node = .label("radøy", next: [.termination])
  private static let _negative_no_rahkkeravju: PublicSuffix.Node = .label("rahkkeravju", next: [.termination])
  private static let _negative_no_raholt: PublicSuffix.Node = .label("raholt", next: [.termination])
  private static let _negative_no_raisa: PublicSuffix.Node = .label("raisa", next: [.termination])
  private static let _negative_no_rakkestad: PublicSuffix.Node = .label("rakkestad", next: [.termination])
  private static let _negative_no_ralingen: PublicSuffix.Node = .label("ralingen", next: [.termination])
  private static let _negative_no_rana: PublicSuffix.Node = .label("rana", next: [.termination])
  private static let _negative_no_randaberg: PublicSuffix.Node = .label("randaberg", next: [.termination])
  private static let _negative_no_rauma: PublicSuffix.Node = .label("rauma", next: [.termination])
  private static let _negative_no_rendalen: PublicSuffix.Node = .label("rendalen", next: [.termination])
  private static let _negative_no_rennebu: PublicSuffix.Node = .label("rennebu", next: [.termination])
  private static let _negative_no_rennesoy: PublicSuffix.Node = .label("rennesoy", next: [.termination])
  private static let _negative_no_rennesøy: PublicSuffix.Node = .label("rennesøy", next: [.termination])
  private static let _negative_no_rindal: PublicSuffix.Node = .label("rindal", next: [.termination])
  private static let _negative_no_ringebu: PublicSuffix.Node = .label("ringebu", next: [.termination])
  private static let _negative_no_ringerike: PublicSuffix.Node = .label("ringerike", next: [.termination])
  private static let _negative_no_ringsaker: PublicSuffix.Node = .label("ringsaker", next: [.termination])
  private static let _negative_no_risor: PublicSuffix.Node = .label("risor", next: [.termination])
  private static let _negative_no_rissa: PublicSuffix.Node = .label("rissa", next: [.termination])
  private static let _negative_no_risør: PublicSuffix.Node = .label("risør", next: [.termination])
  private static let _negative_no_rl_gs: PublicSuffix.Node = .label("gs", next: [.termination])
  private static let _negative_no_rl: PublicSuffix.Node = .label("rl", next: [.termination, _negative_no_rl_gs])
  private static let _negative_no_roan: PublicSuffix.Node = .label("roan", next: [.termination])
  private static let _negative_no_rodoy: PublicSuffix.Node = .label("rodoy", next: [.termination])
  private static let _negative_no_rollag: PublicSuffix.Node = .label("rollag", next: [.termination])
  private static let _negative_no_romsa: PublicSuffix.Node = .label("romsa", next: [.termination])
  private static let _negative_no_romskog: PublicSuffix.Node = .label("romskog", next: [.termination])
  private static let _negative_no_roros: PublicSuffix.Node = .label("roros", next: [.termination])
  private static let _negative_no_rost: PublicSuffix.Node = .label("rost", next: [.termination])
  private static let _negative_no_royken: PublicSuffix.Node = .label("royken", next: [.termination])
  private static let _negative_no_royrvik: PublicSuffix.Node = .label("royrvik", next: [.termination])
  private static let _negative_no_ruovat: PublicSuffix.Node = .label("ruovat", next: [.termination])
  private static let _negative_no_rygge: PublicSuffix.Node = .label("rygge", next: [.termination])
  private static let _negative_no_ráhkkerávju: PublicSuffix.Node = .label("ráhkkerávju", next: [.termination])
  private static let _negative_no_ráisa: PublicSuffix.Node = .label("ráisa", next: [.termination])
  private static let _negative_no_råde: PublicSuffix.Node = .label("råde", next: [.termination])
  private static let _negative_no_råholt: PublicSuffix.Node = .label("råholt", next: [.termination])
  private static let _negative_no_rælingen: PublicSuffix.Node = .label("rælingen", next: [.termination])
  private static let _negative_no_rødøy: PublicSuffix.Node = .label("rødøy", next: [.termination])
  private static let _negative_no_rømskog: PublicSuffix.Node = .label("rømskog", next: [.termination])
  private static let _negative_no_røros: PublicSuffix.Node = .label("røros", next: [.termination])
  private static let _negative_no_røst: PublicSuffix.Node = .label("røst", next: [.termination])
  private static let _negative_no_røyken: PublicSuffix.Node = .label("røyken", next: [.termination])
  private static let _negative_no_røyrvik: PublicSuffix.Node = .label("røyrvik", next: [.termination])
  private static let _negative_no_salangen: PublicSuffix.Node = .label("salangen", next: [.termination])
  private static let _negative_no_salat: PublicSuffix.Node = .label("salat", next: [.termination])
  private static let _negative_no_saltdal: PublicSuffix.Node = .label("saltdal", next: [.termination])
  private static let _negative_no_samnanger: PublicSuffix.Node = .label("samnanger", next: [.termination])
  private static let _negative_no_sandefjord: PublicSuffix.Node = .label("sandefjord", next: [.termination])
  private static let _negative_no_sandnes: PublicSuffix.Node = .label("sandnes", next: [.termination])
  private static let _negative_no_sandnessjoen: PublicSuffix.Node = .label("sandnessjoen", next: [.termination])
  private static let _negative_no_sandnessjøen: PublicSuffix.Node = .label("sandnessjøen", next: [.termination])
  private static let _negative_no_sandoy: PublicSuffix.Node = .label("sandoy", next: [.termination])
  private static let _negative_no_sandøy: PublicSuffix.Node = .label("sandøy", next: [.termination])
  private static let _negative_no_sarpsborg: PublicSuffix.Node = .label("sarpsborg", next: [.termination])
  private static let _negative_no_sauda: PublicSuffix.Node = .label("sauda", next: [.termination])
  private static let _negative_no_sauherad: PublicSuffix.Node = .label("sauherad", next: [.termination])
  private static let _negative_no_sel: PublicSuffix.Node = .label("sel", next: [.termination])
  private static let _negative_no_selbu: PublicSuffix.Node = .label("selbu", next: [.termination])
  private static let _negative_no_selje: PublicSuffix.Node = .label("selje", next: [.termination])
  private static let _negative_no_seljord: PublicSuffix.Node = .label("seljord", next: [.termination])
  private static let _negative_no_sf_gs: PublicSuffix.Node = .label("gs", next: [.termination])
  private static let _negative_no_sf: PublicSuffix.Node = .label("sf", next: [.termination, _negative_no_sf_gs])
  private static let _negative_no_siellak: PublicSuffix.Node = .label("siellak", next: [.termination])
  private static let _negative_no_sigdal: PublicSuffix.Node = .label("sigdal", next: [.termination])
  private static let _negative_no_siljan: PublicSuffix.Node = .label("siljan", next: [.termination])
  private static let _negative_no_sirdal: PublicSuffix.Node = .label("sirdal", next: [.termination])
  private static let _negative_no_skanit: PublicSuffix.Node = .label("skanit", next: [.termination])
  private static let _negative_no_skanland: PublicSuffix.Node = .label("skanland", next: [.termination])
  private static let _negative_no_skaun: PublicSuffix.Node = .label("skaun", next: [.termination])
  private static let _negative_no_skedsmo: PublicSuffix.Node = .label("skedsmo", next: [.termination])
  private static let _negative_no_skedsmokorset: PublicSuffix.Node = .label("skedsmokorset", next: [.termination])
  private static let _negative_no_ski: PublicSuffix.Node = .label("ski", next: [.termination])
  private static let _negative_no_skien: PublicSuffix.Node = .label("skien", next: [.termination])
  private static let _negative_no_skierva: PublicSuffix.Node = .label("skierva", next: [.termination])
  private static let _negative_no_skiervá: PublicSuffix.Node = .label("skiervá", next: [.termination])
  private static let _negative_no_skiptvet: PublicSuffix.Node = .label("skiptvet", next: [.termination])
  private static let _negative_no_skjak: PublicSuffix.Node = .label("skjak", next: [.termination])
  private static let _negative_no_skjervoy: PublicSuffix.Node = .label("skjervoy", next: [.termination])
  private static let _negative_no_skjervøy: PublicSuffix.Node = .label("skjervøy", next: [.termination])
  private static let _negative_no_skjåk: PublicSuffix.Node = .label("skjåk", next: [.termination])
  private static let _negative_no_skodje: PublicSuffix.Node = .label("skodje", next: [.termination])
  private static let _negative_no_skánit: PublicSuffix.Node = .label("skánit", next: [.termination])
  private static let _negative_no_skånland: PublicSuffix.Node = .label("skånland", next: [.termination])
  private static let _negative_no_slattum: PublicSuffix.Node = .label("slattum", next: [.termination])
  private static let _negative_no_smola: PublicSuffix.Node = .label("smola", next: [.termination])
  private static let _negative_no_smøla: PublicSuffix.Node = .label("smøla", next: [.termination])
  private static let _negative_no_snaase: PublicSuffix.Node = .label("snaase", next: [.termination])
  private static let _negative_no_snasa: PublicSuffix.Node = .label("snasa", next: [.termination])
  private static let _negative_no_snillfjord: PublicSuffix.Node = .label("snillfjord", next: [.termination])
  private static let _negative_no_snoasa: PublicSuffix.Node = .label("snoasa", next: [.termination])
  private static let _negative_no_snåase: PublicSuffix.Node = .label("snåase", next: [.termination])
  private static let _negative_no_snåsa: PublicSuffix.Node = .label("snåsa", next: [.termination])
  private static let _negative_no_sogndal: PublicSuffix.Node = .label("sogndal", next: [.termination])
  private static let _negative_no_sogne: PublicSuffix.Node = .label("sogne", next: [.termination])
  private static let _negative_no_sokndal: PublicSuffix.Node = .label("sokndal", next: [.termination])
  private static let _negative_no_sola: PublicSuffix.Node = .label("sola", next: [.termination])
  private static let _negative_no_solund: PublicSuffix.Node = .label("solund", next: [.termination])
  private static let _negative_no_somna: PublicSuffix.Node = .label("somna", next: [.termination])
  private static let _negative_no_sondreHland: PublicSuffix.Node = .label("sondre-land", next: [.termination])
  private static let _negative_no_songdalen: PublicSuffix.Node = .label("songdalen", next: [.termination])
  private static let _negative_no_sorHaurdal: PublicSuffix.Node = .label("sor-aurdal", next: [.termination])
  private static let _negative_no_sorHfron: PublicSuffix.Node = .label("sor-fron", next: [.termination])
  private static let _negative_no_sorHodal: PublicSuffix.Node = .label("sor-odal", next: [.termination])
  private static let _negative_no_sorHvaranger: PublicSuffix.Node = .label("sor-varanger", next: [.termination])
  private static let _negative_no_sorfold: PublicSuffix.Node = .label("sorfold", next: [.termination])
  private static let _negative_no_sorreisa: PublicSuffix.Node = .label("sorreisa", next: [.termination])
  private static let _negative_no_sortland: PublicSuffix.Node = .label("sortland", next: [.termination])
  private static let _negative_no_sorum: PublicSuffix.Node = .label("sorum", next: [.termination])
  private static let _negative_no_spjelkavik: PublicSuffix.Node = .label("spjelkavik", next: [.termination])
  private static let _negative_no_spydeberg: PublicSuffix.Node = .label("spydeberg", next: [.termination])
  private static let _negative_no_st_gs: PublicSuffix.Node = .label("gs", next: [.termination])
  private static let _negative_no_st: PublicSuffix.Node = .label("st", next: [.termination, _negative_no_st_gs])
  private static let _negative_no_stange: PublicSuffix.Node = .label("stange", next: [.termination])
  private static let _negative_no_stat: PublicSuffix.Node = .label("stat", next: [.termination])
  private static let _negative_no_stathelle: PublicSuffix.Node = .label("stathelle", next: [.termination])
  private static let _negative_no_stavanger: PublicSuffix.Node = .label("stavanger", next: [.termination])
  private static let _negative_no_stavern: PublicSuffix.Node = .label("stavern", next: [.termination])
  private static let _negative_no_steigen: PublicSuffix.Node = .label("steigen", next: [.termination])
  private static let _negative_no_steinkjer: PublicSuffix.Node = .label("steinkjer", next: [.termination])
  private static let _negative_no_stjordal: PublicSuffix.Node = .label("stjordal", next: [.termination])
  private static let _negative_no_stjordalshalsen: PublicSuffix.Node = .label("stjordalshalsen", next: [.termination])
  private static let _negative_no_stjørdal: PublicSuffix.Node = .label("stjørdal", next: [.termination])
  private static let _negative_no_stjørdalshalsen: PublicSuffix.Node = .label("stjørdalshalsen", next: [.termination])
  private static let _negative_no_stokke: PublicSuffix.Node = .label("stokke", next: [.termination])
  private static let _negative_no_storHelvdal: PublicSuffix.Node = .label("stor-elvdal", next: [.termination])
  private static let _negative_no_stord: PublicSuffix.Node = .label("stord", next: [.termination])
  private static let _negative_no_stordal: PublicSuffix.Node = .label("stordal", next: [.termination])
  private static let _negative_no_storfjord: PublicSuffix.Node = .label("storfjord", next: [.termination])
  private static let _negative_no_strand: PublicSuffix.Node = .label("strand", next: [.termination])
  private static let _negative_no_stranda: PublicSuffix.Node = .label("stranda", next: [.termination])
  private static let _negative_no_stryn: PublicSuffix.Node = .label("stryn", next: [.termination])
  private static let _negative_no_sula: PublicSuffix.Node = .label("sula", next: [.termination])
  private static let _negative_no_suldal: PublicSuffix.Node = .label("suldal", next: [.termination])
  private static let _negative_no_sund: PublicSuffix.Node = .label("sund", next: [.termination])
  private static let _negative_no_sunndal: PublicSuffix.Node = .label("sunndal", next: [.termination])
  private static let _negative_no_surnadal: PublicSuffix.Node = .label("surnadal", next: [.termination])
  private static let _negative_no_svalbard_gs: PublicSuffix.Node = .label("gs", next: [.termination])
  private static let _negative_no_svalbard: PublicSuffix.Node = .label("svalbard", next: [.termination, _negative_no_svalbard_gs])
  private static let _negative_no_sveio: PublicSuffix.Node = .label("sveio", next: [.termination])
  private static let _negative_no_svelvik: PublicSuffix.Node = .label("svelvik", next: [.termination])
  private static let _negative_no_sykkylven: PublicSuffix.Node = .label("sykkylven", next: [.termination])
  private static let _negative_no_sálat: PublicSuffix.Node = .label("sálat", next: [.termination])
  private static let _negative_no_sálát: PublicSuffix.Node = .label("sálát", next: [.termination])
  private static let _negative_no_søgne: PublicSuffix.Node = .label("søgne", next: [.termination])
  private static let _negative_no_sømna: PublicSuffix.Node = .label("sømna", next: [.termination])
  private static let _negative_no_søndreHland: PublicSuffix.Node = .label("søndre-land", next: [.termination])
  private static let _negative_no_sørHaurdal: PublicSuffix.Node = .label("sør-aurdal", next: [.termination])
  private static let _negative_no_sørHfron: PublicSuffix.Node = .label("sør-fron", next: [.termination])
  private static let _negative_no_sørHodal: PublicSuffix.Node = .label("sør-odal", next: [.termination])
  private static let _negative_no_sørHvaranger: PublicSuffix.Node = .label("sør-varanger", next: [.termination])
  private static let _negative_no_sørfold: PublicSuffix.Node = .label("sørfold", next: [.termination])
  private static let _negative_no_sørreisa: PublicSuffix.Node = .label("sørreisa", next: [.termination])
  private static let _negative_no_sørum: PublicSuffix.Node = .label("sørum", next: [.termination])
  private static let _negative_no_tana: PublicSuffix.Node = .label("tana", next: [.termination])
  private static let _negative_no_tananger: PublicSuffix.Node = .label("tananger", next: [.termination])
  private static let _negative_no_telemark_bo: PublicSuffix.Node = .label("bo", next: [.termination])
  private static let _negative_no_telemark_bø: PublicSuffix.Node = .label("bø", next: [.termination])
  private static let _negative_no_telemark: PublicSuffix.Node = .label("telemark", next: [_negative_no_telemark_bo, _negative_no_telemark_bø])
  private static let _negative_no_time: PublicSuffix.Node = .label("time", next: [.termination])
  private static let _negative_no_tingvoll: PublicSuffix.Node = .label("tingvoll", next: [.termination])
  private static let _negative_no_tinn: PublicSuffix.Node = .label("tinn", next: [.termination])
  private static let _negative_no_tjeldsund: PublicSuffix.Node = .label("tjeldsund", next: [.termination])
  private static let _negative_no_tjome: PublicSuffix.Node = .label("tjome", next: [.termination])
  private static let _negative_no_tjøme: PublicSuffix.Node = .label("tjøme", next: [.termination])
  private static let _negative_no_tm_gs: PublicSuffix.Node = .label("gs", next: [.termination])
  private static let _negative_no_tm: PublicSuffix.Node = .label("tm", next: [.termination, _negative_no_tm_gs])
  private static let _negative_no_tokke: PublicSuffix.Node = .label("tokke", next: [.termination])
  private static let _negative_no_tolga: PublicSuffix.Node = .label("tolga", next: [.termination])
  private static let _negative_no_tonsberg: PublicSuffix.Node = .label("tonsberg", next: [.termination])
  private static let _negative_no_torsken: PublicSuffix.Node = .label("torsken", next: [.termination])
  private static let _negative_no_tr_gs: PublicSuffix.Node = .label("gs", next: [.termination])
  private static let _negative_no_tr: PublicSuffix.Node = .label("tr", next: [.termination, _negative_no_tr_gs])
  private static let _negative_no_trana: PublicSuffix.Node = .label("trana", next: [.termination])
  private static let _negative_no_tranby: PublicSuffix.Node = .label("tranby", next: [.termination])
  private static let _negative_no_tranoy: PublicSuffix.Node = .label("tranoy", next: [.termination])
  private static let _negative_no_tranøy: PublicSuffix.Node = .label("tranøy", next: [.termination])
  private static let _negative_no_troandin: PublicSuffix.Node = .label("troandin", next: [.termination])
  private static let _negative_no_trogstad: PublicSuffix.Node = .label("trogstad", next: [.termination])
  private static let _negative_no_tromsa: PublicSuffix.Node = .label("tromsa", next: [.termination])
  private static let _negative_no_tromso: PublicSuffix.Node = .label("tromso", next: [.termination])
  private static let _negative_no_tromsø: PublicSuffix.Node = .label("tromsø", next: [.termination])
  private static let _negative_no_trondheim: PublicSuffix.Node = .label("trondheim", next: [.termination])
  private static let _negative_no_trysil: PublicSuffix.Node = .label("trysil", next: [.termination])
  private static let _negative_no_træna: PublicSuffix.Node = .label("træna", next: [.termination])
  private static let _negative_no_trøgstad: PublicSuffix.Node = .label("trøgstad", next: [.termination])
  private static let _negative_no_tvedestrand: PublicSuffix.Node = .label("tvedestrand", next: [.termination])
  private static let _negative_no_tydal: PublicSuffix.Node = .label("tydal", next: [.termination])
  private static let _negative_no_tynset: PublicSuffix.Node = .label("tynset", next: [.termination])
  private static let _negative_no_tysfjord: PublicSuffix.Node = .label("tysfjord", next: [.termination])
  private static let _negative_no_tysnes: PublicSuffix.Node = .label("tysnes", next: [.termination])
  private static let _negative_no_tysvar: PublicSuffix.Node = .label("tysvar", next: [.termination])
  private static let _negative_no_tysvær: PublicSuffix.Node = .label("tysvær", next: [.termination])
  private static let _negative_no_tønsberg: PublicSuffix.Node = .label("tønsberg", next: [.termination])
  private static let _negative_no_ullensaker: PublicSuffix.Node = .label("ullensaker", next: [.termination])
  private static let _negative_no_ullensvang: PublicSuffix.Node = .label("ullensvang", next: [.termination])
  private static let _negative_no_ulvik: PublicSuffix.Node = .label("ulvik", next: [.termination])
  private static let _negative_no_unjarga: PublicSuffix.Node = .label("unjarga", next: [.termination])
  private static let _negative_no_unjárga: PublicSuffix.Node = .label("unjárga", next: [.termination])
  private static let _negative_no_utsira: PublicSuffix.Node = .label("utsira", next: [.termination])
  private static let _negative_no_va_gs: PublicSuffix.Node = .label("gs", next: [.termination])
  private static let _negative_no_va: PublicSuffix.Node = .label("va", next: [.termination, _negative_no_va_gs])
  private static let _negative_no_vaapste: PublicSuffix.Node = .label("vaapste", next: [.termination])
  private static let _negative_no_vadso: PublicSuffix.Node = .label("vadso", next: [.termination])
  private static let _negative_no_vadsø: PublicSuffix.Node = .label("vadsø", next: [.termination])
  private static let _negative_no_vaga: PublicSuffix.Node = .label("vaga", next: [.termination])
  private static let _negative_no_vagan: PublicSuffix.Node = .label("vagan", next: [.termination])
  private static let _negative_no_vagsoy: PublicSuffix.Node = .label("vagsoy", next: [.termination])
  private static let _negative_no_vaksdal: PublicSuffix.Node = .label("vaksdal", next: [.termination])
  private static let _negative_no_valle: PublicSuffix.Node = .label("valle", next: [.termination])
  private static let _negative_no_vang: PublicSuffix.Node = .label("vang", next: [.termination])
  private static let _negative_no_vanylven: PublicSuffix.Node = .label("vanylven", next: [.termination])
  private static let _negative_no_vardo: PublicSuffix.Node = .label("vardo", next: [.termination])
  private static let _negative_no_vardø: PublicSuffix.Node = .label("vardø", next: [.termination])
  private static let _negative_no_varggat: PublicSuffix.Node = .label("varggat", next: [.termination])
  private static let _negative_no_varoy: PublicSuffix.Node = .label("varoy", next: [.termination])
  private static let _negative_no_vefsn: PublicSuffix.Node = .label("vefsn", next: [.termination])
  private static let _negative_no_vega: PublicSuffix.Node = .label("vega", next: [.termination])
  private static let _negative_no_vegarshei: PublicSuffix.Node = .label("vegarshei", next: [.termination])
  private static let _negative_no_vegårshei: PublicSuffix.Node = .label("vegårshei", next: [.termination])
  private static let _negative_no_vennesla: PublicSuffix.Node = .label("vennesla", next: [.termination])
  private static let _negative_no_verdal: PublicSuffix.Node = .label("verdal", next: [.termination])
  private static let _negative_no_verran: PublicSuffix.Node = .label("verran", next: [.termination])
  private static let _negative_no_vestby: PublicSuffix.Node = .label("vestby", next: [.termination])
  private static let _negative_no_vestfold_sande: PublicSuffix.Node = .label("sande", next: [.termination])
  private static let _negative_no_vestfold: PublicSuffix.Node = .label("vestfold", next: [_negative_no_vestfold_sande])
  private static let _negative_no_vestnes: PublicSuffix.Node = .label("vestnes", next: [.termination])
  private static let _negative_no_vestreHslidre: PublicSuffix.Node = .label("vestre-slidre", next: [.termination])
  private static let _negative_no_vestreHtoten: PublicSuffix.Node = .label("vestre-toten", next: [.termination])
  private static let _negative_no_vestvagoy: PublicSuffix.Node = .label("vestvagoy", next: [.termination])
  private static let _negative_no_vestvågøy: PublicSuffix.Node = .label("vestvågøy", next: [.termination])
  private static let _negative_no_vevelstad: PublicSuffix.Node = .label("vevelstad", next: [.termination])
  private static let _negative_no_vf_gs: PublicSuffix.Node = .label("gs", next: [.termination])
  private static let _negative_no_vf: PublicSuffix.Node = .label("vf", next: [.termination, _negative_no_vf_gs])
  private static let _negative_no_vgs: PublicSuffix.Node = .label("vgs", next: [.termination])
  private static let _negative_no_vik: PublicSuffix.Node = .label("vik", next: [.termination])
  private static let _negative_no_vikna: PublicSuffix.Node = .label("vikna", next: [.termination])
  private static let _negative_no_vindafjord: PublicSuffix.Node = .label("vindafjord", next: [.termination])
  private static let _negative_no_voagat: PublicSuffix.Node = .label("voagat", next: [.termination])
  private static let _negative_no_volda: PublicSuffix.Node = .label("volda", next: [.termination])
  private static let _negative_no_voss: PublicSuffix.Node = .label("voss", next: [.termination])
  private static let _negative_no_vossevangen: PublicSuffix.Node = .label("vossevangen", next: [.termination])
  private static let _negative_no_várggát: PublicSuffix.Node = .label("várggát", next: [.termination])
  private static let _negative_no_vågan: PublicSuffix.Node = .label("vågan", next: [.termination])
  private static let _negative_no_vågsøy: PublicSuffix.Node = .label("vågsøy", next: [.termination])
  private static let _negative_no_vågå: PublicSuffix.Node = .label("vågå", next: [.termination])
  private static let _negative_no_værøy: PublicSuffix.Node = .label("værøy", next: [.termination])
  private static let _negative_no_ákŋoluokta: PublicSuffix.Node = .label("ákŋoluokta", next: [.termination])
  private static let _negative_no_álaheadju: PublicSuffix.Node = .label("álaheadju", next: [.termination])
  private static let _negative_no_áltá: PublicSuffix.Node = .label("áltá", next: [.termination])
  private static let _negative_no_åfjord: PublicSuffix.Node = .label("åfjord", next: [.termination])
  private static let _negative_no_åkrehamn: PublicSuffix.Node = .label("åkrehamn", next: [.termination])
  private static let _negative_no_ål: PublicSuffix.Node = .label("ål", next: [.termination])
  private static let _negative_no_ålesund: PublicSuffix.Node = .label("ålesund", next: [.termination])
  private static let _negative_no_ålgård: PublicSuffix.Node = .label("ålgård", next: [.termination])
  private static let _negative_no_åmli: PublicSuffix.Node = .label("åmli", next: [.termination])
  private static let _negative_no_åmot: PublicSuffix.Node = .label("åmot", next: [.termination])
  private static let _negative_no_årdal: PublicSuffix.Node = .label("årdal", next: [.termination])
  private static let _negative_no_ås: PublicSuffix.Node = .label("ås", next: [.termination])
  private static let _negative_no_åseral: PublicSuffix.Node = .label("åseral", next: [.termination])
  private static let _negative_no_åsnes: PublicSuffix.Node = .label("åsnes", next: [.termination])
  private static let _negative_no_øksnes: PublicSuffix.Node = .label("øksnes", next: [.termination])
  private static let _negative_no_ørland: PublicSuffix.Node = .label("ørland", next: [.termination])
  private static let _negative_no_ørskog: PublicSuffix.Node = .label("ørskog", next: [.termination])
  private static let _negative_no_ørsta: PublicSuffix.Node = .label("ørsta", next: [.termination])
  private static let _negative_no_østfold_våler: PublicSuffix.Node = .label("våler", next: [.termination])
  private static let _negative_no_østfold: PublicSuffix.Node = .label("østfold", next: [_negative_no_østfold_våler])
  private static let _negative_no_østreHtoten: PublicSuffix.Node = .label("østre-toten", next: [.termination])
  private static let _negative_no_øvreHeiker: PublicSuffix.Node = .label("øvre-eiker", next: [.termination])
  private static let _negative_no_øyer: PublicSuffix.Node = .label("øyer", next: [.termination])
  private static let _negative_no_øygarden: PublicSuffix.Node = .label("øygarden", next: [.termination])
  private static let _negative_no_øystreHslidre: PublicSuffix.Node = .label("øystre-slidre", next: [.termination])
  private static let _negative_no_čáhcesuolo: PublicSuffix.Node = .label("čáhcesuolo", next: [.termination])
  private static let _negative_no: PublicSuffix.Node = .label("no", next: [.termination, _negative_no_aa, _negative_no_aarborte, _negative_no_aejrie, _negative_no_afjord, _negative_no_agdenes, _negative_no_ah, _negative_no_akershus, _negative_no_aknoluokta, _negative_no_akrehamn, _negative_no_al, _negative_no_alaheadju, _negative_no_alesund, _negative_no_algard, _negative_no_alstahaug, _negative_no_alta, _negative_no_alvdal, _negative_no_amli, _negative_no_amot, _negative_no_andasuolo, _negative_no_andebu, _negative_no_andoy, _negative_no_andøy, _negative_no_ardal, _negative_no_aremark, _negative_no_arendal, _negative_no_arna, _negative_no_aseral, _negative_no_asker, _negative_no_askim, _negative_no_askoy, _negative_no_askvoll, _negative_no_askøy, _negative_no_asnes, _negative_no_audnedaln, _negative_no_aukra, _negative_no_aure, _negative_no_aurland, _negative_no_aurskogHholand, _negative_no_aurskogHhøland, _negative_no_austevoll, _negative_no_austrheim, _negative_no_averoy, _negative_no_averøy, _negative_no_badaddja, _negative_no_bahcavuotna, _negative_no_bahccavuotna, _negative_no_baidar, _negative_no_bajddar, _negative_no_balat, _negative_no_balestrand, _negative_no_ballangen, _negative_no_balsfjord, _negative_no_bamble, _negative_no_bardu, _negative_no_barum, _negative_no_batsfjord, _negative_no_bearalvahki, _negative_no_bearalváhki, _negative_no_beardu, _negative_no_beiarn, _negative_no_berg, _negative_no_bergen, _negative_no_berlevag, _negative_no_berlevåg, _negative_no_bievat, _negative_no_bievát, _negative_no_bindal, _negative_no_birkenes, _negative_no_bjarkoy, _negative_no_bjarkøy, _negative_no_bjerkreim, _negative_no_bjugn, _negative_no_blogspot, _negative_no_bodo, _negative_no_bodø, _negative_no_bokn, _negative_no_bomlo, _negative_no_bremanger, _negative_no_bronnoy, _negative_no_bronnoysund, _negative_no_brumunddal, _negative_no_bryne, _negative_no_brønnøy, _negative_no_brønnøysund, _negative_no_bu, _negative_no_budejju, _negative_no_buskerud, _negative_no_bygland, _negative_no_bykle, _negative_no_báhcavuotna, _negative_no_báhccavuotna, _negative_no_báidár, _negative_no_bájddar, _negative_no_bálát, _negative_no_bådåddjå, _negative_no_båtsfjord, _negative_no_bærum, _negative_no_bømlo, _negative_no_cahcesuolo, _negative_no_co, _negative_no_davvenjarga, _negative_no_davvenjárga, _negative_no_davvesiida, _negative_no_deatnu, _negative_no_dep, _negative_no_dielddanuorri, _negative_no_divtasvuodna, _negative_no_divttasvuotna, _negative_no_donna, _negative_no_dovre, _negative_no_drammen, _negative_no_drangedal, _negative_no_drobak, _negative_no_drøbak, _negative_no_dyroy, _negative_no_dyrøy, _negative_no_dønna, _negative_no_egersund, _negative_no_eid, _negative_no_eidfjord, _negative_no_eidsberg, _negative_no_eidskog, _negative_no_eidsvoll, _negative_no_eigersund, _negative_no_elverum, _negative_no_enebakk, _negative_no_engerdal, _negative_no_etne, _negative_no_etnedal, _negative_no_evenassi, _negative_no_evenes, _negative_no_evenášši, _negative_no_evjeHogHhornnes, _negative_no_farsund, _negative_no_fauske, _negative_no_fedje, _negative_no_fet, _negative_no_fetsund, _negative_no_fhs, _negative_no_finnoy, _negative_no_finnøy, _negative_no_fitjar, _negative_no_fjaler, _negative_no_fjell, _negative_no_fla, _negative_no_flakstad, _negative_no_flatanger, _negative_no_flekkefjord, _negative_no_flesberg, _negative_no_flora, _negative_no_floro, _negative_no_florø, _negative_no_flå, _negative_no_fm, _negative_no_folkebibl, _negative_no_folldal, _negative_no_forde, _negative_no_forsand, _negative_no_fosnes, _negative_no_frana, _negative_no_fredrikstad, _negative_no_frei, _negative_no_frogn, _negative_no_froland, _negative_no_frosta, _negative_no_froya, _negative_no_fræna, _negative_no_frøya, _negative_no_fuoisku, _negative_no_fuossko, _negative_no_fusa, _negative_no_fylkesbibl, _negative_no_fyresdal, _negative_no_førde, _negative_no_gaivuotna, _negative_no_galsa, _negative_no_gamvik, _negative_no_gangaviika, _negative_no_gaular, _negative_no_gausdal, _negative_no_giehtavuoatna, _negative_no_gildeskal, _negative_no_gildeskål, _negative_no_giske, _negative_no_gjemnes, _negative_no_gjerdrum, _negative_no_gjerstad, _negative_no_gjesdal, _negative_no_gjovik, _negative_no_gjøvik, _negative_no_gloppen, _negative_no_gol, _negative_no_gran, _negative_no_grane, _negative_no_granvin, _negative_no_gratangen, _negative_no_grimstad, _negative_no_grong, _negative_no_grue, _negative_no_gulen, _negative_no_guovdageaidnu, _negative_no_gáivuotna, _negative_no_gálsá, _negative_no_gáŋgaviika, _negative_no_ha, _negative_no_habmer, _negative_no_hadsel, _negative_no_hagebostad, _negative_no_halden, _negative_no_halsa, _negative_no_hamar, _negative_no_hamaroy, _negative_no_hammarfeasta, _negative_no_hammerfest, _negative_no_hapmir, _negative_no_haram, _negative_no_hareid, _negative_no_harstad, _negative_no_hasvik, _negative_no_hattfjelldal, _negative_no_haugesund, _negative_no_hedmark, _negative_no_hemne, _negative_no_hemnes, _negative_no_hemsedal, _negative_no_herad, _negative_no_hitra, _negative_no_hjartdal, _negative_no_hjelmeland, _negative_no_hl, _negative_no_hm, _negative_no_hobol, _negative_no_hobøl, _negative_no_hof, _negative_no_hokksund, _negative_no_hol, _negative_no_hole, _negative_no_holmestrand, _negative_no_holtalen, _negative_no_holtålen, _negative_no_honefoss, _negative_no_hordaland, _negative_no_hornindal, _negative_no_horten, _negative_no_hoyanger, _negative_no_hoylandet, _negative_no_hurdal, _negative_no_hurum, _negative_no_hvaler, _negative_no_hyllestad, _negative_no_hábmer, _negative_no_hámmárfeasta, _negative_no_hápmir, _negative_no_hå, _negative_no_hægebostad, _negative_no_hønefoss, _negative_no_høyanger, _negative_no_høylandet, _negative_no_ibestad, _negative_no_idrett, _negative_no_inderoy, _negative_no_inderøy, _negative_no_iveland, _negative_no_ivgu, _negative_no_janHmayen, _negative_no_jessheim, _negative_no_jevnaker, _negative_no_jolster, _negative_no_jondal, _negative_no_jorpeland, _negative_no_jølster, _negative_no_jørpeland, _negative_no_kafjord, _negative_no_karasjohka, _negative_no_karasjok, _negative_no_karlsoy, _negative_no_karmoy, _negative_no_karmøy, _negative_no_kautokeino, _negative_no_kirkenes, _negative_no_klabu, _negative_no_klepp, _negative_no_klæbu, _negative_no_kommune, _negative_no_kongsberg, _negative_no_kongsvinger, _negative_no_kopervik, _negative_no_kraanghke, _negative_no_kragero, _negative_no_kragerø, _negative_no_kristiansand, _negative_no_kristiansund, _negative_no_krodsherad, _negative_no_krokstadelva, _negative_no_kråanghke, _negative_no_krødsherad, _negative_no_kvafjord, _negative_no_kvalsund, _negative_no_kvam, _negative_no_kvanangen, _negative_no_kvinesdal, _negative_no_kvinnherad, _negative_no_kviteseid, _negative_no_kvitsoy, _negative_no_kvitsøy, _negative_no_kvæfjord, _negative_no_kvænangen, _negative_no_kárášjohka, _negative_no_kåfjord, _negative_no_laakesvuemie, _negative_no_lahppi, _negative_no_langevag, _negative_no_langevåg, _negative_no_lardal, _negative_no_larvik, _negative_no_lavagis, _negative_no_lavangen, _negative_no_leangaviika, _negative_no_leaŋgaviika, _negative_no_lebesby, _negative_no_leikanger, _negative_no_leirfjord, _negative_no_leirvik, _negative_no_leka, _negative_no_leksvik, _negative_no_lenvik, _negative_no_lerdal, _negative_no_lesja, _negative_no_levanger, _negative_no_lier, _negative_no_lierne, _negative_no_lillehammer, _negative_no_lillesand, _negative_no_lindas, _negative_no_lindesnes, _negative_no_lindås, _negative_no_loabat, _negative_no_loabát, _negative_no_lodingen, _negative_no_lom, _negative_no_loppa, _negative_no_lorenskog, _negative_no_loten, _negative_no_lund, _negative_no_lunner, _negative_no_luroy, _negative_no_lurøy, _negative_no_luster, _negative_no_lyngdal, _negative_no_lyngen, _negative_no_láhppi, _negative_no_lærdal, _negative_no_lødingen, _negative_no_lørenskog, _negative_no_løten, _negative_no_malatvuopmi, _negative_no_malselv, _negative_no_malvik, _negative_no_mandal, _negative_no_marker, _negative_no_marnardal, _negative_no_masfjorden, _negative_no_masoy, _negative_no_mattaHvarjjat, _negative_no_meland, _negative_no_meldal, _negative_no_melhus, _negative_no_meloy, _negative_no_meløy, _negative_no_meraker, _negative_no_meråker, _negative_no_midsund, _negative_no_midtreHgauldal, _negative_no_mil, _negative_no_mjondalen, _negative_no_mjøndalen, _negative_no_moHiHrana, _negative_no_moareke, _negative_no_modalen, _negative_no_modum, _negative_no_molde, _negative_no_moreHogHromsdal, _negative_no_mosjoen, _negative_no_mosjøen, _negative_no_moskenes, _negative_no_moss, _negative_no_mosvik, _negative_no_moåreke, _negative_no_mr, _negative_no_muosat, _negative_no_muosát, _negative_no_museum, _negative_no_myspreadshop, _negative_no_málatvuopmi, _negative_no_máttaHvárjjat, _negative_no_målselv, _negative_no_måsøy, _negative_no_møreHogHromsdal, _negative_no_naamesjevuemie, _negative_no_namdalseid, _negative_no_namsos, _negative_no_namsskogan, _negative_no_nannestad, _negative_no_naroy, _negative_no_narviika, _negative_no_narvik, _negative_no_naustdal, _negative_no_navuotna, _negative_no_nedreHeiker, _negative_no_nesna, _negative_no_nesodden, _negative_no_nesoddtangen, _negative_no_nesseby, _negative_no_nesset, _negative_no_nissedal, _negative_no_nittedal, _negative_no_nl, _negative_no_nordHaurdal, _negative_no_nordHfron, _negative_no_nordHodal, _negative_no_norddal, _negative_no_nordkapp, _negative_no_nordland, _negative_no_nordreHland, _negative_no_nordreisa, _negative_no_noreHogHuvdal, _negative_no_notodden, _negative_no_notteroy, _negative_no_nt, _negative_no_návuotna, _negative_no_nååmesjevuemie, _negative_no_nærøy, _negative_no_nøtterøy, _negative_no_odda, _negative_no_of, _negative_no_oksnes, _negative_no_ol, _negative_no_omasvuotna, _negative_no_oppdal, _negative_no_oppegard, _negative_no_oppegård, _negative_no_orkanger, _negative_no_orkdal, _negative_no_orland, _negative_no_orskog, _negative_no_orsta, _negative_no_osen, _negative_no_oslo, _negative_no_osoyro, _negative_no_osteroy, _negative_no_osterøy, _negative_no_ostfold, _negative_no_ostreHtoten, _negative_no_osøyro, _negative_no_overhalla, _negative_no_ovreHeiker, _negative_no_oyer, _negative_no_oygarden, _negative_no_oystreHslidre, _negative_no_porsanger, _negative_no_porsangu, _negative_no_porsgrunn, _negative_no_porsáŋgu, _negative_no_priv, _negative_no_rade, _negative_no_radoy, _negative_no_radøy, _negative_no_rahkkeravju, _negative_no_raholt, _negative_no_raisa, _negative_no_rakkestad, _negative_no_ralingen, _negative_no_rana, _negative_no_randaberg, _negative_no_rauma, _negative_no_rendalen, _negative_no_rennebu, _negative_no_rennesoy, _negative_no_rennesøy, _negative_no_rindal, _negative_no_ringebu, _negative_no_ringerike, _negative_no_ringsaker, _negative_no_risor, _negative_no_rissa, _negative_no_risør, _negative_no_rl, _negative_no_roan, _negative_no_rodoy, _negative_no_rollag, _negative_no_romsa, _negative_no_romskog, _negative_no_roros, _negative_no_rost, _negative_no_royken, _negative_no_royrvik, _negative_no_ruovat, _negative_no_rygge, _negative_no_ráhkkerávju, _negative_no_ráisa, _negative_no_råde, _negative_no_råholt, _negative_no_rælingen, _negative_no_rødøy, _negative_no_rømskog, _negative_no_røros, _negative_no_røst, _negative_no_røyken, _negative_no_røyrvik, _negative_no_salangen, _negative_no_salat, _negative_no_saltdal, _negative_no_samnanger, _negative_no_sandefjord, _negative_no_sandnes, _negative_no_sandnessjoen, _negative_no_sandnessjøen, _negative_no_sandoy, _negative_no_sandøy, _negative_no_sarpsborg, _negative_no_sauda, _negative_no_sauherad, _negative_no_sel, _negative_no_selbu, _negative_no_selje, _negative_no_seljord, _negative_no_sf, _negative_no_siellak, _negative_no_sigdal, _negative_no_siljan, _negative_no_sirdal, _negative_no_skanit, _negative_no_skanland, _negative_no_skaun, _negative_no_skedsmo, _negative_no_skedsmokorset, _negative_no_ski, _negative_no_skien, _negative_no_skierva, _negative_no_skiervá, _negative_no_skiptvet, _negative_no_skjak, _negative_no_skjervoy, _negative_no_skjervøy, _negative_no_skjåk, _negative_no_skodje, _negative_no_skánit, _negative_no_skånland, _negative_no_slattum, _negative_no_smola, _negative_no_smøla, _negative_no_snaase, _negative_no_snasa, _negative_no_snillfjord, _negative_no_snoasa, _negative_no_snåase, _negative_no_snåsa, _negative_no_sogndal, _negative_no_sogne, _negative_no_sokndal, _negative_no_sola, _negative_no_solund, _negative_no_somna, _negative_no_sondreHland, _negative_no_songdalen, _negative_no_sorHaurdal, _negative_no_sorHfron, _negative_no_sorHodal, _negative_no_sorHvaranger, _negative_no_sorfold, _negative_no_sorreisa, _negative_no_sortland, _negative_no_sorum, _negative_no_spjelkavik, _negative_no_spydeberg, _negative_no_st, _negative_no_stange, _negative_no_stat, _negative_no_stathelle, _negative_no_stavanger, _negative_no_stavern, _negative_no_steigen, _negative_no_steinkjer, _negative_no_stjordal, _negative_no_stjordalshalsen, _negative_no_stjørdal, _negative_no_stjørdalshalsen, _negative_no_stokke, _negative_no_storHelvdal, _negative_no_stord, _negative_no_stordal, _negative_no_storfjord, _negative_no_strand, _negative_no_stranda, _negative_no_stryn, _negative_no_sula, _negative_no_suldal, _negative_no_sund, _negative_no_sunndal, _negative_no_surnadal, _negative_no_svalbard, _negative_no_sveio, _negative_no_svelvik, _negative_no_sykkylven, _negative_no_sálat, _negative_no_sálát, _negative_no_søgne, _negative_no_sømna, _negative_no_søndreHland, _negative_no_sørHaurdal, _negative_no_sørHfron, _negative_no_sørHodal, _negative_no_sørHvaranger, _negative_no_sørfold, _negative_no_sørreisa, _negative_no_sørum, _negative_no_tana, _negative_no_tananger, _negative_no_telemark, _negative_no_time, _negative_no_tingvoll, _negative_no_tinn, _negative_no_tjeldsund, _negative_no_tjome, _negative_no_tjøme, _negative_no_tm, _negative_no_tokke, _negative_no_tolga, _negative_no_tonsberg, _negative_no_torsken, _negative_no_tr, _negative_no_trana, _negative_no_tranby, _negative_no_tranoy, _negative_no_tranøy, _negative_no_troandin, _negative_no_trogstad, _negative_no_tromsa, _negative_no_tromso, _negative_no_tromsø, _negative_no_trondheim, _negative_no_trysil, _negative_no_træna, _negative_no_trøgstad, _negative_no_tvedestrand, _negative_no_tydal, _negative_no_tynset, _negative_no_tysfjord, _negative_no_tysnes, _negative_no_tysvar, _negative_no_tysvær, _negative_no_tønsberg, _negative_no_ullensaker, _negative_no_ullensvang, _negative_no_ulvik, _negative_no_unjarga, _negative_no_unjárga, _negative_no_utsira, _negative_no_va, _negative_no_vaapste, _negative_no_vadso, _negative_no_vadsø, _negative_no_vaga, _negative_no_vagan, _negative_no_vagsoy, _negative_no_vaksdal, _negative_no_valle, _negative_no_vang, _negative_no_vanylven, _negative_no_vardo, _negative_no_vardø, _negative_no_varggat, _negative_no_varoy, _negative_no_vefsn, _negative_no_vega, _negative_no_vegarshei, _negative_no_vegårshei, _negative_no_vennesla, _negative_no_verdal, _negative_no_verran, _negative_no_vestby, _negative_no_vestfold, _negative_no_vestnes, _negative_no_vestreHslidre, _negative_no_vestreHtoten, _negative_no_vestvagoy, _negative_no_vestvågøy, _negative_no_vevelstad, _negative_no_vf, _negative_no_vgs, _negative_no_vik, _negative_no_vikna, _negative_no_vindafjord, _negative_no_voagat, _negative_no_volda, _negative_no_voss, _negative_no_vossevangen, _negative_no_várggát, _negative_no_vågan, _negative_no_vågsøy, _negative_no_vågå, _negative_no_værøy, _negative_no_ákŋoluokta, _negative_no_álaheadju, _negative_no_áltá, _negative_no_åfjord, _negative_no_åkrehamn, _negative_no_ål, _negative_no_ålesund, _negative_no_ålgård, _negative_no_åmli, _negative_no_åmot, _negative_no_årdal, _negative_no_ås, _negative_no_åseral, _negative_no_åsnes, _negative_no_øksnes, _negative_no_ørland, _negative_no_ørskog, _negative_no_ørsta, _negative_no_østfold, _negative_no_østreHtoten, _negative_no_øvreHeiker, _negative_no_øyer, _negative_no_øygarden, _negative_no_øystreHslidre, _negative_no_čáhcesuolo])
  private static let _negative_nokia: PublicSuffix.Node = .label("nokia", next: [.termination])
  private static let _negative_northwesternmutual: PublicSuffix.Node = .label("northwesternmutual", next: [.termination])
  private static let _negative_norton: PublicSuffix.Node = .label("norton", next: [.termination])
  private static let _negative_now: PublicSuffix.Node = .label("now", next: [.termination])
  private static let _negative_nowruz: PublicSuffix.Node = .label("nowruz", next: [.termination])
  private static let _negative_nowtv: PublicSuffix.Node = .label("nowtv", next: [.termination])
  private static let _negative_np: PublicSuffix.Node = .label("np", next: [.any])
  private static let _negative_nr_biz: PublicSuffix.Node = .label("biz", next: [.termination])
  private static let _negative_nr_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_nr_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_nr_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_nr_info: PublicSuffix.Node = .label("info", next: [.termination])
  private static let _negative_nr_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_nr_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_nr: PublicSuffix.Node = .label("nr", next: [.termination, _negative_nr_biz, _negative_nr_com, _negative_nr_edu, _negative_nr_gov, _negative_nr_info, _negative_nr_net, _negative_nr_org])
  private static let _negative_nra: PublicSuffix.Node = .label("nra", next: [.termination])
  private static let _negative_nrw: PublicSuffix.Node = .label("nrw", next: [.termination])
  private static let _negative_ntt: PublicSuffix.Node = .label("ntt", next: [.termination])
  private static let _negative_nu_enterprisecloud: PublicSuffix.Node = .label("enterprisecloud", next: [.termination])
  private static let _negative_nu_merseine: PublicSuffix.Node = .label("merseine", next: [.termination])
  private static let _negative_nu_mine: PublicSuffix.Node = .label("mine", next: [.termination])
  private static let _negative_nu_shacknet: PublicSuffix.Node = .label("shacknet", next: [.termination])
  private static let _negative_nu: PublicSuffix.Node = .label("nu", next: [.termination, _negative_nu_enterprisecloud, _negative_nu_merseine, _negative_nu_mine, _negative_nu_shacknet])
  private static let _negative_nyc: PublicSuffix.Node = .label("nyc", next: [.termination])
  private static let _negative_nz_ac: PublicSuffix.Node = .label("ac", next: [.termination])
  private static let _negative_nz_co_blogspot: PublicSuffix.Node = .label("blogspot", next: [.termination])
  private static let _negative_nz_co: PublicSuffix.Node = .label("co", next: [.termination, _negative_nz_co_blogspot])
  private static let _negative_nz_cri: PublicSuffix.Node = .label("cri", next: [.termination])
  private static let _negative_nz_geek: PublicSuffix.Node = .label("geek", next: [.termination])
  private static let _negative_nz_gen: PublicSuffix.Node = .label("gen", next: [.termination])
  private static let _negative_nz_govt: PublicSuffix.Node = .label("govt", next: [.termination])
  private static let _negative_nz_health: PublicSuffix.Node = .label("health", next: [.termination])
  private static let _negative_nz_iwi: PublicSuffix.Node = .label("iwi", next: [.termination])
  private static let _negative_nz_kiwi: PublicSuffix.Node = .label("kiwi", next: [.termination])
  private static let _negative_nz_maori: PublicSuffix.Node = .label("maori", next: [.termination])
  private static let _negative_nz_mil: PublicSuffix.Node = .label("mil", next: [.termination])
  private static let _negative_nz_māori: PublicSuffix.Node = .label("māori", next: [.termination])
  private static let _negative_nz_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_nz_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_nz_parliament: PublicSuffix.Node = .label("parliament", next: [.termination])
  private static let _negative_nz_school: PublicSuffix.Node = .label("school", next: [.termination])
  private static let _negative_nz: PublicSuffix.Node = .label("nz", next: [.termination, _negative_nz_ac, _negative_nz_co, _negative_nz_cri, _negative_nz_geek, _negative_nz_gen, _negative_nz_govt, _negative_nz_health, _negative_nz_iwi, _negative_nz_kiwi, _negative_nz_maori, _negative_nz_mil, _negative_nz_māori, _negative_nz_net, _negative_nz_org, _negative_nz_parliament, _negative_nz_school])
  private static let _negative_obi: PublicSuffix.Node = .label("obi", next: [.termination])
  private static let _negative_observer: PublicSuffix.Node = .label("observer", next: [.termination])
  private static let _negative_office: PublicSuffix.Node = .label("office", next: [.termination])
  private static let _negative_okinawa: PublicSuffix.Node = .label("okinawa", next: [.termination])
  private static let _negative_olayan: PublicSuffix.Node = .label("olayan", next: [.termination])
  private static let _negative_olayangroup: PublicSuffix.Node = .label("olayangroup", next: [.termination])
  private static let _negative_oldnavy: PublicSuffix.Node = .label("oldnavy", next: [.termination])
  private static let _negative_ollo: PublicSuffix.Node = .label("ollo", next: [.termination])
  private static let _negative_om_co: PublicSuffix.Node = .label("co", next: [.termination])
  private static let _negative_om_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_om_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_om_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_om_med: PublicSuffix.Node = .label("med", next: [.termination])
  private static let _negative_om_museum: PublicSuffix.Node = .label("museum", next: [.termination])
  private static let _negative_om_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_om_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_om_pro: PublicSuffix.Node = .label("pro", next: [.termination])
  private static let _negative_om: PublicSuffix.Node = .label("om", next: [.termination, _negative_om_co, _negative_om_com, _negative_om_edu, _negative_om_gov, _negative_om_med, _negative_om_museum, _negative_om_net, _negative_om_org, _negative_om_pro])
  private static let _negative_omega: PublicSuffix.Node = .label("omega", next: [.termination])
  private static let _negative_one_for: PublicSuffix.Node = .label("for", next: [.termination])
  private static let _negative_one_homelink: PublicSuffix.Node = .label("homelink", next: [.termination])
  private static let _negative_one_onred_staging: PublicSuffix.Node = .label("staging", next: [.termination])
  private static let _negative_one_onred: PublicSuffix.Node = .label("onred", next: [.termination, _negative_one_onred_staging])
  private static let _negative_one_service: PublicSuffix.Node = .label("service", next: [.termination])
  private static let _negative_one_under: PublicSuffix.Node = .label("under", next: [.termination])
  private static let _negative_one: PublicSuffix.Node = .label("one", next: [.termination, _negative_one_for, _negative_one_homelink, _negative_one_onred, _negative_one_service, _negative_one_under])
  private static let _negative_ong: PublicSuffix.Node = .label("ong", next: [.termination])
  private static let _negative_onion: PublicSuffix.Node = .label("onion", next: [.termination])
  private static let _negative_onl: PublicSuffix.Node = .label("onl", next: [.termination])
  private static let _negative_online_barsy: PublicSuffix.Node = .label("barsy", next: [.termination])
  private static let _negative_online_eero: PublicSuffix.Node = .label("eero", next: [.termination])
  private static let _negative_online_eeroHstage: PublicSuffix.Node = .label("eero-stage", next: [.termination])
  private static let _negative_online: PublicSuffix.Node = .label("online", next: [.termination, _negative_online_barsy, _negative_online_eero, _negative_online_eeroHstage])
  private static let _negative_ooo: PublicSuffix.Node = .label("ooo", next: [.termination])
  private static let _negative_open: PublicSuffix.Node = .label("open", next: [.termination])
  private static let _negative_oracle: PublicSuffix.Node = .label("oracle", next: [.termination])
  private static let _negative_orange_tech: PublicSuffix.Node = .label("tech", next: [.termination])
  private static let _negative_orange: PublicSuffix.Node = .label("orange", next: [.termination, _negative_orange_tech])
  private static let _negative_org_accesscam: PublicSuffix.Node = .label("accesscam", next: [.termination])
  private static let _negative_org_ae: PublicSuffix.Node = .label("ae", next: [.termination])
  private static let _negative_org_altervista: PublicSuffix.Node = .label("altervista", next: [.termination])
  private static let _negative_org_amune_tele: PublicSuffix.Node = .label("tele", next: [.termination])
  private static let _negative_org_amune: PublicSuffix.Node = .label("amune", next: [_negative_org_amune_tele])
  private static let _negative_org_barsy: PublicSuffix.Node = .label("barsy", next: [.termination])
  private static let _negative_org_blogdns: PublicSuffix.Node = .label("blogdns", next: [.termination])
  private static let _negative_org_blogsite: PublicSuffix.Node = .label("blogsite", next: [.termination])
  private static let _negative_org_bmoattachments: PublicSuffix.Node = .label("bmoattachments", next: [.termination])
  private static let _negative_org_boldlygoingnowhere: PublicSuffix.Node = .label("boldlygoingnowhere", next: [.termination])
  private static let _negative_org_cableHmodem: PublicSuffix.Node = .label("cable-modem", next: [.termination])
  private static let _negative_org_camdvr: PublicSuffix.Node = .label("camdvr", next: [.termination])
  private static let _negative_org_cdn77_c: PublicSuffix.Node = .label("c", next: [.termination])
  private static let _negative_org_cdn77_rsc: PublicSuffix.Node = .label("rsc", next: [.termination])
  private static let _negative_org_cdn77: PublicSuffix.Node = .label("cdn77", next: [_negative_org_cdn77_c, _negative_org_cdn77_rsc])
  private static let _negative_org_cdn77Hsecure_origin_ssl: PublicSuffix.Node = .label("ssl", next: [.termination])
  private static let _negative_org_cdn77Hsecure_origin: PublicSuffix.Node = .label("origin", next: [_negative_org_cdn77Hsecure_origin_ssl])
  private static let _negative_org_cdn77Hsecure: PublicSuffix.Node = .label("cdn77-secure", next: [_negative_org_cdn77Hsecure_origin])
  private static let _negative_org_certmgr: PublicSuffix.Node = .label("certmgr", next: [.termination])
  private static let _negative_org_cloudns: PublicSuffix.Node = .label("cloudns", next: [.termination])
  private static let _negative_org_collegefan: PublicSuffix.Node = .label("collegefan", next: [.termination])
  private static let _negative_org_couchpotatofries: PublicSuffix.Node = .label("couchpotatofries", next: [.termination])
  private static let _negative_org_ddnss: PublicSuffix.Node = .label("ddnss", next: [.termination])
  private static let _negative_org_diskstation: PublicSuffix.Node = .label("diskstation", next: [.termination])
  private static let _negative_org_dnsalias: PublicSuffix.Node = .label("dnsalias", next: [.termination])
  private static let _negative_org_dnsdojo: PublicSuffix.Node = .label("dnsdojo", next: [.termination])
  private static let _negative_org_doesntexist: PublicSuffix.Node = .label("doesntexist", next: [.termination])
  private static let _negative_org_dontexist: PublicSuffix.Node = .label("dontexist", next: [.termination])
  private static let _negative_org_doomdns: PublicSuffix.Node = .label("doomdns", next: [.termination])
  private static let _negative_org_dsmynas: PublicSuffix.Node = .label("dsmynas", next: [.termination])
  private static let _negative_org_duckdns: PublicSuffix.Node = .label("duckdns", next: [.termination])
  private static let _negative_org_dvrdns: PublicSuffix.Node = .label("dvrdns", next: [.termination])
  private static let _negative_org_dynalias: PublicSuffix.Node = .label("dynalias", next: [.termination])
  private static let _negative_org_dyndns_go: PublicSuffix.Node = .label("go", next: [.termination])
  private static let _negative_org_dyndns_home: PublicSuffix.Node = .label("home", next: [.termination])
  private static let _negative_org_dyndns: PublicSuffix.Node = .label("dyndns", next: [.termination, _negative_org_dyndns_go, _negative_org_dyndns_home])
  private static let _negative_org_dynserv: PublicSuffix.Node = .label("dynserv", next: [.termination])
  private static let _negative_org_endofinternet: PublicSuffix.Node = .label("endofinternet", next: [.termination])
  private static let _negative_org_endoftheinternet: PublicSuffix.Node = .label("endoftheinternet", next: [.termination])
  private static let _negative_org_eu_al: PublicSuffix.Node = .label("al", next: [.termination])
  private static let _negative_org_eu_asso: PublicSuffix.Node = .label("asso", next: [.termination])
  private static let _negative_org_eu_at: PublicSuffix.Node = .label("at", next: [.termination])
  private static let _negative_org_eu_au: PublicSuffix.Node = .label("au", next: [.termination])
  private static let _negative_org_eu_be: PublicSuffix.Node = .label("be", next: [.termination])
  private static let _negative_org_eu_bg: PublicSuffix.Node = .label("bg", next: [.termination])
  private static let _negative_org_eu_ca: PublicSuffix.Node = .label("ca", next: [.termination])
  private static let _negative_org_eu_cd: PublicSuffix.Node = .label("cd", next: [.termination])
  private static let _negative_org_eu_ch: PublicSuffix.Node = .label("ch", next: [.termination])
  private static let _negative_org_eu_cn: PublicSuffix.Node = .label("cn", next: [.termination])
  private static let _negative_org_eu_cy: PublicSuffix.Node = .label("cy", next: [.termination])
  private static let _negative_org_eu_cz: PublicSuffix.Node = .label("cz", next: [.termination])
  private static let _negative_org_eu_de: PublicSuffix.Node = .label("de", next: [.termination])
  private static let _negative_org_eu_dk: PublicSuffix.Node = .label("dk", next: [.termination])
  private static let _negative_org_eu_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_org_eu_ee: PublicSuffix.Node = .label("ee", next: [.termination])
  private static let _negative_org_eu_es: PublicSuffix.Node = .label("es", next: [.termination])
  private static let _negative_org_eu_fi: PublicSuffix.Node = .label("fi", next: [.termination])
  private static let _negative_org_eu_fr: PublicSuffix.Node = .label("fr", next: [.termination])
  private static let _negative_org_eu_gr: PublicSuffix.Node = .label("gr", next: [.termination])
  private static let _negative_org_eu_hr: PublicSuffix.Node = .label("hr", next: [.termination])
  private static let _negative_org_eu_hu: PublicSuffix.Node = .label("hu", next: [.termination])
  private static let _negative_org_eu_ie: PublicSuffix.Node = .label("ie", next: [.termination])
  private static let _negative_org_eu_il: PublicSuffix.Node = .label("il", next: [.termination])
  private static let _negative_org_eu_in: PublicSuffix.Node = .label("in", next: [.termination])
  private static let _negative_org_eu_int: PublicSuffix.Node = .label("int", next: [.termination])
  private static let _negative_org_eu_is: PublicSuffix.Node = .label("is", next: [.termination])
  private static let _negative_org_eu_it: PublicSuffix.Node = .label("it", next: [.termination])
  private static let _negative_org_eu_jp: PublicSuffix.Node = .label("jp", next: [.termination])
  private static let _negative_org_eu_kr: PublicSuffix.Node = .label("kr", next: [.termination])
  private static let _negative_org_eu_lt: PublicSuffix.Node = .label("lt", next: [.termination])
  private static let _negative_org_eu_lu: PublicSuffix.Node = .label("lu", next: [.termination])
  private static let _negative_org_eu_lv: PublicSuffix.Node = .label("lv", next: [.termination])
  private static let _negative_org_eu_mc: PublicSuffix.Node = .label("mc", next: [.termination])
  private static let _negative_org_eu_me: PublicSuffix.Node = .label("me", next: [.termination])
  private static let _negative_org_eu_mk: PublicSuffix.Node = .label("mk", next: [.termination])
  private static let _negative_org_eu_mt: PublicSuffix.Node = .label("mt", next: [.termination])
  private static let _negative_org_eu_my: PublicSuffix.Node = .label("my", next: [.termination])
  private static let _negative_org_eu_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_org_eu_ng: PublicSuffix.Node = .label("ng", next: [.termination])
  private static let _negative_org_eu_nl: PublicSuffix.Node = .label("nl", next: [.termination])
  private static let _negative_org_eu_no: PublicSuffix.Node = .label("no", next: [.termination])
  private static let _negative_org_eu_nz: PublicSuffix.Node = .label("nz", next: [.termination])
  private static let _negative_org_eu_paris: PublicSuffix.Node = .label("paris", next: [.termination])
  private static let _negative_org_eu_pl: PublicSuffix.Node = .label("pl", next: [.termination])
  private static let _negative_org_eu_pt: PublicSuffix.Node = .label("pt", next: [.termination])
  private static let _negative_org_eu_qHa: PublicSuffix.Node = .label("q-a", next: [.termination])
  private static let _negative_org_eu_ro: PublicSuffix.Node = .label("ro", next: [.termination])
  private static let _negative_org_eu_ru: PublicSuffix.Node = .label("ru", next: [.termination])
  private static let _negative_org_eu_se: PublicSuffix.Node = .label("se", next: [.termination])
  private static let _negative_org_eu_si: PublicSuffix.Node = .label("si", next: [.termination])
  private static let _negative_org_eu_sk: PublicSuffix.Node = .label("sk", next: [.termination])
  private static let _negative_org_eu_tr: PublicSuffix.Node = .label("tr", next: [.termination])
  private static let _negative_org_eu_uk: PublicSuffix.Node = .label("uk", next: [.termination])
  private static let _negative_org_eu_us: PublicSuffix.Node = .label("us", next: [.termination])
  private static let _negative_org_eu: PublicSuffix.Node = .label("eu", next: [.termination, _negative_org_eu_al, _negative_org_eu_asso, _negative_org_eu_at, _negative_org_eu_au, _negative_org_eu_be, _negative_org_eu_bg, _negative_org_eu_ca, _negative_org_eu_cd, _negative_org_eu_ch, _negative_org_eu_cn, _negative_org_eu_cy, _negative_org_eu_cz, _negative_org_eu_de, _negative_org_eu_dk, _negative_org_eu_edu, _negative_org_eu_ee, _negative_org_eu_es, _negative_org_eu_fi, _negative_org_eu_fr, _negative_org_eu_gr, _negative_org_eu_hr, _negative_org_eu_hu, _negative_org_eu_ie, _negative_org_eu_il, _negative_org_eu_in, _negative_org_eu_int, _negative_org_eu_is, _negative_org_eu_it, _negative_org_eu_jp, _negative_org_eu_kr, _negative_org_eu_lt, _negative_org_eu_lu, _negative_org_eu_lv, _negative_org_eu_mc, _negative_org_eu_me, _negative_org_eu_mk, _negative_org_eu_mt, _negative_org_eu_my, _negative_org_eu_net, _negative_org_eu_ng, _negative_org_eu_nl, _negative_org_eu_no, _negative_org_eu_nz, _negative_org_eu_paris, _negative_org_eu_pl, _negative_org_eu_pt, _negative_org_eu_qHa, _negative_org_eu_ro, _negative_org_eu_ru, _negative_org_eu_se, _negative_org_eu_si, _negative_org_eu_sk, _negative_org_eu_tr, _negative_org_eu_uk, _negative_org_eu_us])
  private static let _negative_org_familyds: PublicSuffix.Node = .label("familyds", next: [.termination])
  private static let _negative_org_fedorainfracloud: PublicSuffix.Node = .label("fedorainfracloud", next: [.termination])
  private static let _negative_org_fedorapeople: PublicSuffix.Node = .label("fedorapeople", next: [.termination])
  private static let _negative_org_fedoraproject_cloud: PublicSuffix.Node = .label("cloud", next: [.termination])
  private static let _negative_org_fedoraproject_os_app: PublicSuffix.Node = .label("app", next: [.termination])
  private static let _negative_org_fedoraproject_os: PublicSuffix.Node = .label("os", next: [_negative_org_fedoraproject_os_app])
  private static let _negative_org_fedoraproject_stg_os_app: PublicSuffix.Node = .label("app", next: [.termination])
  private static let _negative_org_fedoraproject_stg_os: PublicSuffix.Node = .label("os", next: [_negative_org_fedoraproject_stg_os_app])
  private static let _negative_org_fedoraproject_stg: PublicSuffix.Node = .label("stg", next: [_negative_org_fedoraproject_stg_os])
  private static let _negative_org_fedoraproject: PublicSuffix.Node = .label("fedoraproject", next: [_negative_org_fedoraproject_cloud, _negative_org_fedoraproject_os, _negative_org_fedoraproject_stg])
  private static let _negative_org_freeddns: PublicSuffix.Node = .label("freeddns", next: [.termination])
  private static let _negative_org_freedesktop: PublicSuffix.Node = .label("freedesktop", next: [.termination])
  private static let _negative_org_fromHme: PublicSuffix.Node = .label("from-me", next: [.termination])
  private static let _negative_org_gameHhost: PublicSuffix.Node = .label("game-host", next: [.termination])
  private static let _negative_org_gotdns: PublicSuffix.Node = .label("gotdns", next: [.termination])
  private static let _negative_org_hepforge: PublicSuffix.Node = .label("hepforge", next: [.termination])
  private static let _negative_org_hk: PublicSuffix.Node = .label("hk", next: [.termination])
  private static let _negative_org_hobbyHsite: PublicSuffix.Node = .label("hobby-site", next: [.termination])
  private static let _negative_org_homedns: PublicSuffix.Node = .label("homedns", next: [.termination])
  private static let _negative_org_homeftp: PublicSuffix.Node = .label("homeftp", next: [.termination])
  private static let _negative_org_homelinux: PublicSuffix.Node = .label("homelinux", next: [.termination])
  private static let _negative_org_homeunix: PublicSuffix.Node = .label("homeunix", next: [.termination])
  private static let _negative_org_hopto: PublicSuffix.Node = .label("hopto", next: [.termination])
  private static let _negative_org_httpbin: PublicSuffix.Node = .label("httpbin", next: [.termination])
  private static let _negative_org_inHdsl: PublicSuffix.Node = .label("in-dsl", next: [.termination])
  private static let _negative_org_inHvpn: PublicSuffix.Node = .label("in-vpn", next: [.termination])
  private static let _negative_org_isHaHbruinsfan: PublicSuffix.Node = .label("is-a-bruinsfan", next: [.termination])
  private static let _negative_org_isHaHcandidate: PublicSuffix.Node = .label("is-a-candidate", next: [.termination])
  private static let _negative_org_isHaHcelticsfan: PublicSuffix.Node = .label("is-a-celticsfan", next: [.termination])
  private static let _negative_org_isHaHchef: PublicSuffix.Node = .label("is-a-chef", next: [.termination])
  private static let _negative_org_isHaHgeek: PublicSuffix.Node = .label("is-a-geek", next: [.termination])
  private static let _negative_org_isHaHknight: PublicSuffix.Node = .label("is-a-knight", next: [.termination])
  private static let _negative_org_isHaHlinuxHuser: PublicSuffix.Node = .label("is-a-linux-user", next: [.termination])
  private static let _negative_org_isHaHpatsfan: PublicSuffix.Node = .label("is-a-patsfan", next: [.termination])
  private static let _negative_org_isHaHsoxfan: PublicSuffix.Node = .label("is-a-soxfan", next: [.termination])
  private static let _negative_org_isHfound: PublicSuffix.Node = .label("is-found", next: [.termination])
  private static let _negative_org_isHlost: PublicSuffix.Node = .label("is-lost", next: [.termination])
  private static let _negative_org_isHsaved: PublicSuffix.Node = .label("is-saved", next: [.termination])
  private static let _negative_org_isHveryHbad: PublicSuffix.Node = .label("is-very-bad", next: [.termination])
  private static let _negative_org_isHveryHevil: PublicSuffix.Node = .label("is-very-evil", next: [.termination])
  private static let _negative_org_isHveryHgood: PublicSuffix.Node = .label("is-very-good", next: [.termination])
  private static let _negative_org_isHveryHnice: PublicSuffix.Node = .label("is-very-nice", next: [.termination])
  private static let _negative_org_isHveryHsweet: PublicSuffix.Node = .label("is-very-sweet", next: [.termination])
  private static let _negative_org_isaHgeek: PublicSuffix.Node = .label("isa-geek", next: [.termination])
  private static let _negative_org_js: PublicSuffix.Node = .label("js", next: [.termination])
  private static let _negative_org_kicksHass: PublicSuffix.Node = .label("kicks-ass", next: [.termination])
  private static let _negative_org_mayfirst: PublicSuffix.Node = .label("mayfirst", next: [.termination])
  private static let _negative_org_misconfused: PublicSuffix.Node = .label("misconfused", next: [.termination])
  private static let _negative_org_mlbfan: PublicSuffix.Node = .label("mlbfan", next: [.termination])
  private static let _negative_org_mozillaHiot: PublicSuffix.Node = .label("mozilla-iot", next: [.termination])
  private static let _negative_org_myHfirewall: PublicSuffix.Node = .label("my-firewall", next: [.termination])
  private static let _negative_org_myfirewall: PublicSuffix.Node = .label("myfirewall", next: [.termination])
  private static let _negative_org_myftp: PublicSuffix.Node = .label("myftp", next: [.termination])
  private static let _negative_org_mysecuritycamera: PublicSuffix.Node = .label("mysecuritycamera", next: [.termination])
  private static let _negative_org_mywire: PublicSuffix.Node = .label("mywire", next: [.termination])
  private static let _negative_org_nflfan: PublicSuffix.Node = .label("nflfan", next: [.termination])
  private static let _negative_org_noHip: PublicSuffix.Node = .label("no-ip", next: [.termination])
  private static let _negative_org_nowHdns: PublicSuffix.Node = .label("now-dns", next: [.termination])
  private static let _negative_org_pimienta: PublicSuffix.Node = .label("pimienta", next: [.termination])
  private static let _negative_org_podzone: PublicSuffix.Node = .label("podzone", next: [.termination])
  private static let _negative_org_poivron: PublicSuffix.Node = .label("poivron", next: [.termination])
  private static let _negative_org_potager: PublicSuffix.Node = .label("potager", next: [.termination])
  private static let _negative_org_pubtls: PublicSuffix.Node = .label("pubtls", next: [.termination])
  private static let _negative_org_readHbooks: PublicSuffix.Node = .label("read-books", next: [.termination])
  private static let _negative_org_readmyblog: PublicSuffix.Node = .label("readmyblog", next: [.termination])
  private static let _negative_org_selfip: PublicSuffix.Node = .label("selfip", next: [.termination])
  private static let _negative_org_sellsyourhome: PublicSuffix.Node = .label("sellsyourhome", next: [.termination])
  private static let _negative_org_servebbs: PublicSuffix.Node = .label("servebbs", next: [.termination])
  private static let _negative_org_serveftp: PublicSuffix.Node = .label("serveftp", next: [.termination])
  private static let _negative_org_servegame: PublicSuffix.Node = .label("servegame", next: [.termination])
  private static let _negative_org_smallHweb: PublicSuffix.Node = .label("small-web", next: [.termination])
  private static let _negative_org_spdns: PublicSuffix.Node = .label("spdns", next: [.termination])
  private static let _negative_org_stuffH4Hsale: PublicSuffix.Node = .label("stuff-4-sale", next: [.termination])
  private static let _negative_org_sweetpepper: PublicSuffix.Node = .label("sweetpepper", next: [.termination])
  private static let _negative_org_teckids_s3: PublicSuffix.Node = .label("s3", next: [.termination])
  private static let _negative_org_teckids: PublicSuffix.Node = .label("teckids", next: [_negative_org_teckids_s3])
  private static let _negative_org_toolforge: PublicSuffix.Node = .label("toolforge", next: [.termination])
  private static let _negative_org_tunk: PublicSuffix.Node = .label("tunk", next: [.termination])
  private static let _negative_org_tuxfamily: PublicSuffix.Node = .label("tuxfamily", next: [.termination])
  private static let _negative_org_twmail: PublicSuffix.Node = .label("twmail", next: [.termination])
  private static let _negative_org_ufcfan: PublicSuffix.Node = .label("ufcfan", next: [.termination])
  private static let _negative_org_us: PublicSuffix.Node = .label("us", next: [.termination])
  private static let _negative_org_webhop: PublicSuffix.Node = .label("webhop", next: [.termination])
  private static let _negative_org_webredirect: PublicSuffix.Node = .label("webredirect", next: [.termination])
  private static let _negative_org_wmcloud: PublicSuffix.Node = .label("wmcloud", next: [.termination])
  private static let _negative_org_wmflabs: PublicSuffix.Node = .label("wmflabs", next: [.termination])
  private static let _negative_org_za: PublicSuffix.Node = .label("za", next: [.termination])
  private static let _negative_org_zapto: PublicSuffix.Node = .label("zapto", next: [.termination])
  private static let _negative_org: PublicSuffix.Node = .label("org", next: [.termination, _negative_org_accesscam, _negative_org_ae, _negative_org_altervista, _negative_org_amune, _negative_org_barsy, _negative_org_blogdns, _negative_org_blogsite, _negative_org_bmoattachments, _negative_org_boldlygoingnowhere, _negative_org_cableHmodem, _negative_org_camdvr, _negative_org_cdn77, _negative_org_cdn77Hsecure, _negative_org_certmgr, _negative_org_cloudns, _negative_org_collegefan, _negative_org_couchpotatofries, _negative_org_ddnss, _negative_org_diskstation, _negative_org_dnsalias, _negative_org_dnsdojo, _negative_org_doesntexist, _negative_org_dontexist, _negative_org_doomdns, _negative_org_dsmynas, _negative_org_duckdns, _negative_org_dvrdns, _negative_org_dynalias, _negative_org_dyndns, _negative_org_dynserv, _negative_org_endofinternet, _negative_org_endoftheinternet, _negative_org_eu, _negative_org_familyds, _negative_org_fedorainfracloud, _negative_org_fedorapeople, _negative_org_fedoraproject, _negative_org_freeddns, _negative_org_freedesktop, _negative_org_fromHme, _negative_org_gameHhost, _negative_org_gotdns, _negative_org_hepforge, _negative_org_hk, _negative_org_hobbyHsite, _negative_org_homedns, _negative_org_homeftp, _negative_org_homelinux, _negative_org_homeunix, _negative_org_hopto, _negative_org_httpbin, _negative_org_inHdsl, _negative_org_inHvpn, _negative_org_isHaHbruinsfan, _negative_org_isHaHcandidate, _negative_org_isHaHcelticsfan, _negative_org_isHaHchef, _negative_org_isHaHgeek, _negative_org_isHaHknight, _negative_org_isHaHlinuxHuser, _negative_org_isHaHpatsfan, _negative_org_isHaHsoxfan, _negative_org_isHfound, _negative_org_isHlost, _negative_org_isHsaved, _negative_org_isHveryHbad, _negative_org_isHveryHevil, _negative_org_isHveryHgood, _negative_org_isHveryHnice, _negative_org_isHveryHsweet, _negative_org_isaHgeek, _negative_org_js, _negative_org_kicksHass, _negative_org_mayfirst, _negative_org_misconfused, _negative_org_mlbfan, _negative_org_mozillaHiot, _negative_org_myHfirewall, _negative_org_myfirewall, _negative_org_myftp, _negative_org_mysecuritycamera, _negative_org_mywire, _negative_org_nflfan, _negative_org_noHip, _negative_org_nowHdns, _negative_org_pimienta, _negative_org_podzone, _negative_org_poivron, _negative_org_potager, _negative_org_pubtls, _negative_org_readHbooks, _negative_org_readmyblog, _negative_org_selfip, _negative_org_sellsyourhome, _negative_org_servebbs, _negative_org_serveftp, _negative_org_servegame, _negative_org_smallHweb, _negative_org_spdns, _negative_org_stuffH4Hsale, _negative_org_sweetpepper, _negative_org_teckids, _negative_org_toolforge, _negative_org_tunk, _negative_org_tuxfamily, _negative_org_twmail, _negative_org_ufcfan, _negative_org_us, _negative_org_webhop, _negative_org_webredirect, _negative_org_wmcloud, _negative_org_wmflabs, _negative_org_za, _negative_org_zapto])
  private static let _negative_organic: PublicSuffix.Node = .label("organic", next: [.termination])
  private static let _negative_origins: PublicSuffix.Node = .label("origins", next: [.termination])
  private static let _negative_osaka: PublicSuffix.Node = .label("osaka", next: [.termination])
  private static let _negative_otsuka: PublicSuffix.Node = .label("otsuka", next: [.termination])
  private static let _negative_ott: PublicSuffix.Node = .label("ott", next: [.termination])
  private static let _negative_ovh_nerdpol: PublicSuffix.Node = .label("nerdpol", next: [.termination])
  private static let _negative_ovh: PublicSuffix.Node = .label("ovh", next: [.termination, _negative_ovh_nerdpol])
  private static let _negative_pa_abo: PublicSuffix.Node = .label("abo", next: [.termination])
  private static let _negative_pa_ac: PublicSuffix.Node = .label("ac", next: [.termination])
  private static let _negative_pa_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_pa_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_pa_gob: PublicSuffix.Node = .label("gob", next: [.termination])
  private static let _negative_pa_ing: PublicSuffix.Node = .label("ing", next: [.termination])
  private static let _negative_pa_med: PublicSuffix.Node = .label("med", next: [.termination])
  private static let _negative_pa_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_pa_nom: PublicSuffix.Node = .label("nom", next: [.termination])
  private static let _negative_pa_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_pa_sld: PublicSuffix.Node = .label("sld", next: [.termination])
  private static let _negative_pa: PublicSuffix.Node = .label("pa", next: [.termination, _negative_pa_abo, _negative_pa_ac, _negative_pa_com, _negative_pa_edu, _negative_pa_gob, _negative_pa_ing, _negative_pa_med, _negative_pa_net, _negative_pa_nom, _negative_pa_org, _negative_pa_sld])
  private static let _negative_page_codeberg: PublicSuffix.Node = .label("codeberg", next: [.termination])
  private static let _negative_page_hlx: PublicSuffix.Node = .label("hlx", next: [.termination])
  private static let _negative_page_hlx3: PublicSuffix.Node = .label("hlx3", next: [.termination])
  private static let _negative_page_magnet: PublicSuffix.Node = .label("magnet", next: [.termination])
  private static let _negative_page_pdns: PublicSuffix.Node = .label("pdns", next: [.termination])
  private static let _negative_page_plesk: PublicSuffix.Node = .label("plesk", next: [.termination])
  private static let _negative_page_prvcy: PublicSuffix.Node = .label("prvcy", next: [.termination])
  private static let _negative_page_rocky: PublicSuffix.Node = .label("rocky", next: [.termination])
  private static let _negative_page_translated: PublicSuffix.Node = .label("translated", next: [.termination])
  private static let _negative_page: PublicSuffix.Node = .label("page", next: [.termination, _negative_page_codeberg, _negative_page_hlx, _negative_page_hlx3, _negative_page_magnet, _negative_page_pdns, _negative_page_plesk, _negative_page_prvcy, _negative_page_rocky, _negative_page_translated])
  private static let _negative_panasonic: PublicSuffix.Node = .label("panasonic", next: [.termination])
  private static let _negative_paris: PublicSuffix.Node = .label("paris", next: [.termination])
  private static let _negative_pars: PublicSuffix.Node = .label("pars", next: [.termination])
  private static let _negative_partners: PublicSuffix.Node = .label("partners", next: [.termination])
  private static let _negative_parts: PublicSuffix.Node = .label("parts", next: [.termination])
  private static let _negative_party_ybo: PublicSuffix.Node = .label("ybo", next: [.termination])
  private static let _negative_party: PublicSuffix.Node = .label("party", next: [.termination, _negative_party_ybo])
  private static let _negative_passagens: PublicSuffix.Node = .label("passagens", next: [.termination])
  private static let _negative_pay: PublicSuffix.Node = .label("pay", next: [.termination])
  private static let _negative_pccw: PublicSuffix.Node = .label("pccw", next: [.termination])
  private static let _negative_pe_blogspot: PublicSuffix.Node = .label("blogspot", next: [.termination])
  private static let _negative_pe_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_pe_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_pe_gob: PublicSuffix.Node = .label("gob", next: [.termination])
  private static let _negative_pe_mil: PublicSuffix.Node = .label("mil", next: [.termination])
  private static let _negative_pe_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_pe_nom: PublicSuffix.Node = .label("nom", next: [.termination])
  private static let _negative_pe_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_pe: PublicSuffix.Node = .label("pe", next: [.termination, _negative_pe_blogspot, _negative_pe_com, _negative_pe_edu, _negative_pe_gob, _negative_pe_mil, _negative_pe_net, _negative_pe_nom, _negative_pe_org])
  private static let _negative_pet: PublicSuffix.Node = .label("pet", next: [.termination])
  private static let _negative_pf_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_pf_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_pf_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_pf: PublicSuffix.Node = .label("pf", next: [.termination, _negative_pf_com, _negative_pf_edu, _negative_pf_org])
  private static let _negative_pfizer: PublicSuffix.Node = .label("pfizer", next: [.termination])
  private static let _negative_pg: PublicSuffix.Node = .label("pg", next: [.any])
  private static let _negative_ph_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_ph_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_ph_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_ph_i: PublicSuffix.Node = .label("i", next: [.termination])
  private static let _negative_ph_mil: PublicSuffix.Node = .label("mil", next: [.termination])
  private static let _negative_ph_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_ph_ngo: PublicSuffix.Node = .label("ngo", next: [.termination])
  private static let _negative_ph_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_ph: PublicSuffix.Node = .label("ph", next: [.termination, _negative_ph_com, _negative_ph_edu, _negative_ph_gov, _negative_ph_i, _negative_ph_mil, _negative_ph_net, _negative_ph_ngo, _negative_ph_org])
  private static let _negative_pharmacy: PublicSuffix.Node = .label("pharmacy", next: [.termination])
  private static let _negative_phd: PublicSuffix.Node = .label("phd", next: [.termination])
  private static let _negative_philips: PublicSuffix.Node = .label("philips", next: [.termination])
  private static let _negative_phone: PublicSuffix.Node = .label("phone", next: [.termination])
  private static let _negative_photo: PublicSuffix.Node = .label("photo", next: [.termination])
  private static let _negative_photography: PublicSuffix.Node = .label("photography", next: [.termination])
  private static let _negative_photos_framer: PublicSuffix.Node = .label("framer", next: [.termination])
  private static let _negative_photos: PublicSuffix.Node = .label("photos", next: [.termination, _negative_photos_framer])
  private static let _negative_physio: PublicSuffix.Node = .label("physio", next: [.termination])
  private static let _negative_pics: PublicSuffix.Node = .label("pics", next: [.termination])
  private static let _negative_pictet: PublicSuffix.Node = .label("pictet", next: [.termination])
  private static let _negative_pictures_1337: PublicSuffix.Node = .label("1337", next: [.termination])
  private static let _negative_pictures: PublicSuffix.Node = .label("pictures", next: [.termination, _negative_pictures_1337])
  private static let _negative_pid: PublicSuffix.Node = .label("pid", next: [.termination])
  private static let _negative_pin: PublicSuffix.Node = .label("pin", next: [.termination])
  private static let _negative_ping: PublicSuffix.Node = .label("ping", next: [.termination])
  private static let _negative_pink: PublicSuffix.Node = .label("pink", next: [.termination])
  private static let _negative_pioneer: PublicSuffix.Node = .label("pioneer", next: [.termination])
  private static let _negative_pizza: PublicSuffix.Node = .label("pizza", next: [.termination])
  private static let _negative_pk_biz: PublicSuffix.Node = .label("biz", next: [.termination])
  private static let _negative_pk_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_pk_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_pk_fam: PublicSuffix.Node = .label("fam", next: [.termination])
  private static let _negative_pk_gob: PublicSuffix.Node = .label("gob", next: [.termination])
  private static let _negative_pk_gok: PublicSuffix.Node = .label("gok", next: [.termination])
  private static let _negative_pk_gon: PublicSuffix.Node = .label("gon", next: [.termination])
  private static let _negative_pk_gop: PublicSuffix.Node = .label("gop", next: [.termination])
  private static let _negative_pk_gos: PublicSuffix.Node = .label("gos", next: [.termination])
  private static let _negative_pk_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_pk_info: PublicSuffix.Node = .label("info", next: [.termination])
  private static let _negative_pk_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_pk_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_pk_web: PublicSuffix.Node = .label("web", next: [.termination])
  private static let _negative_pk: PublicSuffix.Node = .label("pk", next: [.termination, _negative_pk_biz, _negative_pk_com, _negative_pk_edu, _negative_pk_fam, _negative_pk_gob, _negative_pk_gok, _negative_pk_gon, _negative_pk_gop, _negative_pk_gos, _negative_pk_gov, _negative_pk_info, _negative_pk_net, _negative_pk_org, _negative_pk_web])
  private static let _negative_pl_agro: PublicSuffix.Node = .label("agro", next: [.termination])
  private static let _negative_pl_aid: PublicSuffix.Node = .label("aid", next: [.termination])
  private static let _negative_pl_art: PublicSuffix.Node = .label("art", next: [.termination])
  private static let _negative_pl_atm: PublicSuffix.Node = .label("atm", next: [.termination])
  private static let _negative_pl_augustow: PublicSuffix.Node = .label("augustow", next: [.termination])
  private static let _negative_pl_auto: PublicSuffix.Node = .label("auto", next: [.termination])
  private static let _negative_pl_babiaHgora: PublicSuffix.Node = .label("babia-gora", next: [.termination])
  private static let _negative_pl_bedzin: PublicSuffix.Node = .label("bedzin", next: [.termination])
  private static let _negative_pl_beep: PublicSuffix.Node = .label("beep", next: [.termination])
  private static let _negative_pl_beskidy: PublicSuffix.Node = .label("beskidy", next: [.termination])
  private static let _negative_pl_bialowieza: PublicSuffix.Node = .label("bialowieza", next: [.termination])
  private static let _negative_pl_bialystok: PublicSuffix.Node = .label("bialystok", next: [.termination])
  private static let _negative_pl_bielawa: PublicSuffix.Node = .label("bielawa", next: [.termination])
  private static let _negative_pl_bieszczady: PublicSuffix.Node = .label("bieszczady", next: [.termination])
  private static let _negative_pl_biz: PublicSuffix.Node = .label("biz", next: [.termination])
  private static let _negative_pl_boleslawiec: PublicSuffix.Node = .label("boleslawiec", next: [.termination])
  private static let _negative_pl_bydgoszcz: PublicSuffix.Node = .label("bydgoszcz", next: [.termination])
  private static let _negative_pl_bytom: PublicSuffix.Node = .label("bytom", next: [.termination])
  private static let _negative_pl_cieszyn: PublicSuffix.Node = .label("cieszyn", next: [.termination])
  private static let _negative_pl_co: PublicSuffix.Node = .label("co", next: [.termination])
  private static let _negative_pl_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_pl_czeladz: PublicSuffix.Node = .label("czeladz", next: [.termination])
  private static let _negative_pl_czest: PublicSuffix.Node = .label("czest", next: [.termination])
  private static let _negative_pl_dlugoleka: PublicSuffix.Node = .label("dlugoleka", next: [.termination])
  private static let _negative_pl_ecommerceHshop: PublicSuffix.Node = .label("ecommerce-shop", next: [.termination])
  private static let _negative_pl_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_pl_elblag: PublicSuffix.Node = .label("elblag", next: [.termination])
  private static let _negative_pl_elk: PublicSuffix.Node = .label("elk", next: [.termination])
  private static let _negative_pl_gda: PublicSuffix.Node = .label("gda", next: [.termination])
  private static let _negative_pl_gdansk: PublicSuffix.Node = .label("gdansk", next: [.termination])
  private static let _negative_pl_gdynia: PublicSuffix.Node = .label("gdynia", next: [.termination])
  private static let _negative_pl_gliwice: PublicSuffix.Node = .label("gliwice", next: [.termination])
  private static let _negative_pl_glogow: PublicSuffix.Node = .label("glogow", next: [.termination])
  private static let _negative_pl_gmina: PublicSuffix.Node = .label("gmina", next: [.termination])
  private static let _negative_pl_gniezno: PublicSuffix.Node = .label("gniezno", next: [.termination])
  private static let _negative_pl_gorlice: PublicSuffix.Node = .label("gorlice", next: [.termination])
  private static let _negative_pl_gov_ap: PublicSuffix.Node = .label("ap", next: [.termination])
  private static let _negative_pl_gov_griw: PublicSuffix.Node = .label("griw", next: [.termination])
  private static let _negative_pl_gov_ic: PublicSuffix.Node = .label("ic", next: [.termination])
  private static let _negative_pl_gov_is: PublicSuffix.Node = .label("is", next: [.termination])
  private static let _negative_pl_gov_kmpsp: PublicSuffix.Node = .label("kmpsp", next: [.termination])
  private static let _negative_pl_gov_konsulat: PublicSuffix.Node = .label("konsulat", next: [.termination])
  private static let _negative_pl_gov_kppsp: PublicSuffix.Node = .label("kppsp", next: [.termination])
  private static let _negative_pl_gov_kwp: PublicSuffix.Node = .label("kwp", next: [.termination])
  private static let _negative_pl_gov_kwpsp: PublicSuffix.Node = .label("kwpsp", next: [.termination])
  private static let _negative_pl_gov_mup: PublicSuffix.Node = .label("mup", next: [.termination])
  private static let _negative_pl_gov_mw: PublicSuffix.Node = .label("mw", next: [.termination])
  private static let _negative_pl_gov_oirm: PublicSuffix.Node = .label("oirm", next: [.termination])
  private static let _negative_pl_gov_oum: PublicSuffix.Node = .label("oum", next: [.termination])
  private static let _negative_pl_gov_pa: PublicSuffix.Node = .label("pa", next: [.termination])
  private static let _negative_pl_gov_pinb: PublicSuffix.Node = .label("pinb", next: [.termination])
  private static let _negative_pl_gov_piw: PublicSuffix.Node = .label("piw", next: [.termination])
  private static let _negative_pl_gov_po: PublicSuffix.Node = .label("po", next: [.termination])
  private static let _negative_pl_gov_psp: PublicSuffix.Node = .label("psp", next: [.termination])
  private static let _negative_pl_gov_psse: PublicSuffix.Node = .label("psse", next: [.termination])
  private static let _negative_pl_gov_pup: PublicSuffix.Node = .label("pup", next: [.termination])
  private static let _negative_pl_gov_rzgw: PublicSuffix.Node = .label("rzgw", next: [.termination])
  private static let _negative_pl_gov_sa: PublicSuffix.Node = .label("sa", next: [.termination])
  private static let _negative_pl_gov_sdn: PublicSuffix.Node = .label("sdn", next: [.termination])
  private static let _negative_pl_gov_sko: PublicSuffix.Node = .label("sko", next: [.termination])
  private static let _negative_pl_gov_so: PublicSuffix.Node = .label("so", next: [.termination])
  private static let _negative_pl_gov_sr: PublicSuffix.Node = .label("sr", next: [.termination])
  private static let _negative_pl_gov_starostwo: PublicSuffix.Node = .label("starostwo", next: [.termination])
  private static let _negative_pl_gov_ug: PublicSuffix.Node = .label("ug", next: [.termination])
  private static let _negative_pl_gov_ugim: PublicSuffix.Node = .label("ugim", next: [.termination])
  private static let _negative_pl_gov_um: PublicSuffix.Node = .label("um", next: [.termination])
  private static let _negative_pl_gov_umig: PublicSuffix.Node = .label("umig", next: [.termination])
  private static let _negative_pl_gov_upow: PublicSuffix.Node = .label("upow", next: [.termination])
  private static let _negative_pl_gov_uppo: PublicSuffix.Node = .label("uppo", next: [.termination])
  private static let _negative_pl_gov_us: PublicSuffix.Node = .label("us", next: [.termination])
  private static let _negative_pl_gov_uw: PublicSuffix.Node = .label("uw", next: [.termination])
  private static let _negative_pl_gov_uzs: PublicSuffix.Node = .label("uzs", next: [.termination])
  private static let _negative_pl_gov_wif: PublicSuffix.Node = .label("wif", next: [.termination])
  private static let _negative_pl_gov_wiih: PublicSuffix.Node = .label("wiih", next: [.termination])
  private static let _negative_pl_gov_winb: PublicSuffix.Node = .label("winb", next: [.termination])
  private static let _negative_pl_gov_wios: PublicSuffix.Node = .label("wios", next: [.termination])
  private static let _negative_pl_gov_witd: PublicSuffix.Node = .label("witd", next: [.termination])
  private static let _negative_pl_gov_wiw: PublicSuffix.Node = .label("wiw", next: [.termination])
  private static let _negative_pl_gov_wsa: PublicSuffix.Node = .label("wsa", next: [.termination])
  private static let _negative_pl_gov_wskr: PublicSuffix.Node = .label("wskr", next: [.termination])
  private static let _negative_pl_gov_wuoz: PublicSuffix.Node = .label("wuoz", next: [.termination])
  private static let _negative_pl_gov_wzmiuw: PublicSuffix.Node = .label("wzmiuw", next: [.termination])
  private static let _negative_pl_gov_zp: PublicSuffix.Node = .label("zp", next: [.termination])
  private static let _negative_pl_gov: PublicSuffix.Node = .label("gov", next: [.termination, _negative_pl_gov_ap, _negative_pl_gov_griw, _negative_pl_gov_ic, _negative_pl_gov_is, _negative_pl_gov_kmpsp, _negative_pl_gov_konsulat, _negative_pl_gov_kppsp, _negative_pl_gov_kwp, _negative_pl_gov_kwpsp, _negative_pl_gov_mup, _negative_pl_gov_mw, _negative_pl_gov_oirm, _negative_pl_gov_oum, _negative_pl_gov_pa, _negative_pl_gov_pinb, _negative_pl_gov_piw, _negative_pl_gov_po, _negative_pl_gov_psp, _negative_pl_gov_psse, _negative_pl_gov_pup, _negative_pl_gov_rzgw, _negative_pl_gov_sa, _negative_pl_gov_sdn, _negative_pl_gov_sko, _negative_pl_gov_so, _negative_pl_gov_sr, _negative_pl_gov_starostwo, _negative_pl_gov_ug, _negative_pl_gov_ugim, _negative_pl_gov_um, _negative_pl_gov_umig, _negative_pl_gov_upow, _negative_pl_gov_uppo, _negative_pl_gov_us, _negative_pl_gov_uw, _negative_pl_gov_uzs, _negative_pl_gov_wif, _negative_pl_gov_wiih, _negative_pl_gov_winb, _negative_pl_gov_wios, _negative_pl_gov_witd, _negative_pl_gov_wiw, _negative_pl_gov_wsa, _negative_pl_gov_wskr, _negative_pl_gov_wuoz, _negative_pl_gov_wzmiuw, _negative_pl_gov_zp])
  private static let _negative_pl_grajewo: PublicSuffix.Node = .label("grajewo", next: [.termination])
  private static let _negative_pl_gsm: PublicSuffix.Node = .label("gsm", next: [.termination])
  private static let _negative_pl_homesklep: PublicSuffix.Node = .label("homesklep", next: [.termination])
  private static let _negative_pl_ilawa: PublicSuffix.Node = .label("ilawa", next: [.termination])
  private static let _negative_pl_info: PublicSuffix.Node = .label("info", next: [.termination])
  private static let _negative_pl_jaworzno: PublicSuffix.Node = .label("jaworzno", next: [.termination])
  private static let _negative_pl_jeleniaHgora: PublicSuffix.Node = .label("jelenia-gora", next: [.termination])
  private static let _negative_pl_jgora: PublicSuffix.Node = .label("jgora", next: [.termination])
  private static let _negative_pl_kalisz: PublicSuffix.Node = .label("kalisz", next: [.termination])
  private static let _negative_pl_karpacz: PublicSuffix.Node = .label("karpacz", next: [.termination])
  private static let _negative_pl_kartuzy: PublicSuffix.Node = .label("kartuzy", next: [.termination])
  private static let _negative_pl_kaszuby: PublicSuffix.Node = .label("kaszuby", next: [.termination])
  private static let _negative_pl_katowice: PublicSuffix.Node = .label("katowice", next: [.termination])
  private static let _negative_pl_kazimierzHdolny: PublicSuffix.Node = .label("kazimierz-dolny", next: [.termination])
  private static let _negative_pl_kepno: PublicSuffix.Node = .label("kepno", next: [.termination])
  private static let _negative_pl_ketrzyn: PublicSuffix.Node = .label("ketrzyn", next: [.termination])
  private static let _negative_pl_klodzko: PublicSuffix.Node = .label("klodzko", next: [.termination])
  private static let _negative_pl_kobierzyce: PublicSuffix.Node = .label("kobierzyce", next: [.termination])
  private static let _negative_pl_kolobrzeg: PublicSuffix.Node = .label("kolobrzeg", next: [.termination])
  private static let _negative_pl_konin: PublicSuffix.Node = .label("konin", next: [.termination])
  private static let _negative_pl_konskowola: PublicSuffix.Node = .label("konskowola", next: [.termination])
  private static let _negative_pl_krakow: PublicSuffix.Node = .label("krakow", next: [.termination])
  private static let _negative_pl_krasnik: PublicSuffix.Node = .label("krasnik", next: [.termination])
  private static let _negative_pl_kutno: PublicSuffix.Node = .label("kutno", next: [.termination])
  private static let _negative_pl_lapy: PublicSuffix.Node = .label("lapy", next: [.termination])
  private static let _negative_pl_lebork: PublicSuffix.Node = .label("lebork", next: [.termination])
  private static let _negative_pl_leczna: PublicSuffix.Node = .label("leczna", next: [.termination])
  private static let _negative_pl_legnica: PublicSuffix.Node = .label("legnica", next: [.termination])
  private static let _negative_pl_lezajsk: PublicSuffix.Node = .label("lezajsk", next: [.termination])
  private static let _negative_pl_limanowa: PublicSuffix.Node = .label("limanowa", next: [.termination])
  private static let _negative_pl_lomza: PublicSuffix.Node = .label("lomza", next: [.termination])
  private static let _negative_pl_lowicz: PublicSuffix.Node = .label("lowicz", next: [.termination])
  private static let _negative_pl_lubartow: PublicSuffix.Node = .label("lubartow", next: [.termination])
  private static let _negative_pl_lubin: PublicSuffix.Node = .label("lubin", next: [.termination])
  private static let _negative_pl_lublin: PublicSuffix.Node = .label("lublin", next: [.termination])
  private static let _negative_pl_lukow: PublicSuffix.Node = .label("lukow", next: [.termination])
  private static let _negative_pl_mail: PublicSuffix.Node = .label("mail", next: [.termination])
  private static let _negative_pl_malbork: PublicSuffix.Node = .label("malbork", next: [.termination])
  private static let _negative_pl_malopolska: PublicSuffix.Node = .label("malopolska", next: [.termination])
  private static let _negative_pl_mazowsze: PublicSuffix.Node = .label("mazowsze", next: [.termination])
  private static let _negative_pl_mazury: PublicSuffix.Node = .label("mazury", next: [.termination])
  private static let _negative_pl_med: PublicSuffix.Node = .label("med", next: [.termination])
  private static let _negative_pl_media: PublicSuffix.Node = .label("media", next: [.termination])
  private static let _negative_pl_miasta: PublicSuffix.Node = .label("miasta", next: [.termination])
  private static let _negative_pl_mielec: PublicSuffix.Node = .label("mielec", next: [.termination])
  private static let _negative_pl_mielno: PublicSuffix.Node = .label("mielno", next: [.termination])
  private static let _negative_pl_mil: PublicSuffix.Node = .label("mil", next: [.termination])
  private static let _negative_pl_mragowo: PublicSuffix.Node = .label("mragowo", next: [.termination])
  private static let _negative_pl_myspreadshop: PublicSuffix.Node = .label("myspreadshop", next: [.termination])
  private static let _negative_pl_naklo: PublicSuffix.Node = .label("naklo", next: [.termination])
  private static let _negative_pl_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_pl_nieruchomosci: PublicSuffix.Node = .label("nieruchomosci", next: [.termination])
  private static let _negative_pl_nom: PublicSuffix.Node = .label("nom", next: [.termination])
  private static let _negative_pl_nowaruda: PublicSuffix.Node = .label("nowaruda", next: [.termination])
  private static let _negative_pl_nysa: PublicSuffix.Node = .label("nysa", next: [.termination])
  private static let _negative_pl_olawa: PublicSuffix.Node = .label("olawa", next: [.termination])
  private static let _negative_pl_olecko: PublicSuffix.Node = .label("olecko", next: [.termination])
  private static let _negative_pl_olkusz: PublicSuffix.Node = .label("olkusz", next: [.termination])
  private static let _negative_pl_olsztyn: PublicSuffix.Node = .label("olsztyn", next: [.termination])
  private static let _negative_pl_opoczno: PublicSuffix.Node = .label("opoczno", next: [.termination])
  private static let _negative_pl_opole: PublicSuffix.Node = .label("opole", next: [.termination])
  private static let _negative_pl_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_pl_ostroda: PublicSuffix.Node = .label("ostroda", next: [.termination])
  private static let _negative_pl_ostroleka: PublicSuffix.Node = .label("ostroleka", next: [.termination])
  private static let _negative_pl_ostrowiec: PublicSuffix.Node = .label("ostrowiec", next: [.termination])
  private static let _negative_pl_ostrowwlkp: PublicSuffix.Node = .label("ostrowwlkp", next: [.termination])
  private static let _negative_pl_pc: PublicSuffix.Node = .label("pc", next: [.termination])
  private static let _negative_pl_pila: PublicSuffix.Node = .label("pila", next: [.termination])
  private static let _negative_pl_pisz: PublicSuffix.Node = .label("pisz", next: [.termination])
  private static let _negative_pl_podhale: PublicSuffix.Node = .label("podhale", next: [.termination])
  private static let _negative_pl_podlasie: PublicSuffix.Node = .label("podlasie", next: [.termination])
  private static let _negative_pl_polkowice: PublicSuffix.Node = .label("polkowice", next: [.termination])
  private static let _negative_pl_pomorskie: PublicSuffix.Node = .label("pomorskie", next: [.termination])
  private static let _negative_pl_pomorze: PublicSuffix.Node = .label("pomorze", next: [.termination])
  private static let _negative_pl_poniatowa: PublicSuffix.Node = .label("poniatowa", next: [.termination])
  private static let _negative_pl_powiat: PublicSuffix.Node = .label("powiat", next: [.termination])
  private static let _negative_pl_poznan: PublicSuffix.Node = .label("poznan", next: [.termination])
  private static let _negative_pl_priv: PublicSuffix.Node = .label("priv", next: [.termination])
  private static let _negative_pl_prochowice: PublicSuffix.Node = .label("prochowice", next: [.termination])
  private static let _negative_pl_pruszkow: PublicSuffix.Node = .label("pruszkow", next: [.termination])
  private static let _negative_pl_przeworsk: PublicSuffix.Node = .label("przeworsk", next: [.termination])
  private static let _negative_pl_pulawy: PublicSuffix.Node = .label("pulawy", next: [.termination])
  private static let _negative_pl_radom: PublicSuffix.Node = .label("radom", next: [.termination])
  private static let _negative_pl_rawaHmaz: PublicSuffix.Node = .label("rawa-maz", next: [.termination])
  private static let _negative_pl_realestate: PublicSuffix.Node = .label("realestate", next: [.termination])
  private static let _negative_pl_rel: PublicSuffix.Node = .label("rel", next: [.termination])
  private static let _negative_pl_rybnik: PublicSuffix.Node = .label("rybnik", next: [.termination])
  private static let _negative_pl_rzeszow: PublicSuffix.Node = .label("rzeszow", next: [.termination])
  private static let _negative_pl_sanok: PublicSuffix.Node = .label("sanok", next: [.termination])
  private static let _negative_pl_sdscloud: PublicSuffix.Node = .label("sdscloud", next: [.termination])
  private static let _negative_pl_sejny: PublicSuffix.Node = .label("sejny", next: [.termination])
  private static let _negative_pl_sex: PublicSuffix.Node = .label("sex", next: [.termination])
  private static let _negative_pl_shop: PublicSuffix.Node = .label("shop", next: [.termination])
  private static let _negative_pl_shoparena: PublicSuffix.Node = .label("shoparena", next: [.termination])
  private static let _negative_pl_sklep: PublicSuffix.Node = .label("sklep", next: [.termination])
  private static let _negative_pl_skoczow: PublicSuffix.Node = .label("skoczow", next: [.termination])
  private static let _negative_pl_slask: PublicSuffix.Node = .label("slask", next: [.termination])
  private static let _negative_pl_slupsk: PublicSuffix.Node = .label("slupsk", next: [.termination])
  private static let _negative_pl_sopot: PublicSuffix.Node = .label("sopot", next: [.termination])
  private static let _negative_pl_sos: PublicSuffix.Node = .label("sos", next: [.termination])
  private static let _negative_pl_sosnowiec: PublicSuffix.Node = .label("sosnowiec", next: [.termination])
  private static let _negative_pl_stalowaHwola: PublicSuffix.Node = .label("stalowa-wola", next: [.termination])
  private static let _negative_pl_starachowice: PublicSuffix.Node = .label("starachowice", next: [.termination])
  private static let _negative_pl_stargard: PublicSuffix.Node = .label("stargard", next: [.termination])
  private static let _negative_pl_suwalki: PublicSuffix.Node = .label("suwalki", next: [.termination])
  private static let _negative_pl_swidnica: PublicSuffix.Node = .label("swidnica", next: [.termination])
  private static let _negative_pl_swidnik: PublicSuffix.Node = .label("swidnik", next: [.termination])
  private static let _negative_pl_swiebodzin: PublicSuffix.Node = .label("swiebodzin", next: [.termination])
  private static let _negative_pl_swinoujscie: PublicSuffix.Node = .label("swinoujscie", next: [.termination])
  private static let _negative_pl_szczecin: PublicSuffix.Node = .label("szczecin", next: [.termination])
  private static let _negative_pl_szczytno: PublicSuffix.Node = .label("szczytno", next: [.termination])
  private static let _negative_pl_szkola: PublicSuffix.Node = .label("szkola", next: [.termination])
  private static let _negative_pl_targi: PublicSuffix.Node = .label("targi", next: [.termination])
  private static let _negative_pl_tarnobrzeg: PublicSuffix.Node = .label("tarnobrzeg", next: [.termination])
  private static let _negative_pl_tgory: PublicSuffix.Node = .label("tgory", next: [.termination])
  private static let _negative_pl_tm: PublicSuffix.Node = .label("tm", next: [.termination])
  private static let _negative_pl_tourism: PublicSuffix.Node = .label("tourism", next: [.termination])
  private static let _negative_pl_travel: PublicSuffix.Node = .label("travel", next: [.termination])
  private static let _negative_pl_turek: PublicSuffix.Node = .label("turek", next: [.termination])
  private static let _negative_pl_turystyka: PublicSuffix.Node = .label("turystyka", next: [.termination])
  private static let _negative_pl_tychy: PublicSuffix.Node = .label("tychy", next: [.termination])
  private static let _negative_pl_unicloud: PublicSuffix.Node = .label("unicloud", next: [.termination])
  private static let _negative_pl_ustka: PublicSuffix.Node = .label("ustka", next: [.termination])
  private static let _negative_pl_walbrzych: PublicSuffix.Node = .label("walbrzych", next: [.termination])
  private static let _negative_pl_warmia: PublicSuffix.Node = .label("warmia", next: [.termination])
  private static let _negative_pl_warszawa: PublicSuffix.Node = .label("warszawa", next: [.termination])
  private static let _negative_pl_waw: PublicSuffix.Node = .label("waw", next: [.termination])
  private static let _negative_pl_wegrow: PublicSuffix.Node = .label("wegrow", next: [.termination])
  private static let _negative_pl_wielun: PublicSuffix.Node = .label("wielun", next: [.termination])
  private static let _negative_pl_wlocl: PublicSuffix.Node = .label("wlocl", next: [.termination])
  private static let _negative_pl_wloclawek: PublicSuffix.Node = .label("wloclawek", next: [.termination])
  private static let _negative_pl_wodzislaw: PublicSuffix.Node = .label("wodzislaw", next: [.termination])
  private static let _negative_pl_wolomin: PublicSuffix.Node = .label("wolomin", next: [.termination])
  private static let _negative_pl_wroc: PublicSuffix.Node = .label("wroc", next: [.termination])
  private static let _negative_pl_wroclaw: PublicSuffix.Node = .label("wroclaw", next: [.termination])
  private static let _negative_pl_zachpomor: PublicSuffix.Node = .label("zachpomor", next: [.termination])
  private static let _negative_pl_zagan: PublicSuffix.Node = .label("zagan", next: [.termination])
  private static let _negative_pl_zakopane: PublicSuffix.Node = .label("zakopane", next: [.termination])
  private static let _negative_pl_zarow: PublicSuffix.Node = .label("zarow", next: [.termination])
  private static let _negative_pl_zgora: PublicSuffix.Node = .label("zgora", next: [.termination])
  private static let _negative_pl_zgorzelec: PublicSuffix.Node = .label("zgorzelec", next: [.termination])
  private static let _negative_pl: PublicSuffix.Node = .label("pl", next: [.termination, _negative_pl_agro, _negative_pl_aid, _negative_pl_art, _negative_pl_atm, _negative_pl_augustow, _negative_pl_auto, _negative_pl_babiaHgora, _negative_pl_bedzin, _negative_pl_beep, _negative_pl_beskidy, _negative_pl_bialowieza, _negative_pl_bialystok, _negative_pl_bielawa, _negative_pl_bieszczady, _negative_pl_biz, _negative_pl_boleslawiec, _negative_pl_bydgoszcz, _negative_pl_bytom, _negative_pl_cieszyn, _negative_pl_co, _negative_pl_com, _negative_pl_czeladz, _negative_pl_czest, _negative_pl_dlugoleka, _negative_pl_ecommerceHshop, _negative_pl_edu, _negative_pl_elblag, _negative_pl_elk, _negative_pl_gda, _negative_pl_gdansk, _negative_pl_gdynia, _negative_pl_gliwice, _negative_pl_glogow, _negative_pl_gmina, _negative_pl_gniezno, _negative_pl_gorlice, _negative_pl_gov, _negative_pl_grajewo, _negative_pl_gsm, _negative_pl_homesklep, _negative_pl_ilawa, _negative_pl_info, _negative_pl_jaworzno, _negative_pl_jeleniaHgora, _negative_pl_jgora, _negative_pl_kalisz, _negative_pl_karpacz, _negative_pl_kartuzy, _negative_pl_kaszuby, _negative_pl_katowice, _negative_pl_kazimierzHdolny, _negative_pl_kepno, _negative_pl_ketrzyn, _negative_pl_klodzko, _negative_pl_kobierzyce, _negative_pl_kolobrzeg, _negative_pl_konin, _negative_pl_konskowola, _negative_pl_krakow, _negative_pl_krasnik, _negative_pl_kutno, _negative_pl_lapy, _negative_pl_lebork, _negative_pl_leczna, _negative_pl_legnica, _negative_pl_lezajsk, _negative_pl_limanowa, _negative_pl_lomza, _negative_pl_lowicz, _negative_pl_lubartow, _negative_pl_lubin, _negative_pl_lublin, _negative_pl_lukow, _negative_pl_mail, _negative_pl_malbork, _negative_pl_malopolska, _negative_pl_mazowsze, _negative_pl_mazury, _negative_pl_med, _negative_pl_media, _negative_pl_miasta, _negative_pl_mielec, _negative_pl_mielno, _negative_pl_mil, _negative_pl_mragowo, _negative_pl_myspreadshop, _negative_pl_naklo, _negative_pl_net, _negative_pl_nieruchomosci, _negative_pl_nom, _negative_pl_nowaruda, _negative_pl_nysa, _negative_pl_olawa, _negative_pl_olecko, _negative_pl_olkusz, _negative_pl_olsztyn, _negative_pl_opoczno, _negative_pl_opole, _negative_pl_org, _negative_pl_ostroda, _negative_pl_ostroleka, _negative_pl_ostrowiec, _negative_pl_ostrowwlkp, _negative_pl_pc, _negative_pl_pila, _negative_pl_pisz, _negative_pl_podhale, _negative_pl_podlasie, _negative_pl_polkowice, _negative_pl_pomorskie, _negative_pl_pomorze, _negative_pl_poniatowa, _negative_pl_powiat, _negative_pl_poznan, _negative_pl_priv, _negative_pl_prochowice, _negative_pl_pruszkow, _negative_pl_przeworsk, _negative_pl_pulawy, _negative_pl_radom, _negative_pl_rawaHmaz, _negative_pl_realestate, _negative_pl_rel, _negative_pl_rybnik, _negative_pl_rzeszow, _negative_pl_sanok, _negative_pl_sdscloud, _negative_pl_sejny, _negative_pl_sex, _negative_pl_shop, _negative_pl_shoparena, _negative_pl_sklep, _negative_pl_skoczow, _negative_pl_slask, _negative_pl_slupsk, _negative_pl_sopot, _negative_pl_sos, _negative_pl_sosnowiec, _negative_pl_stalowaHwola, _negative_pl_starachowice, _negative_pl_stargard, _negative_pl_suwalki, _negative_pl_swidnica, _negative_pl_swidnik, _negative_pl_swiebodzin, _negative_pl_swinoujscie, _negative_pl_szczecin, _negative_pl_szczytno, _negative_pl_szkola, _negative_pl_targi, _negative_pl_tarnobrzeg, _negative_pl_tgory, _negative_pl_tm, _negative_pl_tourism, _negative_pl_travel, _negative_pl_turek, _negative_pl_turystyka, _negative_pl_tychy, _negative_pl_unicloud, _negative_pl_ustka, _negative_pl_walbrzych, _negative_pl_warmia, _negative_pl_warszawa, _negative_pl_waw, _negative_pl_wegrow, _negative_pl_wielun, _negative_pl_wlocl, _negative_pl_wloclawek, _negative_pl_wodzislaw, _negative_pl_wolomin, _negative_pl_wroc, _negative_pl_wroclaw, _negative_pl_zachpomor, _negative_pl_zagan, _negative_pl_zakopane, _negative_pl_zarow, _negative_pl_zgora, _negative_pl_zgorzelec])
  private static let _negative_place_co: PublicSuffix.Node = .label("co", next: [.termination])
  private static let _negative_place: PublicSuffix.Node = .label("place", next: [.termination, _negative_place_co])
  private static let _negative_play: PublicSuffix.Node = .label("play", next: [.termination])
  private static let _negative_playstation: PublicSuffix.Node = .label("playstation", next: [.termination])
  private static let _negative_plumbing: PublicSuffix.Node = .label("plumbing", next: [.termination])
  private static let _negative_plus: PublicSuffix.Node = .label("plus", next: [.termination])
  private static let _negative_pm_name: PublicSuffix.Node = .label("name", next: [.termination])
  private static let _negative_pm_own: PublicSuffix.Node = .label("own", next: [.termination])
  private static let _negative_pm: PublicSuffix.Node = .label("pm", next: [.termination, _negative_pm_name, _negative_pm_own])
  private static let _negative_pn_co: PublicSuffix.Node = .label("co", next: [.termination])
  private static let _negative_pn_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_pn_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_pn_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_pn_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_pn: PublicSuffix.Node = .label("pn", next: [.termination, _negative_pn_co, _negative_pn_edu, _negative_pn_gov, _negative_pn_net, _negative_pn_org])
  private static let _negative_pnc: PublicSuffix.Node = .label("pnc", next: [.termination])
  private static let _negative_pohl: PublicSuffix.Node = .label("pohl", next: [.termination])
  private static let _negative_poker: PublicSuffix.Node = .label("poker", next: [.termination])
  private static let _negative_politie: PublicSuffix.Node = .label("politie", next: [.termination])
  private static let _negative_porn_indie: PublicSuffix.Node = .label("indie", next: [.termination])
  private static let _negative_porn: PublicSuffix.Node = .label("porn", next: [.termination, _negative_porn_indie])
  private static let _negative_post: PublicSuffix.Node = .label("post", next: [.termination])
  private static let _negative_pr_ac: PublicSuffix.Node = .label("ac", next: [.termination])
  private static let _negative_pr_biz: PublicSuffix.Node = .label("biz", next: [.termination])
  private static let _negative_pr_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_pr_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_pr_est: PublicSuffix.Node = .label("est", next: [.termination])
  private static let _negative_pr_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_pr_info: PublicSuffix.Node = .label("info", next: [.termination])
  private static let _negative_pr_isla: PublicSuffix.Node = .label("isla", next: [.termination])
  private static let _negative_pr_name: PublicSuffix.Node = .label("name", next: [.termination])
  private static let _negative_pr_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_pr_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_pr_pro: PublicSuffix.Node = .label("pro", next: [.termination])
  private static let _negative_pr_prof: PublicSuffix.Node = .label("prof", next: [.termination])
  private static let _negative_pr: PublicSuffix.Node = .label("pr", next: [.termination, _negative_pr_ac, _negative_pr_biz, _negative_pr_com, _negative_pr_edu, _negative_pr_est, _negative_pr_gov, _negative_pr_info, _negative_pr_isla, _negative_pr_name, _negative_pr_net, _negative_pr_org, _negative_pr_pro, _negative_pr_prof])
  private static let _negative_pramerica: PublicSuffix.Node = .label("pramerica", next: [.termination])
  private static let _negative_praxi: PublicSuffix.Node = .label("praxi", next: [.termination])
  private static let _negative_press: PublicSuffix.Node = .label("press", next: [.termination])
  private static let _negative_prime: PublicSuffix.Node = .label("prime", next: [.termination])
  private static let _negative_pro_aaa: PublicSuffix.Node = .label("aaa", next: [.termination])
  private static let _negative_pro_aca: PublicSuffix.Node = .label("aca", next: [.termination])
  private static let _negative_pro_acct: PublicSuffix.Node = .label("acct", next: [.termination])
  private static let _negative_pro_avocat: PublicSuffix.Node = .label("avocat", next: [.termination])
  private static let _negative_pro_bar: PublicSuffix.Node = .label("bar", next: [.termination])
  private static let _negative_pro_barsy: PublicSuffix.Node = .label("barsy", next: [.termination])
  private static let _negative_pro_cloudns: PublicSuffix.Node = .label("cloudns", next: [.termination])
  private static let _negative_pro_cpa: PublicSuffix.Node = .label("cpa", next: [.termination])
  private static let _negative_pro_dnstrace_bci: PublicSuffix.Node = .label("bci", next: [.termination])
  private static let _negative_pro_dnstrace: PublicSuffix.Node = .label("dnstrace", next: [_negative_pro_dnstrace_bci])
  private static let _negative_pro_eng: PublicSuffix.Node = .label("eng", next: [.termination])
  private static let _negative_pro_jur: PublicSuffix.Node = .label("jur", next: [.termination])
  private static let _negative_pro_law: PublicSuffix.Node = .label("law", next: [.termination])
  private static let _negative_pro_med: PublicSuffix.Node = .label("med", next: [.termination])
  private static let _negative_pro_recht: PublicSuffix.Node = .label("recht", next: [.termination])
  private static let _negative_pro: PublicSuffix.Node = .label("pro", next: [.termination, _negative_pro_aaa, _negative_pro_aca, _negative_pro_acct, _negative_pro_avocat, _negative_pro_bar, _negative_pro_barsy, _negative_pro_cloudns, _negative_pro_cpa, _negative_pro_dnstrace, _negative_pro_eng, _negative_pro_jur, _negative_pro_law, _negative_pro_med, _negative_pro_recht])
  private static let _negative_prod: PublicSuffix.Node = .label("prod", next: [.termination])
  private static let _negative_productions: PublicSuffix.Node = .label("productions", next: [.termination])
  private static let _negative_prof: PublicSuffix.Node = .label("prof", next: [.termination])
  private static let _negative_progressive: PublicSuffix.Node = .label("progressive", next: [.termination])
  private static let _negative_promo: PublicSuffix.Node = .label("promo", next: [.termination])
  private static let _negative_properties: PublicSuffix.Node = .label("properties", next: [.termination])
  private static let _negative_property: PublicSuffix.Node = .label("property", next: [.termination])
  private static let _negative_protection: PublicSuffix.Node = .label("protection", next: [.termination])
  private static let _negative_pru: PublicSuffix.Node = .label("pru", next: [.termination])
  private static let _negative_prudential: PublicSuffix.Node = .label("prudential", next: [.termination])
  private static let _negative_ps_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_ps_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_ps_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_ps_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_ps_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_ps_plo: PublicSuffix.Node = .label("plo", next: [.termination])
  private static let _negative_ps_sec: PublicSuffix.Node = .label("sec", next: [.termination])
  private static let _negative_ps: PublicSuffix.Node = .label("ps", next: [.termination, _negative_ps_com, _negative_ps_edu, _negative_ps_gov, _negative_ps_net, _negative_ps_org, _negative_ps_plo, _negative_ps_sec])
  private static let _negative_pt_blogspot: PublicSuffix.Node = .label("blogspot", next: [.termination])
  private static let _negative_pt_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_pt_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_pt_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_pt_int: PublicSuffix.Node = .label("int", next: [.termination])
  private static let _negative_pt_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_pt_nome: PublicSuffix.Node = .label("nome", next: [.termination])
  private static let _negative_pt_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_pt_publ: PublicSuffix.Node = .label("publ", next: [.termination])
  private static let _negative_pt: PublicSuffix.Node = .label("pt", next: [.termination, _negative_pt_blogspot, _negative_pt_com, _negative_pt_edu, _negative_pt_gov, _negative_pt_int, _negative_pt_net, _negative_pt_nome, _negative_pt_org, _negative_pt_publ])
  private static let _negative_pub_barsy: PublicSuffix.Node = .label("barsy", next: [.termination])
  private static let _negative_pub: PublicSuffix.Node = .label("pub", next: [.termination, _negative_pub_barsy])
  private static let _negative_pw_belau: PublicSuffix.Node = .label("belau", next: [.termination])
  private static let _negative_pw_cloudns: PublicSuffix.Node = .label("cloudns", next: [.termination])
  private static let _negative_pw_co: PublicSuffix.Node = .label("co", next: [.termination])
  private static let _negative_pw_ed: PublicSuffix.Node = .label("ed", next: [.termination])
  private static let _negative_pw_go: PublicSuffix.Node = .label("go", next: [.termination])
  private static let _negative_pw_ne: PublicSuffix.Node = .label("ne", next: [.termination])
  private static let _negative_pw_or: PublicSuffix.Node = .label("or", next: [.termination])
  private static let _negative_pw_x443: PublicSuffix.Node = .label("x443", next: [.termination])
  private static let _negative_pw: PublicSuffix.Node = .label("pw", next: [.termination, _negative_pw_belau, _negative_pw_cloudns, _negative_pw_co, _negative_pw_ed, _negative_pw_go, _negative_pw_ne, _negative_pw_or, _negative_pw_x443])
  private static let _negative_pwc: PublicSuffix.Node = .label("pwc", next: [.termination])
  private static let _negative_py_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_py_coop: PublicSuffix.Node = .label("coop", next: [.termination])
  private static let _negative_py_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_py_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_py_mil: PublicSuffix.Node = .label("mil", next: [.termination])
  private static let _negative_py_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_py_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_py: PublicSuffix.Node = .label("py", next: [.termination, _negative_py_com, _negative_py_coop, _negative_py_edu, _negative_py_gov, _negative_py_mil, _negative_py_net, _negative_py_org])
  private static let _negative_qa_blogspot: PublicSuffix.Node = .label("blogspot", next: [.termination])
  private static let _negative_qa_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_qa_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_qa_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_qa_mil: PublicSuffix.Node = .label("mil", next: [.termination])
  private static let _negative_qa_name: PublicSuffix.Node = .label("name", next: [.termination])
  private static let _negative_qa_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_qa_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_qa_sch: PublicSuffix.Node = .label("sch", next: [.termination])
  private static let _negative_qa: PublicSuffix.Node = .label("qa", next: [.termination, _negative_qa_blogspot, _negative_qa_com, _negative_qa_edu, _negative_qa_gov, _negative_qa_mil, _negative_qa_name, _negative_qa_net, _negative_qa_org, _negative_qa_sch])
  private static let _negative_qpon: PublicSuffix.Node = .label("qpon", next: [.termination])
  private static let _negative_quebec: PublicSuffix.Node = .label("quebec", next: [.termination])
  private static let _negative_quest: PublicSuffix.Node = .label("quest", next: [.termination])
  private static let _negative_racing: PublicSuffix.Node = .label("racing", next: [.termination])
  private static let _negative_radio: PublicSuffix.Node = .label("radio", next: [.termination])
  private static let _negative_re_asso: PublicSuffix.Node = .label("asso", next: [.termination])
  private static let _negative_re_blogspot: PublicSuffix.Node = .label("blogspot", next: [.termination])
  private static let _negative_re_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_re_nom: PublicSuffix.Node = .label("nom", next: [.termination])
  private static let _negative_re: PublicSuffix.Node = .label("re", next: [.termination, _negative_re_asso, _negative_re_blogspot, _negative_re_com, _negative_re_nom])
  private static let _negative_read: PublicSuffix.Node = .label("read", next: [.termination])
  private static let _negative_realestate: PublicSuffix.Node = .label("realestate", next: [.termination])
  private static let _negative_realtor: PublicSuffix.Node = .label("realtor", next: [.termination])
  private static let _negative_realty: PublicSuffix.Node = .label("realty", next: [.termination])
  private static let _negative_recipes: PublicSuffix.Node = .label("recipes", next: [.termination])
  private static let _negative_red: PublicSuffix.Node = .label("red", next: [.termination])
  private static let _negative_redstone: PublicSuffix.Node = .label("redstone", next: [.termination])
  private static let _negative_redumbrella: PublicSuffix.Node = .label("redumbrella", next: [.termination])
  private static let _negative_rehab: PublicSuffix.Node = .label("rehab", next: [.termination])
  private static let _negative_reise: PublicSuffix.Node = .label("reise", next: [.termination])
  private static let _negative_reisen: PublicSuffix.Node = .label("reisen", next: [.termination])
  private static let _negative_reit: PublicSuffix.Node = .label("reit", next: [.termination])
  private static let _negative_reliance: PublicSuffix.Node = .label("reliance", next: [.termination])
  private static let _negative_ren: PublicSuffix.Node = .label("ren", next: [.termination])
  private static let _negative_rent: PublicSuffix.Node = .label("rent", next: [.termination])
  private static let _negative_rentals: PublicSuffix.Node = .label("rentals", next: [.termination])
  private static let _negative_repair: PublicSuffix.Node = .label("repair", next: [.termination])
  private static let _negative_report: PublicSuffix.Node = .label("report", next: [.termination])
  private static let _negative_republican: PublicSuffix.Node = .label("republican", next: [.termination])
  private static let _negative_rest: PublicSuffix.Node = .label("rest", next: [.termination])
  private static let _negative_restaurant: PublicSuffix.Node = .label("restaurant", next: [.termination])
  private static let _negative_review_ybo: PublicSuffix.Node = .label("ybo", next: [.termination])
  private static let _negative_review: PublicSuffix.Node = .label("review", next: [.termination, _negative_review_ybo])
  private static let _negative_reviews: PublicSuffix.Node = .label("reviews", next: [.termination])
  private static let _negative_rexroth: PublicSuffix.Node = .label("rexroth", next: [.termination])
  private static let _negative_rich: PublicSuffix.Node = .label("rich", next: [.termination])
  private static let _negative_richardli: PublicSuffix.Node = .label("richardli", next: [.termination])
  private static let _negative_ricoh: PublicSuffix.Node = .label("ricoh", next: [.termination])
  private static let _negative_ril: PublicSuffix.Node = .label("ril", next: [.termination])
  private static let _negative_rio: PublicSuffix.Node = .label("rio", next: [.termination])
  private static let _negative_rip_clan: PublicSuffix.Node = .label("clan", next: [.termination])
  private static let _negative_rip: PublicSuffix.Node = .label("rip", next: [.termination, _negative_rip_clan])
  private static let _negative_ro_arts: PublicSuffix.Node = .label("arts", next: [.termination])
  private static let _negative_ro_barsy: PublicSuffix.Node = .label("barsy", next: [.termination])
  private static let _negative_ro_blogspot: PublicSuffix.Node = .label("blogspot", next: [.termination])
  private static let _negative_ro_co: PublicSuffix.Node = .label("co", next: [.termination])
  private static let _negative_ro_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_ro_firm: PublicSuffix.Node = .label("firm", next: [.termination])
  private static let _negative_ro_info: PublicSuffix.Node = .label("info", next: [.termination])
  private static let _negative_ro_nom: PublicSuffix.Node = .label("nom", next: [.termination])
  private static let _negative_ro_nt: PublicSuffix.Node = .label("nt", next: [.termination])
  private static let _negative_ro_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_ro_rec: PublicSuffix.Node = .label("rec", next: [.termination])
  private static let _negative_ro_shop: PublicSuffix.Node = .label("shop", next: [.termination])
  private static let _negative_ro_store: PublicSuffix.Node = .label("store", next: [.termination])
  private static let _negative_ro_tm: PublicSuffix.Node = .label("tm", next: [.termination])
  private static let _negative_ro_www: PublicSuffix.Node = .label("www", next: [.termination])
  private static let _negative_ro: PublicSuffix.Node = .label("ro", next: [.termination, _negative_ro_arts, _negative_ro_barsy, _negative_ro_blogspot, _negative_ro_co, _negative_ro_com, _negative_ro_firm, _negative_ro_info, _negative_ro_nom, _negative_ro_nt, _negative_ro_org, _negative_ro_rec, _negative_ro_shop, _negative_ro_store, _negative_ro_tm, _negative_ro_www])
  private static let _negative_rocher: PublicSuffix.Node = .label("rocher", next: [.termination])
  private static let _negative_rocks_limaHcity: PublicSuffix.Node = .label("lima-city", next: [.termination])
  private static let _negative_rocks_myddns: PublicSuffix.Node = .label("myddns", next: [.termination])
  private static let _negative_rocks_webspace: PublicSuffix.Node = .label("webspace", next: [.termination])
  private static let _negative_rocks: PublicSuffix.Node = .label("rocks", next: [.termination, _negative_rocks_limaHcity, _negative_rocks_myddns, _negative_rocks_webspace])
  private static let _negative_rodeo: PublicSuffix.Node = .label("rodeo", next: [.termination])
  private static let _negative_rogers: PublicSuffix.Node = .label("rogers", next: [.termination])
  private static let _negative_room: PublicSuffix.Node = .label("room", next: [.termination])
  private static let _negative_rs_ac: PublicSuffix.Node = .label("ac", next: [.termination])
  private static let _negative_rs_blogspot: PublicSuffix.Node = .label("blogspot", next: [.termination])
  private static let _negative_rs_brendly_shop: PublicSuffix.Node = .label("shop", next: [.termination])
  private static let _negative_rs_brendly: PublicSuffix.Node = .label("brendly", next: [_negative_rs_brendly_shop])
  private static let _negative_rs_co: PublicSuffix.Node = .label("co", next: [.termination])
  private static let _negative_rs_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_rs_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_rs_in: PublicSuffix.Node = .label("in", next: [.termination])
  private static let _negative_rs_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_rs_ox: PublicSuffix.Node = .label("ox", next: [.termination])
  private static let _negative_rs_ua: PublicSuffix.Node = .label("ua", next: [.termination])
  private static let _negative_rs: PublicSuffix.Node = .label("rs", next: [.termination, _negative_rs_ac, _negative_rs_blogspot, _negative_rs_brendly, _negative_rs_co, _negative_rs_edu, _negative_rs_gov, _negative_rs_in, _negative_rs_org, _negative_rs_ox, _negative_rs_ua])
  private static let _negative_rsvp: PublicSuffix.Node = .label("rsvp", next: [.termination])
  private static let _negative_ru_ac: PublicSuffix.Node = .label("ac", next: [.termination])
  private static let _negative_ru_adygeya: PublicSuffix.Node = .label("adygeya", next: [.termination])
  private static let _negative_ru_bashkiria: PublicSuffix.Node = .label("bashkiria", next: [.termination])
  private static let _negative_ru_bir: PublicSuffix.Node = .label("bir", next: [.termination])
  private static let _negative_ru_blogspot: PublicSuffix.Node = .label("blogspot", next: [.termination])
  private static let _negative_ru_cbg: PublicSuffix.Node = .label("cbg", next: [.termination])
  private static let _negative_ru_cldmail_hb: PublicSuffix.Node = .label("hb", next: [.termination])
  private static let _negative_ru_cldmail: PublicSuffix.Node = .label("cldmail", next: [_negative_ru_cldmail_hb])
  private static let _negative_ru_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_ru_dagestan: PublicSuffix.Node = .label("dagestan", next: [.termination])
  private static let _negative_ru_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_ru_eurodir: PublicSuffix.Node = .label("eurodir", next: [.termination])
  private static let _negative_ru_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_ru_grozny: PublicSuffix.Node = .label("grozny", next: [.termination])
  private static let _negative_ru_int: PublicSuffix.Node = .label("int", next: [.termination])
  private static let _negative_ru_kalmykia: PublicSuffix.Node = .label("kalmykia", next: [.termination])
  private static let _negative_ru_kustanai: PublicSuffix.Node = .label("kustanai", next: [.termination])
  private static let _negative_ru_lk3: PublicSuffix.Node = .label("lk3", next: [.termination])
  private static let _negative_ru_marine: PublicSuffix.Node = .label("marine", next: [.termination])
  private static let _negative_ru_mcdir_vps: PublicSuffix.Node = .label("vps", next: [.termination])
  private static let _negative_ru_mcdir: PublicSuffix.Node = .label("mcdir", next: [.termination, _negative_ru_mcdir_vps])
  private static let _negative_ru_mcpre: PublicSuffix.Node = .label("mcpre", next: [.termination])
  private static let _negative_ru_mil: PublicSuffix.Node = .label("mil", next: [.termination])
  private static let _negative_ru_mircloud: PublicSuffix.Node = .label("mircloud", next: [.termination])
  private static let _negative_ru_mordovia: PublicSuffix.Node = .label("mordovia", next: [.termination])
  private static let _negative_ru_msk: PublicSuffix.Node = .label("msk", next: [.termination])
  private static let _negative_ru_myjino_hosting: PublicSuffix.Node = .label("hosting", next: [.any])
  private static let _negative_ru_myjino_landing: PublicSuffix.Node = .label("landing", next: [.any])
  private static let _negative_ru_myjino_spectrum: PublicSuffix.Node = .label("spectrum", next: [.any])
  private static let _negative_ru_myjino_vps: PublicSuffix.Node = .label("vps", next: [.any])
  private static let _negative_ru_myjino: PublicSuffix.Node = .label("myjino", next: [.termination, _negative_ru_myjino_hosting, _negative_ru_myjino_landing, _negative_ru_myjino_spectrum, _negative_ru_myjino_vps])
  private static let _negative_ru_mytis: PublicSuffix.Node = .label("mytis", next: [.termination])
  private static let _negative_ru_na4u: PublicSuffix.Node = .label("na4u", next: [.termination])
  private static let _negative_ru_nalchik: PublicSuffix.Node = .label("nalchik", next: [.termination])
  private static let _negative_ru_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_ru_nov: PublicSuffix.Node = .label("nov", next: [.termination])
  private static let _negative_ru_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_ru_pp: PublicSuffix.Node = .label("pp", next: [.termination])
  private static let _negative_ru_pyatigorsk: PublicSuffix.Node = .label("pyatigorsk", next: [.termination])
  private static let _negative_ru_ras: PublicSuffix.Node = .label("ras", next: [.termination])
  private static let _negative_ru_regruhosting_jelastic: PublicSuffix.Node = .label("jelastic", next: [.termination])
  private static let _negative_ru_regruhosting: PublicSuffix.Node = .label("regruhosting", next: [_negative_ru_regruhosting_jelastic])
  private static let _negative_ru_spb: PublicSuffix.Node = .label("spb", next: [.termination])
  private static let _negative_ru_test: PublicSuffix.Node = .label("test", next: [.termination])
  private static let _negative_ru_vladikavkaz: PublicSuffix.Node = .label("vladikavkaz", next: [.termination])
  private static let _negative_ru_vladimir: PublicSuffix.Node = .label("vladimir", next: [.termination])
  private static let _negative_ru: PublicSuffix.Node = .label("ru", next: [.termination, _negative_ru_ac, _negative_ru_adygeya, _negative_ru_bashkiria, _negative_ru_bir, _negative_ru_blogspot, _negative_ru_cbg, _negative_ru_cldmail, _negative_ru_com, _negative_ru_dagestan, _negative_ru_edu, _negative_ru_eurodir, _negative_ru_gov, _negative_ru_grozny, _negative_ru_int, _negative_ru_kalmykia, _negative_ru_kustanai, _negative_ru_lk3, _negative_ru_marine, _negative_ru_mcdir, _negative_ru_mcpre, _negative_ru_mil, _negative_ru_mircloud, _negative_ru_mordovia, _negative_ru_msk, _negative_ru_myjino, _negative_ru_mytis, _negative_ru_na4u, _negative_ru_nalchik, _negative_ru_net, _negative_ru_nov, _negative_ru_org, _negative_ru_pp, _negative_ru_pyatigorsk, _negative_ru_ras, _negative_ru_regruhosting, _negative_ru_spb, _negative_ru_test, _negative_ru_vladikavkaz, _negative_ru_vladimir])
  private static let _negative_rugby: PublicSuffix.Node = .label("rugby", next: [.termination])
  private static let _negative_ruhr: PublicSuffix.Node = .label("ruhr", next: [.termination])
  private static let _negative_run_build: PublicSuffix.Node = .label("build", next: [.any])
  private static let _negative_run_code: PublicSuffix.Node = .label("code", next: [.any])
  private static let _negative_run_database: PublicSuffix.Node = .label("database", next: [.any])
  private static let _negative_run_development: PublicSuffix.Node = .label("development", next: [.termination])
  private static let _negative_run_hs: PublicSuffix.Node = .label("hs", next: [.termination])
  private static let _negative_run_migration: PublicSuffix.Node = .label("migration", next: [.any])
  private static let _negative_run_onporter: PublicSuffix.Node = .label("onporter", next: [.termination])
  private static let _negative_run_ravendb: PublicSuffix.Node = .label("ravendb", next: [.termination])
  private static let _negative_run_repl: PublicSuffix.Node = .label("repl", next: [.termination])
  private static let _negative_run_servers: PublicSuffix.Node = .label("servers", next: [.termination])
  private static let _negative_run: PublicSuffix.Node = .label("run", next: [.termination, _negative_run_build, _negative_run_code, _negative_run_database, _negative_run_development, _negative_run_hs, _negative_run_migration, _negative_run_onporter, _negative_run_ravendb, _negative_run_repl, _negative_run_servers])
  private static let _negative_rw_ac: PublicSuffix.Node = .label("ac", next: [.termination])
  private static let _negative_rw_co: PublicSuffix.Node = .label("co", next: [.termination])
  private static let _negative_rw_coop: PublicSuffix.Node = .label("coop", next: [.termination])
  private static let _negative_rw_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_rw_mil: PublicSuffix.Node = .label("mil", next: [.termination])
  private static let _negative_rw_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_rw_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_rw: PublicSuffix.Node = .label("rw", next: [.termination, _negative_rw_ac, _negative_rw_co, _negative_rw_coop, _negative_rw_gov, _negative_rw_mil, _negative_rw_net, _negative_rw_org])
  private static let _negative_rwe: PublicSuffix.Node = .label("rwe", next: [.termination])
  private static let _negative_ryukyu: PublicSuffix.Node = .label("ryukyu", next: [.termination])
  private static let _negative_sa_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_sa_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_sa_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_sa_med: PublicSuffix.Node = .label("med", next: [.termination])
  private static let _negative_sa_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_sa_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_sa_pub: PublicSuffix.Node = .label("pub", next: [.termination])
  private static let _negative_sa_sch: PublicSuffix.Node = .label("sch", next: [.termination])
  private static let _negative_sa: PublicSuffix.Node = .label("sa", next: [.termination, _negative_sa_com, _negative_sa_edu, _negative_sa_gov, _negative_sa_med, _negative_sa_net, _negative_sa_org, _negative_sa_pub, _negative_sa_sch])
  private static let _negative_saarland: PublicSuffix.Node = .label("saarland", next: [.termination])
  private static let _negative_safe: PublicSuffix.Node = .label("safe", next: [.termination])
  private static let _negative_safety: PublicSuffix.Node = .label("safety", next: [.termination])
  private static let _negative_sakura: PublicSuffix.Node = .label("sakura", next: [.termination])
  private static let _negative_sale_for: PublicSuffix.Node = .label("for", next: [.termination])
  private static let _negative_sale: PublicSuffix.Node = .label("sale", next: [.termination, _negative_sale_for])
  private static let _negative_salon: PublicSuffix.Node = .label("salon", next: [.termination])
  private static let _negative_samsclub: PublicSuffix.Node = .label("samsclub", next: [.termination])
  private static let _negative_samsung: PublicSuffix.Node = .label("samsung", next: [.termination])
  private static let _negative_sandvik: PublicSuffix.Node = .label("sandvik", next: [.termination])
  private static let _negative_sandvikcoromant: PublicSuffix.Node = .label("sandvikcoromant", next: [.termination])
  private static let _negative_sanofi: PublicSuffix.Node = .label("sanofi", next: [.termination])
  private static let _negative_sap: PublicSuffix.Node = .label("sap", next: [.termination])
  private static let _negative_sarl: PublicSuffix.Node = .label("sarl", next: [.termination])
  private static let _negative_sas: PublicSuffix.Node = .label("sas", next: [.termination])
  private static let _negative_save: PublicSuffix.Node = .label("save", next: [.termination])
  private static let _negative_saxo: PublicSuffix.Node = .label("saxo", next: [.termination])
  private static let _negative_sb_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_sb_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_sb_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_sb_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_sb_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_sb: PublicSuffix.Node = .label("sb", next: [.termination, _negative_sb_com, _negative_sb_edu, _negative_sb_gov, _negative_sb_net, _negative_sb_org])
  private static let _negative_sbi: PublicSuffix.Node = .label("sbi", next: [.termination])
  private static let _negative_sbs: PublicSuffix.Node = .label("sbs", next: [.termination])
  private static let _negative_sc_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_sc_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_sc_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_sc_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_sc_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_sc: PublicSuffix.Node = .label("sc", next: [.termination, _negative_sc_com, _negative_sc_edu, _negative_sc_gov, _negative_sc_net, _negative_sc_org])
  private static let _negative_sca: PublicSuffix.Node = .label("sca", next: [.termination])
  private static let _negative_scb: PublicSuffix.Node = .label("scb", next: [.termination])
  private static let _negative_schaeffler: PublicSuffix.Node = .label("schaeffler", next: [.termination])
  private static let _negative_schmidt: PublicSuffix.Node = .label("schmidt", next: [.termination])
  private static let _negative_scholarships: PublicSuffix.Node = .label("scholarships", next: [.termination])
  private static let _negative_school: PublicSuffix.Node = .label("school", next: [.termination])
  private static let _negative_schule: PublicSuffix.Node = .label("schule", next: [.termination])
  private static let _negative_schwarz: PublicSuffix.Node = .label("schwarz", next: [.termination])
  private static let _negative_science_ybo: PublicSuffix.Node = .label("ybo", next: [.termination])
  private static let _negative_science: PublicSuffix.Node = .label("science", next: [.termination, _negative_science_ybo])
  private static let _negative_scot_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_scot_gov_service: PublicSuffix.Node = .label("service", next: [.termination])
  private static let _negative_scot_gov: PublicSuffix.Node = .label("gov", next: [.termination, _negative_scot_gov_service])
  private static let _negative_scot: PublicSuffix.Node = .label("scot", next: [.termination, _negative_scot_edu, _negative_scot_gov])
  private static let _negative_sd_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_sd_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_sd_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_sd_info: PublicSuffix.Node = .label("info", next: [.termination])
  private static let _negative_sd_med: PublicSuffix.Node = .label("med", next: [.termination])
  private static let _negative_sd_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_sd_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_sd_tv: PublicSuffix.Node = .label("tv", next: [.termination])
  private static let _negative_sd: PublicSuffix.Node = .label("sd", next: [.termination, _negative_sd_com, _negative_sd_edu, _negative_sd_gov, _negative_sd_info, _negative_sd_med, _negative_sd_net, _negative_sd_org, _negative_sd_tv])
  private static let _negative_se_a: PublicSuffix.Node = .label("a", next: [.termination])
  private static let _negative_se_ac: PublicSuffix.Node = .label("ac", next: [.termination])
  private static let _negative_se_b: PublicSuffix.Node = .label("b", next: [.termination])
  private static let _negative_se_bd: PublicSuffix.Node = .label("bd", next: [.termination])
  private static let _negative_se_blogspot: PublicSuffix.Node = .label("blogspot", next: [.termination])
  private static let _negative_se_brand: PublicSuffix.Node = .label("brand", next: [.termination])
  private static let _negative_se_c: PublicSuffix.Node = .label("c", next: [.termination])
  private static let _negative_se_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_se_conf: PublicSuffix.Node = .label("conf", next: [.termination])
  private static let _negative_se_d: PublicSuffix.Node = .label("d", next: [.termination])
  private static let _negative_se_e: PublicSuffix.Node = .label("e", next: [.termination])
  private static let _negative_se_f: PublicSuffix.Node = .label("f", next: [.termination])
  private static let _negative_se_fh: PublicSuffix.Node = .label("fh", next: [.termination])
  private static let _negative_se_fhsk: PublicSuffix.Node = .label("fhsk", next: [.termination])
  private static let _negative_se_fhv: PublicSuffix.Node = .label("fhv", next: [.termination])
  private static let _negative_se_g: PublicSuffix.Node = .label("g", next: [.termination])
  private static let _negative_se_h: PublicSuffix.Node = .label("h", next: [.termination])
  private static let _negative_se_i: PublicSuffix.Node = .label("i", next: [.termination])
  private static let _negative_se_iopsys: PublicSuffix.Node = .label("iopsys", next: [.termination])
  private static let _negative_se_itcouldbewor: PublicSuffix.Node = .label("itcouldbewor", next: [.termination])
  private static let _negative_se_k: PublicSuffix.Node = .label("k", next: [.termination])
  private static let _negative_se_komforb: PublicSuffix.Node = .label("komforb", next: [.termination])
  private static let _negative_se_kommunalforbund: PublicSuffix.Node = .label("kommunalforbund", next: [.termination])
  private static let _negative_se_komvux: PublicSuffix.Node = .label("komvux", next: [.termination])
  private static let _negative_se_l: PublicSuffix.Node = .label("l", next: [.termination])
  private static let _negative_se_lanbib: PublicSuffix.Node = .label("lanbib", next: [.termination])
  private static let _negative_se_m: PublicSuffix.Node = .label("m", next: [.termination])
  private static let _negative_se_myspreadshop: PublicSuffix.Node = .label("myspreadshop", next: [.termination])
  private static let _negative_se_n: PublicSuffix.Node = .label("n", next: [.termination])
  private static let _negative_se_naturbruksgymn: PublicSuffix.Node = .label("naturbruksgymn", next: [.termination])
  private static let _negative_se_o: PublicSuffix.Node = .label("o", next: [.termination])
  private static let _negative_se_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_se_p: PublicSuffix.Node = .label("p", next: [.termination])
  private static let _negative_se_paba_su: PublicSuffix.Node = .label("su", next: [.termination])
  private static let _negative_se_paba: PublicSuffix.Node = .label("paba", next: [_negative_se_paba_su])
  private static let _negative_se_parti: PublicSuffix.Node = .label("parti", next: [.termination])
  private static let _negative_se_pp: PublicSuffix.Node = .label("pp", next: [.termination])
  private static let _negative_se_press: PublicSuffix.Node = .label("press", next: [.termination])
  private static let _negative_se_r: PublicSuffix.Node = .label("r", next: [.termination])
  private static let _negative_se_s: PublicSuffix.Node = .label("s", next: [.termination])
  private static let _negative_se_t: PublicSuffix.Node = .label("t", next: [.termination])
  private static let _negative_se_tm: PublicSuffix.Node = .label("tm", next: [.termination])
  private static let _negative_se_u: PublicSuffix.Node = .label("u", next: [.termination])
  private static let _negative_se_w: PublicSuffix.Node = .label("w", next: [.termination])
  private static let _negative_se_x: PublicSuffix.Node = .label("x", next: [.termination])
  private static let _negative_se_y: PublicSuffix.Node = .label("y", next: [.termination])
  private static let _negative_se_z: PublicSuffix.Node = .label("z", next: [.termination])
  private static let _negative_se: PublicSuffix.Node = .label("se", next: [.termination, _negative_se_a, _negative_se_ac, _negative_se_b, _negative_se_bd, _negative_se_blogspot, _negative_se_brand, _negative_se_c, _negative_se_com, _negative_se_conf, _negative_se_d, _negative_se_e, _negative_se_f, _negative_se_fh, _negative_se_fhsk, _negative_se_fhv, _negative_se_g, _negative_se_h, _negative_se_i, _negative_se_iopsys, _negative_se_itcouldbewor, _negative_se_k, _negative_se_komforb, _negative_se_kommunalforbund, _negative_se_komvux, _negative_se_l, _negative_se_lanbib, _negative_se_m, _negative_se_myspreadshop, _negative_se_n, _negative_se_naturbruksgymn, _negative_se_o, _negative_se_org, _negative_se_p, _negative_se_paba, _negative_se_parti, _negative_se_pp, _negative_se_press, _negative_se_r, _negative_se_s, _negative_se_t, _negative_se_tm, _negative_se_u, _negative_se_w, _negative_se_x, _negative_se_y, _negative_se_z])
  private static let _negative_search: PublicSuffix.Node = .label("search", next: [.termination])
  private static let _negative_seat: PublicSuffix.Node = .label("seat", next: [.termination])
  private static let _negative_secure: PublicSuffix.Node = .label("secure", next: [.termination])
  private static let _negative_security: PublicSuffix.Node = .label("security", next: [.termination])
  private static let _negative_seek: PublicSuffix.Node = .label("seek", next: [.termination])
  private static let _negative_select: PublicSuffix.Node = .label("select", next: [.termination])
  private static let _negative_sener: PublicSuffix.Node = .label("sener", next: [.termination])
  private static let _negative_services_loginline: PublicSuffix.Node = .label("loginline", next: [.termination])
  private static let _negative_services: PublicSuffix.Node = .label("services", next: [.termination, _negative_services_loginline])
  private static let _negative_ses: PublicSuffix.Node = .label("ses", next: [.termination])
  private static let _negative_seven: PublicSuffix.Node = .label("seven", next: [.termination])
  private static let _negative_sew: PublicSuffix.Node = .label("sew", next: [.termination])
  private static let _negative_sex: PublicSuffix.Node = .label("sex", next: [.termination])
  private static let _negative_sexy: PublicSuffix.Node = .label("sexy", next: [.termination])
  private static let _negative_sfr: PublicSuffix.Node = .label("sfr", next: [.termination])
  private static let _negative_sg_blogspot: PublicSuffix.Node = .label("blogspot", next: [.termination])
  private static let _negative_sg_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_sg_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_sg_enscaled: PublicSuffix.Node = .label("enscaled", next: [.termination])
  private static let _negative_sg_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_sg_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_sg_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_sg_per: PublicSuffix.Node = .label("per", next: [.termination])
  private static let _negative_sg: PublicSuffix.Node = .label("sg", next: [.termination, _negative_sg_blogspot, _negative_sg_com, _negative_sg_edu, _negative_sg_enscaled, _negative_sg_gov, _negative_sg_net, _negative_sg_org, _negative_sg_per])
  private static let _negative_sh_bip: PublicSuffix.Node = .label("bip", next: [.termination])
  private static let _negative_sh_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_sh_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_sh_hashbang: PublicSuffix.Node = .label("hashbang", next: [.termination])
  private static let _negative_sh_mil: PublicSuffix.Node = .label("mil", next: [.termination])
  private static let _negative_sh_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_sh_now: PublicSuffix.Node = .label("now", next: [.termination])
  private static let _negative_sh_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_sh_platform_bc: PublicSuffix.Node = .label("bc", next: [.termination])
  private static let _negative_sh_platform_ent: PublicSuffix.Node = .label("ent", next: [.termination])
  private static let _negative_sh_platform_eu: PublicSuffix.Node = .label("eu", next: [.termination])
  private static let _negative_sh_platform_us: PublicSuffix.Node = .label("us", next: [.termination])
  private static let _negative_sh_platform: PublicSuffix.Node = .label("platform", next: [_negative_sh_platform_bc, _negative_sh_platform_ent, _negative_sh_platform_eu, _negative_sh_platform_us])
  private static let _negative_sh_vxl: PublicSuffix.Node = .label("vxl", next: [.termination])
  private static let _negative_sh_wedeploy: PublicSuffix.Node = .label("wedeploy", next: [.termination])
  private static let _negative_sh: PublicSuffix.Node = .label("sh", next: [.termination, _negative_sh_bip, _negative_sh_com, _negative_sh_gov, _negative_sh_hashbang, _negative_sh_mil, _negative_sh_net, _negative_sh_now, _negative_sh_org, _negative_sh_platform, _negative_sh_vxl, _negative_sh_wedeploy])
  private static let _negative_shangrila: PublicSuffix.Node = .label("shangrila", next: [.termination])
  private static let _negative_sharp: PublicSuffix.Node = .label("sharp", next: [.termination])
  private static let _negative_shaw: PublicSuffix.Node = .label("shaw", next: [.termination])
  private static let _negative_shell: PublicSuffix.Node = .label("shell", next: [.termination])
  private static let _negative_shia: PublicSuffix.Node = .label("shia", next: [.termination])
  private static let _negative_shiksha: PublicSuffix.Node = .label("shiksha", next: [.termination])
  private static let _negative_shoes: PublicSuffix.Node = .label("shoes", next: [.termination])
  private static let _negative_shop_barsy: PublicSuffix.Node = .label("barsy", next: [.termination])
  private static let _negative_shop_base: PublicSuffix.Node = .label("base", next: [.termination])
  private static let _negative_shop_hoplix: PublicSuffix.Node = .label("hoplix", next: [.termination])
  private static let _negative_shop: PublicSuffix.Node = .label("shop", next: [.termination, _negative_shop_barsy, _negative_shop_base, _negative_shop_hoplix])
  private static let _negative_shopping: PublicSuffix.Node = .label("shopping", next: [.termination])
  private static let _negative_shouji: PublicSuffix.Node = .label("shouji", next: [.termination])
  private static let _negative_show: PublicSuffix.Node = .label("show", next: [.termination])
  private static let _negative_showtime: PublicSuffix.Node = .label("showtime", next: [.termination])
  private static let _negative_si_blogspot: PublicSuffix.Node = .label("blogspot", next: [.termination])
  private static let _negative_si_gitapp: PublicSuffix.Node = .label("gitapp", next: [.termination])
  private static let _negative_si_gitpage: PublicSuffix.Node = .label("gitpage", next: [.termination])
  private static let _negative_si: PublicSuffix.Node = .label("si", next: [.termination, _negative_si_blogspot, _negative_si_gitapp, _negative_si_gitpage])
  private static let _negative_silk: PublicSuffix.Node = .label("silk", next: [.termination])
  private static let _negative_sina: PublicSuffix.Node = .label("sina", next: [.termination])
  private static let _negative_singles: PublicSuffix.Node = .label("singles", next: [.termination])
  private static let _negative_site_barsy: PublicSuffix.Node = .label("barsy", next: [.termination])
  private static let _negative_site_byen: PublicSuffix.Node = .label("byen", next: [.termination])
  private static let _negative_site_cloudera: PublicSuffix.Node = .label("cloudera", next: [.any])
  private static let _negative_site_cyon: PublicSuffix.Node = .label("cyon", next: [.termination])
  private static let _negative_site_fastvps: PublicSuffix.Node = .label("fastvps", next: [.termination])
  private static let _negative_site_fnwk: PublicSuffix.Node = .label("fnwk", next: [.termination])
  private static let _negative_site_folionetwork: PublicSuffix.Node = .label("folionetwork", next: [.termination])
  private static let _negative_site_jele: PublicSuffix.Node = .label("jele", next: [.termination])
  private static let _negative_site_lelux: PublicSuffix.Node = .label("lelux", next: [.termination])
  private static let _negative_site_loginline: PublicSuffix.Node = .label("loginline", next: [.termination])
  private static let _negative_site_mintere: PublicSuffix.Node = .label("mintere", next: [.termination])
  private static let _negative_site_novecore: PublicSuffix.Node = .label("novecore", next: [.termination])
  private static let _negative_site_omniwe: PublicSuffix.Node = .label("omniwe", next: [.termination])
  private static let _negative_site_opensocial: PublicSuffix.Node = .label("opensocial", next: [.termination])
  private static let _negative_site_platformsh: PublicSuffix.Node = .label("platformsh", next: [.any])
  private static let _negative_site_srht: PublicSuffix.Node = .label("srht", next: [.termination])
  private static let _negative_site_tst: PublicSuffix.Node = .label("tst", next: [.any])
  private static let _negative_site: PublicSuffix.Node = .label("site", next: [.termination, _negative_site_barsy, _negative_site_byen, _negative_site_cloudera, _negative_site_cyon, _negative_site_fastvps, _negative_site_fnwk, _negative_site_folionetwork, _negative_site_jele, _negative_site_lelux, _negative_site_loginline, _negative_site_mintere, _negative_site_novecore, _negative_site_omniwe, _negative_site_opensocial, _negative_site_platformsh, _negative_site_srht, _negative_site_tst])
  private static let _negative_sj: PublicSuffix.Node = .label("sj", next: [.termination])
  private static let _negative_sk_blogspot: PublicSuffix.Node = .label("blogspot", next: [.termination])
  private static let _negative_sk: PublicSuffix.Node = .label("sk", next: [.termination, _negative_sk_blogspot])
  private static let _negative_ski: PublicSuffix.Node = .label("ski", next: [.termination])
  private static let _negative_skin: PublicSuffix.Node = .label("skin", next: [.termination])
  private static let _negative_sky: PublicSuffix.Node = .label("sky", next: [.termination])
  private static let _negative_skype: PublicSuffix.Node = .label("skype", next: [.termination])
  private static let _negative_sl_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_sl_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_sl_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_sl_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_sl_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_sl: PublicSuffix.Node = .label("sl", next: [.termination, _negative_sl_com, _negative_sl_edu, _negative_sl_gov, _negative_sl_net, _negative_sl_org])
  private static let _negative_sling: PublicSuffix.Node = .label("sling", next: [.termination])
  private static let _negative_sm: PublicSuffix.Node = .label("sm", next: [.termination])
  private static let _negative_smart: PublicSuffix.Node = .label("smart", next: [.termination])
  private static let _negative_smile: PublicSuffix.Node = .label("smile", next: [.termination])
  private static let _negative_sn_art: PublicSuffix.Node = .label("art", next: [.termination])
  private static let _negative_sn_blogspot: PublicSuffix.Node = .label("blogspot", next: [.termination])
  private static let _negative_sn_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_sn_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_sn_gouv: PublicSuffix.Node = .label("gouv", next: [.termination])
  private static let _negative_sn_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_sn_perso: PublicSuffix.Node = .label("perso", next: [.termination])
  private static let _negative_sn_univ: PublicSuffix.Node = .label("univ", next: [.termination])
  private static let _negative_sn: PublicSuffix.Node = .label("sn", next: [.termination, _negative_sn_art, _negative_sn_blogspot, _negative_sn_com, _negative_sn_edu, _negative_sn_gouv, _negative_sn_org, _negative_sn_perso, _negative_sn_univ])
  private static let _negative_sncf: PublicSuffix.Node = .label("sncf", next: [.termination])
  private static let _negative_so_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_so_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_so_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_so_me: PublicSuffix.Node = .label("me", next: [.termination])
  private static let _negative_so_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_so_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_so_sch: PublicSuffix.Node = .label("sch", next: [.termination])
  private static let _negative_so: PublicSuffix.Node = .label("so", next: [.termination, _negative_so_com, _negative_so_edu, _negative_so_gov, _negative_so_me, _negative_so_net, _negative_so_org, _negative_so_sch])
  private static let _negative_soccer: PublicSuffix.Node = .label("soccer", next: [.termination])
  private static let _negative_social: PublicSuffix.Node = .label("social", next: [.termination])
  private static let _negative_softbank: PublicSuffix.Node = .label("softbank", next: [.termination])
  private static let _negative_software: PublicSuffix.Node = .label("software", next: [.termination])
  private static let _negative_sohu: PublicSuffix.Node = .label("sohu", next: [.termination])
  private static let _negative_solar: PublicSuffix.Node = .label("solar", next: [.termination])
  private static let _negative_solutions_diher: PublicSuffix.Node = .label("diher", next: [.any])
  private static let _negative_solutions: PublicSuffix.Node = .label("solutions", next: [.termination, _negative_solutions_diher])
  private static let _negative_song: PublicSuffix.Node = .label("song", next: [.termination])
  private static let _negative_sony: PublicSuffix.Node = .label("sony", next: [.termination])
  private static let _negative_soy: PublicSuffix.Node = .label("soy", next: [.termination])
  private static let _negative_spa: PublicSuffix.Node = .label("spa", next: [.termination])
  private static let _negative_space_myfast: PublicSuffix.Node = .label("myfast", next: [.termination])
  private static let _negative_space_uber: PublicSuffix.Node = .label("uber", next: [.termination])
  private static let _negative_space_xs4all: PublicSuffix.Node = .label("xs4all", next: [.termination])
  private static let _negative_space: PublicSuffix.Node = .label("space", next: [.termination, _negative_space_myfast, _negative_space_uber, _negative_space_xs4all])
  private static let _negative_sport: PublicSuffix.Node = .label("sport", next: [.termination])
  private static let _negative_spot: PublicSuffix.Node = .label("spot", next: [.termination])
  private static let _negative_sr: PublicSuffix.Node = .label("sr", next: [.termination])
  private static let _negative_srl: PublicSuffix.Node = .label("srl", next: [.termination])
  private static let _negative_ss_biz: PublicSuffix.Node = .label("biz", next: [.termination])
  private static let _negative_ss_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_ss_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_ss_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_ss_me: PublicSuffix.Node = .label("me", next: [.termination])
  private static let _negative_ss_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_ss_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_ss_sch: PublicSuffix.Node = .label("sch", next: [.termination])
  private static let _negative_ss: PublicSuffix.Node = .label("ss", next: [.termination, _negative_ss_biz, _negative_ss_com, _negative_ss_edu, _negative_ss_gov, _negative_ss_me, _negative_ss_net, _negative_ss_org, _negative_ss_sch])
  private static let _negative_st_co: PublicSuffix.Node = .label("co", next: [.termination])
  private static let _negative_st_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_st_consulado: PublicSuffix.Node = .label("consulado", next: [.termination])
  private static let _negative_st_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_st_embaixada: PublicSuffix.Node = .label("embaixada", next: [.termination])
  private static let _negative_st_mil: PublicSuffix.Node = .label("mil", next: [.termination])
  private static let _negative_st_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_st_noho: PublicSuffix.Node = .label("noho", next: [.termination])
  private static let _negative_st_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_st_principe: PublicSuffix.Node = .label("principe", next: [.termination])
  private static let _negative_st_saotome: PublicSuffix.Node = .label("saotome", next: [.termination])
  private static let _negative_st_store: PublicSuffix.Node = .label("store", next: [.termination])
  private static let _negative_st: PublicSuffix.Node = .label("st", next: [.termination, _negative_st_co, _negative_st_com, _negative_st_consulado, _negative_st_edu, _negative_st_embaixada, _negative_st_mil, _negative_st_net, _negative_st_noho, _negative_st_org, _negative_st_principe, _negative_st_saotome, _negative_st_store])
  private static let _negative_stada: PublicSuffix.Node = .label("stada", next: [.termination])
  private static let _negative_staples: PublicSuffix.Node = .label("staples", next: [.termination])
  private static let _negative_star: PublicSuffix.Node = .label("star", next: [.termination])
  private static let _negative_statebank: PublicSuffix.Node = .label("statebank", next: [.termination])
  private static let _negative_statefarm: PublicSuffix.Node = .label("statefarm", next: [.termination])
  private static let _negative_stc: PublicSuffix.Node = .label("stc", next: [.termination])
  private static let _negative_stcgroup: PublicSuffix.Node = .label("stcgroup", next: [.termination])
  private static let _negative_stockholm: PublicSuffix.Node = .label("stockholm", next: [.termination])
  private static let _negative_storage: PublicSuffix.Node = .label("storage", next: [.termination])
  private static let _negative_store_sellfy: PublicSuffix.Node = .label("sellfy", next: [.termination])
  private static let _negative_store_shopware: PublicSuffix.Node = .label("shopware", next: [.termination])
  private static let _negative_store_storebase: PublicSuffix.Node = .label("storebase", next: [.termination])
  private static let _negative_store: PublicSuffix.Node = .label("store", next: [.termination, _negative_store_sellfy, _negative_store_shopware, _negative_store_storebase])
  private static let _negative_stream: PublicSuffix.Node = .label("stream", next: [.termination])
  private static let _negative_studio: PublicSuffix.Node = .label("studio", next: [.termination])
  private static let _negative_study: PublicSuffix.Node = .label("study", next: [.termination])
  private static let _negative_style: PublicSuffix.Node = .label("style", next: [.termination])
  private static let _negative_su_abkhazia: PublicSuffix.Node = .label("abkhazia", next: [.termination])
  private static let _negative_su_adygeya: PublicSuffix.Node = .label("adygeya", next: [.termination])
  private static let _negative_su_aktyubinsk: PublicSuffix.Node = .label("aktyubinsk", next: [.termination])
  private static let _negative_su_arkhangelsk: PublicSuffix.Node = .label("arkhangelsk", next: [.termination])
  private static let _negative_su_armenia: PublicSuffix.Node = .label("armenia", next: [.termination])
  private static let _negative_su_ashgabad: PublicSuffix.Node = .label("ashgabad", next: [.termination])
  private static let _negative_su_azerbaijan: PublicSuffix.Node = .label("azerbaijan", next: [.termination])
  private static let _negative_su_balashov: PublicSuffix.Node = .label("balashov", next: [.termination])
  private static let _negative_su_bashkiria: PublicSuffix.Node = .label("bashkiria", next: [.termination])
  private static let _negative_su_bryansk: PublicSuffix.Node = .label("bryansk", next: [.termination])
  private static let _negative_su_bukhara: PublicSuffix.Node = .label("bukhara", next: [.termination])
  private static let _negative_su_chimkent: PublicSuffix.Node = .label("chimkent", next: [.termination])
  private static let _negative_su_dagestan: PublicSuffix.Node = .label("dagestan", next: [.termination])
  private static let _negative_su_eastHkazakhstan: PublicSuffix.Node = .label("east-kazakhstan", next: [.termination])
  private static let _negative_su_exnet: PublicSuffix.Node = .label("exnet", next: [.termination])
  private static let _negative_su_georgia: PublicSuffix.Node = .label("georgia", next: [.termination])
  private static let _negative_su_grozny: PublicSuffix.Node = .label("grozny", next: [.termination])
  private static let _negative_su_ivanovo: PublicSuffix.Node = .label("ivanovo", next: [.termination])
  private static let _negative_su_jambyl: PublicSuffix.Node = .label("jambyl", next: [.termination])
  private static let _negative_su_kalmykia: PublicSuffix.Node = .label("kalmykia", next: [.termination])
  private static let _negative_su_kaluga: PublicSuffix.Node = .label("kaluga", next: [.termination])
  private static let _negative_su_karacol: PublicSuffix.Node = .label("karacol", next: [.termination])
  private static let _negative_su_karaganda: PublicSuffix.Node = .label("karaganda", next: [.termination])
  private static let _negative_su_karelia: PublicSuffix.Node = .label("karelia", next: [.termination])
  private static let _negative_su_khakassia: PublicSuffix.Node = .label("khakassia", next: [.termination])
  private static let _negative_su_krasnodar: PublicSuffix.Node = .label("krasnodar", next: [.termination])
  private static let _negative_su_kurgan: PublicSuffix.Node = .label("kurgan", next: [.termination])
  private static let _negative_su_kustanai: PublicSuffix.Node = .label("kustanai", next: [.termination])
  private static let _negative_su_lenug: PublicSuffix.Node = .label("lenug", next: [.termination])
  private static let _negative_su_mangyshlak: PublicSuffix.Node = .label("mangyshlak", next: [.termination])
  private static let _negative_su_mordovia: PublicSuffix.Node = .label("mordovia", next: [.termination])
  private static let _negative_su_msk: PublicSuffix.Node = .label("msk", next: [.termination])
  private static let _negative_su_murmansk: PublicSuffix.Node = .label("murmansk", next: [.termination])
  private static let _negative_su_nalchik: PublicSuffix.Node = .label("nalchik", next: [.termination])
  private static let _negative_su_navoi: PublicSuffix.Node = .label("navoi", next: [.termination])
  private static let _negative_su_northHkazakhstan: PublicSuffix.Node = .label("north-kazakhstan", next: [.termination])
  private static let _negative_su_nov: PublicSuffix.Node = .label("nov", next: [.termination])
  private static let _negative_su_obninsk: PublicSuffix.Node = .label("obninsk", next: [.termination])
  private static let _negative_su_penza: PublicSuffix.Node = .label("penza", next: [.termination])
  private static let _negative_su_pokrovsk: PublicSuffix.Node = .label("pokrovsk", next: [.termination])
  private static let _negative_su_sochi: PublicSuffix.Node = .label("sochi", next: [.termination])
  private static let _negative_su_spb: PublicSuffix.Node = .label("spb", next: [.termination])
  private static let _negative_su_tashkent: PublicSuffix.Node = .label("tashkent", next: [.termination])
  private static let _negative_su_termez: PublicSuffix.Node = .label("termez", next: [.termination])
  private static let _negative_su_togliatti: PublicSuffix.Node = .label("togliatti", next: [.termination])
  private static let _negative_su_troitsk: PublicSuffix.Node = .label("troitsk", next: [.termination])
  private static let _negative_su_tselinograd: PublicSuffix.Node = .label("tselinograd", next: [.termination])
  private static let _negative_su_tula: PublicSuffix.Node = .label("tula", next: [.termination])
  private static let _negative_su_tuva: PublicSuffix.Node = .label("tuva", next: [.termination])
  private static let _negative_su_vladikavkaz: PublicSuffix.Node = .label("vladikavkaz", next: [.termination])
  private static let _negative_su_vladimir: PublicSuffix.Node = .label("vladimir", next: [.termination])
  private static let _negative_su_vologda: PublicSuffix.Node = .label("vologda", next: [.termination])
  private static let _negative_su: PublicSuffix.Node = .label("su", next: [.termination, _negative_su_abkhazia, _negative_su_adygeya, _negative_su_aktyubinsk, _negative_su_arkhangelsk, _negative_su_armenia, _negative_su_ashgabad, _negative_su_azerbaijan, _negative_su_balashov, _negative_su_bashkiria, _negative_su_bryansk, _negative_su_bukhara, _negative_su_chimkent, _negative_su_dagestan, _negative_su_eastHkazakhstan, _negative_su_exnet, _negative_su_georgia, _negative_su_grozny, _negative_su_ivanovo, _negative_su_jambyl, _negative_su_kalmykia, _negative_su_kaluga, _negative_su_karacol, _negative_su_karaganda, _negative_su_karelia, _negative_su_khakassia, _negative_su_krasnodar, _negative_su_kurgan, _negative_su_kustanai, _negative_su_lenug, _negative_su_mangyshlak, _negative_su_mordovia, _negative_su_msk, _negative_su_murmansk, _negative_su_nalchik, _negative_su_navoi, _negative_su_northHkazakhstan, _negative_su_nov, _negative_su_obninsk, _negative_su_penza, _negative_su_pokrovsk, _negative_su_sochi, _negative_su_spb, _negative_su_tashkent, _negative_su_termez, _negative_su_togliatti, _negative_su_troitsk, _negative_su_tselinograd, _negative_su_tula, _negative_su_tuva, _negative_su_vladikavkaz, _negative_su_vladimir, _negative_su_vologda])
  private static let _negative_sucks: PublicSuffix.Node = .label("sucks", next: [.termination])
  private static let _negative_supplies: PublicSuffix.Node = .label("supplies", next: [.termination])
  private static let _negative_supply: PublicSuffix.Node = .label("supply", next: [.termination])
  private static let _negative_support_barsy: PublicSuffix.Node = .label("barsy", next: [.termination])
  private static let _negative_support: PublicSuffix.Node = .label("support", next: [.termination, _negative_support_barsy])
  private static let _negative_surf: PublicSuffix.Node = .label("surf", next: [.termination])
  private static let _negative_surgery: PublicSuffix.Node = .label("surgery", next: [.termination])
  private static let _negative_suzuki: PublicSuffix.Node = .label("suzuki", next: [.termination])
  private static let _negative_sv_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_sv_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_sv_gob: PublicSuffix.Node = .label("gob", next: [.termination])
  private static let _negative_sv_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_sv_red: PublicSuffix.Node = .label("red", next: [.termination])
  private static let _negative_sv: PublicSuffix.Node = .label("sv", next: [.termination, _negative_sv_com, _negative_sv_edu, _negative_sv_gob, _negative_sv_org, _negative_sv_red])
  private static let _negative_swatch: PublicSuffix.Node = .label("swatch", next: [.termination])
  private static let _negative_swiss: PublicSuffix.Node = .label("swiss", next: [.termination])
  private static let _negative_sx_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_sx: PublicSuffix.Node = .label("sx", next: [.termination, _negative_sx_gov])
  private static let _negative_sy_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_sy_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_sy_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_sy_mil: PublicSuffix.Node = .label("mil", next: [.termination])
  private static let _negative_sy_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_sy_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_sy: PublicSuffix.Node = .label("sy", next: [.termination, _negative_sy_com, _negative_sy_edu, _negative_sy_gov, _negative_sy_mil, _negative_sy_net, _negative_sy_org])
  private static let _negative_sydney: PublicSuffix.Node = .label("sydney", next: [.termination])
  private static let _negative_systems_knightpoint: PublicSuffix.Node = .label("knightpoint", next: [.termination])
  private static let _negative_systems: PublicSuffix.Node = .label("systems", next: [.termination, _negative_systems_knightpoint])
  private static let _negative_sz_ac: PublicSuffix.Node = .label("ac", next: [.termination])
  private static let _negative_sz_co: PublicSuffix.Node = .label("co", next: [.termination])
  private static let _negative_sz_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_sz: PublicSuffix.Node = .label("sz", next: [.termination, _negative_sz_ac, _negative_sz_co, _negative_sz_org])
  private static let _negative_tab: PublicSuffix.Node = .label("tab", next: [.termination])
  private static let _negative_taipei: PublicSuffix.Node = .label("taipei", next: [.termination])
  private static let _negative_talk: PublicSuffix.Node = .label("talk", next: [.termination])
  private static let _negative_taobao: PublicSuffix.Node = .label("taobao", next: [.termination])
  private static let _negative_target: PublicSuffix.Node = .label("target", next: [.termination])
  private static let _negative_tatamotors: PublicSuffix.Node = .label("tatamotors", next: [.termination])
  private static let _negative_tatar: PublicSuffix.Node = .label("tatar", next: [.termination])
  private static let _negative_tattoo: PublicSuffix.Node = .label("tattoo", next: [.termination])
  private static let _negative_tax: PublicSuffix.Node = .label("tax", next: [.termination])
  private static let _negative_taxi: PublicSuffix.Node = .label("taxi", next: [.termination])
  private static let _negative_tc_ch: PublicSuffix.Node = .label("ch", next: [.termination])
  private static let _negative_tc_me: PublicSuffix.Node = .label("me", next: [.termination])
  private static let _negative_tc_we: PublicSuffix.Node = .label("we", next: [.termination])
  private static let _negative_tc: PublicSuffix.Node = .label("tc", next: [.termination, _negative_tc_ch, _negative_tc_me, _negative_tc_we])
  private static let _negative_tci: PublicSuffix.Node = .label("tci", next: [.termination])
  private static let _negative_td_blogspot: PublicSuffix.Node = .label("blogspot", next: [.termination])
  private static let _negative_td: PublicSuffix.Node = .label("td", next: [.termination, _negative_td_blogspot])
  private static let _negative_tdk: PublicSuffix.Node = .label("tdk", next: [.termination])
  private static let _negative_team_discourse: PublicSuffix.Node = .label("discourse", next: [.termination])
  private static let _negative_team_jelastic: PublicSuffix.Node = .label("jelastic", next: [.termination])
  private static let _negative_team: PublicSuffix.Node = .label("team", next: [.termination, _negative_team_discourse, _negative_team_jelastic])
  private static let _negative_tech: PublicSuffix.Node = .label("tech", next: [.termination])
  private static let _negative_technology_co: PublicSuffix.Node = .label("co", next: [.termination])
  private static let _negative_technology: PublicSuffix.Node = .label("technology", next: [.termination, _negative_technology_co])
  private static let _negative_tel: PublicSuffix.Node = .label("tel", next: [.termination])
  private static let _negative_temasek: PublicSuffix.Node = .label("temasek", next: [.termination])
  private static let _negative_tennis: PublicSuffix.Node = .label("tennis", next: [.termination])
  private static let _negative_teva: PublicSuffix.Node = .label("teva", next: [.termination])
  private static let _negative_tf_sch: PublicSuffix.Node = .label("sch", next: [.termination])
  private static let _negative_tf: PublicSuffix.Node = .label("tf", next: [.termination, _negative_tf_sch])
  private static let _negative_tg: PublicSuffix.Node = .label("tg", next: [.termination])
  private static let _negative_th_ac: PublicSuffix.Node = .label("ac", next: [.termination])
  private static let _negative_th_co: PublicSuffix.Node = .label("co", next: [.termination])
  private static let _negative_th_go: PublicSuffix.Node = .label("go", next: [.termination])
  private static let _negative_th_in: PublicSuffix.Node = .label("in", next: [.termination])
  private static let _negative_th_mi: PublicSuffix.Node = .label("mi", next: [.termination])
  private static let _negative_th_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_th_online: PublicSuffix.Node = .label("online", next: [.termination])
  private static let _negative_th_or: PublicSuffix.Node = .label("or", next: [.termination])
  private static let _negative_th_shop: PublicSuffix.Node = .label("shop", next: [.termination])
  private static let _negative_th: PublicSuffix.Node = .label("th", next: [.termination, _negative_th_ac, _negative_th_co, _negative_th_go, _negative_th_in, _negative_th_mi, _negative_th_net, _negative_th_online, _negative_th_or, _negative_th_shop])
  private static let _negative_thd: PublicSuffix.Node = .label("thd", next: [.termination])
  private static let _negative_theater: PublicSuffix.Node = .label("theater", next: [.termination])
  private static let _negative_theatre: PublicSuffix.Node = .label("theatre", next: [.termination])
  private static let _negative_tiaa: PublicSuffix.Node = .label("tiaa", next: [.termination])
  private static let _negative_tickets: PublicSuffix.Node = .label("tickets", next: [.termination])
  private static let _negative_tienda: PublicSuffix.Node = .label("tienda", next: [.termination])
  private static let _negative_tiffany: PublicSuffix.Node = .label("tiffany", next: [.termination])
  private static let _negative_tips: PublicSuffix.Node = .label("tips", next: [.termination])
  private static let _negative_tires: PublicSuffix.Node = .label("tires", next: [.termination])
  private static let _negative_tirol: PublicSuffix.Node = .label("tirol", next: [.termination])
  private static let _negative_tj_ac: PublicSuffix.Node = .label("ac", next: [.termination])
  private static let _negative_tj_biz: PublicSuffix.Node = .label("biz", next: [.termination])
  private static let _negative_tj_co: PublicSuffix.Node = .label("co", next: [.termination])
  private static let _negative_tj_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_tj_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_tj_go: PublicSuffix.Node = .label("go", next: [.termination])
  private static let _negative_tj_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_tj_int: PublicSuffix.Node = .label("int", next: [.termination])
  private static let _negative_tj_mil: PublicSuffix.Node = .label("mil", next: [.termination])
  private static let _negative_tj_name: PublicSuffix.Node = .label("name", next: [.termination])
  private static let _negative_tj_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_tj_nic: PublicSuffix.Node = .label("nic", next: [.termination])
  private static let _negative_tj_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_tj_test: PublicSuffix.Node = .label("test", next: [.termination])
  private static let _negative_tj_web: PublicSuffix.Node = .label("web", next: [.termination])
  private static let _negative_tj: PublicSuffix.Node = .label("tj", next: [.termination, _negative_tj_ac, _negative_tj_biz, _negative_tj_co, _negative_tj_com, _negative_tj_edu, _negative_tj_go, _negative_tj_gov, _negative_tj_int, _negative_tj_mil, _negative_tj_name, _negative_tj_net, _negative_tj_nic, _negative_tj_org, _negative_tj_test, _negative_tj_web])
  private static let _negative_tjmaxx: PublicSuffix.Node = .label("tjmaxx", next: [.termination])
  private static let _negative_tjx: PublicSuffix.Node = .label("tjx", next: [.termination])
  private static let _negative_tk: PublicSuffix.Node = .label("tk", next: [.termination])
  private static let _negative_tkmaxx: PublicSuffix.Node = .label("tkmaxx", next: [.termination])
  private static let _negative_tl_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_tl: PublicSuffix.Node = .label("tl", next: [.termination, _negative_tl_gov])
  private static let _negative_tm_co: PublicSuffix.Node = .label("co", next: [.termination])
  private static let _negative_tm_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_tm_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_tm_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_tm_mil: PublicSuffix.Node = .label("mil", next: [.termination])
  private static let _negative_tm_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_tm_nom: PublicSuffix.Node = .label("nom", next: [.termination])
  private static let _negative_tm_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_tm: PublicSuffix.Node = .label("tm", next: [.termination, _negative_tm_co, _negative_tm_com, _negative_tm_edu, _negative_tm_gov, _negative_tm_mil, _negative_tm_net, _negative_tm_nom, _negative_tm_org])
  private static let _negative_tmall: PublicSuffix.Node = .label("tmall", next: [.termination])
  private static let _negative_tn_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_tn_ens: PublicSuffix.Node = .label("ens", next: [.termination])
  private static let _negative_tn_fin: PublicSuffix.Node = .label("fin", next: [.termination])
  private static let _negative_tn_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_tn_ind: PublicSuffix.Node = .label("ind", next: [.termination])
  private static let _negative_tn_info: PublicSuffix.Node = .label("info", next: [.termination])
  private static let _negative_tn_intl: PublicSuffix.Node = .label("intl", next: [.termination])
  private static let _negative_tn_mincom: PublicSuffix.Node = .label("mincom", next: [.termination])
  private static let _negative_tn_nat: PublicSuffix.Node = .label("nat", next: [.termination])
  private static let _negative_tn_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_tn_orangecloud: PublicSuffix.Node = .label("orangecloud", next: [.termination])
  private static let _negative_tn_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_tn_perso: PublicSuffix.Node = .label("perso", next: [.termination])
  private static let _negative_tn_tourism: PublicSuffix.Node = .label("tourism", next: [.termination])
  private static let _negative_tn: PublicSuffix.Node = .label("tn", next: [.termination, _negative_tn_com, _negative_tn_ens, _negative_tn_fin, _negative_tn_gov, _negative_tn_ind, _negative_tn_info, _negative_tn_intl, _negative_tn_mincom, _negative_tn_nat, _negative_tn_net, _negative_tn_orangecloud, _negative_tn_org, _negative_tn_perso, _negative_tn_tourism])
  private static let _negative_to_611: PublicSuffix.Node = .label("611", next: [.termination])
  private static let _negative_to_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_to_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_to_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_to_mil: PublicSuffix.Node = .label("mil", next: [.termination])
  private static let _negative_to_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_to_nyan: PublicSuffix.Node = .label("nyan", next: [.termination])
  private static let _negative_to_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_to_oya: PublicSuffix.Node = .label("oya", next: [.termination])
  private static let _negative_to_quickconnect_direct: PublicSuffix.Node = .label("direct", next: [.termination])
  private static let _negative_to_quickconnect: PublicSuffix.Node = .label("quickconnect", next: [_negative_to_quickconnect_direct])
  private static let _negative_to_rdv: PublicSuffix.Node = .label("rdv", next: [.termination])
  private static let _negative_to_vpnplus: PublicSuffix.Node = .label("vpnplus", next: [.termination])
  private static let _negative_to: PublicSuffix.Node = .label("to", next: [.termination, _negative_to_611, _negative_to_com, _negative_to_edu, _negative_to_gov, _negative_to_mil, _negative_to_net, _negative_to_nyan, _negative_to_org, _negative_to_oya, _negative_to_quickconnect, _negative_to_rdv, _negative_to_vpnplus])
  private static let _negative_today_prequalifyme: PublicSuffix.Node = .label("prequalifyme", next: [.termination])
  private static let _negative_today: PublicSuffix.Node = .label("today", next: [.termination, _negative_today_prequalifyme])
  private static let _negative_tokyo: PublicSuffix.Node = .label("tokyo", next: [.termination])
  private static let _negative_tools: PublicSuffix.Node = .label("tools", next: [.termination])
  private static let _negative_top_nowHdns: PublicSuffix.Node = .label("now-dns", next: [.termination])
  private static let _negative_top_ntdll: PublicSuffix.Node = .label("ntdll", next: [.termination])
  private static let _negative_top: PublicSuffix.Node = .label("top", next: [.termination, _negative_top_nowHdns, _negative_top_ntdll])
  private static let _negative_toray: PublicSuffix.Node = .label("toray", next: [.termination])
  private static let _negative_toshiba: PublicSuffix.Node = .label("toshiba", next: [.termination])
  private static let _negative_total: PublicSuffix.Node = .label("total", next: [.termination])
  private static let _negative_tours: PublicSuffix.Node = .label("tours", next: [.termination])
  private static let _negative_town: PublicSuffix.Node = .label("town", next: [.termination])
  private static let _negative_toyota: PublicSuffix.Node = .label("toyota", next: [.termination])
  private static let _negative_toys: PublicSuffix.Node = .label("toys", next: [.termination])
  private static let _negative_tr_av: PublicSuffix.Node = .label("av", next: [.termination])
  private static let _negative_tr_bbs: PublicSuffix.Node = .label("bbs", next: [.termination])
  private static let _negative_tr_bel: PublicSuffix.Node = .label("bel", next: [.termination])
  private static let _negative_tr_biz: PublicSuffix.Node = .label("biz", next: [.termination])
  private static let _negative_tr_com_blogspot: PublicSuffix.Node = .label("blogspot", next: [.termination])
  private static let _negative_tr_com: PublicSuffix.Node = .label("com", next: [.termination, _negative_tr_com_blogspot])
  private static let _negative_tr_dr: PublicSuffix.Node = .label("dr", next: [.termination])
  private static let _negative_tr_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_tr_gen: PublicSuffix.Node = .label("gen", next: [.termination])
  private static let _negative_tr_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_tr_info: PublicSuffix.Node = .label("info", next: [.termination])
  private static let _negative_tr_k12: PublicSuffix.Node = .label("k12", next: [.termination])
  private static let _negative_tr_kep: PublicSuffix.Node = .label("kep", next: [.termination])
  private static let _negative_tr_mil: PublicSuffix.Node = .label("mil", next: [.termination])
  private static let _negative_tr_name: PublicSuffix.Node = .label("name", next: [.termination])
  private static let _negative_tr_nc_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_tr_nc: PublicSuffix.Node = .label("nc", next: [.termination, _negative_tr_nc_gov])
  private static let _negative_tr_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_tr_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_tr_pol: PublicSuffix.Node = .label("pol", next: [.termination])
  private static let _negative_tr_tel: PublicSuffix.Node = .label("tel", next: [.termination])
  private static let _negative_tr_tsk: PublicSuffix.Node = .label("tsk", next: [.termination])
  private static let _negative_tr_tv: PublicSuffix.Node = .label("tv", next: [.termination])
  private static let _negative_tr_web: PublicSuffix.Node = .label("web", next: [.termination])
  private static let _negative_tr: PublicSuffix.Node = .label("tr", next: [.termination, _negative_tr_av, _negative_tr_bbs, _negative_tr_bel, _negative_tr_biz, _negative_tr_com, _negative_tr_dr, _negative_tr_edu, _negative_tr_gen, _negative_tr_gov, _negative_tr_info, _negative_tr_k12, _negative_tr_kep, _negative_tr_mil, _negative_tr_name, _negative_tr_nc, _negative_tr_net, _negative_tr_org, _negative_tr_pol, _negative_tr_tel, _negative_tr_tsk, _negative_tr_tv, _negative_tr_web])
  private static let _negative_trade_ybo: PublicSuffix.Node = .label("ybo", next: [.termination])
  private static let _negative_trade: PublicSuffix.Node = .label("trade", next: [.termination, _negative_trade_ybo])
  private static let _negative_trading: PublicSuffix.Node = .label("trading", next: [.termination])
  private static let _negative_training: PublicSuffix.Node = .label("training", next: [.termination])
  private static let _negative_travel: PublicSuffix.Node = .label("travel", next: [.termination])
  private static let _negative_travelchannel: PublicSuffix.Node = .label("travelchannel", next: [.termination])
  private static let _negative_travelers: PublicSuffix.Node = .label("travelers", next: [.termination])
  private static let _negative_travelersinsurance: PublicSuffix.Node = .label("travelersinsurance", next: [.termination])
  private static let _negative_trust: PublicSuffix.Node = .label("trust", next: [.termination])
  private static let _negative_trv: PublicSuffix.Node = .label("trv", next: [.termination])
  private static let _negative_tt_aero: PublicSuffix.Node = .label("aero", next: [.termination])
  private static let _negative_tt_biz: PublicSuffix.Node = .label("biz", next: [.termination])
  private static let _negative_tt_co: PublicSuffix.Node = .label("co", next: [.termination])
  private static let _negative_tt_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_tt_coop: PublicSuffix.Node = .label("coop", next: [.termination])
  private static let _negative_tt_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_tt_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_tt_info: PublicSuffix.Node = .label("info", next: [.termination])
  private static let _negative_tt_int: PublicSuffix.Node = .label("int", next: [.termination])
  private static let _negative_tt_jobs: PublicSuffix.Node = .label("jobs", next: [.termination])
  private static let _negative_tt_mobi: PublicSuffix.Node = .label("mobi", next: [.termination])
  private static let _negative_tt_museum: PublicSuffix.Node = .label("museum", next: [.termination])
  private static let _negative_tt_name: PublicSuffix.Node = .label("name", next: [.termination])
  private static let _negative_tt_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_tt_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_tt_pro: PublicSuffix.Node = .label("pro", next: [.termination])
  private static let _negative_tt_travel: PublicSuffix.Node = .label("travel", next: [.termination])
  private static let _negative_tt: PublicSuffix.Node = .label("tt", next: [.termination, _negative_tt_aero, _negative_tt_biz, _negative_tt_co, _negative_tt_com, _negative_tt_coop, _negative_tt_edu, _negative_tt_gov, _negative_tt_info, _negative_tt_int, _negative_tt_jobs, _negative_tt_mobi, _negative_tt_museum, _negative_tt_name, _negative_tt_net, _negative_tt_org, _negative_tt_pro, _negative_tt_travel])
  private static let _negative_tube: PublicSuffix.Node = .label("tube", next: [.termination])
  private static let _negative_tui: PublicSuffix.Node = .label("tui", next: [.termination])
  private static let _negative_tunes: PublicSuffix.Node = .label("tunes", next: [.termination])
  private static let _negative_tushu: PublicSuffix.Node = .label("tushu", next: [.termination])
  private static let _negative_tv_betterHthan: PublicSuffix.Node = .label("better-than", next: [.termination])
  private static let _negative_tv_dyndns: PublicSuffix.Node = .label("dyndns", next: [.termination])
  private static let _negative_tv_onHtheHweb: PublicSuffix.Node = .label("on-the-web", next: [.termination])
  private static let _negative_tv_worseHthan: PublicSuffix.Node = .label("worse-than", next: [.termination])
  private static let _negative_tv: PublicSuffix.Node = .label("tv", next: [.termination, _negative_tv_betterHthan, _negative_tv_dyndns, _negative_tv_onHtheHweb, _negative_tv_worseHthan])
  private static let _negative_tvs: PublicSuffix.Node = .label("tvs", next: [.termination])
  private static let _negative_tw_blogspot: PublicSuffix.Node = .label("blogspot", next: [.termination])
  private static let _negative_tw_club: PublicSuffix.Node = .label("club", next: [.termination])
  private static let _negative_tw_com_mymailer: PublicSuffix.Node = .label("mymailer", next: [.termination])
  private static let _negative_tw_com: PublicSuffix.Node = .label("com", next: [.termination, _negative_tw_com_mymailer])
  private static let _negative_tw_ebiz: PublicSuffix.Node = .label("ebiz", next: [.termination])
  private static let _negative_tw_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_tw_game: PublicSuffix.Node = .label("game", next: [.termination])
  private static let _negative_tw_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_tw_idv: PublicSuffix.Node = .label("idv", next: [.termination])
  private static let _negative_tw_mil: PublicSuffix.Node = .label("mil", next: [.termination])
  private static let _negative_tw_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_tw_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_tw_url: PublicSuffix.Node = .label("url", next: [.termination])
  private static let _negative_tw_商業: PublicSuffix.Node = .label("商業", next: [.termination])
  private static let _negative_tw_組織: PublicSuffix.Node = .label("組織", next: [.termination])
  private static let _negative_tw_網路: PublicSuffix.Node = .label("網路", next: [.termination])
  private static let _negative_tw: PublicSuffix.Node = .label("tw", next: [.termination, _negative_tw_blogspot, _negative_tw_club, _negative_tw_com, _negative_tw_ebiz, _negative_tw_edu, _negative_tw_game, _negative_tw_gov, _negative_tw_idv, _negative_tw_mil, _negative_tw_net, _negative_tw_org, _negative_tw_url, _negative_tw_商業, _negative_tw_組織, _negative_tw_網路])
  private static let _negative_tz_ac: PublicSuffix.Node = .label("ac", next: [.termination])
  private static let _negative_tz_co: PublicSuffix.Node = .label("co", next: [.termination])
  private static let _negative_tz_go: PublicSuffix.Node = .label("go", next: [.termination])
  private static let _negative_tz_hotel: PublicSuffix.Node = .label("hotel", next: [.termination])
  private static let _negative_tz_info: PublicSuffix.Node = .label("info", next: [.termination])
  private static let _negative_tz_me: PublicSuffix.Node = .label("me", next: [.termination])
  private static let _negative_tz_mil: PublicSuffix.Node = .label("mil", next: [.termination])
  private static let _negative_tz_mobi: PublicSuffix.Node = .label("mobi", next: [.termination])
  private static let _negative_tz_ne: PublicSuffix.Node = .label("ne", next: [.termination])
  private static let _negative_tz_or: PublicSuffix.Node = .label("or", next: [.termination])
  private static let _negative_tz_sc: PublicSuffix.Node = .label("sc", next: [.termination])
  private static let _negative_tz_tv: PublicSuffix.Node = .label("tv", next: [.termination])
  private static let _negative_tz: PublicSuffix.Node = .label("tz", next: [.termination, _negative_tz_ac, _negative_tz_co, _negative_tz_go, _negative_tz_hotel, _negative_tz_info, _negative_tz_me, _negative_tz_mil, _negative_tz_mobi, _negative_tz_ne, _negative_tz_or, _negative_tz_sc, _negative_tz_tv])
  private static let _negative_ua_biz: PublicSuffix.Node = .label("biz", next: [.termination])
  private static let _negative_ua_cc: PublicSuffix.Node = .label("cc", next: [.termination])
  private static let _negative_ua_cherkassy: PublicSuffix.Node = .label("cherkassy", next: [.termination])
  private static let _negative_ua_cherkasy: PublicSuffix.Node = .label("cherkasy", next: [.termination])
  private static let _negative_ua_chernigov: PublicSuffix.Node = .label("chernigov", next: [.termination])
  private static let _negative_ua_chernihiv: PublicSuffix.Node = .label("chernihiv", next: [.termination])
  private static let _negative_ua_chernivtsi: PublicSuffix.Node = .label("chernivtsi", next: [.termination])
  private static let _negative_ua_chernovtsy: PublicSuffix.Node = .label("chernovtsy", next: [.termination])
  private static let _negative_ua_ck: PublicSuffix.Node = .label("ck", next: [.termination])
  private static let _negative_ua_cn: PublicSuffix.Node = .label("cn", next: [.termination])
  private static let _negative_ua_co: PublicSuffix.Node = .label("co", next: [.termination])
  private static let _negative_ua_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_ua_cr: PublicSuffix.Node = .label("cr", next: [.termination])
  private static let _negative_ua_crimea: PublicSuffix.Node = .label("crimea", next: [.termination])
  private static let _negative_ua_cv: PublicSuffix.Node = .label("cv", next: [.termination])
  private static let _negative_ua_cx: PublicSuffix.Node = .label("cx", next: [.termination])
  private static let _negative_ua_dn: PublicSuffix.Node = .label("dn", next: [.termination])
  private static let _negative_ua_dnepropetrovsk: PublicSuffix.Node = .label("dnepropetrovsk", next: [.termination])
  private static let _negative_ua_dnipropetrovsk: PublicSuffix.Node = .label("dnipropetrovsk", next: [.termination])
  private static let _negative_ua_donetsk: PublicSuffix.Node = .label("donetsk", next: [.termination])
  private static let _negative_ua_dp: PublicSuffix.Node = .label("dp", next: [.termination])
  private static let _negative_ua_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_ua_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_ua_if: PublicSuffix.Node = .label("if", next: [.termination])
  private static let _negative_ua_in: PublicSuffix.Node = .label("in", next: [.termination])
  private static let _negative_ua_inf: PublicSuffix.Node = .label("inf", next: [.termination])
  private static let _negative_ua_ivanoHfrankivsk: PublicSuffix.Node = .label("ivano-frankivsk", next: [.termination])
  private static let _negative_ua_kh: PublicSuffix.Node = .label("kh", next: [.termination])
  private static let _negative_ua_kharkiv: PublicSuffix.Node = .label("kharkiv", next: [.termination])
  private static let _negative_ua_kharkov: PublicSuffix.Node = .label("kharkov", next: [.termination])
  private static let _negative_ua_kherson: PublicSuffix.Node = .label("kherson", next: [.termination])
  private static let _negative_ua_khmelnitskiy: PublicSuffix.Node = .label("khmelnitskiy", next: [.termination])
  private static let _negative_ua_khmelnytskyi: PublicSuffix.Node = .label("khmelnytskyi", next: [.termination])
  private static let _negative_ua_kiev: PublicSuffix.Node = .label("kiev", next: [.termination])
  private static let _negative_ua_kirovograd: PublicSuffix.Node = .label("kirovograd", next: [.termination])
  private static let _negative_ua_km: PublicSuffix.Node = .label("km", next: [.termination])
  private static let _negative_ua_kr: PublicSuffix.Node = .label("kr", next: [.termination])
  private static let _negative_ua_krym: PublicSuffix.Node = .label("krym", next: [.termination])
  private static let _negative_ua_ks: PublicSuffix.Node = .label("ks", next: [.termination])
  private static let _negative_ua_kv: PublicSuffix.Node = .label("kv", next: [.termination])
  private static let _negative_ua_kyiv: PublicSuffix.Node = .label("kyiv", next: [.termination])
  private static let _negative_ua_lg: PublicSuffix.Node = .label("lg", next: [.termination])
  private static let _negative_ua_lt: PublicSuffix.Node = .label("lt", next: [.termination])
  private static let _negative_ua_ltd: PublicSuffix.Node = .label("ltd", next: [.termination])
  private static let _negative_ua_lugansk: PublicSuffix.Node = .label("lugansk", next: [.termination])
  private static let _negative_ua_lutsk: PublicSuffix.Node = .label("lutsk", next: [.termination])
  private static let _negative_ua_lv: PublicSuffix.Node = .label("lv", next: [.termination])
  private static let _negative_ua_lviv: PublicSuffix.Node = .label("lviv", next: [.termination])
  private static let _negative_ua_mk: PublicSuffix.Node = .label("mk", next: [.termination])
  private static let _negative_ua_mykolaiv: PublicSuffix.Node = .label("mykolaiv", next: [.termination])
  private static let _negative_ua_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_ua_nikolaev: PublicSuffix.Node = .label("nikolaev", next: [.termination])
  private static let _negative_ua_od: PublicSuffix.Node = .label("od", next: [.termination])
  private static let _negative_ua_odesa: PublicSuffix.Node = .label("odesa", next: [.termination])
  private static let _negative_ua_odessa: PublicSuffix.Node = .label("odessa", next: [.termination])
  private static let _negative_ua_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_ua_pl: PublicSuffix.Node = .label("pl", next: [.termination])
  private static let _negative_ua_poltava: PublicSuffix.Node = .label("poltava", next: [.termination])
  private static let _negative_ua_pp: PublicSuffix.Node = .label("pp", next: [.termination])
  private static let _negative_ua_rivne: PublicSuffix.Node = .label("rivne", next: [.termination])
  private static let _negative_ua_rovno: PublicSuffix.Node = .label("rovno", next: [.termination])
  private static let _negative_ua_rv: PublicSuffix.Node = .label("rv", next: [.termination])
  private static let _negative_ua_sb: PublicSuffix.Node = .label("sb", next: [.termination])
  private static let _negative_ua_sebastopol: PublicSuffix.Node = .label("sebastopol", next: [.termination])
  private static let _negative_ua_sevastopol: PublicSuffix.Node = .label("sevastopol", next: [.termination])
  private static let _negative_ua_sm: PublicSuffix.Node = .label("sm", next: [.termination])
  private static let _negative_ua_sumy: PublicSuffix.Node = .label("sumy", next: [.termination])
  private static let _negative_ua_te: PublicSuffix.Node = .label("te", next: [.termination])
  private static let _negative_ua_ternopil: PublicSuffix.Node = .label("ternopil", next: [.termination])
  private static let _negative_ua_uz: PublicSuffix.Node = .label("uz", next: [.termination])
  private static let _negative_ua_uzhgorod: PublicSuffix.Node = .label("uzhgorod", next: [.termination])
  private static let _negative_ua_v: PublicSuffix.Node = .label("v", next: [.termination])
  private static let _negative_ua_vinnica: PublicSuffix.Node = .label("vinnica", next: [.termination])
  private static let _negative_ua_vinnytsia: PublicSuffix.Node = .label("vinnytsia", next: [.termination])
  private static let _negative_ua_vn: PublicSuffix.Node = .label("vn", next: [.termination])
  private static let _negative_ua_volyn: PublicSuffix.Node = .label("volyn", next: [.termination])
  private static let _negative_ua_yalta: PublicSuffix.Node = .label("yalta", next: [.termination])
  private static let _negative_ua_zaporizhzhe: PublicSuffix.Node = .label("zaporizhzhe", next: [.termination])
  private static let _negative_ua_zaporizhzhia: PublicSuffix.Node = .label("zaporizhzhia", next: [.termination])
  private static let _negative_ua_zhitomir: PublicSuffix.Node = .label("zhitomir", next: [.termination])
  private static let _negative_ua_zhytomyr: PublicSuffix.Node = .label("zhytomyr", next: [.termination])
  private static let _negative_ua_zp: PublicSuffix.Node = .label("zp", next: [.termination])
  private static let _negative_ua_zt: PublicSuffix.Node = .label("zt", next: [.termination])
  private static let _negative_ua: PublicSuffix.Node = .label("ua", next: [.termination, _negative_ua_biz, _negative_ua_cc, _negative_ua_cherkassy, _negative_ua_cherkasy, _negative_ua_chernigov, _negative_ua_chernihiv, _negative_ua_chernivtsi, _negative_ua_chernovtsy, _negative_ua_ck, _negative_ua_cn, _negative_ua_co, _negative_ua_com, _negative_ua_cr, _negative_ua_crimea, _negative_ua_cv, _negative_ua_cx, _negative_ua_dn, _negative_ua_dnepropetrovsk, _negative_ua_dnipropetrovsk, _negative_ua_donetsk, _negative_ua_dp, _negative_ua_edu, _negative_ua_gov, _negative_ua_if, _negative_ua_in, _negative_ua_inf, _negative_ua_ivanoHfrankivsk, _negative_ua_kh, _negative_ua_kharkiv, _negative_ua_kharkov, _negative_ua_kherson, _negative_ua_khmelnitskiy, _negative_ua_khmelnytskyi, _negative_ua_kiev, _negative_ua_kirovograd, _negative_ua_km, _negative_ua_kr, _negative_ua_krym, _negative_ua_ks, _negative_ua_kv, _negative_ua_kyiv, _negative_ua_lg, _negative_ua_lt, _negative_ua_ltd, _negative_ua_lugansk, _negative_ua_lutsk, _negative_ua_lv, _negative_ua_lviv, _negative_ua_mk, _negative_ua_mykolaiv, _negative_ua_net, _negative_ua_nikolaev, _negative_ua_od, _negative_ua_odesa, _negative_ua_odessa, _negative_ua_org, _negative_ua_pl, _negative_ua_poltava, _negative_ua_pp, _negative_ua_rivne, _negative_ua_rovno, _negative_ua_rv, _negative_ua_sb, _negative_ua_sebastopol, _negative_ua_sevastopol, _negative_ua_sm, _negative_ua_sumy, _negative_ua_te, _negative_ua_ternopil, _negative_ua_uz, _negative_ua_uzhgorod, _negative_ua_v, _negative_ua_vinnica, _negative_ua_vinnytsia, _negative_ua_vn, _negative_ua_volyn, _negative_ua_yalta, _negative_ua_zaporizhzhe, _negative_ua_zaporizhzhia, _negative_ua_zhitomir, _negative_ua_zhytomyr, _negative_ua_zp, _negative_ua_zt])
  private static let _negative_ubank: PublicSuffix.Node = .label("ubank", next: [.termination])
  private static let _negative_ubs: PublicSuffix.Node = .label("ubs", next: [.termination])
  private static let _negative_ug_ac: PublicSuffix.Node = .label("ac", next: [.termination])
  private static let _negative_ug_blogspot: PublicSuffix.Node = .label("blogspot", next: [.termination])
  private static let _negative_ug_co: PublicSuffix.Node = .label("co", next: [.termination])
  private static let _negative_ug_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_ug_go: PublicSuffix.Node = .label("go", next: [.termination])
  private static let _negative_ug_ne: PublicSuffix.Node = .label("ne", next: [.termination])
  private static let _negative_ug_or: PublicSuffix.Node = .label("or", next: [.termination])
  private static let _negative_ug_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_ug_sc: PublicSuffix.Node = .label("sc", next: [.termination])
  private static let _negative_ug: PublicSuffix.Node = .label("ug", next: [.termination, _negative_ug_ac, _negative_ug_blogspot, _negative_ug_co, _negative_ug_com, _negative_ug_go, _negative_ug_ne, _negative_ug_or, _negative_ug_org, _negative_ug_sc])
  private static let _negative_uk_ac: PublicSuffix.Node = .label("ac", next: [.termination])
  private static let _negative_uk_barsy: PublicSuffix.Node = .label("barsy", next: [.termination])
  private static let _negative_uk_co_adimo: PublicSuffix.Node = .label("adimo", next: [.termination])
  private static let _negative_uk_co_barsy: PublicSuffix.Node = .label("barsy", next: [.termination])
  private static let _negative_uk_co_barsyonline: PublicSuffix.Node = .label("barsyonline", next: [.termination])
  private static let _negative_uk_co_blogspot: PublicSuffix.Node = .label("blogspot", next: [.termination])
  private static let _negative_uk_co_bytemark_dh: PublicSuffix.Node = .label("dh", next: [.termination])
  private static let _negative_uk_co_bytemark_vm: PublicSuffix.Node = .label("vm", next: [.termination])
  private static let _negative_uk_co_bytemark: PublicSuffix.Node = .label("bytemark", next: [_negative_uk_co_bytemark_dh, _negative_uk_co_bytemark_vm])
  private static let _negative_uk_co_gwiddle: PublicSuffix.Node = .label("gwiddle", next: [.termination])
  private static let _negative_uk_co_layershift_j: PublicSuffix.Node = .label("j", next: [.termination])
  private static let _negative_uk_co_layershift: PublicSuffix.Node = .label("layershift", next: [_negative_uk_co_layershift_j])
  private static let _negative_uk_co_myspreadshop: PublicSuffix.Node = .label("myspreadshop", next: [.termination])
  private static let _negative_uk_co_nhHserv: PublicSuffix.Node = .label("nh-serv", next: [.termination])
  private static let _negative_uk_co_noHip: PublicSuffix.Node = .label("no-ip", next: [.termination])
  private static let _negative_uk_co_retrosnub_cust: PublicSuffix.Node = .label("cust", next: [.termination])
  private static let _negative_uk_co_retrosnub: PublicSuffix.Node = .label("retrosnub", next: [_negative_uk_co_retrosnub_cust])
  private static let _negative_uk_co_wellbeingzone: PublicSuffix.Node = .label("wellbeingzone", next: [.termination])
  private static let _negative_uk_co: PublicSuffix.Node = .label("co", next: [.termination, _negative_uk_co_adimo, _negative_uk_co_barsy, _negative_uk_co_barsyonline, _negative_uk_co_blogspot, _negative_uk_co_bytemark, _negative_uk_co_gwiddle, _negative_uk_co_layershift, _negative_uk_co_myspreadshop, _negative_uk_co_nhHserv, _negative_uk_co_noHip, _negative_uk_co_retrosnub, _negative_uk_co_wellbeingzone])
  private static let _negative_uk_conn: PublicSuffix.Node = .label("conn", next: [.termination])
  private static let _negative_uk_copro: PublicSuffix.Node = .label("copro", next: [.termination])
  private static let _negative_uk_gov_api: PublicSuffix.Node = .label("api", next: [.termination])
  private static let _negative_uk_gov_campaign: PublicSuffix.Node = .label("campaign", next: [.termination])
  private static let _negative_uk_gov_homeoffice: PublicSuffix.Node = .label("homeoffice", next: [.termination])
  private static let _negative_uk_gov_service: PublicSuffix.Node = .label("service", next: [.termination])
  private static let _negative_uk_gov: PublicSuffix.Node = .label("gov", next: [.termination, _negative_uk_gov_api, _negative_uk_gov_campaign, _negative_uk_gov_homeoffice, _negative_uk_gov_service])
  private static let _negative_uk_hosp: PublicSuffix.Node = .label("hosp", next: [.termination])
  private static let _negative_uk_independentHcommission: PublicSuffix.Node = .label("independent-commission", next: [.termination])
  private static let _negative_uk_independentHinquest: PublicSuffix.Node = .label("independent-inquest", next: [.termination])
  private static let _negative_uk_independentHinquiry: PublicSuffix.Node = .label("independent-inquiry", next: [.termination])
  private static let _negative_uk_independentHpanel: PublicSuffix.Node = .label("independent-panel", next: [.termination])
  private static let _negative_uk_independentHreview: PublicSuffix.Node = .label("independent-review", next: [.termination])
  private static let _negative_uk_ltd: PublicSuffix.Node = .label("ltd", next: [.termination])
  private static let _negative_uk_me: PublicSuffix.Node = .label("me", next: [.termination])
  private static let _negative_uk_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_uk_nhs: PublicSuffix.Node = .label("nhs", next: [.termination])
  private static let _negative_uk_org_affinitylottery: PublicSuffix.Node = .label("affinitylottery", next: [.termination])
  private static let _negative_uk_org_glug: PublicSuffix.Node = .label("glug", next: [.termination])
  private static let _negative_uk_org_lug: PublicSuffix.Node = .label("lug", next: [.termination])
  private static let _negative_uk_org_lugs: PublicSuffix.Node = .label("lugs", next: [.termination])
  private static let _negative_uk_org_raffleentry: PublicSuffix.Node = .label("raffleentry", next: [.termination])
  private static let _negative_uk_org_weeklylottery: PublicSuffix.Node = .label("weeklylottery", next: [.termination])
  private static let _negative_uk_org: PublicSuffix.Node = .label("org", next: [.termination, _negative_uk_org_affinitylottery, _negative_uk_org_glug, _negative_uk_org_lug, _negative_uk_org_lugs, _negative_uk_org_raffleentry, _negative_uk_org_weeklylottery])
  private static let _negative_uk_plc: PublicSuffix.Node = .label("plc", next: [.termination])
  private static let _negative_uk_police: PublicSuffix.Node = .label("police", next: [.termination])
  private static let _negative_uk_publicHinquiry: PublicSuffix.Node = .label("public-inquiry", next: [.termination])
  private static let _negative_uk_pymnt: PublicSuffix.Node = .label("pymnt", next: [.termination])
  private static let _negative_uk_royalHcommission: PublicSuffix.Node = .label("royal-commission", next: [.termination])
  private static let _negative_uk_sch: PublicSuffix.Node = .label("sch", next: [.any])
  private static let _negative_uk: PublicSuffix.Node = .label("uk", next: [.termination, _negative_uk_ac, _negative_uk_barsy, _negative_uk_co, _negative_uk_conn, _negative_uk_copro, _negative_uk_gov, _negative_uk_hosp, _negative_uk_independentHcommission, _negative_uk_independentHinquest, _negative_uk_independentHinquiry, _negative_uk_independentHpanel, _negative_uk_independentHreview, _negative_uk_ltd, _negative_uk_me, _negative_uk_net, _negative_uk_nhs, _negative_uk_org, _negative_uk_plc, _negative_uk_police, _negative_uk_publicHinquiry, _negative_uk_pymnt, _negative_uk_royalHcommission, _negative_uk_sch])
  private static let _negative_unicom: PublicSuffix.Node = .label("unicom", next: [.termination])
  private static let _negative_university: PublicSuffix.Node = .label("university", next: [.termination])
  private static let _negative_uno: PublicSuffix.Node = .label("uno", next: [.termination])
  private static let _negative_uol: PublicSuffix.Node = .label("uol", next: [.termination])
  private static let _negative_ups: PublicSuffix.Node = .label("ups", next: [.termination])
  private static let _negative_us_ak_cc: PublicSuffix.Node = .label("cc", next: [.termination])
  private static let _negative_us_ak_k12: PublicSuffix.Node = .label("k12", next: [.termination])
  private static let _negative_us_ak_lib: PublicSuffix.Node = .label("lib", next: [.termination])
  private static let _negative_us_ak: PublicSuffix.Node = .label("ak", next: [.termination, _negative_us_ak_cc, _negative_us_ak_k12, _negative_us_ak_lib])
  private static let _negative_us_al_cc: PublicSuffix.Node = .label("cc", next: [.termination])
  private static let _negative_us_al_k12: PublicSuffix.Node = .label("k12", next: [.termination])
  private static let _negative_us_al_lib: PublicSuffix.Node = .label("lib", next: [.termination])
  private static let _negative_us_al: PublicSuffix.Node = .label("al", next: [.termination, _negative_us_al_cc, _negative_us_al_k12, _negative_us_al_lib])
  private static let _negative_us_ar_cc: PublicSuffix.Node = .label("cc", next: [.termination])
  private static let _negative_us_ar_k12: PublicSuffix.Node = .label("k12", next: [.termination])
  private static let _negative_us_ar_lib: PublicSuffix.Node = .label("lib", next: [.termination])
  private static let _negative_us_ar: PublicSuffix.Node = .label("ar", next: [.termination, _negative_us_ar_cc, _negative_us_ar_k12, _negative_us_ar_lib])
  private static let _negative_us_as_cc: PublicSuffix.Node = .label("cc", next: [.termination])
  private static let _negative_us_as_k12: PublicSuffix.Node = .label("k12", next: [.termination])
  private static let _negative_us_as_lib: PublicSuffix.Node = .label("lib", next: [.termination])
  private static let _negative_us_as: PublicSuffix.Node = .label("as", next: [.termination, _negative_us_as_cc, _negative_us_as_k12, _negative_us_as_lib])
  private static let _negative_us_az_cc: PublicSuffix.Node = .label("cc", next: [.termination])
  private static let _negative_us_az_k12: PublicSuffix.Node = .label("k12", next: [.termination])
  private static let _negative_us_az_lib: PublicSuffix.Node = .label("lib", next: [.termination])
  private static let _negative_us_az: PublicSuffix.Node = .label("az", next: [.termination, _negative_us_az_cc, _negative_us_az_k12, _negative_us_az_lib])
  private static let _negative_us_ca_cc: PublicSuffix.Node = .label("cc", next: [.termination])
  private static let _negative_us_ca_k12: PublicSuffix.Node = .label("k12", next: [.termination])
  private static let _negative_us_ca_lib: PublicSuffix.Node = .label("lib", next: [.termination])
  private static let _negative_us_ca: PublicSuffix.Node = .label("ca", next: [.termination, _negative_us_ca_cc, _negative_us_ca_k12, _negative_us_ca_lib])
  private static let _negative_us_cloudns: PublicSuffix.Node = .label("cloudns", next: [.termination])
  private static let _negative_us_co_cc: PublicSuffix.Node = .label("cc", next: [.termination])
  private static let _negative_us_co_k12: PublicSuffix.Node = .label("k12", next: [.termination])
  private static let _negative_us_co_lib: PublicSuffix.Node = .label("lib", next: [.termination])
  private static let _negative_us_co: PublicSuffix.Node = .label("co", next: [.termination, _negative_us_co_cc, _negative_us_co_k12, _negative_us_co_lib])
  private static let _negative_us_ct_cc: PublicSuffix.Node = .label("cc", next: [.termination])
  private static let _negative_us_ct_k12: PublicSuffix.Node = .label("k12", next: [.termination])
  private static let _negative_us_ct_lib: PublicSuffix.Node = .label("lib", next: [.termination])
  private static let _negative_us_ct: PublicSuffix.Node = .label("ct", next: [.termination, _negative_us_ct_cc, _negative_us_ct_k12, _negative_us_ct_lib])
  private static let _negative_us_dc_cc: PublicSuffix.Node = .label("cc", next: [.termination])
  private static let _negative_us_dc_k12: PublicSuffix.Node = .label("k12", next: [.termination])
  private static let _negative_us_dc_lib: PublicSuffix.Node = .label("lib", next: [.termination])
  private static let _negative_us_dc: PublicSuffix.Node = .label("dc", next: [.termination, _negative_us_dc_cc, _negative_us_dc_k12, _negative_us_dc_lib])
  private static let _negative_us_de_cc: PublicSuffix.Node = .label("cc", next: [.termination])
  private static let _negative_us_de_k12: PublicSuffix.Node = .label("k12", next: [.termination])
  private static let _negative_us_de_lib: PublicSuffix.Node = .label("lib", next: [.termination])
  private static let _negative_us_de: PublicSuffix.Node = .label("de", next: [.termination, _negative_us_de_cc, _negative_us_de_k12, _negative_us_de_lib])
  private static let _negative_us_dni: PublicSuffix.Node = .label("dni", next: [.termination])
  private static let _negative_us_drud: PublicSuffix.Node = .label("drud", next: [.termination])
  private static let _negative_us_enscaled_phx: PublicSuffix.Node = .label("phx", next: [.termination])
  private static let _negative_us_enscaled: PublicSuffix.Node = .label("enscaled", next: [_negative_us_enscaled_phx])
  private static let _negative_us_fed: PublicSuffix.Node = .label("fed", next: [.termination])
  private static let _negative_us_fl_cc: PublicSuffix.Node = .label("cc", next: [.termination])
  private static let _negative_us_fl_k12: PublicSuffix.Node = .label("k12", next: [.termination])
  private static let _negative_us_fl_lib: PublicSuffix.Node = .label("lib", next: [.termination])
  private static let _negative_us_fl: PublicSuffix.Node = .label("fl", next: [.termination, _negative_us_fl_cc, _negative_us_fl_k12, _negative_us_fl_lib])
  private static let _negative_us_freeddns: PublicSuffix.Node = .label("freeddns", next: [.termination])
  private static let _negative_us_ga_cc: PublicSuffix.Node = .label("cc", next: [.termination])
  private static let _negative_us_ga_k12: PublicSuffix.Node = .label("k12", next: [.termination])
  private static let _negative_us_ga_lib: PublicSuffix.Node = .label("lib", next: [.termination])
  private static let _negative_us_ga: PublicSuffix.Node = .label("ga", next: [.termination, _negative_us_ga_cc, _negative_us_ga_k12, _negative_us_ga_lib])
  private static let _negative_us_golffan: PublicSuffix.Node = .label("golffan", next: [.termination])
  private static let _negative_us_graphox: PublicSuffix.Node = .label("graphox", next: [.termination])
  private static let _negative_us_gu_cc: PublicSuffix.Node = .label("cc", next: [.termination])
  private static let _negative_us_gu_k12: PublicSuffix.Node = .label("k12", next: [.termination])
  private static let _negative_us_gu_lib: PublicSuffix.Node = .label("lib", next: [.termination])
  private static let _negative_us_gu: PublicSuffix.Node = .label("gu", next: [.termination, _negative_us_gu_cc, _negative_us_gu_k12, _negative_us_gu_lib])
  private static let _negative_us_hi_cc: PublicSuffix.Node = .label("cc", next: [.termination])
  private static let _negative_us_hi_lib: PublicSuffix.Node = .label("lib", next: [.termination])
  private static let _negative_us_hi: PublicSuffix.Node = .label("hi", next: [.termination, _negative_us_hi_cc, _negative_us_hi_lib])
  private static let _negative_us_ia_cc: PublicSuffix.Node = .label("cc", next: [.termination])
  private static let _negative_us_ia_k12: PublicSuffix.Node = .label("k12", next: [.termination])
  private static let _negative_us_ia_lib: PublicSuffix.Node = .label("lib", next: [.termination])
  private static let _negative_us_ia: PublicSuffix.Node = .label("ia", next: [.termination, _negative_us_ia_cc, _negative_us_ia_k12, _negative_us_ia_lib])
  private static let _negative_us_id_cc: PublicSuffix.Node = .label("cc", next: [.termination])
  private static let _negative_us_id_k12: PublicSuffix.Node = .label("k12", next: [.termination])
  private static let _negative_us_id_lib: PublicSuffix.Node = .label("lib", next: [.termination])
  private static let _negative_us_id: PublicSuffix.Node = .label("id", next: [.termination, _negative_us_id_cc, _negative_us_id_k12, _negative_us_id_lib])
  private static let _negative_us_il_cc: PublicSuffix.Node = .label("cc", next: [.termination])
  private static let _negative_us_il_k12: PublicSuffix.Node = .label("k12", next: [.termination])
  private static let _negative_us_il_lib: PublicSuffix.Node = .label("lib", next: [.termination])
  private static let _negative_us_il: PublicSuffix.Node = .label("il", next: [.termination, _negative_us_il_cc, _negative_us_il_k12, _negative_us_il_lib])
  private static let _negative_us_in_cc: PublicSuffix.Node = .label("cc", next: [.termination])
  private static let _negative_us_in_k12: PublicSuffix.Node = .label("k12", next: [.termination])
  private static let _negative_us_in_lib: PublicSuffix.Node = .label("lib", next: [.termination])
  private static let _negative_us_in: PublicSuffix.Node = .label("in", next: [.termination, _negative_us_in_cc, _negative_us_in_k12, _negative_us_in_lib])
  private static let _negative_us_isHby: PublicSuffix.Node = .label("is-by", next: [.termination])
  private static let _negative_us_isa: PublicSuffix.Node = .label("isa", next: [.termination])
  private static let _negative_us_kids: PublicSuffix.Node = .label("kids", next: [.termination])
  private static let _negative_us_ks_cc: PublicSuffix.Node = .label("cc", next: [.termination])
  private static let _negative_us_ks_k12: PublicSuffix.Node = .label("k12", next: [.termination])
  private static let _negative_us_ks_lib: PublicSuffix.Node = .label("lib", next: [.termination])
  private static let _negative_us_ks: PublicSuffix.Node = .label("ks", next: [.termination, _negative_us_ks_cc, _negative_us_ks_k12, _negative_us_ks_lib])
  private static let _negative_us_ky_cc: PublicSuffix.Node = .label("cc", next: [.termination])
  private static let _negative_us_ky_k12: PublicSuffix.Node = .label("k12", next: [.termination])
  private static let _negative_us_ky_lib: PublicSuffix.Node = .label("lib", next: [.termination])
  private static let _negative_us_ky: PublicSuffix.Node = .label("ky", next: [.termination, _negative_us_ky_cc, _negative_us_ky_k12, _negative_us_ky_lib])
  private static let _negative_us_la_cc: PublicSuffix.Node = .label("cc", next: [.termination])
  private static let _negative_us_la_k12: PublicSuffix.Node = .label("k12", next: [.termination])
  private static let _negative_us_la_lib: PublicSuffix.Node = .label("lib", next: [.termination])
  private static let _negative_us_la: PublicSuffix.Node = .label("la", next: [.termination, _negative_us_la_cc, _negative_us_la_k12, _negative_us_la_lib])
  private static let _negative_us_landH4Hsale: PublicSuffix.Node = .label("land-4-sale", next: [.termination])
  private static let _negative_us_ma_cc: PublicSuffix.Node = .label("cc", next: [.termination])
  private static let _negative_us_ma_k12_chtr: PublicSuffix.Node = .label("chtr", next: [.termination])
  private static let _negative_us_ma_k12_paroch: PublicSuffix.Node = .label("paroch", next: [.termination])
  private static let _negative_us_ma_k12_pvt: PublicSuffix.Node = .label("pvt", next: [.termination])
  private static let _negative_us_ma_k12: PublicSuffix.Node = .label("k12", next: [.termination, _negative_us_ma_k12_chtr, _negative_us_ma_k12_paroch, _negative_us_ma_k12_pvt])
  private static let _negative_us_ma_lib: PublicSuffix.Node = .label("lib", next: [.termination])
  private static let _negative_us_ma: PublicSuffix.Node = .label("ma", next: [.termination, _negative_us_ma_cc, _negative_us_ma_k12, _negative_us_ma_lib])
  private static let _negative_us_md_cc: PublicSuffix.Node = .label("cc", next: [.termination])
  private static let _negative_us_md_k12: PublicSuffix.Node = .label("k12", next: [.termination])
  private static let _negative_us_md_lib: PublicSuffix.Node = .label("lib", next: [.termination])
  private static let _negative_us_md: PublicSuffix.Node = .label("md", next: [.termination, _negative_us_md_cc, _negative_us_md_k12, _negative_us_md_lib])
  private static let _negative_us_me_cc: PublicSuffix.Node = .label("cc", next: [.termination])
  private static let _negative_us_me_k12: PublicSuffix.Node = .label("k12", next: [.termination])
  private static let _negative_us_me_lib: PublicSuffix.Node = .label("lib", next: [.termination])
  private static let _negative_us_me: PublicSuffix.Node = .label("me", next: [.termination, _negative_us_me_cc, _negative_us_me_k12, _negative_us_me_lib])
  private static let _negative_us_mi_annHarbor: PublicSuffix.Node = .label("ann-arbor", next: [.termination])
  private static let _negative_us_mi_cc: PublicSuffix.Node = .label("cc", next: [.termination])
  private static let _negative_us_mi_cog: PublicSuffix.Node = .label("cog", next: [.termination])
  private static let _negative_us_mi_dst: PublicSuffix.Node = .label("dst", next: [.termination])
  private static let _negative_us_mi_eaton: PublicSuffix.Node = .label("eaton", next: [.termination])
  private static let _negative_us_mi_gen: PublicSuffix.Node = .label("gen", next: [.termination])
  private static let _negative_us_mi_k12: PublicSuffix.Node = .label("k12", next: [.termination])
  private static let _negative_us_mi_lib: PublicSuffix.Node = .label("lib", next: [.termination])
  private static let _negative_us_mi_mus: PublicSuffix.Node = .label("mus", next: [.termination])
  private static let _negative_us_mi_tec: PublicSuffix.Node = .label("tec", next: [.termination])
  private static let _negative_us_mi_washtenaw: PublicSuffix.Node = .label("washtenaw", next: [.termination])
  private static let _negative_us_mi: PublicSuffix.Node = .label("mi", next: [.termination, _negative_us_mi_annHarbor, _negative_us_mi_cc, _negative_us_mi_cog, _negative_us_mi_dst, _negative_us_mi_eaton, _negative_us_mi_gen, _negative_us_mi_k12, _negative_us_mi_lib, _negative_us_mi_mus, _negative_us_mi_tec, _negative_us_mi_washtenaw])
  private static let _negative_us_mircloud: PublicSuffix.Node = .label("mircloud", next: [.termination])
  private static let _negative_us_mn_cc: PublicSuffix.Node = .label("cc", next: [.termination])
  private static let _negative_us_mn_k12: PublicSuffix.Node = .label("k12", next: [.termination])
  private static let _negative_us_mn_lib: PublicSuffix.Node = .label("lib", next: [.termination])
  private static let _negative_us_mn: PublicSuffix.Node = .label("mn", next: [.termination, _negative_us_mn_cc, _negative_us_mn_k12, _negative_us_mn_lib])
  private static let _negative_us_mo_cc: PublicSuffix.Node = .label("cc", next: [.termination])
  private static let _negative_us_mo_k12: PublicSuffix.Node = .label("k12", next: [.termination])
  private static let _negative_us_mo_lib: PublicSuffix.Node = .label("lib", next: [.termination])
  private static let _negative_us_mo: PublicSuffix.Node = .label("mo", next: [.termination, _negative_us_mo_cc, _negative_us_mo_k12, _negative_us_mo_lib])
  private static let _negative_us_ms_cc: PublicSuffix.Node = .label("cc", next: [.termination])
  private static let _negative_us_ms_k12: PublicSuffix.Node = .label("k12", next: [.termination])
  private static let _negative_us_ms_lib: PublicSuffix.Node = .label("lib", next: [.termination])
  private static let _negative_us_ms: PublicSuffix.Node = .label("ms", next: [.termination, _negative_us_ms_cc, _negative_us_ms_k12, _negative_us_ms_lib])
  private static let _negative_us_mt_cc: PublicSuffix.Node = .label("cc", next: [.termination])
  private static let _negative_us_mt_k12: PublicSuffix.Node = .label("k12", next: [.termination])
  private static let _negative_us_mt_lib: PublicSuffix.Node = .label("lib", next: [.termination])
  private static let _negative_us_mt: PublicSuffix.Node = .label("mt", next: [.termination, _negative_us_mt_cc, _negative_us_mt_k12, _negative_us_mt_lib])
  private static let _negative_us_nc_cc: PublicSuffix.Node = .label("cc", next: [.termination])
  private static let _negative_us_nc_k12: PublicSuffix.Node = .label("k12", next: [.termination])
  private static let _negative_us_nc_lib: PublicSuffix.Node = .label("lib", next: [.termination])
  private static let _negative_us_nc: PublicSuffix.Node = .label("nc", next: [.termination, _negative_us_nc_cc, _negative_us_nc_k12, _negative_us_nc_lib])
  private static let _negative_us_nd_cc: PublicSuffix.Node = .label("cc", next: [.termination])
  private static let _negative_us_nd_lib: PublicSuffix.Node = .label("lib", next: [.termination])
  private static let _negative_us_nd: PublicSuffix.Node = .label("nd", next: [.termination, _negative_us_nd_cc, _negative_us_nd_lib])
  private static let _negative_us_ne_cc: PublicSuffix.Node = .label("cc", next: [.termination])
  private static let _negative_us_ne_k12: PublicSuffix.Node = .label("k12", next: [.termination])
  private static let _negative_us_ne_lib: PublicSuffix.Node = .label("lib", next: [.termination])
  private static let _negative_us_ne: PublicSuffix.Node = .label("ne", next: [.termination, _negative_us_ne_cc, _negative_us_ne_k12, _negative_us_ne_lib])
  private static let _negative_us_nh_cc: PublicSuffix.Node = .label("cc", next: [.termination])
  private static let _negative_us_nh_k12: PublicSuffix.Node = .label("k12", next: [.termination])
  private static let _negative_us_nh_lib: PublicSuffix.Node = .label("lib", next: [.termination])
  private static let _negative_us_nh: PublicSuffix.Node = .label("nh", next: [.termination, _negative_us_nh_cc, _negative_us_nh_k12, _negative_us_nh_lib])
  private static let _negative_us_nj_cc: PublicSuffix.Node = .label("cc", next: [.termination])
  private static let _negative_us_nj_k12: PublicSuffix.Node = .label("k12", next: [.termination])
  private static let _negative_us_nj_lib: PublicSuffix.Node = .label("lib", next: [.termination])
  private static let _negative_us_nj: PublicSuffix.Node = .label("nj", next: [.termination, _negative_us_nj_cc, _negative_us_nj_k12, _negative_us_nj_lib])
  private static let _negative_us_nm_cc: PublicSuffix.Node = .label("cc", next: [.termination])
  private static let _negative_us_nm_k12: PublicSuffix.Node = .label("k12", next: [.termination])
  private static let _negative_us_nm_lib: PublicSuffix.Node = .label("lib", next: [.termination])
  private static let _negative_us_nm: PublicSuffix.Node = .label("nm", next: [.termination, _negative_us_nm_cc, _negative_us_nm_k12, _negative_us_nm_lib])
  private static let _negative_us_noip: PublicSuffix.Node = .label("noip", next: [.termination])
  private static let _negative_us_nsn: PublicSuffix.Node = .label("nsn", next: [.termination])
  private static let _negative_us_nv_cc: PublicSuffix.Node = .label("cc", next: [.termination])
  private static let _negative_us_nv_k12: PublicSuffix.Node = .label("k12", next: [.termination])
  private static let _negative_us_nv_lib: PublicSuffix.Node = .label("lib", next: [.termination])
  private static let _negative_us_nv: PublicSuffix.Node = .label("nv", next: [.termination, _negative_us_nv_cc, _negative_us_nv_k12, _negative_us_nv_lib])
  private static let _negative_us_ny_cc: PublicSuffix.Node = .label("cc", next: [.termination])
  private static let _negative_us_ny_k12: PublicSuffix.Node = .label("k12", next: [.termination])
  private static let _negative_us_ny_lib: PublicSuffix.Node = .label("lib", next: [.termination])
  private static let _negative_us_ny: PublicSuffix.Node = .label("ny", next: [.termination, _negative_us_ny_cc, _negative_us_ny_k12, _negative_us_ny_lib])
  private static let _negative_us_oh_cc: PublicSuffix.Node = .label("cc", next: [.termination])
  private static let _negative_us_oh_k12: PublicSuffix.Node = .label("k12", next: [.termination])
  private static let _negative_us_oh_lib: PublicSuffix.Node = .label("lib", next: [.termination])
  private static let _negative_us_oh: PublicSuffix.Node = .label("oh", next: [.termination, _negative_us_oh_cc, _negative_us_oh_k12, _negative_us_oh_lib])
  private static let _negative_us_ok_cc: PublicSuffix.Node = .label("cc", next: [.termination])
  private static let _negative_us_ok_k12: PublicSuffix.Node = .label("k12", next: [.termination])
  private static let _negative_us_ok_lib: PublicSuffix.Node = .label("lib", next: [.termination])
  private static let _negative_us_ok: PublicSuffix.Node = .label("ok", next: [.termination, _negative_us_ok_cc, _negative_us_ok_k12, _negative_us_ok_lib])
  private static let _negative_us_or_cc: PublicSuffix.Node = .label("cc", next: [.termination])
  private static let _negative_us_or_k12: PublicSuffix.Node = .label("k12", next: [.termination])
  private static let _negative_us_or_lib: PublicSuffix.Node = .label("lib", next: [.termination])
  private static let _negative_us_or: PublicSuffix.Node = .label("or", next: [.termination, _negative_us_or_cc, _negative_us_or_k12, _negative_us_or_lib])
  private static let _negative_us_pa_cc: PublicSuffix.Node = .label("cc", next: [.termination])
  private static let _negative_us_pa_k12: PublicSuffix.Node = .label("k12", next: [.termination])
  private static let _negative_us_pa_lib: PublicSuffix.Node = .label("lib", next: [.termination])
  private static let _negative_us_pa: PublicSuffix.Node = .label("pa", next: [.termination, _negative_us_pa_cc, _negative_us_pa_k12, _negative_us_pa_lib])
  private static let _negative_us_platterp: PublicSuffix.Node = .label("platterp", next: [.termination])
  private static let _negative_us_pointto: PublicSuffix.Node = .label("pointto", next: [.termination])
  private static let _negative_us_pr_cc: PublicSuffix.Node = .label("cc", next: [.termination])
  private static let _negative_us_pr_k12: PublicSuffix.Node = .label("k12", next: [.termination])
  private static let _negative_us_pr_lib: PublicSuffix.Node = .label("lib", next: [.termination])
  private static let _negative_us_pr: PublicSuffix.Node = .label("pr", next: [.termination, _negative_us_pr_cc, _negative_us_pr_k12, _negative_us_pr_lib])
  private static let _negative_us_ri_cc: PublicSuffix.Node = .label("cc", next: [.termination])
  private static let _negative_us_ri_lib: PublicSuffix.Node = .label("lib", next: [.termination])
  private static let _negative_us_ri: PublicSuffix.Node = .label("ri", next: [.termination, _negative_us_ri_cc, _negative_us_ri_lib])
  private static let _negative_us_sc_cc: PublicSuffix.Node = .label("cc", next: [.termination])
  private static let _negative_us_sc_k12: PublicSuffix.Node = .label("k12", next: [.termination])
  private static let _negative_us_sc_lib: PublicSuffix.Node = .label("lib", next: [.termination])
  private static let _negative_us_sc: PublicSuffix.Node = .label("sc", next: [.termination, _negative_us_sc_cc, _negative_us_sc_k12, _negative_us_sc_lib])
  private static let _negative_us_sd_cc: PublicSuffix.Node = .label("cc", next: [.termination])
  private static let _negative_us_sd_lib: PublicSuffix.Node = .label("lib", next: [.termination])
  private static let _negative_us_sd: PublicSuffix.Node = .label("sd", next: [.termination, _negative_us_sd_cc, _negative_us_sd_lib])
  private static let _negative_us_stuffH4Hsale: PublicSuffix.Node = .label("stuff-4-sale", next: [.termination])
  private static let _negative_us_tn_cc: PublicSuffix.Node = .label("cc", next: [.termination])
  private static let _negative_us_tn_k12: PublicSuffix.Node = .label("k12", next: [.termination])
  private static let _negative_us_tn_lib: PublicSuffix.Node = .label("lib", next: [.termination])
  private static let _negative_us_tn: PublicSuffix.Node = .label("tn", next: [.termination, _negative_us_tn_cc, _negative_us_tn_k12, _negative_us_tn_lib])
  private static let _negative_us_tx_cc: PublicSuffix.Node = .label("cc", next: [.termination])
  private static let _negative_us_tx_k12: PublicSuffix.Node = .label("k12", next: [.termination])
  private static let _negative_us_tx_lib: PublicSuffix.Node = .label("lib", next: [.termination])
  private static let _negative_us_tx: PublicSuffix.Node = .label("tx", next: [.termination, _negative_us_tx_cc, _negative_us_tx_k12, _negative_us_tx_lib])
  private static let _negative_us_ut_cc: PublicSuffix.Node = .label("cc", next: [.termination])
  private static let _negative_us_ut_k12: PublicSuffix.Node = .label("k12", next: [.termination])
  private static let _negative_us_ut_lib: PublicSuffix.Node = .label("lib", next: [.termination])
  private static let _negative_us_ut: PublicSuffix.Node = .label("ut", next: [.termination, _negative_us_ut_cc, _negative_us_ut_k12, _negative_us_ut_lib])
  private static let _negative_us_va_cc: PublicSuffix.Node = .label("cc", next: [.termination])
  private static let _negative_us_va_k12: PublicSuffix.Node = .label("k12", next: [.termination])
  private static let _negative_us_va_lib: PublicSuffix.Node = .label("lib", next: [.termination])
  private static let _negative_us_va: PublicSuffix.Node = .label("va", next: [.termination, _negative_us_va_cc, _negative_us_va_k12, _negative_us_va_lib])
  private static let _negative_us_vi_cc: PublicSuffix.Node = .label("cc", next: [.termination])
  private static let _negative_us_vi_k12: PublicSuffix.Node = .label("k12", next: [.termination])
  private static let _negative_us_vi_lib: PublicSuffix.Node = .label("lib", next: [.termination])
  private static let _negative_us_vi: PublicSuffix.Node = .label("vi", next: [.termination, _negative_us_vi_cc, _negative_us_vi_k12, _negative_us_vi_lib])
  private static let _negative_us_vt_cc: PublicSuffix.Node = .label("cc", next: [.termination])
  private static let _negative_us_vt_k12: PublicSuffix.Node = .label("k12", next: [.termination])
  private static let _negative_us_vt_lib: PublicSuffix.Node = .label("lib", next: [.termination])
  private static let _negative_us_vt: PublicSuffix.Node = .label("vt", next: [.termination, _negative_us_vt_cc, _negative_us_vt_k12, _negative_us_vt_lib])
  private static let _negative_us_wa_cc: PublicSuffix.Node = .label("cc", next: [.termination])
  private static let _negative_us_wa_k12: PublicSuffix.Node = .label("k12", next: [.termination])
  private static let _negative_us_wa_lib: PublicSuffix.Node = .label("lib", next: [.termination])
  private static let _negative_us_wa: PublicSuffix.Node = .label("wa", next: [.termination, _negative_us_wa_cc, _negative_us_wa_k12, _negative_us_wa_lib])
  private static let _negative_us_wi_cc: PublicSuffix.Node = .label("cc", next: [.termination])
  private static let _negative_us_wi_k12: PublicSuffix.Node = .label("k12", next: [.termination])
  private static let _negative_us_wi_lib: PublicSuffix.Node = .label("lib", next: [.termination])
  private static let _negative_us_wi: PublicSuffix.Node = .label("wi", next: [.termination, _negative_us_wi_cc, _negative_us_wi_k12, _negative_us_wi_lib])
  private static let _negative_us_wv_cc: PublicSuffix.Node = .label("cc", next: [.termination])
  private static let _negative_us_wv: PublicSuffix.Node = .label("wv", next: [.termination, _negative_us_wv_cc])
  private static let _negative_us_wy_cc: PublicSuffix.Node = .label("cc", next: [.termination])
  private static let _negative_us_wy_k12: PublicSuffix.Node = .label("k12", next: [.termination])
  private static let _negative_us_wy_lib: PublicSuffix.Node = .label("lib", next: [.termination])
  private static let _negative_us_wy: PublicSuffix.Node = .label("wy", next: [.termination, _negative_us_wy_cc, _negative_us_wy_k12, _negative_us_wy_lib])
  private static let _negative_us: PublicSuffix.Node = .label("us", next: [.termination, _negative_us_ak, _negative_us_al, _negative_us_ar, _negative_us_as, _negative_us_az, _negative_us_ca, _negative_us_cloudns, _negative_us_co, _negative_us_ct, _negative_us_dc, _negative_us_de, _negative_us_dni, _negative_us_drud, _negative_us_enscaled, _negative_us_fed, _negative_us_fl, _negative_us_freeddns, _negative_us_ga, _negative_us_golffan, _negative_us_graphox, _negative_us_gu, _negative_us_hi, _negative_us_ia, _negative_us_id, _negative_us_il, _negative_us_in, _negative_us_isHby, _negative_us_isa, _negative_us_kids, _negative_us_ks, _negative_us_ky, _negative_us_la, _negative_us_landH4Hsale, _negative_us_ma, _negative_us_md, _negative_us_me, _negative_us_mi, _negative_us_mircloud, _negative_us_mn, _negative_us_mo, _negative_us_ms, _negative_us_mt, _negative_us_nc, _negative_us_nd, _negative_us_ne, _negative_us_nh, _negative_us_nj, _negative_us_nm, _negative_us_noip, _negative_us_nsn, _negative_us_nv, _negative_us_ny, _negative_us_oh, _negative_us_ok, _negative_us_or, _negative_us_pa, _negative_us_platterp, _negative_us_pointto, _negative_us_pr, _negative_us_ri, _negative_us_sc, _negative_us_sd, _negative_us_stuffH4Hsale, _negative_us_tn, _negative_us_tx, _negative_us_ut, _negative_us_va, _negative_us_vi, _negative_us_vt, _negative_us_wa, _negative_us_wi, _negative_us_wv, _negative_us_wy])
  private static let _negative_uy_com_blogspot: PublicSuffix.Node = .label("blogspot", next: [.termination])
  private static let _negative_uy_com: PublicSuffix.Node = .label("com", next: [.termination, _negative_uy_com_blogspot])
  private static let _negative_uy_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_uy_gub: PublicSuffix.Node = .label("gub", next: [.termination])
  private static let _negative_uy_mil: PublicSuffix.Node = .label("mil", next: [.termination])
  private static let _negative_uy_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_uy_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_uy: PublicSuffix.Node = .label("uy", next: [.termination, _negative_uy_com, _negative_uy_edu, _negative_uy_gub, _negative_uy_mil, _negative_uy_net, _negative_uy_org])
  private static let _negative_uz_co: PublicSuffix.Node = .label("co", next: [.termination])
  private static let _negative_uz_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_uz_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_uz_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_uz: PublicSuffix.Node = .label("uz", next: [.termination, _negative_uz_co, _negative_uz_com, _negative_uz_net, _negative_uz_org])
  private static let _negative_va: PublicSuffix.Node = .label("va", next: [.termination])
  private static let _negative_vacations: PublicSuffix.Node = .label("vacations", next: [.termination])
  private static let _negative_vana: PublicSuffix.Node = .label("vana", next: [.termination])
  private static let _negative_vanguard: PublicSuffix.Node = .label("vanguard", next: [.termination])
  private static let _negative_vc_0e: PublicSuffix.Node = .label("0e", next: [.termination])
  private static let _negative_vc_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_vc_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_vc_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_vc_gv_d: PublicSuffix.Node = .label("d", next: [.termination])
  private static let _negative_vc_gv: PublicSuffix.Node = .label("gv", next: [.termination, _negative_vc_gv_d])
  private static let _negative_vc_mil: PublicSuffix.Node = .label("mil", next: [.termination])
  private static let _negative_vc_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_vc_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_vc: PublicSuffix.Node = .label("vc", next: [.termination, _negative_vc_0e, _negative_vc_com, _negative_vc_edu, _negative_vc_gov, _negative_vc_gv, _negative_vc_mil, _negative_vc_net, _negative_vc_org])
  private static let _negative_ve_arts: PublicSuffix.Node = .label("arts", next: [.termination])
  private static let _negative_ve_bib: PublicSuffix.Node = .label("bib", next: [.termination])
  private static let _negative_ve_co: PublicSuffix.Node = .label("co", next: [.termination])
  private static let _negative_ve_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_ve_e12: PublicSuffix.Node = .label("e12", next: [.termination])
  private static let _negative_ve_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_ve_firm: PublicSuffix.Node = .label("firm", next: [.termination])
  private static let _negative_ve_gob: PublicSuffix.Node = .label("gob", next: [.termination])
  private static let _negative_ve_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_ve_info: PublicSuffix.Node = .label("info", next: [.termination])
  private static let _negative_ve_int: PublicSuffix.Node = .label("int", next: [.termination])
  private static let _negative_ve_mil: PublicSuffix.Node = .label("mil", next: [.termination])
  private static let _negative_ve_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_ve_nom: PublicSuffix.Node = .label("nom", next: [.termination])
  private static let _negative_ve_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_ve_rar: PublicSuffix.Node = .label("rar", next: [.termination])
  private static let _negative_ve_rec: PublicSuffix.Node = .label("rec", next: [.termination])
  private static let _negative_ve_store: PublicSuffix.Node = .label("store", next: [.termination])
  private static let _negative_ve_tec: PublicSuffix.Node = .label("tec", next: [.termination])
  private static let _negative_ve_web: PublicSuffix.Node = .label("web", next: [.termination])
  private static let _negative_ve: PublicSuffix.Node = .label("ve", next: [.termination, _negative_ve_arts, _negative_ve_bib, _negative_ve_co, _negative_ve_com, _negative_ve_e12, _negative_ve_edu, _negative_ve_firm, _negative_ve_gob, _negative_ve_gov, _negative_ve_info, _negative_ve_int, _negative_ve_mil, _negative_ve_net, _negative_ve_nom, _negative_ve_org, _negative_ve_rar, _negative_ve_rec, _negative_ve_store, _negative_ve_tec, _negative_ve_web])
  private static let _negative_vegas: PublicSuffix.Node = .label("vegas", next: [.termination])
  private static let _negative_ventures: PublicSuffix.Node = .label("ventures", next: [.termination])
  private static let _negative_verisign: PublicSuffix.Node = .label("verisign", next: [.termination])
  private static let _negative_vermögensberater: PublicSuffix.Node = .label("vermögensberater", next: [.termination])
  private static let _negative_vermögensberatung: PublicSuffix.Node = .label("vermögensberatung", next: [.termination])
  private static let _negative_versicherung: PublicSuffix.Node = .label("versicherung", next: [.termination])
  private static let _negative_vet: PublicSuffix.Node = .label("vet", next: [.termination])
  private static let _negative_vg_at: PublicSuffix.Node = .label("at", next: [.termination])
  private static let _negative_vg: PublicSuffix.Node = .label("vg", next: [.termination, _negative_vg_at])
  private static let _negative_vi_co: PublicSuffix.Node = .label("co", next: [.termination])
  private static let _negative_vi_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_vi_k12: PublicSuffix.Node = .label("k12", next: [.termination])
  private static let _negative_vi_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_vi_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_vi: PublicSuffix.Node = .label("vi", next: [.termination, _negative_vi_co, _negative_vi_com, _negative_vi_k12, _negative_vi_net, _negative_vi_org])
  private static let _negative_viajes: PublicSuffix.Node = .label("viajes", next: [.termination])
  private static let _negative_video: PublicSuffix.Node = .label("video", next: [.termination])
  private static let _negative_vig: PublicSuffix.Node = .label("vig", next: [.termination])
  private static let _negative_viking: PublicSuffix.Node = .label("viking", next: [.termination])
  private static let _negative_villas: PublicSuffix.Node = .label("villas", next: [.termination])
  private static let _negative_vin: PublicSuffix.Node = .label("vin", next: [.termination])
  private static let _negative_vip: PublicSuffix.Node = .label("vip", next: [.termination])
  private static let _negative_virgin: PublicSuffix.Node = .label("virgin", next: [.termination])
  private static let _negative_visa: PublicSuffix.Node = .label("visa", next: [.termination])
  private static let _negative_vision: PublicSuffix.Node = .label("vision", next: [.termination])
  private static let _negative_viva: PublicSuffix.Node = .label("viva", next: [.termination])
  private static let _negative_vivo: PublicSuffix.Node = .label("vivo", next: [.termination])
  private static let _negative_vlaanderen: PublicSuffix.Node = .label("vlaanderen", next: [.termination])
  private static let _negative_vn_ac: PublicSuffix.Node = .label("ac", next: [.termination])
  private static let _negative_vn_biz: PublicSuffix.Node = .label("biz", next: [.termination])
  private static let _negative_vn_blogspot: PublicSuffix.Node = .label("blogspot", next: [.termination])
  private static let _negative_vn_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_vn_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_vn_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_vn_health: PublicSuffix.Node = .label("health", next: [.termination])
  private static let _negative_vn_info: PublicSuffix.Node = .label("info", next: [.termination])
  private static let _negative_vn_int: PublicSuffix.Node = .label("int", next: [.termination])
  private static let _negative_vn_name: PublicSuffix.Node = .label("name", next: [.termination])
  private static let _negative_vn_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_vn_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_vn_pro: PublicSuffix.Node = .label("pro", next: [.termination])
  private static let _negative_vn: PublicSuffix.Node = .label("vn", next: [.termination, _negative_vn_ac, _negative_vn_biz, _negative_vn_blogspot, _negative_vn_com, _negative_vn_edu, _negative_vn_gov, _negative_vn_health, _negative_vn_info, _negative_vn_int, _negative_vn_name, _negative_vn_net, _negative_vn_org, _negative_vn_pro])
  private static let _negative_vodka: PublicSuffix.Node = .label("vodka", next: [.termination])
  private static let _negative_volkswagen: PublicSuffix.Node = .label("volkswagen", next: [.termination])
  private static let _negative_volvo: PublicSuffix.Node = .label("volvo", next: [.termination])
  private static let _negative_vote: PublicSuffix.Node = .label("vote", next: [.termination])
  private static let _negative_voting: PublicSuffix.Node = .label("voting", next: [.termination])
  private static let _negative_voto: PublicSuffix.Node = .label("voto", next: [.termination])
  private static let _negative_voyage: PublicSuffix.Node = .label("voyage", next: [.termination])
  private static let _negative_vu_blog: PublicSuffix.Node = .label("blog", next: [.termination])
  private static let _negative_vu_cn: PublicSuffix.Node = .label("cn", next: [.termination])
  private static let _negative_vu_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_vu_dev: PublicSuffix.Node = .label("dev", next: [.termination])
  private static let _negative_vu_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_vu_me: PublicSuffix.Node = .label("me", next: [.termination])
  private static let _negative_vu_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_vu_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_vu: PublicSuffix.Node = .label("vu", next: [.termination, _negative_vu_blog, _negative_vu_cn, _negative_vu_com, _negative_vu_dev, _negative_vu_edu, _negative_vu_me, _negative_vu_net, _negative_vu_org])
  private static let _negative_vuelos: PublicSuffix.Node = .label("vuelos", next: [.termination])
  private static let _negative_wales: PublicSuffix.Node = .label("wales", next: [.termination])
  private static let _negative_walmart: PublicSuffix.Node = .label("walmart", next: [.termination])
  private static let _negative_walter: PublicSuffix.Node = .label("walter", next: [.termination])
  private static let _negative_wang: PublicSuffix.Node = .label("wang", next: [.termination])
  private static let _negative_wanggou: PublicSuffix.Node = .label("wanggou", next: [.termination])
  private static let _negative_watch: PublicSuffix.Node = .label("watch", next: [.termination])
  private static let _negative_watches: PublicSuffix.Node = .label("watches", next: [.termination])
  private static let _negative_weather: PublicSuffix.Node = .label("weather", next: [.termination])
  private static let _negative_weatherchannel: PublicSuffix.Node = .label("weatherchannel", next: [.termination])
  private static let _negative_webcam: PublicSuffix.Node = .label("webcam", next: [.termination])
  private static let _negative_weber: PublicSuffix.Node = .label("weber", next: [.termination])
  private static let _negative_website_framer: PublicSuffix.Node = .label("framer", next: [.termination])
  private static let _negative_website: PublicSuffix.Node = .label("website", next: [.termination, _negative_website_framer])
  private static let _negative_wedding: PublicSuffix.Node = .label("wedding", next: [.termination])
  private static let _negative_weibo: PublicSuffix.Node = .label("weibo", next: [.termination])
  private static let _negative_weir: PublicSuffix.Node = .label("weir", next: [.termination])
  private static let _negative_wf_biz: PublicSuffix.Node = .label("biz", next: [.termination])
  private static let _negative_wf_sch: PublicSuffix.Node = .label("sch", next: [.termination])
  private static let _negative_wf: PublicSuffix.Node = .label("wf", next: [.termination, _negative_wf_biz, _negative_wf_sch])
  private static let _negative_whoswho: PublicSuffix.Node = .label("whoswho", next: [.termination])
  private static let _negative_wien: PublicSuffix.Node = .label("wien", next: [.termination])
  private static let _negative_wiki_framer: PublicSuffix.Node = .label("framer", next: [.termination])
  private static let _negative_wiki: PublicSuffix.Node = .label("wiki", next: [.termination, _negative_wiki_framer])
  private static let _negative_williamhill: PublicSuffix.Node = .label("williamhill", next: [.termination])
  private static let _negative_win_that: PublicSuffix.Node = .label("that", next: [.termination])
  private static let _negative_win: PublicSuffix.Node = .label("win", next: [.termination, _negative_win_that])
  private static let _negative_windows: PublicSuffix.Node = .label("windows", next: [.termination])
  private static let _negative_wine: PublicSuffix.Node = .label("wine", next: [.termination])
  private static let _negative_winners: PublicSuffix.Node = .label("winners", next: [.termination])
  private static let _negative_wme: PublicSuffix.Node = .label("wme", next: [.termination])
  private static let _negative_wolterskluwer: PublicSuffix.Node = .label("wolterskluwer", next: [.termination])
  private static let _negative_woodside: PublicSuffix.Node = .label("woodside", next: [.termination])
  private static let _negative_work_from: PublicSuffix.Node = .label("from", next: [.termination])
  private static let _negative_work_to: PublicSuffix.Node = .label("to", next: [.termination])
  private static let _negative_work: PublicSuffix.Node = .label("work", next: [.termination, _negative_work_from, _negative_work_to])
  private static let _negative_works: PublicSuffix.Node = .label("works", next: [.termination])
  private static let _negative_world: PublicSuffix.Node = .label("world", next: [.termination])
  private static let _negative_wow: PublicSuffix.Node = .label("wow", next: [.termination])
  private static let _negative_ws_advisor: PublicSuffix.Node = .label("advisor", next: [.any])
  private static let _negative_ws_cloud66: PublicSuffix.Node = .label("cloud66", next: [.termination])
  private static let _negative_ws_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_ws_dyndns: PublicSuffix.Node = .label("dyndns", next: [.termination])
  private static let _negative_ws_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_ws_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_ws_mypets: PublicSuffix.Node = .label("mypets", next: [.termination])
  private static let _negative_ws_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_ws_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_ws: PublicSuffix.Node = .label("ws", next: [.termination, _negative_ws_advisor, _negative_ws_cloud66, _negative_ws_com, _negative_ws_dyndns, _negative_ws_edu, _negative_ws_gov, _negative_ws_mypets, _negative_ws_net, _negative_ws_org])
  private static let _negative_wtc: PublicSuffix.Node = .label("wtc", next: [.termination])
  private static let _negative_wtf: PublicSuffix.Node = .label("wtf", next: [.termination])
  private static let _negative_xbox: PublicSuffix.Node = .label("xbox", next: [.termination])
  private static let _negative_xerox: PublicSuffix.Node = .label("xerox", next: [.termination])
  private static let _negative_xfinity: PublicSuffix.Node = .label("xfinity", next: [.termination])
  private static let _negative_xihuan: PublicSuffix.Node = .label("xihuan", next: [.termination])
  private static let _negative_xin: PublicSuffix.Node = .label("xin", next: [.termination])
  private static let _negative_xxx: PublicSuffix.Node = .label("xxx", next: [.termination])
  private static let _negative_xyz_blogsite: PublicSuffix.Node = .label("blogsite", next: [.termination])
  private static let _negative_xyz_crafting: PublicSuffix.Node = .label("crafting", next: [.termination])
  private static let _negative_xyz_localzone: PublicSuffix.Node = .label("localzone", next: [.termination])
  private static let _negative_xyz_telebit: PublicSuffix.Node = .label("telebit", next: [.any])
  private static let _negative_xyz_zapto: PublicSuffix.Node = .label("zapto", next: [.termination])
  private static let _negative_xyz: PublicSuffix.Node = .label("xyz", next: [.termination, _negative_xyz_blogsite, _negative_xyz_crafting, _negative_xyz_localzone, _negative_xyz_telebit, _negative_xyz_zapto])
  private static let _negative_yachts: PublicSuffix.Node = .label("yachts", next: [.termination])
  private static let _negative_yahoo: PublicSuffix.Node = .label("yahoo", next: [.termination])
  private static let _negative_yamaxun: PublicSuffix.Node = .label("yamaxun", next: [.termination])
  private static let _negative_yandex: PublicSuffix.Node = .label("yandex", next: [.termination])
  private static let _negative_ye_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_ye_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_ye_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_ye_mil: PublicSuffix.Node = .label("mil", next: [.termination])
  private static let _negative_ye_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_ye_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_ye: PublicSuffix.Node = .label("ye", next: [.termination, _negative_ye_com, _negative_ye_edu, _negative_ye_gov, _negative_ye_mil, _negative_ye_net, _negative_ye_org])
  private static let _negative_yodobashi: PublicSuffix.Node = .label("yodobashi", next: [.termination])
  private static let _negative_yoga: PublicSuffix.Node = .label("yoga", next: [.termination])
  private static let _negative_yokohama: PublicSuffix.Node = .label("yokohama", next: [.termination])
  private static let _negative_you: PublicSuffix.Node = .label("you", next: [.termination])
  private static let _negative_youtube: PublicSuffix.Node = .label("youtube", next: [.termination])
  private static let _negative_yt_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_yt: PublicSuffix.Node = .label("yt", next: [.termination, _negative_yt_org])
  private static let _negative_yun: PublicSuffix.Node = .label("yun", next: [.termination])
  private static let _negative_za_ac: PublicSuffix.Node = .label("ac", next: [.termination])
  private static let _negative_za_agric: PublicSuffix.Node = .label("agric", next: [.termination])
  private static let _negative_za_alt: PublicSuffix.Node = .label("alt", next: [.termination])
  private static let _negative_za_co_blogspot: PublicSuffix.Node = .label("blogspot", next: [.termination])
  private static let _negative_za_co: PublicSuffix.Node = .label("co", next: [.termination, _negative_za_co_blogspot])
  private static let _negative_za_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_za_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_za_grondar: PublicSuffix.Node = .label("grondar", next: [.termination])
  private static let _negative_za_law: PublicSuffix.Node = .label("law", next: [.termination])
  private static let _negative_za_mil: PublicSuffix.Node = .label("mil", next: [.termination])
  private static let _negative_za_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_za_ngo: PublicSuffix.Node = .label("ngo", next: [.termination])
  private static let _negative_za_nic: PublicSuffix.Node = .label("nic", next: [.termination])
  private static let _negative_za_nis: PublicSuffix.Node = .label("nis", next: [.termination])
  private static let _negative_za_nom: PublicSuffix.Node = .label("nom", next: [.termination])
  private static let _negative_za_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_za_school: PublicSuffix.Node = .label("school", next: [.termination])
  private static let _negative_za_tm: PublicSuffix.Node = .label("tm", next: [.termination])
  private static let _negative_za_web: PublicSuffix.Node = .label("web", next: [.termination])
  private static let _negative_za: PublicSuffix.Node = .label("za", next: [_negative_za_ac, _negative_za_agric, _negative_za_alt, _negative_za_co, _negative_za_edu, _negative_za_gov, _negative_za_grondar, _negative_za_law, _negative_za_mil, _negative_za_net, _negative_za_ngo, _negative_za_nic, _negative_za_nis, _negative_za_nom, _negative_za_org, _negative_za_school, _negative_za_tm, _negative_za_web])
  private static let _negative_zappos: PublicSuffix.Node = .label("zappos", next: [.termination])
  private static let _negative_zara: PublicSuffix.Node = .label("zara", next: [.termination])
  private static let _negative_zero: PublicSuffix.Node = .label("zero", next: [.termination])
  private static let _negative_zip: PublicSuffix.Node = .label("zip", next: [.termination])
  private static let _negative_zm_ac: PublicSuffix.Node = .label("ac", next: [.termination])
  private static let _negative_zm_biz: PublicSuffix.Node = .label("biz", next: [.termination])
  private static let _negative_zm_co: PublicSuffix.Node = .label("co", next: [.termination])
  private static let _negative_zm_com: PublicSuffix.Node = .label("com", next: [.termination])
  private static let _negative_zm_edu: PublicSuffix.Node = .label("edu", next: [.termination])
  private static let _negative_zm_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_zm_info: PublicSuffix.Node = .label("info", next: [.termination])
  private static let _negative_zm_mil: PublicSuffix.Node = .label("mil", next: [.termination])
  private static let _negative_zm_net: PublicSuffix.Node = .label("net", next: [.termination])
  private static let _negative_zm_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_zm_sch: PublicSuffix.Node = .label("sch", next: [.termination])
  private static let _negative_zm: PublicSuffix.Node = .label("zm", next: [.termination, _negative_zm_ac, _negative_zm_biz, _negative_zm_co, _negative_zm_com, _negative_zm_edu, _negative_zm_gov, _negative_zm_info, _negative_zm_mil, _negative_zm_net, _negative_zm_org, _negative_zm_sch])
  private static let _negative_zone_cloud66: PublicSuffix.Node = .label("cloud66", next: [.termination])
  private static let _negative_zone_hs: PublicSuffix.Node = .label("hs", next: [.termination])
  private static let _negative_zone_lima: PublicSuffix.Node = .label("lima", next: [.termination])
  private static let _negative_zone_triton: PublicSuffix.Node = .label("triton", next: [.any])
  private static let _negative_zone: PublicSuffix.Node = .label("zone", next: [.termination, _negative_zone_cloud66, _negative_zone_hs, _negative_zone_lima, _negative_zone_triton])
  private static let _negative_zuerich: PublicSuffix.Node = .label("zuerich", next: [.termination])
  private static let _negative_zw_ac: PublicSuffix.Node = .label("ac", next: [.termination])
  private static let _negative_zw_co: PublicSuffix.Node = .label("co", next: [.termination])
  private static let _negative_zw_gov: PublicSuffix.Node = .label("gov", next: [.termination])
  private static let _negative_zw_mil: PublicSuffix.Node = .label("mil", next: [.termination])
  private static let _negative_zw_org: PublicSuffix.Node = .label("org", next: [.termination])
  private static let _negative_zw: PublicSuffix.Node = .label("zw", next: [.termination, _negative_zw_ac, _negative_zw_co, _negative_zw_gov, _negative_zw_mil, _negative_zw_org])
  private static let _negative_ελ: PublicSuffix.Node = .label("ελ", next: [.termination])
  private static let _negative_ευ: PublicSuffix.Node = .label("ευ", next: [.termination])
  private static let _negative_бг: PublicSuffix.Node = .label("бг", next: [.termination])
  private static let _negative_бел: PublicSuffix.Node = .label("бел", next: [.termination])
  private static let _negative_дети: PublicSuffix.Node = .label("дети", next: [.termination])
  private static let _negative_ею: PublicSuffix.Node = .label("ею", next: [.termination])
  private static let _negative_католик: PublicSuffix.Node = .label("католик", next: [.termination])
  private static let _negative_ком: PublicSuffix.Node = .label("ком", next: [.termination])
  private static let _negative_мкд: PublicSuffix.Node = .label("мкд", next: [.termination])
  private static let _negative_мон: PublicSuffix.Node = .label("мон", next: [.termination])
  private static let _negative_москва: PublicSuffix.Node = .label("москва", next: [.termination])
  private static let _negative_онлайн: PublicSuffix.Node = .label("онлайн", next: [.termination])
  private static let _negative_орг: PublicSuffix.Node = .label("орг", next: [.termination])
  private static let _negative_рус_биз: PublicSuffix.Node = .label("биз", next: [.termination])
  private static let _negative_рус_ком: PublicSuffix.Node = .label("ком", next: [.termination])
  private static let _negative_рус_крым: PublicSuffix.Node = .label("крым", next: [.termination])
  private static let _negative_рус_мир: PublicSuffix.Node = .label("мир", next: [.termination])
  private static let _negative_рус_мск: PublicSuffix.Node = .label("мск", next: [.termination])
  private static let _negative_рус_орг: PublicSuffix.Node = .label("орг", next: [.termination])
  private static let _negative_рус_самара: PublicSuffix.Node = .label("самара", next: [.termination])
  private static let _negative_рус_сочи: PublicSuffix.Node = .label("сочи", next: [.termination])
  private static let _negative_рус_спб: PublicSuffix.Node = .label("спб", next: [.termination])
  private static let _negative_рус_я: PublicSuffix.Node = .label("я", next: [.termination])
  private static let _negative_рус: PublicSuffix.Node = .label("рус", next: [.termination, _negative_рус_биз, _negative_рус_ком, _negative_рус_крым, _negative_рус_мир, _negative_рус_мск, _negative_рус_орг, _negative_рус_самара, _negative_рус_сочи, _negative_рус_спб, _negative_рус_я])
  private static let _negative_рф: PublicSuffix.Node = .label("рф", next: [.termination])
  private static let _negative_сайт: PublicSuffix.Node = .label("сайт", next: [.termination])
  private static let _negative_срб_ак: PublicSuffix.Node = .label("ак", next: [.termination])
  private static let _negative_срб_обр: PublicSuffix.Node = .label("обр", next: [.termination])
  private static let _negative_срб_од: PublicSuffix.Node = .label("од", next: [.termination])
  private static let _negative_срб_орг: PublicSuffix.Node = .label("орг", next: [.termination])
  private static let _negative_срб_пр: PublicSuffix.Node = .label("пр", next: [.termination])
  private static let _negative_срб_упр: PublicSuffix.Node = .label("упр", next: [.termination])
  private static let _negative_срб: PublicSuffix.Node = .label("срб", next: [.termination, _negative_срб_ак, _negative_срб_обр, _negative_срб_од, _negative_срб_орг, _negative_срб_пр, _negative_срб_упр])
  private static let _negative_укр: PublicSuffix.Node = .label("укр", next: [.termination])
  private static let _negative_қаз: PublicSuffix.Node = .label("қаз", next: [.termination])
  private static let _negative_հայ: PublicSuffix.Node = .label("հայ", next: [.termination])
  private static let _negative_ישראל_אקדמיה: PublicSuffix.Node = .label("אקדמיה", next: [.termination])
  private static let _negative_ישראל_ישוב: PublicSuffix.Node = .label("ישוב", next: [.termination])
  private static let _negative_ישראל_ממשל: PublicSuffix.Node = .label("ממשל", next: [.termination])
  private static let _negative_ישראל_צהל: PublicSuffix.Node = .label("צהל", next: [.termination])
  private static let _negative_ישראל: PublicSuffix.Node = .label("ישראל", next: [.termination, _negative_ישראל_אקדמיה, _negative_ישראל_ישוב, _negative_ישראל_ממשל, _negative_ישראל_צהל])
  private static let _negative_קום: PublicSuffix.Node = .label("קום", next: [.termination])
  private static let _negative_ابوظبي: PublicSuffix.Node = .label("ابوظبي", next: [.termination])
  private static let _negative_اتصالات: PublicSuffix.Node = .label("اتصالات", next: [.termination])
  private static let _negative_ارامكو: PublicSuffix.Node = .label("ارامكو", next: [.termination])
  private static let _negative_الاردن: PublicSuffix.Node = .label("الاردن", next: [.termination])
  private static let _negative_البحرين: PublicSuffix.Node = .label("البحرين", next: [.termination])
  private static let _negative_الجزائر: PublicSuffix.Node = .label("الجزائر", next: [.termination])
  private static let _negative_السعودية: PublicSuffix.Node = .label("السعودية", next: [.termination])
  private static let _negative_السعوديه: PublicSuffix.Node = .label("السعوديه", next: [.termination])
  private static let _negative_السعودیة: PublicSuffix.Node = .label("السعودیة", next: [.termination])
  private static let _negative_السعودیۃ: PublicSuffix.Node = .label("السعودیۃ", next: [.termination])
  private static let _negative_العليان: PublicSuffix.Node = .label("العليان", next: [.termination])
  private static let _negative_المغرب: PublicSuffix.Node = .label("المغرب", next: [.termination])
  private static let _negative_اليمن: PublicSuffix.Node = .label("اليمن", next: [.termination])
  private static let _negative_امارات: PublicSuffix.Node = .label("امارات", next: [.termination])
  private static let _negative_ايران: PublicSuffix.Node = .label("ايران", next: [.termination])
  private static let _negative_ایران: PublicSuffix.Node = .label("ایران", next: [.termination])
  private static let _negative_بارت: PublicSuffix.Node = .label("بارت", next: [.termination])
  private static let _negative_بازار: PublicSuffix.Node = .label("بازار", next: [.termination])
  private static let _negative_بيتك: PublicSuffix.Node = .label("بيتك", next: [.termination])
  private static let _negative_بھارت: PublicSuffix.Node = .label("بھارت", next: [.termination])
  private static let _negative_تونس: PublicSuffix.Node = .label("تونس", next: [.termination])
  private static let _negative_سودان: PublicSuffix.Node = .label("سودان", next: [.termination])
  private static let _negative_سوريا: PublicSuffix.Node = .label("سوريا", next: [.termination])
  private static let _negative_سورية: PublicSuffix.Node = .label("سورية", next: [.termination])
  private static let _negative_شبكة: PublicSuffix.Node = .label("شبكة", next: [.termination])
  private static let _negative_عراق: PublicSuffix.Node = .label("عراق", next: [.termination])
  private static let _negative_عرب: PublicSuffix.Node = .label("عرب", next: [.termination])
  private static let _negative_عمان: PublicSuffix.Node = .label("عمان", next: [.termination])
  private static let _negative_فلسطين: PublicSuffix.Node = .label("فلسطين", next: [.termination])
  private static let _negative_قطر: PublicSuffix.Node = .label("قطر", next: [.termination])
  private static let _negative_كاثوليك: PublicSuffix.Node = .label("كاثوليك", next: [.termination])
  private static let _negative_كوم: PublicSuffix.Node = .label("كوم", next: [.termination])
  private static let _negative_مصر: PublicSuffix.Node = .label("مصر", next: [.termination])
  private static let _negative_مليسيا: PublicSuffix.Node = .label("مليسيا", next: [.termination])
  private static let _negative_موريتانيا: PublicSuffix.Node = .label("موريتانيا", next: [.termination])
  private static let _negative_موقع: PublicSuffix.Node = .label("موقع", next: [.termination])
  private static let _negative_همراه: PublicSuffix.Node = .label("همراه", next: [.termination])
  private static let _negative_پاكستان: PublicSuffix.Node = .label("پاكستان", next: [.termination])
  private static let _negative_پاکستان: PublicSuffix.Node = .label("پاکستان", next: [.termination])
  private static let _negative_ڀارت: PublicSuffix.Node = .label("ڀارت", next: [.termination])
  private static let _negative_कॉम: PublicSuffix.Node = .label("कॉम", next: [.termination])
  private static let _negative_नेट: PublicSuffix.Node = .label("नेट", next: [.termination])
  private static let _negative_भारत: PublicSuffix.Node = .label("भारत", next: [.termination])
  private static let _negative_भारतम्: PublicSuffix.Node = .label("भारतम्", next: [.termination])
  private static let _negative_भारोत: PublicSuffix.Node = .label("भारोत", next: [.termination])
  private static let _negative_संगठन: PublicSuffix.Node = .label("संगठन", next: [.termination])
  private static let _negative_বাংলা: PublicSuffix.Node = .label("বাংলা", next: [.termination])
  private static let _negative_ভারত: PublicSuffix.Node = .label("ভারত", next: [.termination])
  private static let _negative_ভাৰত: PublicSuffix.Node = .label("ভাৰত", next: [.termination])
  private static let _negative_ਭਾਰਤ: PublicSuffix.Node = .label("ਭਾਰਤ", next: [.termination])
  private static let _negative_ભારત: PublicSuffix.Node = .label("ભારત", next: [.termination])
  private static let _negative_ଭାରତ: PublicSuffix.Node = .label("ଭାରତ", next: [.termination])
  private static let _negative_இந்தியா: PublicSuffix.Node = .label("இந்தியா", next: [.termination])
  private static let _negative_இலங்கை: PublicSuffix.Node = .label("இலங்கை", next: [.termination])
  private static let _negative_சிங்கப்பூர்: PublicSuffix.Node = .label("சிங்கப்பூர்", next: [.termination])
  private static let _negative_భారత్: PublicSuffix.Node = .label("భారత్", next: [.termination])
  private static let _negative_ಭಾರತ: PublicSuffix.Node = .label("ಭಾರತ", next: [.termination])
  private static let _negative_ഭാരതം: PublicSuffix.Node = .label("ഭാരതം", next: [.termination])
  private static let _negative_ලංකා: PublicSuffix.Node = .label("ලංකා", next: [.termination])
  private static let _negative_คอม: PublicSuffix.Node = .label("คอม", next: [.termination])
  private static let _negative_ไทย_ทหาร: PublicSuffix.Node = .label("ทหาร", next: [.termination])
  private static let _negative_ไทย_ธุรกิจ: PublicSuffix.Node = .label("ธุรกิจ", next: [.termination])
  private static let _negative_ไทย_รัฐบาล: PublicSuffix.Node = .label("รัฐบาล", next: [.termination])
  private static let _negative_ไทย_ศึกษา: PublicSuffix.Node = .label("ศึกษา", next: [.termination])
  private static let _negative_ไทย_องค์กร: PublicSuffix.Node = .label("องค์กร", next: [.termination])
  private static let _negative_ไทย_เน็ต: PublicSuffix.Node = .label("เน็ต", next: [.termination])
  private static let _negative_ไทย: PublicSuffix.Node = .label("ไทย", next: [.termination, _negative_ไทย_ทหาร, _negative_ไทย_ธุรกิจ, _negative_ไทย_รัฐบาล, _negative_ไทย_ศึกษา, _negative_ไทย_องค์กร, _negative_ไทย_เน็ต])
  private static let _negative_ລາວ: PublicSuffix.Node = .label("ລາວ", next: [.termination])
  private static let _negative_გე: PublicSuffix.Node = .label("გე", next: [.termination])
  private static let _negative_みんな: PublicSuffix.Node = .label("みんな", next: [.termination])
  private static let _negative_アマゾン: PublicSuffix.Node = .label("アマゾン", next: [.termination])
  private static let _negative_クラウド: PublicSuffix.Node = .label("クラウド", next: [.termination])
  private static let _negative_グーグル: PublicSuffix.Node = .label("グーグル", next: [.termination])
  private static let _negative_コム: PublicSuffix.Node = .label("コム", next: [.termination])
  private static let _negative_ストア: PublicSuffix.Node = .label("ストア", next: [.termination])
  private static let _negative_セール: PublicSuffix.Node = .label("セール", next: [.termination])
  private static let _negative_ファッション: PublicSuffix.Node = .label("ファッション", next: [.termination])
  private static let _negative_ポイント: PublicSuffix.Node = .label("ポイント", next: [.termination])
  private static let _negative_世界: PublicSuffix.Node = .label("世界", next: [.termination])
  private static let _negative_中信: PublicSuffix.Node = .label("中信", next: [.termination])
  private static let _negative_中国: PublicSuffix.Node = .label("中国", next: [.termination])
  private static let _negative_中國: PublicSuffix.Node = .label("中國", next: [.termination])
  private static let _negative_中文网: PublicSuffix.Node = .label("中文网", next: [.termination])
  private static let _negative_亚马逊: PublicSuffix.Node = .label("亚马逊", next: [.termination])
  private static let _negative_企业: PublicSuffix.Node = .label("企业", next: [.termination])
  private static let _negative_佛山: PublicSuffix.Node = .label("佛山", next: [.termination])
  private static let _negative_信息: PublicSuffix.Node = .label("信息", next: [.termination])
  private static let _negative_健康: PublicSuffix.Node = .label("健康", next: [.termination])
  private static let _negative_八卦: PublicSuffix.Node = .label("八卦", next: [.termination])
  private static let _negative_公司: PublicSuffix.Node = .label("公司", next: [.termination])
  private static let _negative_公益: PublicSuffix.Node = .label("公益", next: [.termination])
  private static let _negative_台湾: PublicSuffix.Node = .label("台湾", next: [.termination])
  private static let _negative_台灣: PublicSuffix.Node = .label("台灣", next: [.termination])
  private static let _negative_商城: PublicSuffix.Node = .label("商城", next: [.termination])
  private static let _negative_商店: PublicSuffix.Node = .label("商店", next: [.termination])
  private static let _negative_商标: PublicSuffix.Node = .label("商标", next: [.termination])
  private static let _negative_嘉里: PublicSuffix.Node = .label("嘉里", next: [.termination])
  private static let _negative_嘉里大酒店: PublicSuffix.Node = .label("嘉里大酒店", next: [.termination])
  private static let _negative_在线: PublicSuffix.Node = .label("在线", next: [.termination])
  private static let _negative_大拿: PublicSuffix.Node = .label("大拿", next: [.termination])
  private static let _negative_天主教: PublicSuffix.Node = .label("天主教", next: [.termination])
  private static let _negative_娱乐: PublicSuffix.Node = .label("娱乐", next: [.termination])
  private static let _negative_家電: PublicSuffix.Node = .label("家電", next: [.termination])
  private static let _negative_广东: PublicSuffix.Node = .label("广东", next: [.termination])
  private static let _negative_微博: PublicSuffix.Node = .label("微博", next: [.termination])
  private static let _negative_慈善: PublicSuffix.Node = .label("慈善", next: [.termination])
  private static let _negative_我爱你: PublicSuffix.Node = .label("我爱你", next: [.termination])
  private static let _negative_手机: PublicSuffix.Node = .label("手机", next: [.termination])
  private static let _negative_招聘: PublicSuffix.Node = .label("招聘", next: [.termination])
  private static let _negative_政务: PublicSuffix.Node = .label("政务", next: [.termination])
  private static let _negative_政府: PublicSuffix.Node = .label("政府", next: [.termination])
  private static let _negative_新加坡: PublicSuffix.Node = .label("新加坡", next: [.termination])
  private static let _negative_新闻: PublicSuffix.Node = .label("新闻", next: [.termination])
  private static let _negative_时尚: PublicSuffix.Node = .label("时尚", next: [.termination])
  private static let _negative_書籍: PublicSuffix.Node = .label("書籍", next: [.termination])
  private static let _negative_机构: PublicSuffix.Node = .label("机构", next: [.termination])
  private static let _negative_淡马锡: PublicSuffix.Node = .label("淡马锡", next: [.termination])
  private static let _negative_游戏: PublicSuffix.Node = .label("游戏", next: [.termination])
  private static let _negative_澳門: PublicSuffix.Node = .label("澳門", next: [.termination])
  private static let _negative_澳门: PublicSuffix.Node = .label("澳门", next: [.termination])
  private static let _negative_点看: PublicSuffix.Node = .label("点看", next: [.termination])
  private static let _negative_移动: PublicSuffix.Node = .label("移动", next: [.termination])
  private static let _negative_组织机构: PublicSuffix.Node = .label("组织机构", next: [.termination])
  private static let _negative_网址: PublicSuffix.Node = .label("网址", next: [.termination])
  private static let _negative_网店: PublicSuffix.Node = .label("网店", next: [.termination])
  private static let _negative_网站: PublicSuffix.Node = .label("网站", next: [.termination])
  private static let _negative_网络: PublicSuffix.Node = .label("网络", next: [.termination])
  private static let _negative_联通: PublicSuffix.Node = .label("联通", next: [.termination])
  private static let _negative_臺灣: PublicSuffix.Node = .label("臺灣", next: [.termination])
  private static let _negative_诺基亚: PublicSuffix.Node = .label("诺基亚", next: [.termination])
  private static let _negative_谷歌: PublicSuffix.Node = .label("谷歌", next: [.termination])
  private static let _negative_购物: PublicSuffix.Node = .label("购物", next: [.termination])
  private static let _negative_通販: PublicSuffix.Node = .label("通販", next: [.termination])
  private static let _negative_集团: PublicSuffix.Node = .label("集团", next: [.termination])
  private static let _negative_電訊盈科: PublicSuffix.Node = .label("電訊盈科", next: [.termination])
  private static let _negative_飞利浦: PublicSuffix.Node = .label("飞利浦", next: [.termination])
  private static let _negative_食品: PublicSuffix.Node = .label("食品", next: [.termination])
  private static let _negative_餐厅: PublicSuffix.Node = .label("餐厅", next: [.termination])
  private static let _negative_香格里拉: PublicSuffix.Node = .label("香格里拉", next: [.termination])
  private static let _negative_香港_個人: PublicSuffix.Node = .label("個人", next: [.termination])
  private static let _negative_香港_公司: PublicSuffix.Node = .label("公司", next: [.termination])
  private static let _negative_香港_政府: PublicSuffix.Node = .label("政府", next: [.termination])
  private static let _negative_香港_教育: PublicSuffix.Node = .label("教育", next: [.termination])
  private static let _negative_香港_組織: PublicSuffix.Node = .label("組織", next: [.termination])
  private static let _negative_香港_網絡: PublicSuffix.Node = .label("網絡", next: [.termination])
  private static let _negative_香港: PublicSuffix.Node = .label("香港", next: [.termination, _negative_香港_個人, _negative_香港_公司, _negative_香港_政府, _negative_香港_教育, _negative_香港_組織, _negative_香港_網絡])
  private static let _negative_닷넷: PublicSuffix.Node = .label("닷넷", next: [.termination])
  private static let _negative_닷컴: PublicSuffix.Node = .label("닷컴", next: [.termination])
  private static let _negative_삼성: PublicSuffix.Node = .label("삼성", next: [.termination])
  private static let _negative_한국: PublicSuffix.Node = .label("한국", next: [.termination])
  public static let negativeList: PublicSuffix.Node.Set = [
    _negative_aaa,
    _negative_aarp,
    _negative_abarth,
    _negative_abb,
    _negative_abbott,
    _negative_abbvie,
    _negative_abc,
    _negative_able,
    _negative_abogado,
    _negative_abudhabi,
    _negative_ac,
    _negative_academy,
    _negative_accenture,
    _negative_accountant,
    _negative_accountants,
    _negative_aco,
    _negative_actor,
    _negative_ad,
    _negative_adac,
    _negative_ads,
    _negative_adult,
    _negative_ae,
    _negative_aeg,
    _negative_aero,
    _negative_aetna,
    _negative_af,
    _negative_afl,
    _negative_africa,
    _negative_ag,
    _negative_agakhan,
    _negative_agency,
    _negative_ai,
    _negative_aig,
    _negative_airbus,
    _negative_airforce,
    _negative_airtel,
    _negative_akdn,
    _negative_al,
    _negative_alfaromeo,
    _negative_alibaba,
    _negative_alipay,
    _negative_allfinanz,
    _negative_allstate,
    _negative_ally,
    _negative_alsace,
    _negative_alstom,
    _negative_am,
    _negative_amazon,
    _negative_americanexpress,
    _negative_americanfamily,
    _negative_amex,
    _negative_amfam,
    _negative_amica,
    _negative_amsterdam,
    _negative_analytics,
    _negative_android,
    _negative_anquan,
    _negative_anz,
    _negative_ao,
    _negative_aol,
    _negative_apartments,
    _negative_app,
    _negative_apple,
    _negative_aq,
    _negative_aquarelle,
    _negative_ar,
    _negative_arab,
    _negative_aramco,
    _negative_archi,
    _negative_army,
    _negative_arpa,
    _negative_art,
    _negative_arte,
    _negative_as,
    _negative_asda,
    _negative_asia,
    _negative_associates,
    _negative_at,
    _negative_athleta,
    _negative_attorney,
    _negative_au,
    _negative_auction,
    _negative_audi,
    _negative_audible,
    _negative_audio,
    _negative_auspost,
    _negative_author,
    _negative_auto,
    _negative_autos,
    _negative_avianca,
    _negative_aw,
    _negative_aws,
    _negative_ax,
    _negative_axa,
    _negative_az,
    _negative_azure,
    _negative_ba,
    _negative_baby,
    _negative_baidu,
    _negative_banamex,
    _negative_bananarepublic,
    _negative_band,
    _negative_bank,
    _negative_bar,
    _negative_barcelona,
    _negative_barclaycard,
    _negative_barclays,
    _negative_barefoot,
    _negative_bargains,
    _negative_baseball,
    _negative_basketball,
    _negative_bauhaus,
    _negative_bayern,
    _negative_bb,
    _negative_bbc,
    _negative_bbt,
    _negative_bbva,
    _negative_bcg,
    _negative_bcn,
    _negative_bd,
    _negative_be,
    _negative_beats,
    _negative_beauty,
    _negative_beer,
    _negative_bentley,
    _negative_berlin,
    _negative_best,
    _negative_bestbuy,
    _negative_bet,
    _negative_bf,
    _negative_bg,
    _negative_bh,
    _negative_bharti,
    _negative_bi,
    _negative_bible,
    _negative_bid,
    _negative_bike,
    _negative_bing,
    _negative_bingo,
    _negative_bio,
    _negative_biz,
    _negative_bj,
    _negative_black,
    _negative_blackfriday,
    _negative_blockbuster,
    _negative_blog,
    _negative_bloomberg,
    _negative_blue,
    _negative_bm,
    _negative_bms,
    _negative_bmw,
    _negative_bn,
    _negative_bnpparibas,
    _negative_bo,
    _negative_boats,
    _negative_boehringer,
    _negative_bofa,
    _negative_bom,
    _negative_bond,
    _negative_boo,
    _negative_book,
    _negative_booking,
    _negative_bosch,
    _negative_bostik,
    _negative_boston,
    _negative_bot,
    _negative_boutique,
    _negative_box,
    _negative_br,
    _negative_bradesco,
    _negative_bridgestone,
    _negative_broadway,
    _negative_broker,
    _negative_brother,
    _negative_brussels,
    _negative_bs,
    _negative_bt,
    _negative_bugatti,
    _negative_build,
    _negative_builders,
    _negative_business,
    _negative_buy,
    _negative_buzz,
    _negative_bv,
    _negative_bw,
    _negative_by,
    _negative_bz,
    _negative_bzh,
    _negative_ca,
    _negative_cab,
    _negative_cafe,
    _negative_cal,
    _negative_call,
    _negative_calvinklein,
    _negative_cam,
    _negative_camera,
    _negative_camp,
    _negative_cancerresearch,
    _negative_canon,
    _negative_capetown,
    _negative_capital,
    _negative_capitalone,
    _negative_car,
    _negative_caravan,
    _negative_cards,
    _negative_care,
    _negative_career,
    _negative_careers,
    _negative_cars,
    _negative_casa,
    _negative_case,
    _negative_cash,
    _negative_casino,
    _negative_cat,
    _negative_catering,
    _negative_catholic,
    _negative_cba,
    _negative_cbn,
    _negative_cbre,
    _negative_cbs,
    _negative_cc,
    _negative_cd,
    _negative_center,
    _negative_ceo,
    _negative_cern,
    _negative_cf,
    _negative_cfa,
    _negative_cfd,
    _negative_cg,
    _negative_ch,
    _negative_chanel,
    _negative_channel,
    _negative_charity,
    _negative_chase,
    _negative_chat,
    _negative_cheap,
    _negative_chintai,
    _negative_christmas,
    _negative_chrome,
    _negative_church,
    _negative_ci,
    _negative_cipriani,
    _negative_circle,
    _negative_cisco,
    _negative_citadel,
    _negative_citi,
    _negative_citic,
    _negative_city,
    _negative_cityeats,
    _negative_ck,
    _negative_cl,
    _negative_claims,
    _negative_cleaning,
    _negative_click,
    _negative_clinic,
    _negative_clinique,
    _negative_clothing,
    _negative_cloud,
    _negative_club,
    _negative_clubmed,
    _negative_cm,
    _negative_cn,
    _negative_co,
    _negative_coach,
    _negative_codes,
    _negative_coffee,
    _negative_college,
    _negative_cologne,
    _negative_com,
    _negative_comcast,
    _negative_commbank,
    _negative_community,
    _negative_company,
    _negative_compare,
    _negative_computer,
    _negative_comsec,
    _negative_condos,
    _negative_construction,
    _negative_consulting,
    _negative_contact,
    _negative_contractors,
    _negative_cooking,
    _negative_cookingchannel,
    _negative_cool,
    _negative_coop,
    _negative_corsica,
    _negative_country,
    _negative_coupon,
    _negative_coupons,
    _negative_courses,
    _negative_cpa,
    _negative_cr,
    _negative_credit,
    _negative_creditcard,
    _negative_creditunion,
    _negative_cricket,
    _negative_crown,
    _negative_crs,
    _negative_cruise,
    _negative_cruises,
    _negative_cu,
    _negative_cuisinella,
    _negative_cv,
    _negative_cw,
    _negative_cx,
    _negative_cy,
    _negative_cymru,
    _negative_cyou,
    _negative_cz,
    _negative_dabur,
    _negative_dad,
    _negative_dance,
    _negative_data,
    _negative_date,
    _negative_dating,
    _negative_datsun,
    _negative_day,
    _negative_dclk,
    _negative_dds,
    _negative_de,
    _negative_deal,
    _negative_dealer,
    _negative_deals,
    _negative_degree,
    _negative_delivery,
    _negative_dell,
    _negative_deloitte,
    _negative_delta,
    _negative_democrat,
    _negative_dental,
    _negative_dentist,
    _negative_desi,
    _negative_design,
    _negative_dev,
    _negative_dhl,
    _negative_diamonds,
    _negative_diet,
    _negative_digital,
    _negative_direct,
    _negative_directory,
    _negative_discount,
    _negative_discover,
    _negative_dish,
    _negative_diy,
    _negative_dj,
    _negative_dk,
    _negative_dm,
    _negative_dnp,
    _negative_do,
    _negative_docs,
    _negative_doctor,
    _negative_dog,
    _negative_domains,
    _negative_dot,
    _negative_download,
    _negative_drive,
    _negative_dtv,
    _negative_dubai,
    _negative_dunlop,
    _negative_dupont,
    _negative_durban,
    _negative_dvag,
    _negative_dvr,
    _negative_dz,
    _negative_earth,
    _negative_eat,
    _negative_ec,
    _negative_eco,
    _negative_edeka,
    _negative_edu,
    _negative_education,
    _negative_ee,
    _negative_eg,
    _negative_email,
    _negative_emerck,
    _negative_energy,
    _negative_engineer,
    _negative_engineering,
    _negative_enterprises,
    _negative_epson,
    _negative_equipment,
    _negative_er,
    _negative_ericsson,
    _negative_erni,
    _negative_es,
    _negative_esq,
    _negative_estate,
    _negative_et,
    _negative_etisalat,
    _negative_eu,
    _negative_eurovision,
    _negative_eus,
    _negative_events,
    _negative_exchange,
    _negative_expert,
    _negative_exposed,
    _negative_express,
    _negative_extraspace,
    _negative_fage,
    _negative_fail,
    _negative_fairwinds,
    _negative_faith,
    _negative_family,
    _negative_fan,
    _negative_fans,
    _negative_farm,
    _negative_farmers,
    _negative_fashion,
    _negative_fast,
    _negative_fedex,
    _negative_feedback,
    _negative_ferrari,
    _negative_ferrero,
    _negative_fi,
    _negative_fiat,
    _negative_fidelity,
    _negative_fido,
    _negative_film,
    _negative_final,
    _negative_finance,
    _negative_financial,
    _negative_fire,
    _negative_firestone,
    _negative_firmdale,
    _negative_fish,
    _negative_fishing,
    _negative_fit,
    _negative_fitness,
    _negative_fj,
    _negative_fk,
    _negative_flickr,
    _negative_flights,
    _negative_flir,
    _negative_florist,
    _negative_flowers,
    _negative_fly,
    _negative_fm,
    _negative_fo,
    _negative_foo,
    _negative_food,
    _negative_foodnetwork,
    _negative_football,
    _negative_ford,
    _negative_forex,
    _negative_forsale,
    _negative_forum,
    _negative_foundation,
    _negative_fox,
    _negative_fr,
    _negative_free,
    _negative_fresenius,
    _negative_frl,
    _negative_frogans,
    _negative_frontdoor,
    _negative_frontier,
    _negative_ftr,
    _negative_fujitsu,
    _negative_fun,
    _negative_fund,
    _negative_furniture,
    _negative_futbol,
    _negative_fyi,
    _negative_ga,
    _negative_gal,
    _negative_gallery,
    _negative_gallo,
    _negative_gallup,
    _negative_game,
    _negative_games,
    _negative_gap,
    _negative_garden,
    _negative_gay,
    _negative_gb,
    _negative_gbiz,
    _negative_gd,
    _negative_gdn,
    _negative_ge,
    _negative_gea,
    _negative_gent,
    _negative_genting,
    _negative_george,
    _negative_gf,
    _negative_gg,
    _negative_ggee,
    _negative_gh,
    _negative_gi,
    _negative_gift,
    _negative_gifts,
    _negative_gives,
    _negative_giving,
    _negative_gl,
    _negative_glass,
    _negative_gle,
    _negative_global,
    _negative_globo,
    _negative_gm,
    _negative_gmail,
    _negative_gmbh,
    _negative_gmo,
    _negative_gmx,
    _negative_gn,
    _negative_godaddy,
    _negative_gold,
    _negative_goldpoint,
    _negative_golf,
    _negative_goo,
    _negative_goodyear,
    _negative_goog,
    _negative_google,
    _negative_gop,
    _negative_got,
    _negative_gov,
    _negative_gp,
    _negative_gq,
    _negative_gr,
    _negative_grainger,
    _negative_graphics,
    _negative_gratis,
    _negative_green,
    _negative_gripe,
    _negative_grocery,
    _negative_group,
    _negative_gs,
    _negative_gt,
    _negative_gu,
    _negative_guardian,
    _negative_gucci,
    _negative_guge,
    _negative_guide,
    _negative_guitars,
    _negative_guru,
    _negative_gw,
    _negative_gy,
    _negative_hair,
    _negative_hamburg,
    _negative_hangout,
    _negative_haus,
    _negative_hbo,
    _negative_hdfc,
    _negative_hdfcbank,
    _negative_health,
    _negative_healthcare,
    _negative_help,
    _negative_helsinki,
    _negative_here,
    _negative_hermes,
    _negative_hgtv,
    _negative_hiphop,
    _negative_hisamitsu,
    _negative_hitachi,
    _negative_hiv,
    _negative_hk,
    _negative_hkt,
    _negative_hm,
    _negative_hn,
    _negative_hockey,
    _negative_holdings,
    _negative_holiday,
    _negative_homedepot,
    _negative_homegoods,
    _negative_homes,
    _negative_homesense,
    _negative_honda,
    _negative_horse,
    _negative_hospital,
    _negative_host,
    _negative_hosting,
    _negative_hot,
    _negative_hoteles,
    _negative_hotels,
    _negative_hotmail,
    _negative_house,
    _negative_how,
    _negative_hr,
    _negative_hsbc,
    _negative_ht,
    _negative_hu,
    _negative_hughes,
    _negative_hyatt,
    _negative_hyundai,
    _negative_ibm,
    _negative_icbc,
    _negative_ice,
    _negative_icu,
    _negative_id,
    _negative_ie,
    _negative_ieee,
    _negative_ifm,
    _negative_ikano,
    _negative_il,
    _negative_im,
    _negative_imamat,
    _negative_imdb,
    _negative_immo,
    _negative_immobilien,
    _negative_in,
    _negative_inc,
    _negative_industries,
    _negative_infiniti,
    _negative_info,
    _negative_ing,
    _negative_ink,
    _negative_institute,
    _negative_insurance,
    _negative_insure,
    _negative_int,
    _negative_international,
    _negative_intuit,
    _negative_investments,
    _negative_io,
    _negative_ipiranga,
    _negative_iq,
    _negative_ir,
    _negative_irish,
    _negative_is,
    _negative_ismaili,
    _negative_ist,
    _negative_istanbul,
    _negative_it,
    _negative_itau,
    _negative_itv,
    _negative_jaguar,
    _negative_java,
    _negative_jcb,
    _negative_je,
    _negative_jeep,
    _negative_jetzt,
    _negative_jewelry,
    _negative_jio,
    _negative_jll,
    _negative_jm,
    _negative_jmp,
    _negative_jnj,
    _negative_jo,
    _negative_jobs,
    _negative_joburg,
    _negative_jot,
    _negative_joy,
    _negative_jp,
    _negative_jpmorgan,
    _negative_jprs,
    _negative_juegos,
    _negative_juniper,
    _negative_kaufen,
    _negative_kddi,
    _negative_ke,
    _negative_kerryhotels,
    _negative_kerrylogistics,
    _negative_kerryproperties,
    _negative_kfh,
    _negative_kg,
    _negative_kh,
    _negative_ki,
    _negative_kia,
    _negative_kids,
    _negative_kim,
    _negative_kinder,
    _negative_kindle,
    _negative_kitchen,
    _negative_kiwi,
    _negative_km,
    _negative_kn,
    _negative_koeln,
    _negative_komatsu,
    _negative_kosher,
    _negative_kp,
    _negative_kpmg,
    _negative_kpn,
    _negative_kr,
    _negative_krd,
    _negative_kred,
    _negative_kuokgroup,
    _negative_kw,
    _negative_ky,
    _negative_kyoto,
    _negative_kz,
    _negative_la,
    _negative_lacaixa,
    _negative_lamborghini,
    _negative_lamer,
    _negative_lancaster,
    _negative_lancia,
    _negative_land,
    _negative_landrover,
    _negative_lanxess,
    _negative_lasalle,
    _negative_lat,
    _negative_latino,
    _negative_latrobe,
    _negative_law,
    _negative_lawyer,
    _negative_lb,
    _negative_lc,
    _negative_lds,
    _negative_lease,
    _negative_leclerc,
    _negative_lefrak,
    _negative_legal,
    _negative_lego,
    _negative_lexus,
    _negative_lgbt,
    _negative_li,
    _negative_lidl,
    _negative_life,
    _negative_lifeinsurance,
    _negative_lifestyle,
    _negative_lighting,
    _negative_like,
    _negative_lilly,
    _negative_limited,
    _negative_limo,
    _negative_lincoln,
    _negative_linde,
    _negative_link,
    _negative_lipsy,
    _negative_live,
    _negative_living,
    _negative_lk,
    _negative_llc,
    _negative_llp,
    _negative_loan,
    _negative_loans,
    _negative_locker,
    _negative_locus,
    _negative_loft,
    _negative_lol,
    _negative_london,
    _negative_lotte,
    _negative_lotto,
    _negative_love,
    _negative_lpl,
    _negative_lplfinancial,
    _negative_lr,
    _negative_ls,
    _negative_lt,
    _negative_ltd,
    _negative_ltda,
    _negative_lu,
    _negative_lundbeck,
    _negative_luxe,
    _negative_luxury,
    _negative_lv,
    _negative_ly,
    _negative_ma,
    _negative_macys,
    _negative_madrid,
    _negative_maif,
    _negative_maison,
    _negative_makeup,
    _negative_man,
    _negative_management,
    _negative_mango,
    _negative_map,
    _negative_market,
    _negative_marketing,
    _negative_markets,
    _negative_marriott,
    _negative_marshalls,
    _negative_maserati,
    _negative_mattel,
    _negative_mba,
    _negative_mc,
    _negative_mckinsey,
    _negative_md,
    _negative_me,
    _negative_med,
    _negative_media,
    _negative_meet,
    _negative_melbourne,
    _negative_meme,
    _negative_memorial,
    _negative_men,
    _negative_menu,
    _negative_merckmsd,
    _negative_mg,
    _negative_mh,
    _negative_miami,
    _negative_microsoft,
    _negative_mil,
    _negative_mini,
    _negative_mint,
    _negative_mit,
    _negative_mitsubishi,
    _negative_mk,
    _negative_ml,
    _negative_mlb,
    _negative_mls,
    _negative_mm,
    _negative_mma,
    _negative_mn,
    _negative_mo,
    _negative_mobi,
    _negative_mobile,
    _negative_moda,
    _negative_moe,
    _negative_moi,
    _negative_mom,
    _negative_monash,
    _negative_money,
    _negative_monster,
    _negative_mormon,
    _negative_mortgage,
    _negative_moscow,
    _negative_moto,
    _negative_motorcycles,
    _negative_mov,
    _negative_movie,
    _negative_mp,
    _negative_mq,
    _negative_mr,
    _negative_ms,
    _negative_msd,
    _negative_mt,
    _negative_mtn,
    _negative_mtr,
    _negative_mu,
    _negative_museum,
    _negative_music,
    _negative_mutual,
    _negative_mv,
    _negative_mw,
    _negative_mx,
    _negative_my,
    _negative_mz,
    _negative_na,
    _negative_nab,
    _negative_nagoya,
    _negative_name,
    _negative_natura,
    _negative_navy,
    _negative_nba,
    _negative_nc,
    _negative_ne,
    _negative_nec,
    _negative_net,
    _negative_netbank,
    _negative_netflix,
    _negative_network,
    _negative_neustar,
    _negative_new,
    _negative_news,
    _negative_next,
    _negative_nextdirect,
    _negative_nexus,
    _negative_nf,
    _negative_nfl,
    _negative_ng,
    _negative_ngo,
    _negative_nhk,
    _negative_ni,
    _negative_nico,
    _negative_nike,
    _negative_nikon,
    _negative_ninja,
    _negative_nissan,
    _negative_nissay,
    _negative_nl,
    _negative_no,
    _negative_nokia,
    _negative_northwesternmutual,
    _negative_norton,
    _negative_now,
    _negative_nowruz,
    _negative_nowtv,
    _negative_np,
    _negative_nr,
    _negative_nra,
    _negative_nrw,
    _negative_ntt,
    _negative_nu,
    _negative_nyc,
    _negative_nz,
    _negative_obi,
    _negative_observer,
    _negative_office,
    _negative_okinawa,
    _negative_olayan,
    _negative_olayangroup,
    _negative_oldnavy,
    _negative_ollo,
    _negative_om,
    _negative_omega,
    _negative_one,
    _negative_ong,
    _negative_onion,
    _negative_onl,
    _negative_online,
    _negative_ooo,
    _negative_open,
    _negative_oracle,
    _negative_orange,
    _negative_org,
    _negative_organic,
    _negative_origins,
    _negative_osaka,
    _negative_otsuka,
    _negative_ott,
    _negative_ovh,
    _negative_pa,
    _negative_page,
    _negative_panasonic,
    _negative_paris,
    _negative_pars,
    _negative_partners,
    _negative_parts,
    _negative_party,
    _negative_passagens,
    _negative_pay,
    _negative_pccw,
    _negative_pe,
    _negative_pet,
    _negative_pf,
    _negative_pfizer,
    _negative_pg,
    _negative_ph,
    _negative_pharmacy,
    _negative_phd,
    _negative_philips,
    _negative_phone,
    _negative_photo,
    _negative_photography,
    _negative_photos,
    _negative_physio,
    _negative_pics,
    _negative_pictet,
    _negative_pictures,
    _negative_pid,
    _negative_pin,
    _negative_ping,
    _negative_pink,
    _negative_pioneer,
    _negative_pizza,
    _negative_pk,
    _negative_pl,
    _negative_place,
    _negative_play,
    _negative_playstation,
    _negative_plumbing,
    _negative_plus,
    _negative_pm,
    _negative_pn,
    _negative_pnc,
    _negative_pohl,
    _negative_poker,
    _negative_politie,
    _negative_porn,
    _negative_post,
    _negative_pr,
    _negative_pramerica,
    _negative_praxi,
    _negative_press,
    _negative_prime,
    _negative_pro,
    _negative_prod,
    _negative_productions,
    _negative_prof,
    _negative_progressive,
    _negative_promo,
    _negative_properties,
    _negative_property,
    _negative_protection,
    _negative_pru,
    _negative_prudential,
    _negative_ps,
    _negative_pt,
    _negative_pub,
    _negative_pw,
    _negative_pwc,
    _negative_py,
    _negative_qa,
    _negative_qpon,
    _negative_quebec,
    _negative_quest,
    _negative_racing,
    _negative_radio,
    _negative_re,
    _negative_read,
    _negative_realestate,
    _negative_realtor,
    _negative_realty,
    _negative_recipes,
    _negative_red,
    _negative_redstone,
    _negative_redumbrella,
    _negative_rehab,
    _negative_reise,
    _negative_reisen,
    _negative_reit,
    _negative_reliance,
    _negative_ren,
    _negative_rent,
    _negative_rentals,
    _negative_repair,
    _negative_report,
    _negative_republican,
    _negative_rest,
    _negative_restaurant,
    _negative_review,
    _negative_reviews,
    _negative_rexroth,
    _negative_rich,
    _negative_richardli,
    _negative_ricoh,
    _negative_ril,
    _negative_rio,
    _negative_rip,
    _negative_ro,
    _negative_rocher,
    _negative_rocks,
    _negative_rodeo,
    _negative_rogers,
    _negative_room,
    _negative_rs,
    _negative_rsvp,
    _negative_ru,
    _negative_rugby,
    _negative_ruhr,
    _negative_run,
    _negative_rw,
    _negative_rwe,
    _negative_ryukyu,
    _negative_sa,
    _negative_saarland,
    _negative_safe,
    _negative_safety,
    _negative_sakura,
    _negative_sale,
    _negative_salon,
    _negative_samsclub,
    _negative_samsung,
    _negative_sandvik,
    _negative_sandvikcoromant,
    _negative_sanofi,
    _negative_sap,
    _negative_sarl,
    _negative_sas,
    _negative_save,
    _negative_saxo,
    _negative_sb,
    _negative_sbi,
    _negative_sbs,
    _negative_sc,
    _negative_sca,
    _negative_scb,
    _negative_schaeffler,
    _negative_schmidt,
    _negative_scholarships,
    _negative_school,
    _negative_schule,
    _negative_schwarz,
    _negative_science,
    _negative_scot,
    _negative_sd,
    _negative_se,
    _negative_search,
    _negative_seat,
    _negative_secure,
    _negative_security,
    _negative_seek,
    _negative_select,
    _negative_sener,
    _negative_services,
    _negative_ses,
    _negative_seven,
    _negative_sew,
    _negative_sex,
    _negative_sexy,
    _negative_sfr,
    _negative_sg,
    _negative_sh,
    _negative_shangrila,
    _negative_sharp,
    _negative_shaw,
    _negative_shell,
    _negative_shia,
    _negative_shiksha,
    _negative_shoes,
    _negative_shop,
    _negative_shopping,
    _negative_shouji,
    _negative_show,
    _negative_showtime,
    _negative_si,
    _negative_silk,
    _negative_sina,
    _negative_singles,
    _negative_site,
    _negative_sj,
    _negative_sk,
    _negative_ski,
    _negative_skin,
    _negative_sky,
    _negative_skype,
    _negative_sl,
    _negative_sling,
    _negative_sm,
    _negative_smart,
    _negative_smile,
    _negative_sn,
    _negative_sncf,
    _negative_so,
    _negative_soccer,
    _negative_social,
    _negative_softbank,
    _negative_software,
    _negative_sohu,
    _negative_solar,
    _negative_solutions,
    _negative_song,
    _negative_sony,
    _negative_soy,
    _negative_spa,
    _negative_space,
    _negative_sport,
    _negative_spot,
    _negative_sr,
    _negative_srl,
    _negative_ss,
    _negative_st,
    _negative_stada,
    _negative_staples,
    _negative_star,
    _negative_statebank,
    _negative_statefarm,
    _negative_stc,
    _negative_stcgroup,
    _negative_stockholm,
    _negative_storage,
    _negative_store,
    _negative_stream,
    _negative_studio,
    _negative_study,
    _negative_style,
    _negative_su,
    _negative_sucks,
    _negative_supplies,
    _negative_supply,
    _negative_support,
    _negative_surf,
    _negative_surgery,
    _negative_suzuki,
    _negative_sv,
    _negative_swatch,
    _negative_swiss,
    _negative_sx,
    _negative_sy,
    _negative_sydney,
    _negative_systems,
    _negative_sz,
    _negative_tab,
    _negative_taipei,
    _negative_talk,
    _negative_taobao,
    _negative_target,
    _negative_tatamotors,
    _negative_tatar,
    _negative_tattoo,
    _negative_tax,
    _negative_taxi,
    _negative_tc,
    _negative_tci,
    _negative_td,
    _negative_tdk,
    _negative_team,
    _negative_tech,
    _negative_technology,
    _negative_tel,
    _negative_temasek,
    _negative_tennis,
    _negative_teva,
    _negative_tf,
    _negative_tg,
    _negative_th,
    _negative_thd,
    _negative_theater,
    _negative_theatre,
    _negative_tiaa,
    _negative_tickets,
    _negative_tienda,
    _negative_tiffany,
    _negative_tips,
    _negative_tires,
    _negative_tirol,
    _negative_tj,
    _negative_tjmaxx,
    _negative_tjx,
    _negative_tk,
    _negative_tkmaxx,
    _negative_tl,
    _negative_tm,
    _negative_tmall,
    _negative_tn,
    _negative_to,
    _negative_today,
    _negative_tokyo,
    _negative_tools,
    _negative_top,
    _negative_toray,
    _negative_toshiba,
    _negative_total,
    _negative_tours,
    _negative_town,
    _negative_toyota,
    _negative_toys,
    _negative_tr,
    _negative_trade,
    _negative_trading,
    _negative_training,
    _negative_travel,
    _negative_travelchannel,
    _negative_travelers,
    _negative_travelersinsurance,
    _negative_trust,
    _negative_trv,
    _negative_tt,
    _negative_tube,
    _negative_tui,
    _negative_tunes,
    _negative_tushu,
    _negative_tv,
    _negative_tvs,
    _negative_tw,
    _negative_tz,
    _negative_ua,
    _negative_ubank,
    _negative_ubs,
    _negative_ug,
    _negative_uk,
    _negative_unicom,
    _negative_university,
    _negative_uno,
    _negative_uol,
    _negative_ups,
    _negative_us,
    _negative_uy,
    _negative_uz,
    _negative_va,
    _negative_vacations,
    _negative_vana,
    _negative_vanguard,
    _negative_vc,
    _negative_ve,
    _negative_vegas,
    _negative_ventures,
    _negative_verisign,
    _negative_vermögensberater,
    _negative_vermögensberatung,
    _negative_versicherung,
    _negative_vet,
    _negative_vg,
    _negative_vi,
    _negative_viajes,
    _negative_video,
    _negative_vig,
    _negative_viking,
    _negative_villas,
    _negative_vin,
    _negative_vip,
    _negative_virgin,
    _negative_visa,
    _negative_vision,
    _negative_viva,
    _negative_vivo,
    _negative_vlaanderen,
    _negative_vn,
    _negative_vodka,
    _negative_volkswagen,
    _negative_volvo,
    _negative_vote,
    _negative_voting,
    _negative_voto,
    _negative_voyage,
    _negative_vu,
    _negative_vuelos,
    _negative_wales,
    _negative_walmart,
    _negative_walter,
    _negative_wang,
    _negative_wanggou,
    _negative_watch,
    _negative_watches,
    _negative_weather,
    _negative_weatherchannel,
    _negative_webcam,
    _negative_weber,
    _negative_website,
    _negative_wedding,
    _negative_weibo,
    _negative_weir,
    _negative_wf,
    _negative_whoswho,
    _negative_wien,
    _negative_wiki,
    _negative_williamhill,
    _negative_win,
    _negative_windows,
    _negative_wine,
    _negative_winners,
    _negative_wme,
    _negative_wolterskluwer,
    _negative_woodside,
    _negative_work,
    _negative_works,
    _negative_world,
    _negative_wow,
    _negative_ws,
    _negative_wtc,
    _negative_wtf,
    _negative_xbox,
    _negative_xerox,
    _negative_xfinity,
    _negative_xihuan,
    _negative_xin,
    _negative_xxx,
    _negative_xyz,
    _negative_yachts,
    _negative_yahoo,
    _negative_yamaxun,
    _negative_yandex,
    _negative_ye,
    _negative_yodobashi,
    _negative_yoga,
    _negative_yokohama,
    _negative_you,
    _negative_youtube,
    _negative_yt,
    _negative_yun,
    _negative_za,
    _negative_zappos,
    _negative_zara,
    _negative_zero,
    _negative_zip,
    _negative_zm,
    _negative_zone,
    _negative_zuerich,
    _negative_zw,
    _negative_ελ,
    _negative_ευ,
    _negative_бг,
    _negative_бел,
    _negative_дети,
    _negative_ею,
    _negative_католик,
    _negative_ком,
    _negative_мкд,
    _negative_мон,
    _negative_москва,
    _negative_онлайн,
    _negative_орг,
    _negative_рус,
    _negative_рф,
    _negative_сайт,
    _negative_срб,
    _negative_укр,
    _negative_қаз,
    _negative_հայ,
    _negative_ישראל,
    _negative_קום,
    _negative_ابوظبي,
    _negative_اتصالات,
    _negative_ارامكو,
    _negative_الاردن,
    _negative_البحرين,
    _negative_الجزائر,
    _negative_السعودية,
    _negative_السعوديه,
    _negative_السعودیة,
    _negative_السعودیۃ,
    _negative_العليان,
    _negative_المغرب,
    _negative_اليمن,
    _negative_امارات,
    _negative_ايران,
    _negative_ایران,
    _negative_بارت,
    _negative_بازار,
    _negative_بيتك,
    _negative_بھارت,
    _negative_تونس,
    _negative_سودان,
    _negative_سوريا,
    _negative_سورية,
    _negative_شبكة,
    _negative_عراق,
    _negative_عرب,
    _negative_عمان,
    _negative_فلسطين,
    _negative_قطر,
    _negative_كاثوليك,
    _negative_كوم,
    _negative_مصر,
    _negative_مليسيا,
    _negative_موريتانيا,
    _negative_موقع,
    _negative_همراه,
    _negative_پاكستان,
    _negative_پاکستان,
    _negative_ڀارت,
    _negative_कॉम,
    _negative_नेट,
    _negative_भारत,
    _negative_भारतम्,
    _negative_भारोत,
    _negative_संगठन,
    _negative_বাংলা,
    _negative_ভারত,
    _negative_ভাৰত,
    _negative_ਭਾਰਤ,
    _negative_ભારત,
    _negative_ଭାରତ,
    _negative_இந்தியா,
    _negative_இலங்கை,
    _negative_சிங்கப்பூர்,
    _negative_భారత్,
    _negative_ಭಾರತ,
    _negative_ഭാരതം,
    _negative_ලංකා,
    _negative_คอม,
    _negative_ไทย,
    _negative_ລາວ,
    _negative_გე,
    _negative_みんな,
    _negative_アマゾン,
    _negative_クラウド,
    _negative_グーグル,
    _negative_コム,
    _negative_ストア,
    _negative_セール,
    _negative_ファッション,
    _negative_ポイント,
    _negative_世界,
    _negative_中信,
    _negative_中国,
    _negative_中國,
    _negative_中文网,
    _negative_亚马逊,
    _negative_企业,
    _negative_佛山,
    _negative_信息,
    _negative_健康,
    _negative_八卦,
    _negative_公司,
    _negative_公益,
    _negative_台湾,
    _negative_台灣,
    _negative_商城,
    _negative_商店,
    _negative_商标,
    _negative_嘉里,
    _negative_嘉里大酒店,
    _negative_在线,
    _negative_大拿,
    _negative_天主教,
    _negative_娱乐,
    _negative_家電,
    _negative_广东,
    _negative_微博,
    _negative_慈善,
    _negative_我爱你,
    _negative_手机,
    _negative_招聘,
    _negative_政务,
    _negative_政府,
    _negative_新加坡,
    _negative_新闻,
    _negative_时尚,
    _negative_書籍,
    _negative_机构,
    _negative_淡马锡,
    _negative_游戏,
    _negative_澳門,
    _negative_澳门,
    _negative_点看,
    _negative_移动,
    _negative_组织机构,
    _negative_网址,
    _negative_网店,
    _negative_网站,
    _negative_网络,
    _negative_联通,
    _negative_臺灣,
    _negative_诺基亚,
    _negative_谷歌,
    _negative_购物,
    _negative_通販,
    _negative_集团,
    _negative_電訊盈科,
    _negative_飞利浦,
    _negative_食品,
    _negative_餐厅,
    _negative_香格里拉,
    _negative_香港,
    _negative_닷넷,
    _negative_닷컴,
    _negative_삼성,
    _negative_한국,
  ]
}
